# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageIntensityPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkInvertIntensityImageFilterPython
else:
    import _itkInvertIntensityImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkInvertIntensityImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkInvertIntensityImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkInPlaceImageFilterAPython
import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.stdcomplexPython
import itk.itkImagePython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterBPython

def itkInvertIntensityImageFilterID2ID2_Superclass_New():
    return itkInvertIntensityImageFilterID2ID2_Superclass.New()

class itkInvertIntensityImageFilterID2ID2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""Proxy of C++ itkInvertIntensityImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_Superclass_SetFunctor)
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterID2ID2_Superclass
    cast = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterID2ID2_Superclass

        Create a new object of the class itkInvertIntensityImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterID2ID2_Superclass in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_Superclass_swigregister(itkInvertIntensityImageFilterID2ID2_Superclass)
itkInvertIntensityImageFilterID2ID2_Superclass___New_orig__ = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_Superclass___New_orig__
itkInvertIntensityImageFilterID2ID2_Superclass_cast = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_Superclass_cast


def itkInvertIntensityImageFilterID3ID3_Superclass_New():
    return itkInvertIntensityImageFilterID3ID3_Superclass.New()

class itkInvertIntensityImageFilterID3ID3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""Proxy of C++ itkInvertIntensityImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_Superclass_SetFunctor)
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterID3ID3_Superclass
    cast = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterID3ID3_Superclass

        Create a new object of the class itkInvertIntensityImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterID3ID3_Superclass in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_Superclass_swigregister(itkInvertIntensityImageFilterID3ID3_Superclass)
itkInvertIntensityImageFilterID3ID3_Superclass___New_orig__ = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_Superclass___New_orig__
itkInvertIntensityImageFilterID3ID3_Superclass_cast = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_Superclass_cast


def itkInvertIntensityImageFilterIF2IF2_Superclass_New():
    return itkInvertIntensityImageFilterIF2IF2_Superclass.New()

class itkInvertIntensityImageFilterIF2IF2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""Proxy of C++ itkInvertIntensityImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_Superclass_SetFunctor)
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIF2IF2_Superclass
    cast = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIF2IF2_Superclass

        Create a new object of the class itkInvertIntensityImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIF2IF2_Superclass in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_Superclass_swigregister(itkInvertIntensityImageFilterIF2IF2_Superclass)
itkInvertIntensityImageFilterIF2IF2_Superclass___New_orig__ = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_Superclass___New_orig__
itkInvertIntensityImageFilterIF2IF2_Superclass_cast = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_Superclass_cast


def itkInvertIntensityImageFilterIF3IF3_Superclass_New():
    return itkInvertIntensityImageFilterIF3IF3_Superclass.New()

class itkInvertIntensityImageFilterIF3IF3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""Proxy of C++ itkInvertIntensityImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_Superclass_SetFunctor)
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIF3IF3_Superclass
    cast = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIF3IF3_Superclass

        Create a new object of the class itkInvertIntensityImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIF3IF3_Superclass in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_Superclass_swigregister(itkInvertIntensityImageFilterIF3IF3_Superclass)
itkInvertIntensityImageFilterIF3IF3_Superclass___New_orig__ = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_Superclass___New_orig__
itkInvertIntensityImageFilterIF3IF3_Superclass_cast = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_Superclass_cast


def itkInvertIntensityImageFilterISS2ISS2_Superclass_New():
    return itkInvertIntensityImageFilterISS2ISS2_Superclass.New()

class itkInvertIntensityImageFilterISS2ISS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    r"""Proxy of C++ itkInvertIntensityImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_Superclass_SetFunctor)
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterISS2ISS2_Superclass
    cast = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterISS2ISS2_Superclass

        Create a new object of the class itkInvertIntensityImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterISS2ISS2_Superclass in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_Superclass_swigregister(itkInvertIntensityImageFilterISS2ISS2_Superclass)
itkInvertIntensityImageFilterISS2ISS2_Superclass___New_orig__ = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_Superclass___New_orig__
itkInvertIntensityImageFilterISS2ISS2_Superclass_cast = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_Superclass_cast


def itkInvertIntensityImageFilterISS3ISS3_Superclass_New():
    return itkInvertIntensityImageFilterISS3ISS3_Superclass.New()

class itkInvertIntensityImageFilterISS3ISS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    r"""Proxy of C++ itkInvertIntensityImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_Superclass_SetFunctor)
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterISS3ISS3_Superclass
    cast = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterISS3ISS3_Superclass

        Create a new object of the class itkInvertIntensityImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterISS3ISS3_Superclass in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_Superclass_swigregister(itkInvertIntensityImageFilterISS3ISS3_Superclass)
itkInvertIntensityImageFilterISS3ISS3_Superclass___New_orig__ = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_Superclass___New_orig__
itkInvertIntensityImageFilterISS3ISS3_Superclass_cast = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_Superclass_cast


def itkInvertIntensityImageFilterIUC2IUC2_Superclass_New():
    return itkInvertIntensityImageFilterIUC2IUC2_Superclass.New()

class itkInvertIntensityImageFilterIUC2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    r"""Proxy of C++ itkInvertIntensityImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_Superclass_SetFunctor)
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIUC2IUC2_Superclass
    cast = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkInvertIntensityImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIUC2IUC2_Superclass in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_Superclass_swigregister(itkInvertIntensityImageFilterIUC2IUC2_Superclass)
itkInvertIntensityImageFilterIUC2IUC2_Superclass___New_orig__ = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_Superclass___New_orig__
itkInvertIntensityImageFilterIUC2IUC2_Superclass_cast = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_Superclass_cast


def itkInvertIntensityImageFilterIUC3IUC3_Superclass_New():
    return itkInvertIntensityImageFilterIUC3IUC3_Superclass.New()

class itkInvertIntensityImageFilterIUC3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    r"""Proxy of C++ itkInvertIntensityImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_Superclass_SetFunctor)
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIUC3IUC3_Superclass
    cast = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkInvertIntensityImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIUC3IUC3_Superclass in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_Superclass_swigregister(itkInvertIntensityImageFilterIUC3IUC3_Superclass)
itkInvertIntensityImageFilterIUC3IUC3_Superclass___New_orig__ = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_Superclass___New_orig__
itkInvertIntensityImageFilterIUC3IUC3_Superclass_cast = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_Superclass_cast


def itkInvertIntensityImageFilterIUS2IUS2_Superclass_New():
    return itkInvertIntensityImageFilterIUS2IUS2_Superclass.New()

class itkInvertIntensityImageFilterIUS2IUS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""Proxy of C++ itkInvertIntensityImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_Superclass_SetFunctor)
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIUS2IUS2_Superclass
    cast = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkInvertIntensityImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIUS2IUS2_Superclass in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_Superclass_swigregister(itkInvertIntensityImageFilterIUS2IUS2_Superclass)
itkInvertIntensityImageFilterIUS2IUS2_Superclass___New_orig__ = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_Superclass___New_orig__
itkInvertIntensityImageFilterIUS2IUS2_Superclass_cast = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_Superclass_cast


def itkInvertIntensityImageFilterIUS3IUS3_Superclass_New():
    return itkInvertIntensityImageFilterIUS3IUS3_Superclass.New()

class itkInvertIntensityImageFilterIUS3IUS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""Proxy of C++ itkInvertIntensityImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_Superclass_SetFunctor)
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIUS3IUS3_Superclass
    cast = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkInvertIntensityImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIUS3IUS3_Superclass in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_Superclass_swigregister(itkInvertIntensityImageFilterIUS3IUS3_Superclass)
itkInvertIntensityImageFilterIUS3IUS3_Superclass___New_orig__ = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_Superclass___New_orig__
itkInvertIntensityImageFilterIUS3IUS3_Superclass_cast = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_Superclass_cast


def itkInvertIntensityImageFilterID2ID2_New():
    return itkInvertIntensityImageFilterID2ID2.New()

class itkInvertIntensityImageFilterID2ID2(itkInvertIntensityImageFilterID2ID2_Superclass):
    r"""


    Invert the intensity of an image.

    InvertIntensityImageFilter inverts intensity of pixels by subtracting
    pixel value to a maximum value. The maximum value can be set with
    SetMaximum and defaults the maximum of input pixel image, a distance
    map, etc.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   IntensityWindowingImageFilter ShiftScaleImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_Clone)
    SetMaximum = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_SetMaximum)
    GetMaximum = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_GetMaximum)
    PrintSelf = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_PrintSelf)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_BeforeThreadedGenerateData)
    InputHasNumericTraitsCheck = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterID2ID2
    cast = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterID2ID2

        Create a new object of the class itkInvertIntensityImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterID2ID2 in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_swigregister(itkInvertIntensityImageFilterID2ID2)
itkInvertIntensityImageFilterID2ID2___New_orig__ = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2___New_orig__
itkInvertIntensityImageFilterID2ID2_cast = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_cast


def itkInvertIntensityImageFilterID3ID3_New():
    return itkInvertIntensityImageFilterID3ID3.New()

class itkInvertIntensityImageFilterID3ID3(itkInvertIntensityImageFilterID3ID3_Superclass):
    r"""


    Invert the intensity of an image.

    InvertIntensityImageFilter inverts intensity of pixels by subtracting
    pixel value to a maximum value. The maximum value can be set with
    SetMaximum and defaults the maximum of input pixel image, a distance
    map, etc.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   IntensityWindowingImageFilter ShiftScaleImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_Clone)
    SetMaximum = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_SetMaximum)
    GetMaximum = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_GetMaximum)
    PrintSelf = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_PrintSelf)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_BeforeThreadedGenerateData)
    InputHasNumericTraitsCheck = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterID3ID3
    cast = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterID3ID3

        Create a new object of the class itkInvertIntensityImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterID3ID3 in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_swigregister(itkInvertIntensityImageFilterID3ID3)
itkInvertIntensityImageFilterID3ID3___New_orig__ = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3___New_orig__
itkInvertIntensityImageFilterID3ID3_cast = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_cast


def itkInvertIntensityImageFilterIF2IF2_New():
    return itkInvertIntensityImageFilterIF2IF2.New()

class itkInvertIntensityImageFilterIF2IF2(itkInvertIntensityImageFilterIF2IF2_Superclass):
    r"""


    Invert the intensity of an image.

    InvertIntensityImageFilter inverts intensity of pixels by subtracting
    pixel value to a maximum value. The maximum value can be set with
    SetMaximum and defaults the maximum of input pixel image, a distance
    map, etc.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   IntensityWindowingImageFilter ShiftScaleImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_Clone)
    SetMaximum = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_SetMaximum)
    GetMaximum = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_GetMaximum)
    PrintSelf = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_PrintSelf)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_BeforeThreadedGenerateData)
    InputHasNumericTraitsCheck = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIF2IF2
    cast = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIF2IF2

        Create a new object of the class itkInvertIntensityImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIF2IF2 in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_swigregister(itkInvertIntensityImageFilterIF2IF2)
itkInvertIntensityImageFilterIF2IF2___New_orig__ = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2___New_orig__
itkInvertIntensityImageFilterIF2IF2_cast = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_cast


def itkInvertIntensityImageFilterIF3IF3_New():
    return itkInvertIntensityImageFilterIF3IF3.New()

class itkInvertIntensityImageFilterIF3IF3(itkInvertIntensityImageFilterIF3IF3_Superclass):
    r"""


    Invert the intensity of an image.

    InvertIntensityImageFilter inverts intensity of pixels by subtracting
    pixel value to a maximum value. The maximum value can be set with
    SetMaximum and defaults the maximum of input pixel image, a distance
    map, etc.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   IntensityWindowingImageFilter ShiftScaleImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_Clone)
    SetMaximum = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_SetMaximum)
    GetMaximum = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_GetMaximum)
    PrintSelf = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_PrintSelf)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_BeforeThreadedGenerateData)
    InputHasNumericTraitsCheck = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIF3IF3
    cast = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIF3IF3

        Create a new object of the class itkInvertIntensityImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIF3IF3 in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_swigregister(itkInvertIntensityImageFilterIF3IF3)
itkInvertIntensityImageFilterIF3IF3___New_orig__ = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3___New_orig__
itkInvertIntensityImageFilterIF3IF3_cast = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_cast


def itkInvertIntensityImageFilterISS2ISS2_New():
    return itkInvertIntensityImageFilterISS2ISS2.New()

class itkInvertIntensityImageFilterISS2ISS2(itkInvertIntensityImageFilterISS2ISS2_Superclass):
    r"""


    Invert the intensity of an image.

    InvertIntensityImageFilter inverts intensity of pixels by subtracting
    pixel value to a maximum value. The maximum value can be set with
    SetMaximum and defaults the maximum of input pixel image, a distance
    map, etc.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   IntensityWindowingImageFilter ShiftScaleImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_Clone)
    SetMaximum = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_SetMaximum)
    GetMaximum = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_GetMaximum)
    PrintSelf = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_PrintSelf)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_BeforeThreadedGenerateData)
    InputHasNumericTraitsCheck = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterISS2ISS2

        Create a new object of the class itkInvertIntensityImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterISS2ISS2 in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_swigregister(itkInvertIntensityImageFilterISS2ISS2)
itkInvertIntensityImageFilterISS2ISS2___New_orig__ = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2___New_orig__
itkInvertIntensityImageFilterISS2ISS2_cast = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_cast


def itkInvertIntensityImageFilterISS3ISS3_New():
    return itkInvertIntensityImageFilterISS3ISS3.New()

class itkInvertIntensityImageFilterISS3ISS3(itkInvertIntensityImageFilterISS3ISS3_Superclass):
    r"""


    Invert the intensity of an image.

    InvertIntensityImageFilter inverts intensity of pixels by subtracting
    pixel value to a maximum value. The maximum value can be set with
    SetMaximum and defaults the maximum of input pixel image, a distance
    map, etc.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   IntensityWindowingImageFilter ShiftScaleImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_Clone)
    SetMaximum = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_SetMaximum)
    GetMaximum = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_GetMaximum)
    PrintSelf = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_PrintSelf)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_BeforeThreadedGenerateData)
    InputHasNumericTraitsCheck = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterISS3ISS3

        Create a new object of the class itkInvertIntensityImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterISS3ISS3 in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_swigregister(itkInvertIntensityImageFilterISS3ISS3)
itkInvertIntensityImageFilterISS3ISS3___New_orig__ = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3___New_orig__
itkInvertIntensityImageFilterISS3ISS3_cast = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_cast


def itkInvertIntensityImageFilterIUC2IUC2_New():
    return itkInvertIntensityImageFilterIUC2IUC2.New()

class itkInvertIntensityImageFilterIUC2IUC2(itkInvertIntensityImageFilterIUC2IUC2_Superclass):
    r"""


    Invert the intensity of an image.

    InvertIntensityImageFilter inverts intensity of pixels by subtracting
    pixel value to a maximum value. The maximum value can be set with
    SetMaximum and defaults the maximum of input pixel image, a distance
    map, etc.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   IntensityWindowingImageFilter ShiftScaleImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_Clone)
    SetMaximum = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_SetMaximum)
    GetMaximum = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_GetMaximum)
    PrintSelf = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_PrintSelf)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_BeforeThreadedGenerateData)
    InputHasNumericTraitsCheck = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIUC2IUC2

        Create a new object of the class itkInvertIntensityImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIUC2IUC2 in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_swigregister(itkInvertIntensityImageFilterIUC2IUC2)
itkInvertIntensityImageFilterIUC2IUC2___New_orig__ = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2___New_orig__
itkInvertIntensityImageFilterIUC2IUC2_cast = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_cast


def itkInvertIntensityImageFilterIUC3IUC3_New():
    return itkInvertIntensityImageFilterIUC3IUC3.New()

class itkInvertIntensityImageFilterIUC3IUC3(itkInvertIntensityImageFilterIUC3IUC3_Superclass):
    r"""


    Invert the intensity of an image.

    InvertIntensityImageFilter inverts intensity of pixels by subtracting
    pixel value to a maximum value. The maximum value can be set with
    SetMaximum and defaults the maximum of input pixel image, a distance
    map, etc.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   IntensityWindowingImageFilter ShiftScaleImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_Clone)
    SetMaximum = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_SetMaximum)
    GetMaximum = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_GetMaximum)
    PrintSelf = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_PrintSelf)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_BeforeThreadedGenerateData)
    InputHasNumericTraitsCheck = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIUC3IUC3

        Create a new object of the class itkInvertIntensityImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIUC3IUC3 in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_swigregister(itkInvertIntensityImageFilterIUC3IUC3)
itkInvertIntensityImageFilterIUC3IUC3___New_orig__ = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3___New_orig__
itkInvertIntensityImageFilterIUC3IUC3_cast = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_cast


def itkInvertIntensityImageFilterIUS2IUS2_New():
    return itkInvertIntensityImageFilterIUS2IUS2.New()

class itkInvertIntensityImageFilterIUS2IUS2(itkInvertIntensityImageFilterIUS2IUS2_Superclass):
    r"""


    Invert the intensity of an image.

    InvertIntensityImageFilter inverts intensity of pixels by subtracting
    pixel value to a maximum value. The maximum value can be set with
    SetMaximum and defaults the maximum of input pixel image, a distance
    map, etc.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   IntensityWindowingImageFilter ShiftScaleImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_Clone)
    SetMaximum = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_SetMaximum)
    GetMaximum = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_GetMaximum)
    PrintSelf = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_PrintSelf)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_BeforeThreadedGenerateData)
    InputHasNumericTraitsCheck = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIUS2IUS2

        Create a new object of the class itkInvertIntensityImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIUS2IUS2 in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_swigregister(itkInvertIntensityImageFilterIUS2IUS2)
itkInvertIntensityImageFilterIUS2IUS2___New_orig__ = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2___New_orig__
itkInvertIntensityImageFilterIUS2IUS2_cast = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_cast


def itkInvertIntensityImageFilterIUS3IUS3_New():
    return itkInvertIntensityImageFilterIUS3IUS3.New()

class itkInvertIntensityImageFilterIUS3IUS3(itkInvertIntensityImageFilterIUS3IUS3_Superclass):
    r"""


    Invert the intensity of an image.

    InvertIntensityImageFilter inverts intensity of pixels by subtracting
    pixel value to a maximum value. The maximum value can be set with
    SetMaximum and defaults the maximum of input pixel image, a distance
    map, etc.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   IntensityWindowingImageFilter ShiftScaleImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_Clone)
    SetMaximum = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_SetMaximum)
    GetMaximum = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_GetMaximum)
    PrintSelf = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_PrintSelf)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_BeforeThreadedGenerateData)
    InputHasNumericTraitsCheck = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIUS3IUS3

        Create a new object of the class itkInvertIntensityImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIUS3IUS3 in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_swigregister(itkInvertIntensityImageFilterIUS3IUS3)
itkInvertIntensityImageFilterIUS3IUS3___New_orig__ = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3___New_orig__
itkInvertIntensityImageFilterIUS3IUS3_cast = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def invert_intensity_image_filter(*args, **kwargs):
    """Procedural interface for InvertIntensityImageFilter"""
    import itk
    instance = itk.InvertIntensityImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def invert_intensity_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.InvertIntensityImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.InvertIntensityImageFilter.values()[0]
    else:
        filter_object = itk.InvertIntensityImageFilter

    invert_intensity_image_filter.__doc__ = filter_object.__doc__
    invert_intensity_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    invert_intensity_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.InvertIntensityImageFilter, itkTemplate.itkTemplate):
        invert_intensity_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        invert_intensity_image_filter.__doc__ += "\n"
        invert_intensity_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        invert_intensity_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def unary_functor_image_filter(*args, **kwargs):
    """Procedural interface for UnaryFunctorImageFilter"""
    import itk
    instance = itk.UnaryFunctorImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def unary_functor_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.UnaryFunctorImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.UnaryFunctorImageFilter.values()[0]
    else:
        filter_object = itk.UnaryFunctorImageFilter

    unary_functor_image_filter.__doc__ = filter_object.__doc__
    unary_functor_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    unary_functor_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.UnaryFunctorImageFilter, itkTemplate.itkTemplate):
        unary_functor_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        unary_functor_image_filter.__doc__ += "\n"
        unary_functor_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        unary_functor_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



