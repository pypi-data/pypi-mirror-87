# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageStatisticsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMinimumMaximumImageFilterPython
else:
    import _itkMinimumMaximumImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkMinimumMaximumImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkMinimumMaximumImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageSinkPython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.stdcomplexPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkVariableLengthVectorPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkArrayPython

def itkMinimumMaximumImageFilterID2_New():
    return itkMinimumMaximumImageFilterID2.New()

class itkMinimumMaximumImageFilterID2(itk.itkImageSinkPython.itkImageSinkID2):
    r"""


    Computes the minimum and the maximum intensity values of an image.

    It is templated over input image type only.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than The extrema are
    independently computed for each streamed and threaded region then
    merged.

    See:   StatisticsImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_Clone)
    GetMinimumOutput = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_GetMinimumOutput)
    GetMinimum = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_GetMinimum)
    GetMaximumOutput = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_GetMaximumOutput)
    GetMaximum = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_GetMaximum)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_GetNumberOfStreamDivisions)
    LessThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_LessThanComparableCheck
    
    GreaterThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_GreaterThanComparableCheck
    
    OStreamWritableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_OStreamWritableCheck
    
    __swig_destroy__ = _itkMinimumMaximumImageFilterPython.delete_itkMinimumMaximumImageFilterID2
    cast = _swig_new_static_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageFilterID2

        Create a new object of the class itkMinimumMaximumImageFilterID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageFilterID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageFilterID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumMaximumImageFilterID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumMaximumImageFilterID2 in _itkMinimumMaximumImageFilterPython:
_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_swigregister(itkMinimumMaximumImageFilterID2)
itkMinimumMaximumImageFilterID2___New_orig__ = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2___New_orig__
itkMinimumMaximumImageFilterID2_cast = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID2_cast


def itkMinimumMaximumImageFilterID3_New():
    return itkMinimumMaximumImageFilterID3.New()

class itkMinimumMaximumImageFilterID3(itk.itkImageSinkPython.itkImageSinkID3):
    r"""


    Computes the minimum and the maximum intensity values of an image.

    It is templated over input image type only.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than The extrema are
    independently computed for each streamed and threaded region then
    merged.

    See:   StatisticsImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_Clone)
    GetMinimumOutput = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_GetMinimumOutput)
    GetMinimum = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_GetMinimum)
    GetMaximumOutput = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_GetMaximumOutput)
    GetMaximum = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_GetMaximum)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_GetNumberOfStreamDivisions)
    LessThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_LessThanComparableCheck
    
    GreaterThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_GreaterThanComparableCheck
    
    OStreamWritableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_OStreamWritableCheck
    
    __swig_destroy__ = _itkMinimumMaximumImageFilterPython.delete_itkMinimumMaximumImageFilterID3
    cast = _swig_new_static_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageFilterID3

        Create a new object of the class itkMinimumMaximumImageFilterID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageFilterID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageFilterID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumMaximumImageFilterID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumMaximumImageFilterID3 in _itkMinimumMaximumImageFilterPython:
_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_swigregister(itkMinimumMaximumImageFilterID3)
itkMinimumMaximumImageFilterID3___New_orig__ = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3___New_orig__
itkMinimumMaximumImageFilterID3_cast = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterID3_cast


def itkMinimumMaximumImageFilterIF2_New():
    return itkMinimumMaximumImageFilterIF2.New()

class itkMinimumMaximumImageFilterIF2(itk.itkImageSinkPython.itkImageSinkIF2):
    r"""


    Computes the minimum and the maximum intensity values of an image.

    It is templated over input image type only.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than The extrema are
    independently computed for each streamed and threaded region then
    merged.

    See:   StatisticsImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_Clone)
    GetMinimumOutput = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_GetMinimumOutput)
    GetMinimum = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_GetMinimum)
    GetMaximumOutput = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_GetMaximumOutput)
    GetMaximum = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_GetMaximum)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_GetNumberOfStreamDivisions)
    LessThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_LessThanComparableCheck
    
    GreaterThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_GreaterThanComparableCheck
    
    OStreamWritableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_OStreamWritableCheck
    
    __swig_destroy__ = _itkMinimumMaximumImageFilterPython.delete_itkMinimumMaximumImageFilterIF2
    cast = _swig_new_static_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageFilterIF2

        Create a new object of the class itkMinimumMaximumImageFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageFilterIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageFilterIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumMaximumImageFilterIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumMaximumImageFilterIF2 in _itkMinimumMaximumImageFilterPython:
_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_swigregister(itkMinimumMaximumImageFilterIF2)
itkMinimumMaximumImageFilterIF2___New_orig__ = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2___New_orig__
itkMinimumMaximumImageFilterIF2_cast = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF2_cast


def itkMinimumMaximumImageFilterIF3_New():
    return itkMinimumMaximumImageFilterIF3.New()

class itkMinimumMaximumImageFilterIF3(itk.itkImageSinkPython.itkImageSinkIF3):
    r"""


    Computes the minimum and the maximum intensity values of an image.

    It is templated over input image type only.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than The extrema are
    independently computed for each streamed and threaded region then
    merged.

    See:   StatisticsImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_Clone)
    GetMinimumOutput = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_GetMinimumOutput)
    GetMinimum = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_GetMinimum)
    GetMaximumOutput = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_GetMaximumOutput)
    GetMaximum = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_GetMaximum)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_GetNumberOfStreamDivisions)
    LessThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_LessThanComparableCheck
    
    GreaterThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_GreaterThanComparableCheck
    
    OStreamWritableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_OStreamWritableCheck
    
    __swig_destroy__ = _itkMinimumMaximumImageFilterPython.delete_itkMinimumMaximumImageFilterIF3
    cast = _swig_new_static_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageFilterIF3

        Create a new object of the class itkMinimumMaximumImageFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageFilterIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageFilterIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumMaximumImageFilterIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumMaximumImageFilterIF3 in _itkMinimumMaximumImageFilterPython:
_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_swigregister(itkMinimumMaximumImageFilterIF3)
itkMinimumMaximumImageFilterIF3___New_orig__ = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3___New_orig__
itkMinimumMaximumImageFilterIF3_cast = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIF3_cast


def itkMinimumMaximumImageFilterISS2_New():
    return itkMinimumMaximumImageFilterISS2.New()

class itkMinimumMaximumImageFilterISS2(itk.itkImageSinkPython.itkImageSinkISS2):
    r"""


    Computes the minimum and the maximum intensity values of an image.

    It is templated over input image type only.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than The extrema are
    independently computed for each streamed and threaded region then
    merged.

    See:   StatisticsImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_Clone)
    GetMinimumOutput = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_GetMinimumOutput)
    GetMinimum = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_GetMinimum)
    GetMaximumOutput = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_GetMaximumOutput)
    GetMaximum = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_GetMaximum)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_GetNumberOfStreamDivisions)
    LessThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_LessThanComparableCheck
    
    GreaterThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_GreaterThanComparableCheck
    
    OStreamWritableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_OStreamWritableCheck
    
    __swig_destroy__ = _itkMinimumMaximumImageFilterPython.delete_itkMinimumMaximumImageFilterISS2
    cast = _swig_new_static_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageFilterISS2

        Create a new object of the class itkMinimumMaximumImageFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageFilterISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageFilterISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumMaximumImageFilterISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumMaximumImageFilterISS2 in _itkMinimumMaximumImageFilterPython:
_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_swigregister(itkMinimumMaximumImageFilterISS2)
itkMinimumMaximumImageFilterISS2___New_orig__ = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2___New_orig__
itkMinimumMaximumImageFilterISS2_cast = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS2_cast


def itkMinimumMaximumImageFilterISS3_New():
    return itkMinimumMaximumImageFilterISS3.New()

class itkMinimumMaximumImageFilterISS3(itk.itkImageSinkPython.itkImageSinkISS3):
    r"""


    Computes the minimum and the maximum intensity values of an image.

    It is templated over input image type only.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than The extrema are
    independently computed for each streamed and threaded region then
    merged.

    See:   StatisticsImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_Clone)
    GetMinimumOutput = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_GetMinimumOutput)
    GetMinimum = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_GetMinimum)
    GetMaximumOutput = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_GetMaximumOutput)
    GetMaximum = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_GetMaximum)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_GetNumberOfStreamDivisions)
    LessThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_LessThanComparableCheck
    
    GreaterThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_GreaterThanComparableCheck
    
    OStreamWritableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_OStreamWritableCheck
    
    __swig_destroy__ = _itkMinimumMaximumImageFilterPython.delete_itkMinimumMaximumImageFilterISS3
    cast = _swig_new_static_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageFilterISS3

        Create a new object of the class itkMinimumMaximumImageFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageFilterISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageFilterISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumMaximumImageFilterISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumMaximumImageFilterISS3 in _itkMinimumMaximumImageFilterPython:
_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_swigregister(itkMinimumMaximumImageFilterISS3)
itkMinimumMaximumImageFilterISS3___New_orig__ = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3___New_orig__
itkMinimumMaximumImageFilterISS3_cast = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterISS3_cast


def itkMinimumMaximumImageFilterIUC2_New():
    return itkMinimumMaximumImageFilterIUC2.New()

class itkMinimumMaximumImageFilterIUC2(itk.itkImageSinkPython.itkImageSinkIUC2):
    r"""


    Computes the minimum and the maximum intensity values of an image.

    It is templated over input image type only.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than The extrema are
    independently computed for each streamed and threaded region then
    merged.

    See:   StatisticsImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_Clone)
    GetMinimumOutput = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_GetMinimumOutput)
    GetMinimum = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_GetMinimum)
    GetMaximumOutput = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_GetMaximumOutput)
    GetMaximum = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_GetMaximum)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_GetNumberOfStreamDivisions)
    LessThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_LessThanComparableCheck
    
    GreaterThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_GreaterThanComparableCheck
    
    OStreamWritableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_OStreamWritableCheck
    
    __swig_destroy__ = _itkMinimumMaximumImageFilterPython.delete_itkMinimumMaximumImageFilterIUC2
    cast = _swig_new_static_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageFilterIUC2

        Create a new object of the class itkMinimumMaximumImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageFilterIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageFilterIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumMaximumImageFilterIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumMaximumImageFilterIUC2 in _itkMinimumMaximumImageFilterPython:
_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_swigregister(itkMinimumMaximumImageFilterIUC2)
itkMinimumMaximumImageFilterIUC2___New_orig__ = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2___New_orig__
itkMinimumMaximumImageFilterIUC2_cast = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC2_cast


def itkMinimumMaximumImageFilterIUC3_New():
    return itkMinimumMaximumImageFilterIUC3.New()

class itkMinimumMaximumImageFilterIUC3(itk.itkImageSinkPython.itkImageSinkIUC3):
    r"""


    Computes the minimum and the maximum intensity values of an image.

    It is templated over input image type only.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than The extrema are
    independently computed for each streamed and threaded region then
    merged.

    See:   StatisticsImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_Clone)
    GetMinimumOutput = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_GetMinimumOutput)
    GetMinimum = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_GetMinimum)
    GetMaximumOutput = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_GetMaximumOutput)
    GetMaximum = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_GetMaximum)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_GetNumberOfStreamDivisions)
    LessThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_LessThanComparableCheck
    
    GreaterThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_GreaterThanComparableCheck
    
    OStreamWritableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_OStreamWritableCheck
    
    __swig_destroy__ = _itkMinimumMaximumImageFilterPython.delete_itkMinimumMaximumImageFilterIUC3
    cast = _swig_new_static_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageFilterIUC3

        Create a new object of the class itkMinimumMaximumImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageFilterIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageFilterIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumMaximumImageFilterIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumMaximumImageFilterIUC3 in _itkMinimumMaximumImageFilterPython:
_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_swigregister(itkMinimumMaximumImageFilterIUC3)
itkMinimumMaximumImageFilterIUC3___New_orig__ = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3___New_orig__
itkMinimumMaximumImageFilterIUC3_cast = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUC3_cast


def itkMinimumMaximumImageFilterIUS2_New():
    return itkMinimumMaximumImageFilterIUS2.New()

class itkMinimumMaximumImageFilterIUS2(itk.itkImageSinkPython.itkImageSinkIUS2):
    r"""


    Computes the minimum and the maximum intensity values of an image.

    It is templated over input image type only.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than The extrema are
    independently computed for each streamed and threaded region then
    merged.

    See:   StatisticsImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_Clone)
    GetMinimumOutput = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_GetMinimumOutput)
    GetMinimum = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_GetMinimum)
    GetMaximumOutput = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_GetMaximumOutput)
    GetMaximum = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_GetMaximum)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_GetNumberOfStreamDivisions)
    LessThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_LessThanComparableCheck
    
    GreaterThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_GreaterThanComparableCheck
    
    OStreamWritableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_OStreamWritableCheck
    
    __swig_destroy__ = _itkMinimumMaximumImageFilterPython.delete_itkMinimumMaximumImageFilterIUS2
    cast = _swig_new_static_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageFilterIUS2

        Create a new object of the class itkMinimumMaximumImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageFilterIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageFilterIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumMaximumImageFilterIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumMaximumImageFilterIUS2 in _itkMinimumMaximumImageFilterPython:
_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_swigregister(itkMinimumMaximumImageFilterIUS2)
itkMinimumMaximumImageFilterIUS2___New_orig__ = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2___New_orig__
itkMinimumMaximumImageFilterIUS2_cast = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS2_cast


def itkMinimumMaximumImageFilterIUS3_New():
    return itkMinimumMaximumImageFilterIUS3.New()

class itkMinimumMaximumImageFilterIUS3(itk.itkImageSinkPython.itkImageSinkIUS3):
    r"""


    Computes the minimum and the maximum intensity values of an image.

    It is templated over input image type only.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than The extrema are
    independently computed for each streamed and threaded region then
    merged.

    See:   StatisticsImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_Clone)
    GetMinimumOutput = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_GetMinimumOutput)
    GetMinimum = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_GetMinimum)
    GetMaximumOutput = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_GetMaximumOutput)
    GetMaximum = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_GetMaximum)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_GetNumberOfStreamDivisions)
    LessThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_LessThanComparableCheck
    
    GreaterThanComparableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_GreaterThanComparableCheck
    
    OStreamWritableCheck = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_OStreamWritableCheck
    
    __swig_destroy__ = _itkMinimumMaximumImageFilterPython.delete_itkMinimumMaximumImageFilterIUS3
    cast = _swig_new_static_method(_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumMaximumImageFilterIUS3

        Create a new object of the class itkMinimumMaximumImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumMaximumImageFilterIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumMaximumImageFilterIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumMaximumImageFilterIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumMaximumImageFilterIUS3 in _itkMinimumMaximumImageFilterPython:
_itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_swigregister(itkMinimumMaximumImageFilterIUS3)
itkMinimumMaximumImageFilterIUS3___New_orig__ = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3___New_orig__
itkMinimumMaximumImageFilterIUS3_cast = _itkMinimumMaximumImageFilterPython.itkMinimumMaximumImageFilterIUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def minimum_maximum_image_filter(*args, **kwargs):
    """Procedural interface for MinimumMaximumImageFilter"""
    import itk
    instance = itk.MinimumMaximumImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def minimum_maximum_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.MinimumMaximumImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.MinimumMaximumImageFilter.values()[0]
    else:
        filter_object = itk.MinimumMaximumImageFilter

    minimum_maximum_image_filter.__doc__ = filter_object.__doc__
    minimum_maximum_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    minimum_maximum_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.MinimumMaximumImageFilter, itkTemplate.itkTemplate):
        minimum_maximum_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        minimum_maximum_image_filter.__doc__ += "\n"
        minimum_maximum_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        minimum_maximum_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



