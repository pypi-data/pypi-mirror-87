# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKThresholdingPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkYenThresholdCalculatorPython
else:
    import _itkYenThresholdCalculatorPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkYenThresholdCalculatorPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkYenThresholdCalculatorPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkHistogramThresholdCalculatorPython
import itk.itkHistogramPython
import itk.itkArrayPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkSamplePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkCovariantVectorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython

def itkYenThresholdCalculatorHDD_New():
    return itkYenThresholdCalculatorHDD.New()

class itkYenThresholdCalculatorHDD(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDD):
    r"""


    Computes the Yen's threshold for an image.

    Implements Yen thresholding method 1) Yen J.C., Chang F.J., and Chang
    S. (1995) "A New Criterion     for Automatic Multilevel
    Thresholding" IEEE Trans. on Image Processing, 4(3): 370-378 2)
    Sezgin M. and Sankur B. (2004) "Survey over Image Thresholding
    Techniques and Quantitative Performance Evaluation" Journal of
    Electronic Imaging, 13(1):
    146-165http://citeseer.ist.psu.edu/sezgin04survey.html

    M. Emre Celebi 06.15.2007

    This class is templated over the input histogram type. WARNING:  This
    calculator assumes that the input histogram has only one dimension.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDD___New_orig__)
    Clone = _swig_new_instance_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDD_Clone)
    __swig_destroy__ = _itkYenThresholdCalculatorPython.delete_itkYenThresholdCalculatorHDD
    cast = _swig_new_static_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDD_cast)

    def New(*args, **kargs):
        """New() -> itkYenThresholdCalculatorHDD

        Create a new object of the class itkYenThresholdCalculatorHDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkYenThresholdCalculatorHDD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkYenThresholdCalculatorHDD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkYenThresholdCalculatorHDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkYenThresholdCalculatorHDD in _itkYenThresholdCalculatorPython:
_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDD_swigregister(itkYenThresholdCalculatorHDD)
itkYenThresholdCalculatorHDD___New_orig__ = _itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDD___New_orig__
itkYenThresholdCalculatorHDD_cast = _itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDD_cast


def itkYenThresholdCalculatorHDF_New():
    return itkYenThresholdCalculatorHDF.New()

class itkYenThresholdCalculatorHDF(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDF):
    r"""


    Computes the Yen's threshold for an image.

    Implements Yen thresholding method 1) Yen J.C., Chang F.J., and Chang
    S. (1995) "A New Criterion     for Automatic Multilevel
    Thresholding" IEEE Trans. on Image Processing, 4(3): 370-378 2)
    Sezgin M. and Sankur B. (2004) "Survey over Image Thresholding
    Techniques and Quantitative Performance Evaluation" Journal of
    Electronic Imaging, 13(1):
    146-165http://citeseer.ist.psu.edu/sezgin04survey.html

    M. Emre Celebi 06.15.2007

    This class is templated over the input histogram type. WARNING:  This
    calculator assumes that the input histogram has only one dimension.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDF___New_orig__)
    Clone = _swig_new_instance_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDF_Clone)
    __swig_destroy__ = _itkYenThresholdCalculatorPython.delete_itkYenThresholdCalculatorHDF
    cast = _swig_new_static_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDF_cast)

    def New(*args, **kargs):
        """New() -> itkYenThresholdCalculatorHDF

        Create a new object of the class itkYenThresholdCalculatorHDF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkYenThresholdCalculatorHDF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkYenThresholdCalculatorHDF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkYenThresholdCalculatorHDF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkYenThresholdCalculatorHDF in _itkYenThresholdCalculatorPython:
_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDF_swigregister(itkYenThresholdCalculatorHDF)
itkYenThresholdCalculatorHDF___New_orig__ = _itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDF___New_orig__
itkYenThresholdCalculatorHDF_cast = _itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDF_cast


def itkYenThresholdCalculatorHDSS_New():
    return itkYenThresholdCalculatorHDSS.New()

class itkYenThresholdCalculatorHDSS(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDSS):
    r"""


    Computes the Yen's threshold for an image.

    Implements Yen thresholding method 1) Yen J.C., Chang F.J., and Chang
    S. (1995) "A New Criterion     for Automatic Multilevel
    Thresholding" IEEE Trans. on Image Processing, 4(3): 370-378 2)
    Sezgin M. and Sankur B. (2004) "Survey over Image Thresholding
    Techniques and Quantitative Performance Evaluation" Journal of
    Electronic Imaging, 13(1):
    146-165http://citeseer.ist.psu.edu/sezgin04survey.html

    M. Emre Celebi 06.15.2007

    This class is templated over the input histogram type. WARNING:  This
    calculator assumes that the input histogram has only one dimension.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDSS___New_orig__)
    Clone = _swig_new_instance_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDSS_Clone)
    __swig_destroy__ = _itkYenThresholdCalculatorPython.delete_itkYenThresholdCalculatorHDSS
    cast = _swig_new_static_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDSS_cast)

    def New(*args, **kargs):
        """New() -> itkYenThresholdCalculatorHDSS

        Create a new object of the class itkYenThresholdCalculatorHDSS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkYenThresholdCalculatorHDSS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkYenThresholdCalculatorHDSS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkYenThresholdCalculatorHDSS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkYenThresholdCalculatorHDSS in _itkYenThresholdCalculatorPython:
_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDSS_swigregister(itkYenThresholdCalculatorHDSS)
itkYenThresholdCalculatorHDSS___New_orig__ = _itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDSS___New_orig__
itkYenThresholdCalculatorHDSS_cast = _itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDSS_cast


def itkYenThresholdCalculatorHDUC_New():
    return itkYenThresholdCalculatorHDUC.New()

class itkYenThresholdCalculatorHDUC(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDUC):
    r"""


    Computes the Yen's threshold for an image.

    Implements Yen thresholding method 1) Yen J.C., Chang F.J., and Chang
    S. (1995) "A New Criterion     for Automatic Multilevel
    Thresholding" IEEE Trans. on Image Processing, 4(3): 370-378 2)
    Sezgin M. and Sankur B. (2004) "Survey over Image Thresholding
    Techniques and Quantitative Performance Evaluation" Journal of
    Electronic Imaging, 13(1):
    146-165http://citeseer.ist.psu.edu/sezgin04survey.html

    M. Emre Celebi 06.15.2007

    This class is templated over the input histogram type. WARNING:  This
    calculator assumes that the input histogram has only one dimension.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDUC___New_orig__)
    Clone = _swig_new_instance_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDUC_Clone)
    __swig_destroy__ = _itkYenThresholdCalculatorPython.delete_itkYenThresholdCalculatorHDUC
    cast = _swig_new_static_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDUC_cast)

    def New(*args, **kargs):
        """New() -> itkYenThresholdCalculatorHDUC

        Create a new object of the class itkYenThresholdCalculatorHDUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkYenThresholdCalculatorHDUC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkYenThresholdCalculatorHDUC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkYenThresholdCalculatorHDUC.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkYenThresholdCalculatorHDUC in _itkYenThresholdCalculatorPython:
_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDUC_swigregister(itkYenThresholdCalculatorHDUC)
itkYenThresholdCalculatorHDUC___New_orig__ = _itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDUC___New_orig__
itkYenThresholdCalculatorHDUC_cast = _itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDUC_cast


def itkYenThresholdCalculatorHDUS_New():
    return itkYenThresholdCalculatorHDUS.New()

class itkYenThresholdCalculatorHDUS(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDUS):
    r"""


    Computes the Yen's threshold for an image.

    Implements Yen thresholding method 1) Yen J.C., Chang F.J., and Chang
    S. (1995) "A New Criterion     for Automatic Multilevel
    Thresholding" IEEE Trans. on Image Processing, 4(3): 370-378 2)
    Sezgin M. and Sankur B. (2004) "Survey over Image Thresholding
    Techniques and Quantitative Performance Evaluation" Journal of
    Electronic Imaging, 13(1):
    146-165http://citeseer.ist.psu.edu/sezgin04survey.html

    M. Emre Celebi 06.15.2007

    This class is templated over the input histogram type. WARNING:  This
    calculator assumes that the input histogram has only one dimension.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDUS___New_orig__)
    Clone = _swig_new_instance_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDUS_Clone)
    __swig_destroy__ = _itkYenThresholdCalculatorPython.delete_itkYenThresholdCalculatorHDUS
    cast = _swig_new_static_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDUS_cast)

    def New(*args, **kargs):
        """New() -> itkYenThresholdCalculatorHDUS

        Create a new object of the class itkYenThresholdCalculatorHDUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkYenThresholdCalculatorHDUS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkYenThresholdCalculatorHDUS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkYenThresholdCalculatorHDUS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkYenThresholdCalculatorHDUS in _itkYenThresholdCalculatorPython:
_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDUS_swigregister(itkYenThresholdCalculatorHDUS)
itkYenThresholdCalculatorHDUS___New_orig__ = _itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDUS___New_orig__
itkYenThresholdCalculatorHDUS_cast = _itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHDUS_cast


def itkYenThresholdCalculatorHFD_New():
    return itkYenThresholdCalculatorHFD.New()

class itkYenThresholdCalculatorHFD(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFD):
    r"""


    Computes the Yen's threshold for an image.

    Implements Yen thresholding method 1) Yen J.C., Chang F.J., and Chang
    S. (1995) "A New Criterion     for Automatic Multilevel
    Thresholding" IEEE Trans. on Image Processing, 4(3): 370-378 2)
    Sezgin M. and Sankur B. (2004) "Survey over Image Thresholding
    Techniques and Quantitative Performance Evaluation" Journal of
    Electronic Imaging, 13(1):
    146-165http://citeseer.ist.psu.edu/sezgin04survey.html

    M. Emre Celebi 06.15.2007

    This class is templated over the input histogram type. WARNING:  This
    calculator assumes that the input histogram has only one dimension.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFD___New_orig__)
    Clone = _swig_new_instance_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFD_Clone)
    __swig_destroy__ = _itkYenThresholdCalculatorPython.delete_itkYenThresholdCalculatorHFD
    cast = _swig_new_static_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFD_cast)

    def New(*args, **kargs):
        """New() -> itkYenThresholdCalculatorHFD

        Create a new object of the class itkYenThresholdCalculatorHFD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkYenThresholdCalculatorHFD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkYenThresholdCalculatorHFD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkYenThresholdCalculatorHFD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkYenThresholdCalculatorHFD in _itkYenThresholdCalculatorPython:
_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFD_swigregister(itkYenThresholdCalculatorHFD)
itkYenThresholdCalculatorHFD___New_orig__ = _itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFD___New_orig__
itkYenThresholdCalculatorHFD_cast = _itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFD_cast


def itkYenThresholdCalculatorHFF_New():
    return itkYenThresholdCalculatorHFF.New()

class itkYenThresholdCalculatorHFF(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFF):
    r"""


    Computes the Yen's threshold for an image.

    Implements Yen thresholding method 1) Yen J.C., Chang F.J., and Chang
    S. (1995) "A New Criterion     for Automatic Multilevel
    Thresholding" IEEE Trans. on Image Processing, 4(3): 370-378 2)
    Sezgin M. and Sankur B. (2004) "Survey over Image Thresholding
    Techniques and Quantitative Performance Evaluation" Journal of
    Electronic Imaging, 13(1):
    146-165http://citeseer.ist.psu.edu/sezgin04survey.html

    M. Emre Celebi 06.15.2007

    This class is templated over the input histogram type. WARNING:  This
    calculator assumes that the input histogram has only one dimension.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFF___New_orig__)
    Clone = _swig_new_instance_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFF_Clone)
    __swig_destroy__ = _itkYenThresholdCalculatorPython.delete_itkYenThresholdCalculatorHFF
    cast = _swig_new_static_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFF_cast)

    def New(*args, **kargs):
        """New() -> itkYenThresholdCalculatorHFF

        Create a new object of the class itkYenThresholdCalculatorHFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkYenThresholdCalculatorHFF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkYenThresholdCalculatorHFF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkYenThresholdCalculatorHFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkYenThresholdCalculatorHFF in _itkYenThresholdCalculatorPython:
_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFF_swigregister(itkYenThresholdCalculatorHFF)
itkYenThresholdCalculatorHFF___New_orig__ = _itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFF___New_orig__
itkYenThresholdCalculatorHFF_cast = _itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFF_cast


def itkYenThresholdCalculatorHFSS_New():
    return itkYenThresholdCalculatorHFSS.New()

class itkYenThresholdCalculatorHFSS(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFSS):
    r"""


    Computes the Yen's threshold for an image.

    Implements Yen thresholding method 1) Yen J.C., Chang F.J., and Chang
    S. (1995) "A New Criterion     for Automatic Multilevel
    Thresholding" IEEE Trans. on Image Processing, 4(3): 370-378 2)
    Sezgin M. and Sankur B. (2004) "Survey over Image Thresholding
    Techniques and Quantitative Performance Evaluation" Journal of
    Electronic Imaging, 13(1):
    146-165http://citeseer.ist.psu.edu/sezgin04survey.html

    M. Emre Celebi 06.15.2007

    This class is templated over the input histogram type. WARNING:  This
    calculator assumes that the input histogram has only one dimension.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFSS___New_orig__)
    Clone = _swig_new_instance_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFSS_Clone)
    __swig_destroy__ = _itkYenThresholdCalculatorPython.delete_itkYenThresholdCalculatorHFSS
    cast = _swig_new_static_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFSS_cast)

    def New(*args, **kargs):
        """New() -> itkYenThresholdCalculatorHFSS

        Create a new object of the class itkYenThresholdCalculatorHFSS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkYenThresholdCalculatorHFSS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkYenThresholdCalculatorHFSS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkYenThresholdCalculatorHFSS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkYenThresholdCalculatorHFSS in _itkYenThresholdCalculatorPython:
_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFSS_swigregister(itkYenThresholdCalculatorHFSS)
itkYenThresholdCalculatorHFSS___New_orig__ = _itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFSS___New_orig__
itkYenThresholdCalculatorHFSS_cast = _itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFSS_cast


def itkYenThresholdCalculatorHFUC_New():
    return itkYenThresholdCalculatorHFUC.New()

class itkYenThresholdCalculatorHFUC(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFUC):
    r"""


    Computes the Yen's threshold for an image.

    Implements Yen thresholding method 1) Yen J.C., Chang F.J., and Chang
    S. (1995) "A New Criterion     for Automatic Multilevel
    Thresholding" IEEE Trans. on Image Processing, 4(3): 370-378 2)
    Sezgin M. and Sankur B. (2004) "Survey over Image Thresholding
    Techniques and Quantitative Performance Evaluation" Journal of
    Electronic Imaging, 13(1):
    146-165http://citeseer.ist.psu.edu/sezgin04survey.html

    M. Emre Celebi 06.15.2007

    This class is templated over the input histogram type. WARNING:  This
    calculator assumes that the input histogram has only one dimension.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFUC___New_orig__)
    Clone = _swig_new_instance_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFUC_Clone)
    __swig_destroy__ = _itkYenThresholdCalculatorPython.delete_itkYenThresholdCalculatorHFUC
    cast = _swig_new_static_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFUC_cast)

    def New(*args, **kargs):
        """New() -> itkYenThresholdCalculatorHFUC

        Create a new object of the class itkYenThresholdCalculatorHFUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkYenThresholdCalculatorHFUC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkYenThresholdCalculatorHFUC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkYenThresholdCalculatorHFUC.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkYenThresholdCalculatorHFUC in _itkYenThresholdCalculatorPython:
_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFUC_swigregister(itkYenThresholdCalculatorHFUC)
itkYenThresholdCalculatorHFUC___New_orig__ = _itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFUC___New_orig__
itkYenThresholdCalculatorHFUC_cast = _itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFUC_cast


def itkYenThresholdCalculatorHFUS_New():
    return itkYenThresholdCalculatorHFUS.New()

class itkYenThresholdCalculatorHFUS(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFUS):
    r"""


    Computes the Yen's threshold for an image.

    Implements Yen thresholding method 1) Yen J.C., Chang F.J., and Chang
    S. (1995) "A New Criterion     for Automatic Multilevel
    Thresholding" IEEE Trans. on Image Processing, 4(3): 370-378 2)
    Sezgin M. and Sankur B. (2004) "Survey over Image Thresholding
    Techniques and Quantitative Performance Evaluation" Journal of
    Electronic Imaging, 13(1):
    146-165http://citeseer.ist.psu.edu/sezgin04survey.html

    M. Emre Celebi 06.15.2007

    This class is templated over the input histogram type. WARNING:  This
    calculator assumes that the input histogram has only one dimension.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFUS___New_orig__)
    Clone = _swig_new_instance_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFUS_Clone)
    __swig_destroy__ = _itkYenThresholdCalculatorPython.delete_itkYenThresholdCalculatorHFUS
    cast = _swig_new_static_method(_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFUS_cast)

    def New(*args, **kargs):
        """New() -> itkYenThresholdCalculatorHFUS

        Create a new object of the class itkYenThresholdCalculatorHFUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkYenThresholdCalculatorHFUS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkYenThresholdCalculatorHFUS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkYenThresholdCalculatorHFUS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkYenThresholdCalculatorHFUS in _itkYenThresholdCalculatorPython:
_itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFUS_swigregister(itkYenThresholdCalculatorHFUS)
itkYenThresholdCalculatorHFUS___New_orig__ = _itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFUS___New_orig__
itkYenThresholdCalculatorHFUS_cast = _itkYenThresholdCalculatorPython.itkYenThresholdCalculatorHFUS_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def yen_threshold_calculator(*args, **kwargs):
    """Procedural interface for YenThresholdCalculator"""
    import itk
    instance = itk.YenThresholdCalculator.New(*args, **kwargs)
    return instance.__internal_call__()

def yen_threshold_calculator_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.YenThresholdCalculator, itkTemplate.itkTemplate):
        filter_object = itk.YenThresholdCalculator.values()[0]
    else:
        filter_object = itk.YenThresholdCalculator

    yen_threshold_calculator.__doc__ = filter_object.__doc__
    yen_threshold_calculator.__doc__ += "\n Args are Input(s) to the filter.\n"
    yen_threshold_calculator.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.YenThresholdCalculator, itkTemplate.itkTemplate):
        yen_threshold_calculator.__doc__ += itkHelpers.filter_args(filter_object)[0]
        yen_threshold_calculator.__doc__ += "\n"
        yen_threshold_calculator.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        yen_threshold_calculator.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



