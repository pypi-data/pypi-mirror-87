# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKDistanceMapPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkFastChamferDistanceImageFilterPython
else:
    import _itkFastChamferDistanceImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkFastChamferDistanceImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkFastChamferDistanceImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageToImageFilterAPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkPointPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.ITKCommonBasePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.ITKNarrowBandBasePython

def itkFastChamferDistanceImageFilterID2ID2_New():
    return itkFastChamferDistanceImageFilterID2ID2.New()

class itkFastChamferDistanceImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""


    This class compute the signed (positive and negative) chamfer distance
    in a narrow band.

    OVERVIEW This filter computes a Signed Chamfer Distance Map of the
    input image specially designed to work within the Level Set framework,
    in the Narrow Band Reinitialization (generally applied after
    IsoContourDistanceImageFilter ). It can however be used for other
    purposes.  The input is assumed to contain voxels with values higher
    than the Maximal Computed Distance, or values between -1 and 1 for
    voxels close to the 0-isosurface from which we compute the distance.

    This filter is N-dimensional.

    REFERENCES Fast and Accurate Redistancing for Level Set Methods
    `Krissian K. and Westin C.F.', EUROCAST NeuroImaging Workshop Las
    Palmas Spain, Ninth International Conference on Computer Aided Systems
    Theory , pages 48-51, Feb 2003. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_Clone)
    SetWeights = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_SetWeights)
    GetWeights = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_GetWeights)
    SetMaximumDistance = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_SetMaximumDistance)
    GetMaximumDistance = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_GetMaximumDistance)
    SetRegionToProcess = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_SetRegionToProcess)
    GetRegionToProcess = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_GetRegionToProcess)
    SetNarrowBand = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_SetNarrowBand)
    GetNarrowBand = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_GetNarrowBand)
    SameDimensionCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_SameDimensionCheck
    
    SameTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_SameTypeCheck
    
    FloatConvertibleToPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_FloatConvertibleToPixelTypeCheck
    
    PixelTypeConvertibleToFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_PixelTypeConvertibleToFloatCheck
    
    PixelTypeGreaterThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_PixelTypeGreaterThanFloatCheck
    
    PixelTypeLessThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_PixelTypeLessThanFloatCheck
    
    PixelTypeFloatAdditiveOperatorsCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_PixelTypeFloatAdditiveOperatorsCheck
    
    FloatGreaterThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_FloatGreaterThanPixelTypeCheck
    
    FloatLessThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_FloatLessThanPixelTypeCheck
    
    __swig_destroy__ = _itkFastChamferDistanceImageFilterPython.delete_itkFastChamferDistanceImageFilterID2ID2
    cast = _swig_new_static_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkFastChamferDistanceImageFilterID2ID2

        Create a new object of the class itkFastChamferDistanceImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastChamferDistanceImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastChamferDistanceImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastChamferDistanceImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastChamferDistanceImageFilterID2ID2 in _itkFastChamferDistanceImageFilterPython:
_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_swigregister(itkFastChamferDistanceImageFilterID2ID2)
itkFastChamferDistanceImageFilterID2ID2___New_orig__ = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2___New_orig__
itkFastChamferDistanceImageFilterID2ID2_cast = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_cast


def itkFastChamferDistanceImageFilterID3ID3_New():
    return itkFastChamferDistanceImageFilterID3ID3.New()

class itkFastChamferDistanceImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""


    This class compute the signed (positive and negative) chamfer distance
    in a narrow band.

    OVERVIEW This filter computes a Signed Chamfer Distance Map of the
    input image specially designed to work within the Level Set framework,
    in the Narrow Band Reinitialization (generally applied after
    IsoContourDistanceImageFilter ). It can however be used for other
    purposes.  The input is assumed to contain voxels with values higher
    than the Maximal Computed Distance, or values between -1 and 1 for
    voxels close to the 0-isosurface from which we compute the distance.

    This filter is N-dimensional.

    REFERENCES Fast and Accurate Redistancing for Level Set Methods
    `Krissian K. and Westin C.F.', EUROCAST NeuroImaging Workshop Las
    Palmas Spain, Ninth International Conference on Computer Aided Systems
    Theory , pages 48-51, Feb 2003. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_Clone)
    SetWeights = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_SetWeights)
    GetWeights = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_GetWeights)
    SetMaximumDistance = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_SetMaximumDistance)
    GetMaximumDistance = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_GetMaximumDistance)
    SetRegionToProcess = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_SetRegionToProcess)
    GetRegionToProcess = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_GetRegionToProcess)
    SetNarrowBand = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_SetNarrowBand)
    GetNarrowBand = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_GetNarrowBand)
    SameDimensionCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_SameDimensionCheck
    
    SameTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_SameTypeCheck
    
    FloatConvertibleToPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_FloatConvertibleToPixelTypeCheck
    
    PixelTypeConvertibleToFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_PixelTypeConvertibleToFloatCheck
    
    PixelTypeGreaterThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_PixelTypeGreaterThanFloatCheck
    
    PixelTypeLessThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_PixelTypeLessThanFloatCheck
    
    PixelTypeFloatAdditiveOperatorsCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_PixelTypeFloatAdditiveOperatorsCheck
    
    FloatGreaterThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_FloatGreaterThanPixelTypeCheck
    
    FloatLessThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_FloatLessThanPixelTypeCheck
    
    __swig_destroy__ = _itkFastChamferDistanceImageFilterPython.delete_itkFastChamferDistanceImageFilterID3ID3
    cast = _swig_new_static_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkFastChamferDistanceImageFilterID3ID3

        Create a new object of the class itkFastChamferDistanceImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastChamferDistanceImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastChamferDistanceImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastChamferDistanceImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastChamferDistanceImageFilterID3ID3 in _itkFastChamferDistanceImageFilterPython:
_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_swigregister(itkFastChamferDistanceImageFilterID3ID3)
itkFastChamferDistanceImageFilterID3ID3___New_orig__ = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3___New_orig__
itkFastChamferDistanceImageFilterID3ID3_cast = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_cast


def itkFastChamferDistanceImageFilterIF2IF2_New():
    return itkFastChamferDistanceImageFilterIF2IF2.New()

class itkFastChamferDistanceImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""


    This class compute the signed (positive and negative) chamfer distance
    in a narrow band.

    OVERVIEW This filter computes a Signed Chamfer Distance Map of the
    input image specially designed to work within the Level Set framework,
    in the Narrow Band Reinitialization (generally applied after
    IsoContourDistanceImageFilter ). It can however be used for other
    purposes.  The input is assumed to contain voxels with values higher
    than the Maximal Computed Distance, or values between -1 and 1 for
    voxels close to the 0-isosurface from which we compute the distance.

    This filter is N-dimensional.

    REFERENCES Fast and Accurate Redistancing for Level Set Methods
    `Krissian K. and Westin C.F.', EUROCAST NeuroImaging Workshop Las
    Palmas Spain, Ninth International Conference on Computer Aided Systems
    Theory , pages 48-51, Feb 2003. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_Clone)
    SetWeights = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_SetWeights)
    GetWeights = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_GetWeights)
    SetMaximumDistance = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_SetMaximumDistance)
    GetMaximumDistance = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_GetMaximumDistance)
    SetRegionToProcess = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_SetRegionToProcess)
    GetRegionToProcess = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_GetRegionToProcess)
    SetNarrowBand = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_SetNarrowBand)
    GetNarrowBand = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_GetNarrowBand)
    SameDimensionCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_SameDimensionCheck
    
    SameTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_SameTypeCheck
    
    FloatConvertibleToPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_FloatConvertibleToPixelTypeCheck
    
    PixelTypeConvertibleToFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_PixelTypeConvertibleToFloatCheck
    
    PixelTypeGreaterThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_PixelTypeGreaterThanFloatCheck
    
    PixelTypeLessThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_PixelTypeLessThanFloatCheck
    
    PixelTypeFloatAdditiveOperatorsCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_PixelTypeFloatAdditiveOperatorsCheck
    
    FloatGreaterThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_FloatGreaterThanPixelTypeCheck
    
    FloatLessThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_FloatLessThanPixelTypeCheck
    
    __swig_destroy__ = _itkFastChamferDistanceImageFilterPython.delete_itkFastChamferDistanceImageFilterIF2IF2
    cast = _swig_new_static_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkFastChamferDistanceImageFilterIF2IF2

        Create a new object of the class itkFastChamferDistanceImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastChamferDistanceImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastChamferDistanceImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastChamferDistanceImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastChamferDistanceImageFilterIF2IF2 in _itkFastChamferDistanceImageFilterPython:
_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_swigregister(itkFastChamferDistanceImageFilterIF2IF2)
itkFastChamferDistanceImageFilterIF2IF2___New_orig__ = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2___New_orig__
itkFastChamferDistanceImageFilterIF2IF2_cast = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_cast


def itkFastChamferDistanceImageFilterIF3IF3_New():
    return itkFastChamferDistanceImageFilterIF3IF3.New()

class itkFastChamferDistanceImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""


    This class compute the signed (positive and negative) chamfer distance
    in a narrow band.

    OVERVIEW This filter computes a Signed Chamfer Distance Map of the
    input image specially designed to work within the Level Set framework,
    in the Narrow Band Reinitialization (generally applied after
    IsoContourDistanceImageFilter ). It can however be used for other
    purposes.  The input is assumed to contain voxels with values higher
    than the Maximal Computed Distance, or values between -1 and 1 for
    voxels close to the 0-isosurface from which we compute the distance.

    This filter is N-dimensional.

    REFERENCES Fast and Accurate Redistancing for Level Set Methods
    `Krissian K. and Westin C.F.', EUROCAST NeuroImaging Workshop Las
    Palmas Spain, Ninth International Conference on Computer Aided Systems
    Theory , pages 48-51, Feb 2003. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_Clone)
    SetWeights = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_SetWeights)
    GetWeights = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_GetWeights)
    SetMaximumDistance = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_SetMaximumDistance)
    GetMaximumDistance = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_GetMaximumDistance)
    SetRegionToProcess = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_SetRegionToProcess)
    GetRegionToProcess = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_GetRegionToProcess)
    SetNarrowBand = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_SetNarrowBand)
    GetNarrowBand = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_GetNarrowBand)
    SameDimensionCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_SameDimensionCheck
    
    SameTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_SameTypeCheck
    
    FloatConvertibleToPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_FloatConvertibleToPixelTypeCheck
    
    PixelTypeConvertibleToFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_PixelTypeConvertibleToFloatCheck
    
    PixelTypeGreaterThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_PixelTypeGreaterThanFloatCheck
    
    PixelTypeLessThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_PixelTypeLessThanFloatCheck
    
    PixelTypeFloatAdditiveOperatorsCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_PixelTypeFloatAdditiveOperatorsCheck
    
    FloatGreaterThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_FloatGreaterThanPixelTypeCheck
    
    FloatLessThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_FloatLessThanPixelTypeCheck
    
    __swig_destroy__ = _itkFastChamferDistanceImageFilterPython.delete_itkFastChamferDistanceImageFilterIF3IF3
    cast = _swig_new_static_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkFastChamferDistanceImageFilterIF3IF3

        Create a new object of the class itkFastChamferDistanceImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastChamferDistanceImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastChamferDistanceImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastChamferDistanceImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastChamferDistanceImageFilterIF3IF3 in _itkFastChamferDistanceImageFilterPython:
_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_swigregister(itkFastChamferDistanceImageFilterIF3IF3)
itkFastChamferDistanceImageFilterIF3IF3___New_orig__ = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3___New_orig__
itkFastChamferDistanceImageFilterIF3IF3_cast = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_cast


def itkFastChamferDistanceImageFilterISS2ISS2_New():
    return itkFastChamferDistanceImageFilterISS2ISS2.New()

class itkFastChamferDistanceImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""


    This class compute the signed (positive and negative) chamfer distance
    in a narrow band.

    OVERVIEW This filter computes a Signed Chamfer Distance Map of the
    input image specially designed to work within the Level Set framework,
    in the Narrow Band Reinitialization (generally applied after
    IsoContourDistanceImageFilter ). It can however be used for other
    purposes.  The input is assumed to contain voxels with values higher
    than the Maximal Computed Distance, or values between -1 and 1 for
    voxels close to the 0-isosurface from which we compute the distance.

    This filter is N-dimensional.

    REFERENCES Fast and Accurate Redistancing for Level Set Methods
    `Krissian K. and Westin C.F.', EUROCAST NeuroImaging Workshop Las
    Palmas Spain, Ninth International Conference on Computer Aided Systems
    Theory , pages 48-51, Feb 2003. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_Clone)
    SetWeights = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_SetWeights)
    GetWeights = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_GetWeights)
    SetMaximumDistance = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_SetMaximumDistance)
    GetMaximumDistance = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_GetMaximumDistance)
    SetRegionToProcess = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_SetRegionToProcess)
    GetRegionToProcess = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_GetRegionToProcess)
    SetNarrowBand = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_SetNarrowBand)
    GetNarrowBand = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_GetNarrowBand)
    SameDimensionCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_SameDimensionCheck
    
    SameTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_SameTypeCheck
    
    FloatConvertibleToPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_FloatConvertibleToPixelTypeCheck
    
    PixelTypeConvertibleToFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_PixelTypeConvertibleToFloatCheck
    
    PixelTypeGreaterThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_PixelTypeGreaterThanFloatCheck
    
    PixelTypeLessThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_PixelTypeLessThanFloatCheck
    
    PixelTypeFloatAdditiveOperatorsCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_PixelTypeFloatAdditiveOperatorsCheck
    
    FloatGreaterThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_FloatGreaterThanPixelTypeCheck
    
    FloatLessThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_FloatLessThanPixelTypeCheck
    
    __swig_destroy__ = _itkFastChamferDistanceImageFilterPython.delete_itkFastChamferDistanceImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkFastChamferDistanceImageFilterISS2ISS2

        Create a new object of the class itkFastChamferDistanceImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastChamferDistanceImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastChamferDistanceImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastChamferDistanceImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastChamferDistanceImageFilterISS2ISS2 in _itkFastChamferDistanceImageFilterPython:
_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_swigregister(itkFastChamferDistanceImageFilterISS2ISS2)
itkFastChamferDistanceImageFilterISS2ISS2___New_orig__ = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2___New_orig__
itkFastChamferDistanceImageFilterISS2ISS2_cast = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_cast


def itkFastChamferDistanceImageFilterISS3ISS3_New():
    return itkFastChamferDistanceImageFilterISS3ISS3.New()

class itkFastChamferDistanceImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""


    This class compute the signed (positive and negative) chamfer distance
    in a narrow band.

    OVERVIEW This filter computes a Signed Chamfer Distance Map of the
    input image specially designed to work within the Level Set framework,
    in the Narrow Band Reinitialization (generally applied after
    IsoContourDistanceImageFilter ). It can however be used for other
    purposes.  The input is assumed to contain voxels with values higher
    than the Maximal Computed Distance, or values between -1 and 1 for
    voxels close to the 0-isosurface from which we compute the distance.

    This filter is N-dimensional.

    REFERENCES Fast and Accurate Redistancing for Level Set Methods
    `Krissian K. and Westin C.F.', EUROCAST NeuroImaging Workshop Las
    Palmas Spain, Ninth International Conference on Computer Aided Systems
    Theory , pages 48-51, Feb 2003. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_Clone)
    SetWeights = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_SetWeights)
    GetWeights = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_GetWeights)
    SetMaximumDistance = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_SetMaximumDistance)
    GetMaximumDistance = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_GetMaximumDistance)
    SetRegionToProcess = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_SetRegionToProcess)
    GetRegionToProcess = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_GetRegionToProcess)
    SetNarrowBand = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_SetNarrowBand)
    GetNarrowBand = _swig_new_instance_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_GetNarrowBand)
    SameDimensionCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_SameDimensionCheck
    
    SameTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_SameTypeCheck
    
    FloatConvertibleToPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_FloatConvertibleToPixelTypeCheck
    
    PixelTypeConvertibleToFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_PixelTypeConvertibleToFloatCheck
    
    PixelTypeGreaterThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_PixelTypeGreaterThanFloatCheck
    
    PixelTypeLessThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_PixelTypeLessThanFloatCheck
    
    PixelTypeFloatAdditiveOperatorsCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_PixelTypeFloatAdditiveOperatorsCheck
    
    FloatGreaterThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_FloatGreaterThanPixelTypeCheck
    
    FloatLessThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_FloatLessThanPixelTypeCheck
    
    __swig_destroy__ = _itkFastChamferDistanceImageFilterPython.delete_itkFastChamferDistanceImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkFastChamferDistanceImageFilterISS3ISS3

        Create a new object of the class itkFastChamferDistanceImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastChamferDistanceImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastChamferDistanceImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastChamferDistanceImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastChamferDistanceImageFilterISS3ISS3 in _itkFastChamferDistanceImageFilterPython:
_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_swigregister(itkFastChamferDistanceImageFilterISS3ISS3)
itkFastChamferDistanceImageFilterISS3ISS3___New_orig__ = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3___New_orig__
itkFastChamferDistanceImageFilterISS3ISS3_cast = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def fast_chamfer_distance_image_filter(*args, **kwargs):
    """Procedural interface for FastChamferDistanceImageFilter"""
    import itk
    instance = itk.FastChamferDistanceImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def fast_chamfer_distance_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.FastChamferDistanceImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.FastChamferDistanceImageFilter.values()[0]
    else:
        filter_object = itk.FastChamferDistanceImageFilter

    fast_chamfer_distance_image_filter.__doc__ = filter_object.__doc__
    fast_chamfer_distance_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    fast_chamfer_distance_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.FastChamferDistanceImageFilter, itkTemplate.itkTemplate):
        fast_chamfer_distance_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        fast_chamfer_distance_image_filter.__doc__ += "\n"
        fast_chamfer_distance_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        fast_chamfer_distance_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



