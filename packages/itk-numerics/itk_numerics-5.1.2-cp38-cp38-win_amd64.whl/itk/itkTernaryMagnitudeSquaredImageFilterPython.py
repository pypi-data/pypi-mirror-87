# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageIntensityPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkTernaryMagnitudeSquaredImageFilterPython
else:
    import _itkTernaryMagnitudeSquaredImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkTernaryMagnitudeSquaredImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkTernaryMagnitudeSquaredImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterBPython

def itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass_New():
    return itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass.New()

class itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""Proxy of C++ itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass_Clone)
    SetInput1 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass_SetInput2)
    SetInput3 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass_SetInput3)
    GetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass_SetFunctor)
    SameDimensionCheck1 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass_SameDimensionCheck2
    
    SameDimensionCheck3 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass_SameDimensionCheck3
    
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass_swigregister(itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass)
itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass___New_orig__
itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass_cast


def itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass_New():
    return itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass.New()

class itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""Proxy of C++ itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass_Clone)
    SetInput1 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass_SetInput2)
    SetInput3 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass_SetInput3)
    GetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass_SetFunctor)
    SameDimensionCheck1 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass_SameDimensionCheck2
    
    SameDimensionCheck3 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass_SameDimensionCheck3
    
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass_swigregister(itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass)
itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass___New_orig__
itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass_cast


def itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass_New():
    return itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass.New()

class itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""Proxy of C++ itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass_Clone)
    SetInput1 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass_SetInput2)
    SetInput3 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass_SetInput3)
    GetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass_SetFunctor)
    SameDimensionCheck1 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass_SameDimensionCheck2
    
    SameDimensionCheck3 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass_SameDimensionCheck3
    
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass_swigregister(itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass)
itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass___New_orig__
itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass_cast


def itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass_New():
    return itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass.New()

class itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""Proxy of C++ itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass_Clone)
    SetInput1 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass_SetInput2)
    SetInput3 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass_SetInput3)
    GetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass_SetFunctor)
    SameDimensionCheck1 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass_SameDimensionCheck2
    
    SameDimensionCheck3 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass_SameDimensionCheck3
    
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass_swigregister(itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass)
itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass___New_orig__
itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass_cast


def itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass_New():
    return itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass.New()

class itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    r"""Proxy of C++ itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass_Clone)
    SetInput1 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass_SetInput2)
    SetInput3 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass_SetInput3)
    GetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass_SetFunctor)
    SameDimensionCheck1 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass_SameDimensionCheck2
    
    SameDimensionCheck3 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass_SameDimensionCheck3
    
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass_swigregister(itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass)
itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass___New_orig__
itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass_cast


def itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass_New():
    return itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass.New()

class itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    r"""Proxy of C++ itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass_Clone)
    SetInput1 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass_SetInput2)
    SetInput3 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass_SetInput3)
    GetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass_SetFunctor)
    SameDimensionCheck1 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass_SameDimensionCheck2
    
    SameDimensionCheck3 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass_SameDimensionCheck3
    
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass_swigregister(itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass)
itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass___New_orig__
itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass_cast


def itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass_New():
    return itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass.New()

class itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    r"""Proxy of C++ itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass_Clone)
    SetInput1 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass_SetInput2)
    SetInput3 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass_SetInput3)
    GetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass_SetFunctor)
    SameDimensionCheck1 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass_SameDimensionCheck2
    
    SameDimensionCheck3 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass_SameDimensionCheck3
    
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass_swigregister(itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass)
itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass___New_orig__
itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass_cast


def itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass_New():
    return itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass.New()

class itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    r"""Proxy of C++ itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass_Clone)
    SetInput1 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass_SetInput2)
    SetInput3 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass_SetInput3)
    GetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass_SetFunctor)
    SameDimensionCheck1 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass_SameDimensionCheck2
    
    SameDimensionCheck3 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass_SameDimensionCheck3
    
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass_swigregister(itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass)
itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass___New_orig__
itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass_cast


def itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass_New():
    return itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass.New()

class itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""Proxy of C++ itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass_Clone)
    SetInput1 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass_SetInput2)
    SetInput3 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass_SetInput3)
    GetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass_SetFunctor)
    SameDimensionCheck1 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass_SameDimensionCheck2
    
    SameDimensionCheck3 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass_SameDimensionCheck3
    
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass_swigregister(itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass)
itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass___New_orig__
itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass_cast


def itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass_New():
    return itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass.New()

class itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""Proxy of C++ itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass_Clone)
    SetInput1 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass_SetInput2)
    SetInput3 = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass_SetInput3)
    GetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass_SetFunctor)
    SameDimensionCheck1 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass_SameDimensionCheck2
    
    SameDimensionCheck3 = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass_SameDimensionCheck3
    
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass_swigregister(itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass)
itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass___New_orig__
itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass_cast


def itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_New():
    return itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2.New()

class itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2(itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Superclass):
    r"""


    Compute the pixel-wise squared magnitude of three images.

    This class is templated over the types of the three input images and
    the type of the output image. Numeric conversions (castings) are done
    by the C++ defaults. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2 in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_swigregister(itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2)
itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2___New_orig__
itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_cast


def itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_New():
    return itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3.New()

class itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3(itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Superclass):
    r"""


    Compute the pixel-wise squared magnitude of three images.

    This class is templated over the types of the three input images and
    the type of the output image. Numeric conversions (castings) are done
    by the C++ defaults. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3 in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_swigregister(itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3)
itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3___New_orig__
itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_cast


def itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_New():
    return itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2.New()

class itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2(itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Superclass):
    r"""


    Compute the pixel-wise squared magnitude of three images.

    This class is templated over the types of the three input images and
    the type of the output image. Numeric conversions (castings) are done
    by the C++ defaults. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2 in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_swigregister(itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2)
itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2___New_orig__
itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_cast


def itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_New():
    return itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3.New()

class itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3(itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Superclass):
    r"""


    Compute the pixel-wise squared magnitude of three images.

    This class is templated over the types of the three input images and
    the type of the output image. Numeric conversions (castings) are done
    by the C++ defaults. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3 in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_swigregister(itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3)
itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3___New_orig__
itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_cast


def itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_New():
    return itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2.New()

class itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2(itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Superclass):
    r"""


    Compute the pixel-wise squared magnitude of three images.

    This class is templated over the types of the three input images and
    the type of the output image. Numeric conversions (castings) are done
    by the C++ defaults. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2 in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_swigregister(itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2)
itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2___New_orig__
itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_cast


def itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_New():
    return itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3.New()

class itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3(itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Superclass):
    r"""


    Compute the pixel-wise squared magnitude of three images.

    This class is templated over the types of the three input images and
    the type of the output image. Numeric conversions (castings) are done
    by the C++ defaults. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3 in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_swigregister(itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3)
itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3___New_orig__
itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_cast


def itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_New():
    return itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2.New()

class itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2(itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Superclass):
    r"""


    Compute the pixel-wise squared magnitude of three images.

    This class is templated over the types of the three input images and
    the type of the output image. Numeric conversions (castings) are done
    by the C++ defaults. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2 in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_swigregister(itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2)
itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2___New_orig__
itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_cast


def itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_New():
    return itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3.New()

class itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3(itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Superclass):
    r"""


    Compute the pixel-wise squared magnitude of three images.

    This class is templated over the types of the three input images and
    the type of the output image. Numeric conversions (castings) are done
    by the C++ defaults. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3 in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_swigregister(itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3)
itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3___New_orig__
itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_cast


def itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_New():
    return itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2.New()

class itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2(itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Superclass):
    r"""


    Compute the pixel-wise squared magnitude of three images.

    This class is templated over the types of the three input images and
    the type of the output image. Numeric conversions (castings) are done
    by the C++ defaults. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2 in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_swigregister(itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2)
itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2___New_orig__
itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_cast


def itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_New():
    return itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3.New()

class itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3(itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Superclass):
    r"""


    Compute the pixel-wise squared magnitude of three images.

    This class is templated over the types of the three input images and
    the type of the output image. Numeric conversions (castings) are done
    by the C++ defaults. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3 in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_swigregister(itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3)
itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3___New_orig__
itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def ternary_magnitude_squared_image_filter(*args, **kwargs):
    """Procedural interface for TernaryMagnitudeSquaredImageFilter"""
    import itk
    instance = itk.TernaryMagnitudeSquaredImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def ternary_magnitude_squared_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.TernaryMagnitudeSquaredImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.TernaryMagnitudeSquaredImageFilter.values()[0]
    else:
        filter_object = itk.TernaryMagnitudeSquaredImageFilter

    ternary_magnitude_squared_image_filter.__doc__ = filter_object.__doc__
    ternary_magnitude_squared_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    ternary_magnitude_squared_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.TernaryMagnitudeSquaredImageFilter, itkTemplate.itkTemplate):
        ternary_magnitude_squared_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        ternary_magnitude_squared_image_filter.__doc__ += "\n"
        ternary_magnitude_squared_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        ternary_magnitude_squared_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def ternary_functor_image_filter(*args, **kwargs):
    """Procedural interface for TernaryFunctorImageFilter"""
    import itk
    instance = itk.TernaryFunctorImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def ternary_functor_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.TernaryFunctorImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.TernaryFunctorImageFilter.values()[0]
    else:
        filter_object = itk.TernaryFunctorImageFilter

    ternary_functor_image_filter.__doc__ = filter_object.__doc__
    ternary_functor_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    ternary_functor_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.TernaryFunctorImageFilter, itkTemplate.itkTemplate):
        ternary_functor_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        ternary_functor_image_filter.__doc__ += "\n"
        ternary_functor_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        ternary_functor_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



