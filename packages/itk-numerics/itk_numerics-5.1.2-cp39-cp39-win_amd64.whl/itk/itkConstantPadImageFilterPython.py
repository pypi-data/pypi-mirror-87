# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageGridPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkConstantPadImageFilterPython
else:
    import _itkConstantPadImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkConstantPadImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkConstantPadImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.itkPadImageFilterPython
import itk.itkSizePython
import itk.itkPadImageFilterBasePython
import itk.itkImageBoundaryConditionPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkPointPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkSymmetricSecondRankTensorPython
import itk.ITKCommonBasePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterBPython

def itkConstantPadImageFilterICF2ICF2_New():
    return itkConstantPadImageFilterICF2ICF2.New()

class itkConstantPadImageFilterICF2ICF2(itk.itkPadImageFilterPython.itkPadImageFilterICF2ICF2):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICF2ICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICF2ICF2_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICF2ICF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICF2ICF2_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICF2ICF2_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICF2ICF2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICF2ICF2_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICF2ICF2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterICF2ICF2
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICF2ICF2_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterICF2ICF2

        Create a new object of the class itkConstantPadImageFilterICF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterICF2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterICF2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterICF2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterICF2ICF2 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterICF2ICF2_swigregister(itkConstantPadImageFilterICF2ICF2)
itkConstantPadImageFilterICF2ICF2___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICF2ICF2___New_orig__
itkConstantPadImageFilterICF2ICF2_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICF2ICF2_cast


def itkConstantPadImageFilterICF3ICF3_New():
    return itkConstantPadImageFilterICF3ICF3.New()

class itkConstantPadImageFilterICF3ICF3(itk.itkPadImageFilterPython.itkPadImageFilterICF3ICF3):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICF3ICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICF3ICF3_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICF3ICF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICF3ICF3_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICF3ICF3_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICF3ICF3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICF3ICF3_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICF3ICF3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterICF3ICF3
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICF3ICF3_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterICF3ICF3

        Create a new object of the class itkConstantPadImageFilterICF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterICF3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterICF3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterICF3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterICF3ICF3 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterICF3ICF3_swigregister(itkConstantPadImageFilterICF3ICF3)
itkConstantPadImageFilterICF3ICF3___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICF3ICF3___New_orig__
itkConstantPadImageFilterICF3ICF3_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICF3ICF3_cast


def itkConstantPadImageFilterICVF22ICVF22_New():
    return itkConstantPadImageFilterICVF22ICVF22.New()

class itkConstantPadImageFilterICVF22ICVF22(itk.itkPadImageFilterPython.itkPadImageFilterICVF22ICVF22):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF22ICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF22ICVF22_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF22ICVF22_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF22ICVF22_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF22ICVF22_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF22ICVF22_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF22ICVF22_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF22ICVF22_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterICVF22ICVF22
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF22ICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterICVF22ICVF22

        Create a new object of the class itkConstantPadImageFilterICVF22ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterICVF22ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterICVF22ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterICVF22ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterICVF22ICVF22 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF22ICVF22_swigregister(itkConstantPadImageFilterICVF22ICVF22)
itkConstantPadImageFilterICVF22ICVF22___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF22ICVF22___New_orig__
itkConstantPadImageFilterICVF22ICVF22_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF22ICVF22_cast


def itkConstantPadImageFilterICVF23ICVF23_New():
    return itkConstantPadImageFilterICVF23ICVF23.New()

class itkConstantPadImageFilterICVF23ICVF23(itk.itkPadImageFilterPython.itkPadImageFilterICVF23ICVF23):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF23ICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF23ICVF23_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF23ICVF23_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF23ICVF23_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF23ICVF23_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF23ICVF23_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF23ICVF23_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF23ICVF23_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterICVF23ICVF23
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF23ICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterICVF23ICVF23

        Create a new object of the class itkConstantPadImageFilterICVF23ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterICVF23ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterICVF23ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterICVF23ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterICVF23ICVF23 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF23ICVF23_swigregister(itkConstantPadImageFilterICVF23ICVF23)
itkConstantPadImageFilterICVF23ICVF23___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF23ICVF23___New_orig__
itkConstantPadImageFilterICVF23ICVF23_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF23ICVF23_cast


def itkConstantPadImageFilterICVF32ICVF32_New():
    return itkConstantPadImageFilterICVF32ICVF32.New()

class itkConstantPadImageFilterICVF32ICVF32(itk.itkPadImageFilterPython.itkPadImageFilterICVF32ICVF32):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF32ICVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF32ICVF32_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF32ICVF32_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF32ICVF32_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF32ICVF32_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF32ICVF32_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF32ICVF32_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF32ICVF32_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterICVF32ICVF32
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF32ICVF32_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterICVF32ICVF32

        Create a new object of the class itkConstantPadImageFilterICVF32ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterICVF32ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterICVF32ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterICVF32ICVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterICVF32ICVF32 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF32ICVF32_swigregister(itkConstantPadImageFilterICVF32ICVF32)
itkConstantPadImageFilterICVF32ICVF32___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF32ICVF32___New_orig__
itkConstantPadImageFilterICVF32ICVF32_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF32ICVF32_cast


def itkConstantPadImageFilterICVF33ICVF33_New():
    return itkConstantPadImageFilterICVF33ICVF33.New()

class itkConstantPadImageFilterICVF33ICVF33(itk.itkPadImageFilterPython.itkPadImageFilterICVF33ICVF33):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF33ICVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF33ICVF33_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF33ICVF33_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF33ICVF33_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF33ICVF33_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF33ICVF33_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF33ICVF33_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF33ICVF33_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterICVF33ICVF33
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF33ICVF33_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterICVF33ICVF33

        Create a new object of the class itkConstantPadImageFilterICVF33ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterICVF33ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterICVF33ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterICVF33ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterICVF33ICVF33 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF33ICVF33_swigregister(itkConstantPadImageFilterICVF33ICVF33)
itkConstantPadImageFilterICVF33ICVF33___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF33ICVF33___New_orig__
itkConstantPadImageFilterICVF33ICVF33_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF33ICVF33_cast


def itkConstantPadImageFilterICVF42ICVF42_New():
    return itkConstantPadImageFilterICVF42ICVF42.New()

class itkConstantPadImageFilterICVF42ICVF42(itk.itkPadImageFilterPython.itkPadImageFilterICVF42ICVF42):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF42ICVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF42ICVF42_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF42ICVF42_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF42ICVF42_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF42ICVF42_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF42ICVF42_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF42ICVF42_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF42ICVF42_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterICVF42ICVF42
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF42ICVF42_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterICVF42ICVF42

        Create a new object of the class itkConstantPadImageFilterICVF42ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterICVF42ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterICVF42ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterICVF42ICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterICVF42ICVF42 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF42ICVF42_swigregister(itkConstantPadImageFilterICVF42ICVF42)
itkConstantPadImageFilterICVF42ICVF42___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF42ICVF42___New_orig__
itkConstantPadImageFilterICVF42ICVF42_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF42ICVF42_cast


def itkConstantPadImageFilterICVF43ICVF43_New():
    return itkConstantPadImageFilterICVF43ICVF43.New()

class itkConstantPadImageFilterICVF43ICVF43(itk.itkPadImageFilterPython.itkPadImageFilterICVF43ICVF43):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF43ICVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF43ICVF43_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF43ICVF43_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF43ICVF43_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF43ICVF43_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF43ICVF43_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF43ICVF43_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF43ICVF43_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterICVF43ICVF43
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF43ICVF43_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterICVF43ICVF43

        Create a new object of the class itkConstantPadImageFilterICVF43ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterICVF43ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterICVF43ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterICVF43ICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterICVF43ICVF43 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF43ICVF43_swigregister(itkConstantPadImageFilterICVF43ICVF43)
itkConstantPadImageFilterICVF43ICVF43___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF43ICVF43___New_orig__
itkConstantPadImageFilterICVF43ICVF43_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterICVF43ICVF43_cast


def itkConstantPadImageFilterID2ID2_New():
    return itkConstantPadImageFilterID2ID2.New()

class itkConstantPadImageFilterID2ID2(itk.itkPadImageFilterPython.itkPadImageFilterID2ID2):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterID2ID2_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterID2ID2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterID2ID2_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterID2ID2_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterID2ID2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterID2ID2_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterID2ID2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterID2ID2
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterID2ID2

        Create a new object of the class itkConstantPadImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterID2ID2 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterID2ID2_swigregister(itkConstantPadImageFilterID2ID2)
itkConstantPadImageFilterID2ID2___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterID2ID2___New_orig__
itkConstantPadImageFilterID2ID2_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterID2ID2_cast


def itkConstantPadImageFilterID3ID3_New():
    return itkConstantPadImageFilterID3ID3.New()

class itkConstantPadImageFilterID3ID3(itk.itkPadImageFilterPython.itkPadImageFilterID3ID3):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterID3ID3_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterID3ID3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterID3ID3_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterID3ID3_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterID3ID3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterID3ID3_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterID3ID3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterID3ID3
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterID3ID3

        Create a new object of the class itkConstantPadImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterID3ID3 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterID3ID3_swigregister(itkConstantPadImageFilterID3ID3)
itkConstantPadImageFilterID3ID3___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterID3ID3___New_orig__
itkConstantPadImageFilterID3ID3_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterID3ID3_cast


def itkConstantPadImageFilterIF2IF2_New():
    return itkConstantPadImageFilterIF2IF2.New()

class itkConstantPadImageFilterIF2IF2(itk.itkPadImageFilterPython.itkPadImageFilterIF2IF2):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIF2IF2_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIF2IF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIF2IF2_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIF2IF2_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIF2IF2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIF2IF2_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIF2IF2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterIF2IF2
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterIF2IF2

        Create a new object of the class itkConstantPadImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterIF2IF2 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterIF2IF2_swigregister(itkConstantPadImageFilterIF2IF2)
itkConstantPadImageFilterIF2IF2___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIF2IF2___New_orig__
itkConstantPadImageFilterIF2IF2_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIF2IF2_cast


def itkConstantPadImageFilterIF3IF3_New():
    return itkConstantPadImageFilterIF3IF3.New()

class itkConstantPadImageFilterIF3IF3(itk.itkPadImageFilterPython.itkPadImageFilterIF3IF3):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIF3IF3_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIF3IF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIF3IF3_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIF3IF3_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIF3IF3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIF3IF3_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIF3IF3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterIF3IF3
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterIF3IF3

        Create a new object of the class itkConstantPadImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterIF3IF3 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterIF3IF3_swigregister(itkConstantPadImageFilterIF3IF3)
itkConstantPadImageFilterIF3IF3___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIF3IF3___New_orig__
itkConstantPadImageFilterIF3IF3_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIF3IF3_cast


def itkConstantPadImageFilterIRGBAUC2IRGBAUC2_New():
    return itkConstantPadImageFilterIRGBAUC2IRGBAUC2.New()

class itkConstantPadImageFilterIRGBAUC2IRGBAUC2(itk.itkPadImageFilterPython.itkPadImageFilterIRGBAUC2IRGBAUC2):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBAUC2IRGBAUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBAUC2IRGBAUC2_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBAUC2IRGBAUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBAUC2IRGBAUC2_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBAUC2IRGBAUC2_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBAUC2IRGBAUC2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBAUC2IRGBAUC2_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBAUC2IRGBAUC2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterIRGBAUC2IRGBAUC2
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBAUC2IRGBAUC2_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterIRGBAUC2IRGBAUC2

        Create a new object of the class itkConstantPadImageFilterIRGBAUC2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterIRGBAUC2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterIRGBAUC2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterIRGBAUC2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterIRGBAUC2IRGBAUC2 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBAUC2IRGBAUC2_swigregister(itkConstantPadImageFilterIRGBAUC2IRGBAUC2)
itkConstantPadImageFilterIRGBAUC2IRGBAUC2___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBAUC2IRGBAUC2___New_orig__
itkConstantPadImageFilterIRGBAUC2IRGBAUC2_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBAUC2IRGBAUC2_cast


def itkConstantPadImageFilterIRGBAUC3IRGBAUC3_New():
    return itkConstantPadImageFilterIRGBAUC3IRGBAUC3.New()

class itkConstantPadImageFilterIRGBAUC3IRGBAUC3(itk.itkPadImageFilterPython.itkPadImageFilterIRGBAUC3IRGBAUC3):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBAUC3IRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBAUC3IRGBAUC3_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBAUC3IRGBAUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBAUC3IRGBAUC3_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBAUC3IRGBAUC3_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBAUC3IRGBAUC3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBAUC3IRGBAUC3_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBAUC3IRGBAUC3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterIRGBAUC3IRGBAUC3
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBAUC3IRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterIRGBAUC3IRGBAUC3

        Create a new object of the class itkConstantPadImageFilterIRGBAUC3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterIRGBAUC3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterIRGBAUC3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterIRGBAUC3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterIRGBAUC3IRGBAUC3 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBAUC3IRGBAUC3_swigregister(itkConstantPadImageFilterIRGBAUC3IRGBAUC3)
itkConstantPadImageFilterIRGBAUC3IRGBAUC3___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBAUC3IRGBAUC3___New_orig__
itkConstantPadImageFilterIRGBAUC3IRGBAUC3_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBAUC3IRGBAUC3_cast


def itkConstantPadImageFilterIRGBUC2IRGBUC2_New():
    return itkConstantPadImageFilterIRGBUC2IRGBUC2.New()

class itkConstantPadImageFilterIRGBUC2IRGBUC2(itk.itkPadImageFilterPython.itkPadImageFilterIRGBUC2IRGBUC2):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBUC2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBUC2IRGBUC2_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBUC2IRGBUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBUC2IRGBUC2_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBUC2IRGBUC2_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBUC2IRGBUC2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBUC2IRGBUC2_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBUC2IRGBUC2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterIRGBUC2IRGBUC2
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBUC2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterIRGBUC2IRGBUC2

        Create a new object of the class itkConstantPadImageFilterIRGBUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterIRGBUC2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterIRGBUC2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterIRGBUC2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterIRGBUC2IRGBUC2 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBUC2IRGBUC2_swigregister(itkConstantPadImageFilterIRGBUC2IRGBUC2)
itkConstantPadImageFilterIRGBUC2IRGBUC2___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBUC2IRGBUC2___New_orig__
itkConstantPadImageFilterIRGBUC2IRGBUC2_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBUC2IRGBUC2_cast


def itkConstantPadImageFilterIRGBUC3IRGBUC3_New():
    return itkConstantPadImageFilterIRGBUC3IRGBUC3.New()

class itkConstantPadImageFilterIRGBUC3IRGBUC3(itk.itkPadImageFilterPython.itkPadImageFilterIRGBUC3IRGBUC3):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBUC3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBUC3IRGBUC3_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBUC3IRGBUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBUC3IRGBUC3_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBUC3IRGBUC3_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBUC3IRGBUC3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBUC3IRGBUC3_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBUC3IRGBUC3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterIRGBUC3IRGBUC3
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBUC3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterIRGBUC3IRGBUC3

        Create a new object of the class itkConstantPadImageFilterIRGBUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterIRGBUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterIRGBUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterIRGBUC3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterIRGBUC3IRGBUC3 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBUC3IRGBUC3_swigregister(itkConstantPadImageFilterIRGBUC3IRGBUC3)
itkConstantPadImageFilterIRGBUC3IRGBUC3___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBUC3IRGBUC3___New_orig__
itkConstantPadImageFilterIRGBUC3IRGBUC3_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIRGBUC3IRGBUC3_cast


def itkConstantPadImageFilterISS2ISS2_New():
    return itkConstantPadImageFilterISS2ISS2.New()

class itkConstantPadImageFilterISS2ISS2(itk.itkPadImageFilterPython.itkPadImageFilterISS2ISS2):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterISS2ISS2_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterISS2ISS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterISS2ISS2_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterISS2ISS2_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterISS2ISS2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterISS2ISS2_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterISS2ISS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterISS2ISS2

        Create a new object of the class itkConstantPadImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterISS2ISS2 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterISS2ISS2_swigregister(itkConstantPadImageFilterISS2ISS2)
itkConstantPadImageFilterISS2ISS2___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterISS2ISS2___New_orig__
itkConstantPadImageFilterISS2ISS2_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterISS2ISS2_cast


def itkConstantPadImageFilterISS3ISS3_New():
    return itkConstantPadImageFilterISS3ISS3.New()

class itkConstantPadImageFilterISS3ISS3(itk.itkPadImageFilterPython.itkPadImageFilterISS3ISS3):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterISS3ISS3_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterISS3ISS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterISS3ISS3_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterISS3ISS3_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterISS3ISS3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterISS3ISS3_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterISS3ISS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterISS3ISS3

        Create a new object of the class itkConstantPadImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterISS3ISS3 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterISS3ISS3_swigregister(itkConstantPadImageFilterISS3ISS3)
itkConstantPadImageFilterISS3ISS3___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterISS3ISS3___New_orig__
itkConstantPadImageFilterISS3ISS3_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterISS3ISS3_cast


def itkConstantPadImageFilterIUC2IUC2_New():
    return itkConstantPadImageFilterIUC2IUC2.New()

class itkConstantPadImageFilterIUC2IUC2(itk.itkPadImageFilterPython.itkPadImageFilterIUC2IUC2):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIUC2IUC2_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIUC2IUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIUC2IUC2_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIUC2IUC2_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIUC2IUC2_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIUC2IUC2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterIUC2IUC2

        Create a new object of the class itkConstantPadImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterIUC2IUC2 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterIUC2IUC2_swigregister(itkConstantPadImageFilterIUC2IUC2)
itkConstantPadImageFilterIUC2IUC2___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIUC2IUC2___New_orig__
itkConstantPadImageFilterIUC2IUC2_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIUC2IUC2_cast


def itkConstantPadImageFilterIUC3IUC3_New():
    return itkConstantPadImageFilterIUC3IUC3.New()

class itkConstantPadImageFilterIUC3IUC3(itk.itkPadImageFilterPython.itkPadImageFilterIUC3IUC3):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIUC3IUC3_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIUC3IUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIUC3IUC3_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIUC3IUC3_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIUC3IUC3_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIUC3IUC3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterIUC3IUC3

        Create a new object of the class itkConstantPadImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterIUC3IUC3 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterIUC3IUC3_swigregister(itkConstantPadImageFilterIUC3IUC3)
itkConstantPadImageFilterIUC3IUC3___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIUC3IUC3___New_orig__
itkConstantPadImageFilterIUC3IUC3_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIUC3IUC3_cast


def itkConstantPadImageFilterIUS2IUS2_New():
    return itkConstantPadImageFilterIUS2IUS2.New()

class itkConstantPadImageFilterIUS2IUS2(itk.itkPadImageFilterPython.itkPadImageFilterIUS2IUS2):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIUS2IUS2_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIUS2IUS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIUS2IUS2_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIUS2IUS2_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIUS2IUS2_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIUS2IUS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterIUS2IUS2

        Create a new object of the class itkConstantPadImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterIUS2IUS2 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterIUS2IUS2_swigregister(itkConstantPadImageFilterIUS2IUS2)
itkConstantPadImageFilterIUS2IUS2___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIUS2IUS2___New_orig__
itkConstantPadImageFilterIUS2IUS2_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIUS2IUS2_cast


def itkConstantPadImageFilterIUS3IUS3_New():
    return itkConstantPadImageFilterIUS3IUS3.New()

class itkConstantPadImageFilterIUS3IUS3(itk.itkPadImageFilterPython.itkPadImageFilterIUS3IUS3):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIUS3IUS3_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIUS3IUS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIUS3IUS3_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIUS3IUS3_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIUS3IUS3_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIUS3IUS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterIUS3IUS3

        Create a new object of the class itkConstantPadImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterIUS3IUS3 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterIUS3IUS3_swigregister(itkConstantPadImageFilterIUS3IUS3)
itkConstantPadImageFilterIUS3IUS3___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIUS3IUS3___New_orig__
itkConstantPadImageFilterIUS3IUS3_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIUS3IUS3_cast


def itkConstantPadImageFilterIVF22IVF22_New():
    return itkConstantPadImageFilterIVF22IVF22.New()

class itkConstantPadImageFilterIVF22IVF22(itk.itkPadImageFilterPython.itkPadImageFilterIVF22IVF22):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF22IVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF22IVF22_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF22IVF22_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF22IVF22_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF22IVF22_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF22IVF22_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF22IVF22_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF22IVF22_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterIVF22IVF22
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF22IVF22_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterIVF22IVF22

        Create a new object of the class itkConstantPadImageFilterIVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterIVF22IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterIVF22IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterIVF22IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterIVF22IVF22 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF22IVF22_swigregister(itkConstantPadImageFilterIVF22IVF22)
itkConstantPadImageFilterIVF22IVF22___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF22IVF22___New_orig__
itkConstantPadImageFilterIVF22IVF22_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF22IVF22_cast


def itkConstantPadImageFilterIVF23IVF23_New():
    return itkConstantPadImageFilterIVF23IVF23.New()

class itkConstantPadImageFilterIVF23IVF23(itk.itkPadImageFilterPython.itkPadImageFilterIVF23IVF23):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF23IVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF23IVF23_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF23IVF23_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF23IVF23_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF23IVF23_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF23IVF23_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF23IVF23_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF23IVF23_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterIVF23IVF23
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF23IVF23_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterIVF23IVF23

        Create a new object of the class itkConstantPadImageFilterIVF23IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterIVF23IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterIVF23IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterIVF23IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterIVF23IVF23 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF23IVF23_swigregister(itkConstantPadImageFilterIVF23IVF23)
itkConstantPadImageFilterIVF23IVF23___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF23IVF23___New_orig__
itkConstantPadImageFilterIVF23IVF23_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF23IVF23_cast


def itkConstantPadImageFilterIVF32IVF32_New():
    return itkConstantPadImageFilterIVF32IVF32.New()

class itkConstantPadImageFilterIVF32IVF32(itk.itkPadImageFilterPython.itkPadImageFilterIVF32IVF32):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF32IVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF32IVF32_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF32IVF32_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF32IVF32_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF32IVF32_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF32IVF32_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF32IVF32_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF32IVF32_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterIVF32IVF32
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF32IVF32_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterIVF32IVF32

        Create a new object of the class itkConstantPadImageFilterIVF32IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterIVF32IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterIVF32IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterIVF32IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterIVF32IVF32 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF32IVF32_swigregister(itkConstantPadImageFilterIVF32IVF32)
itkConstantPadImageFilterIVF32IVF32___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF32IVF32___New_orig__
itkConstantPadImageFilterIVF32IVF32_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF32IVF32_cast


def itkConstantPadImageFilterIVF33IVF33_New():
    return itkConstantPadImageFilterIVF33IVF33.New()

class itkConstantPadImageFilterIVF33IVF33(itk.itkPadImageFilterPython.itkPadImageFilterIVF33IVF33):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF33IVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF33IVF33_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF33IVF33_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF33IVF33_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF33IVF33_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF33IVF33_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF33IVF33_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF33IVF33_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterIVF33IVF33
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF33IVF33_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterIVF33IVF33

        Create a new object of the class itkConstantPadImageFilterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterIVF33IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterIVF33IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterIVF33IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterIVF33IVF33 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF33IVF33_swigregister(itkConstantPadImageFilterIVF33IVF33)
itkConstantPadImageFilterIVF33IVF33___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF33IVF33___New_orig__
itkConstantPadImageFilterIVF33IVF33_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF33IVF33_cast


def itkConstantPadImageFilterIVF42IVF42_New():
    return itkConstantPadImageFilterIVF42IVF42.New()

class itkConstantPadImageFilterIVF42IVF42(itk.itkPadImageFilterPython.itkPadImageFilterIVF42IVF42):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF42IVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF42IVF42_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF42IVF42_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF42IVF42_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF42IVF42_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF42IVF42_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF42IVF42_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF42IVF42_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterIVF42IVF42
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF42IVF42_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterIVF42IVF42

        Create a new object of the class itkConstantPadImageFilterIVF42IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterIVF42IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterIVF42IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterIVF42IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterIVF42IVF42 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF42IVF42_swigregister(itkConstantPadImageFilterIVF42IVF42)
itkConstantPadImageFilterIVF42IVF42___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF42IVF42___New_orig__
itkConstantPadImageFilterIVF42IVF42_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF42IVF42_cast


def itkConstantPadImageFilterIVF43IVF43_New():
    return itkConstantPadImageFilterIVF43IVF43.New()

class itkConstantPadImageFilterIVF43IVF43(itk.itkPadImageFilterPython.itkPadImageFilterIVF43IVF43):
    r"""


    Increase the image size by padding with a constant value.

    ConstantPadImageFilter changes the output image region. If the output
    image region is larger than the input image region, the extra pixels
    are filled in by a constant value. The output image region must be
    specified.

    Visual explanation of padding regions.  This filter is implemented as
    a multithreaded filter. It provides a DynamicThreadedGenerateData()
    method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter
    {Filtering/ImageGrid/PadAnImageWithAConstant,Pad An Image With A
    Constant} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF43IVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF43IVF43_Clone)
    SetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF43IVF43_SetConstant)
    GetConstant = _swig_new_instance_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF43IVF43_GetConstant)
    OutputEqualityComparableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF43IVF43_OutputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF43IVF43_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF43IVF43_SameDimensionCheck
    
    OutputOStreamWritableCheck = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF43IVF43_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkConstantPadImageFilterPython.delete_itkConstantPadImageFilterIVF43IVF43
    cast = _swig_new_static_method(_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF43IVF43_cast)

    def New(*args, **kargs):
        """New() -> itkConstantPadImageFilterIVF43IVF43

        Create a new object of the class itkConstantPadImageFilterIVF43IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstantPadImageFilterIVF43IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstantPadImageFilterIVF43IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstantPadImageFilterIVF43IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstantPadImageFilterIVF43IVF43 in _itkConstantPadImageFilterPython:
_itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF43IVF43_swigregister(itkConstantPadImageFilterIVF43IVF43)
itkConstantPadImageFilterIVF43IVF43___New_orig__ = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF43IVF43___New_orig__
itkConstantPadImageFilterIVF43IVF43_cast = _itkConstantPadImageFilterPython.itkConstantPadImageFilterIVF43IVF43_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def constant_pad_image_filter(*args, **kwargs):
    """Procedural interface for ConstantPadImageFilter"""
    import itk
    instance = itk.ConstantPadImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def constant_pad_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ConstantPadImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ConstantPadImageFilter.values()[0]
    else:
        filter_object = itk.ConstantPadImageFilter

    constant_pad_image_filter.__doc__ = filter_object.__doc__
    constant_pad_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    constant_pad_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ConstantPadImageFilter, itkTemplate.itkTemplate):
        constant_pad_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        constant_pad_image_filter.__doc__ += "\n"
        constant_pad_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        constant_pad_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



