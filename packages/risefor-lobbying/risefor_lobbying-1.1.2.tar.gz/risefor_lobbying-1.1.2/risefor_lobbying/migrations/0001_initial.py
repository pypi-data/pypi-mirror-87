# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-03-27 15:17
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import djangoldp.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('djangoldp_conversation', '0002_auto_20190917_1056'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=255, verbose_name="Nom de l'action")),
                ('objective', models.TextField(verbose_name='Objectif')),
                ('actiondate', models.DateField(blank=True, null=True, verbose_name="Date de l'action")),
                ('endactiondate', models.DateField(blank=True, null=True, verbose_name="Date de fin de l'action")),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Adresse')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ville')),
                ('postcode', models.CharField(blank=True, max_length=255, null=True, verbose_name='Code postal')),
                ('lat', models.DecimalField(blank=True, decimal_places=12, max_digits=15, null=True, verbose_name='Latitude')),
                ('lng', models.DecimalField(blank=True, decimal_places=12, max_digits=15, null=True, verbose_name='Longitude')),
                ('jugementmaj', models.URLField(blank=True, max_length=9999999, null=True, verbose_name='Module jugement majoritaire')),
                ('linkcollabtext', models.URLField(blank=True, max_length=9999999, null=True, verbose_name='Liens vers un texte collaboratif')),
                ('pressreleasetitle', models.TextField(blank=True, null=True, verbose_name='Titre du Communiqué de Presse')),
                ('pressreleasecontent', models.TextField(blank=True, null=True, verbose_name='Contenu du Communiqué de Presse')),
                ('electedofficialemailsubject', models.TextField(blank=True, null=True, verbose_name="Sujet de l'email à  envoyer aux élu.e.s")),
                ('electedofficialemailtext', models.TextField(blank=True, null=True, verbose_name="Texte de l'email à envoyer aux élu.e.s")),
                ('actioninfolink', models.URLField(blank=True, max_length=9999999, null=True, verbose_name="Plus d'informations sur l'action")),
                ('signuplink', models.URLField(blank=True, max_length=9999999, null=True, verbose_name="S'inscrire à l'action")),
                ('facebook', models.URLField(blank=True, max_length=9999999, null=True, verbose_name='Compte facebook à suivre')),
                ('instagram', models.URLField(blank=True, max_length=9999999, null=True, verbose_name='Compte instagram à suivre')),
                ('twitter', models.URLField(blank=True, max_length=9999999, null=True, verbose_name='Compte twitter à suivre')),
                ('actiongroups', models.ManyToManyField(blank=True, related_name='_actiongroup_actiongroups_+', to='risefor_lobbying.ActionGroup')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_groups', to=settings.AUTH_USER_MODEL)),
                ('conversation', models.ManyToManyField(blank=True, to='djangoldp_conversation.Conversation')),
            ],
            options={
                'ordering': ['actiondate'],
            },
        ),
        migrations.CreateModel(
            name='ActionGroupFrequency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('name', models.CharField(max_length=255, verbose_name='Nom')),
            ],
            options={
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'control'),
            },
        ),
        migrations.CreateModel(
            name='ContactEO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('citizen_firstname', models.CharField(max_length=255, verbose_name='Prénom')),
                ('citizen_lastname', models.CharField(max_length=255, verbose_name='Nom')),
                ('email_subject', models.CharField(max_length=255, verbose_name='Sujet')),
                ('email_content', models.TextField(verbose_name="Contenu de l'email")),
                ('email_citizen', models.EmailField(max_length=200, verbose_name='Email du citoyen.ne')),
                ('elected_email', models.TextField(max_length=400, verbose_name='Contacted elected official ')),
                ('related_action', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_text', to='risefor_lobbying.ActionGroup')),
            ],
        ),
        migrations.CreateModel(
            name='ContactReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('name', models.CharField(max_length=255, verbose_name='Raison du contact')),
            ],
            options={
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'control'),
            },
        ),
        migrations.CreateModel(
            name='ContactTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('subject', models.CharField(max_length=255, verbose_name="Sujet de l'email")),
                ('content', models.TextField(verbose_name="Contenu de l'email")),
                ('contact_email', models.EmailField(max_length=100, verbose_name='Adresse email du contact')),
                ('contact_reason', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risefor_lobbying.ContactReason', verbose_name='Raison du contact')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('name', models.CharField(max_length=255, verbose_name="Nom de l'évenement")),
                ('image', models.URLField(blank=True, null=True, verbose_name='Image')),
                ('date', models.DateField(blank=True, null=True, verbose_name="Date de l'évenement")),
                ('location', models.CharField(blank=True, max_length=255, null=True, verbose_name='Lieu')),
                ('organization', models.CharField(blank=True, max_length=255, null=True, verbose_name='Organisation')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('actiongroup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events', to='risefor_lobbying.ActionGroup')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='HelpInstall',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('orgname', models.CharField(max_length=255, verbose_name="Nom de l'organisation")),
                ('usage_tool', models.TextField(verbose_name="Cadre d'utilisation")),
                ('extra_msg', models.TextField(verbose_name='Message supplémentaire')),
                ('contact_email', models.EmailField(max_length=100, verbose_name='Adresse email du contact')),
            ],
        ),
        migrations.CreateModel(
            name='HelpLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('name', models.CharField(max_length=255, verbose_name="Niveau d'aide nécessaire")),
            ],
            options={
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'control'),
            },
        ),
        migrations.CreateModel(
            name='HelpOrgType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('name', models.CharField(max_length=255, verbose_name='Type de collectif')),
            ],
            options={
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'control'),
            },
        ),
        migrations.CreateModel(
            name='LoomioTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('title', models.CharField(max_length=255, verbose_name='Titre du sujet')),
                ('url', models.URLField(blank=True, null=True, verbose_name='Loomio')),
            ],
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=255, verbose_name="Nom de l'association")),
                ('tagline', models.CharField(blank=True, max_length=600, null=True, verbose_name='Tagline')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('site', models.URLField(blank=True, max_length=9999999, null=True, verbose_name='Site du collectif')),
                ('telephone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Numéro de téléphone')),
                ('contact_address', models.EmailField(blank=True, max_length=100, null=True, verbose_name='NGO Contact email')),
                ('logo', models.CharField(blank=True, default='/static/img/action_group_blank.png', max_length=1000, null=True, verbose_name='Logo du collectif')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Adresse')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ville')),
                ('postcode', models.CharField(blank=True, max_length=255, null=True, verbose_name='Code postal')),
                ('lat', models.DecimalField(blank=True, decimal_places=12, max_digits=15, null=True, verbose_name='Latitude')),
                ('lng', models.DecimalField(blank=True, decimal_places=12, max_digits=15, null=True, verbose_name='Longitude')),
                ('facebook', models.URLField(blank=True, max_length=9999999, null=True, verbose_name='Facebook Account')),
                ('twitter', models.URLField(blank=True, max_length=9999999, null=True, verbose_name='Twitter Account')),
                ('instagram', models.URLField(blank=True, max_length=9999999, null=True, verbose_name='Instagram Account')),
                ('linkedin', models.URLField(blank=True, max_length=9999999, null=True, verbose_name='LinkedIn Account')),
                ('author', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_ngo', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(blank=True, related_name='ngomembers', to=settings.AUTH_USER_MODEL)),
                ('org_actions', models.ManyToManyField(blank=True, related_name='org_actions', to='risefor_lobbying.ActionGroup')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrgType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('name', models.CharField(max_length=255, verbose_name="Type d'organisation")),
            ],
            options={
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'control'),
            },
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Numéro de téléphone')),
            ],
            options={
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'control'),
            },
        ),
        migrations.CreateModel(
            name='Representative',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('civility', models.CharField(blank=True, max_length=100, null=True, verbose_name='Civilité')),
                ('firstname', models.CharField(blank=True, max_length=100, null=True, verbose_name='Prénom')),
                ('lastname', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nom')),
                ('function', models.CharField(blank=True, max_length=255, null=True, verbose_name='Fonction')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Titre')),
                ('protocol_role', models.CharField(blank=True, max_length=100, null=True, verbose_name='Rôle protocolaire')),
                ('protocol_person', models.CharField(blank=True, max_length=100, null=True, verbose_name='Personne protocolaire')),
                ('political_party', models.CharField(blank=True, max_length=100, null=True, verbose_name='Parti politique')),
                ('election_department', models.CharField(blank=True, max_length=100, null=True, verbose_name="Département d'élection")),
                ('election_region', models.CharField(blank=True, max_length=100, null=True, verbose_name="Région d'élection")),
                ('phone_organization', models.CharField(blank=True, max_length=50, null=True, verbose_name='Tél. organisation')),
                ('email_direct', models.EmailField(blank=True, max_length=100, null=True, verbose_name='Email direct')),
                ('email_organization', models.EmailField(blank=True, max_length=100, null=True, verbose_name='Email Organisation')),
                ('address1', models.CharField(blank=True, max_length=255, null=True, verbose_name='Adresse 1')),
                ('address2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Adresse 2')),
                ('postal_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Code postal')),
                ('city', models.CharField(blank=True, max_length=150, null=True, verbose_name='Ville')),
                ('country', models.CharField(blank=True, max_length=150, null=True, verbose_name='Pays')),
                ('website', models.CharField(blank=True, max_length=150, null=True, verbose_name='Site web')),
                ('organization_type', models.CharField(blank=True, max_length=150, null=True, verbose_name="Type d'organisation")),
                ('organization_subtype', models.CharField(blank=True, max_length=150, null=True, verbose_name="Sous-type d'organisation")),
                ('photo', models.URLField(verbose_name='Photo')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('permanent_commission', models.CharField(blank=True, max_length=255, verbose_name='Commission permanente')),
                ('parliamentary_missions', models.TextField(blank=True, verbose_name='Missions parlementaires')),
                ('additional_functions', models.TextField(blank=True, verbose_name='Fonctions supplémentaires')),
                ('study_groups', models.TextField(blank=True, verbose_name="Groupes d'étude")),
                ('assistants', models.ManyToManyField(blank=True, to='risefor_lobbying.Representative')),
            ],
            options={
                'ordering': ['lastname'],
            },
        ),
        migrations.CreateModel(
            name='TextSupporters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('supporter_firstname', models.CharField(max_length=100, verbose_name='Prénom')),
                ('supporter_lastname', models.CharField(max_length=100, verbose_name='Nom')),
                ('supporter_collectif', models.CharField(blank=True, max_length=100, null=True, verbose_name='Organisation')),
                ('supported_action', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supported_group', to='risefor_lobbying.ActionGroup')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TextSupporters_Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='Supporter email')),
            ],
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('name', models.CharField(max_length=255, verbose_name='Nom')),
                ('photo', models.URLField(blank=True, max_length=9999999, null=True, verbose_name='Photo')),
            ],
            options={
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'control'),
            },
        ),
        migrations.AddField(
            model_name='phone',
            name='representative',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='direct_phones', to='risefor_lobbying.Representative', verbose_name='Élu'),
        ),
        migrations.AddField(
            model_name='organisation',
            name='organisation_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risefor_lobbying.OrgType', verbose_name="Type d'organisation"),
        ),
        migrations.AddField(
            model_name='helpinstall',
            name='helpLevel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risefor_lobbying.HelpLevel', verbose_name='Level of technical help needed'),
        ),
        migrations.AddField(
            model_name='helpinstall',
            name='orgType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risefor_lobbying.HelpOrgType', verbose_name='Type de collectif'),
        ),
        migrations.AddField(
            model_name='event',
            name='theme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risefor_lobbying.Theme', verbose_name="Type d'événement"),
        ),
        migrations.AddField(
            model_name='contacteo',
            name='targeted_official',
            field=models.ManyToManyField(related_name='linked_official', to='risefor_lobbying.Representative'),
        ),
        migrations.AddField(
            model_name='actiongroup',
            name='frequency',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='risefor_lobbying.ActionGroupFrequency', verbose_name='Fréquence'),
        ),
        migrations.AddField(
            model_name='actiongroup',
            name='loomios',
            field=models.ManyToManyField(blank=True, to='risefor_lobbying.LoomioTopic'),
        ),
        migrations.AddField(
            model_name='actiongroup',
            name='members',
            field=models.ManyToManyField(blank=True, related_name='actiongroups', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='actiongroup',
            name='representatives',
            field=models.ManyToManyField(blank=True, related_name='actiongroups', to='risefor_lobbying.Representative'),
        ),
        migrations.AddField(
            model_name='actiongroup',
            name='theme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risefor_lobbying.Theme', verbose_name="Type d'action"),
        ),
    ]
