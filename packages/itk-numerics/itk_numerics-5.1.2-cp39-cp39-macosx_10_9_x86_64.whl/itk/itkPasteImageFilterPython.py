# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageGridPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkPasteImageFilterPython
else:
    import _itkPasteImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkPasteImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkPasteImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterBPython
import itk.itkImageSourcePython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.pyBasePython
import itk.stdcomplexPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.itkRGBPixelPython
import itk.itkIndexPython
import itk.ITKCommonBasePython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterAPython

def itkPasteImageFilterID2_New():
    return itkPasteImageFilterID2.New()

class itkPasteImageFilterID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""


    Paste an image into another image.

    PasteImageFilter allows you to take a section of one image and paste
    into another image. The SetDestinationIndex() method prescribes where
    in the first input to start pasting data from the second input. The
    SetSourceRegion method prescribes the section of the second image to
    paste into the first. If the output requested region does not include
    the SourceRegion after it has been repositioned to DestinationIndex,
    then the output will just be a copy of the input.

    The two inputs and output image will have the same pixel type.

    example{Filtering/ImageGrid/PasteImageIntoAnotherOne,Paste Image Into
    Another One}
    example{Filtering/ImageGrid/RunImageFilterOnRegionOfImage,Run Image
    Filter On Region Of Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterID2___New_orig__)
    Clone = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_Clone)
    SetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_SetDestinationIndex)
    GetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_GetDestinationIndex)
    SetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_SetSourceRegion)
    GetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_GetSourceRegion)
    SetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_SetDestinationImage)
    GetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_GetDestinationImage)
    SetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_GetSourceImage)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_GenerateInputRequestedRegion)
    VerifyInputInformation = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_VerifyInputInformation)
    __swig_destroy__ = _itkPasteImageFilterPython.delete_itkPasteImageFilterID2
    cast = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_cast)

    def New(*args, **kargs):
        """New() -> itkPasteImageFilterID2

        Create a new object of the class itkPasteImageFilterID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPasteImageFilterID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPasteImageFilterID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPasteImageFilterID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPasteImageFilterID2 in _itkPasteImageFilterPython:
_itkPasteImageFilterPython.itkPasteImageFilterID2_swigregister(itkPasteImageFilterID2)
itkPasteImageFilterID2___New_orig__ = _itkPasteImageFilterPython.itkPasteImageFilterID2___New_orig__
itkPasteImageFilterID2_cast = _itkPasteImageFilterPython.itkPasteImageFilterID2_cast


def itkPasteImageFilterID3_New():
    return itkPasteImageFilterID3.New()

class itkPasteImageFilterID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""


    Paste an image into another image.

    PasteImageFilter allows you to take a section of one image and paste
    into another image. The SetDestinationIndex() method prescribes where
    in the first input to start pasting data from the second input. The
    SetSourceRegion method prescribes the section of the second image to
    paste into the first. If the output requested region does not include
    the SourceRegion after it has been repositioned to DestinationIndex,
    then the output will just be a copy of the input.

    The two inputs and output image will have the same pixel type.

    example{Filtering/ImageGrid/PasteImageIntoAnotherOne,Paste Image Into
    Another One}
    example{Filtering/ImageGrid/RunImageFilterOnRegionOfImage,Run Image
    Filter On Region Of Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterID3___New_orig__)
    Clone = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_Clone)
    SetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_SetDestinationIndex)
    GetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_GetDestinationIndex)
    SetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_SetSourceRegion)
    GetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_GetSourceRegion)
    SetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_SetDestinationImage)
    GetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_GetDestinationImage)
    SetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_GetSourceImage)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_GenerateInputRequestedRegion)
    VerifyInputInformation = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_VerifyInputInformation)
    __swig_destroy__ = _itkPasteImageFilterPython.delete_itkPasteImageFilterID3
    cast = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_cast)

    def New(*args, **kargs):
        """New() -> itkPasteImageFilterID3

        Create a new object of the class itkPasteImageFilterID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPasteImageFilterID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPasteImageFilterID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPasteImageFilterID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPasteImageFilterID3 in _itkPasteImageFilterPython:
_itkPasteImageFilterPython.itkPasteImageFilterID3_swigregister(itkPasteImageFilterID3)
itkPasteImageFilterID3___New_orig__ = _itkPasteImageFilterPython.itkPasteImageFilterID3___New_orig__
itkPasteImageFilterID3_cast = _itkPasteImageFilterPython.itkPasteImageFilterID3_cast


def itkPasteImageFilterIF2_New():
    return itkPasteImageFilterIF2.New()

class itkPasteImageFilterIF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""


    Paste an image into another image.

    PasteImageFilter allows you to take a section of one image and paste
    into another image. The SetDestinationIndex() method prescribes where
    in the first input to start pasting data from the second input. The
    SetSourceRegion method prescribes the section of the second image to
    paste into the first. If the output requested region does not include
    the SourceRegion after it has been repositioned to DestinationIndex,
    then the output will just be a copy of the input.

    The two inputs and output image will have the same pixel type.

    example{Filtering/ImageGrid/PasteImageIntoAnotherOne,Paste Image Into
    Another One}
    example{Filtering/ImageGrid/RunImageFilterOnRegionOfImage,Run Image
    Filter On Region Of Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_Clone)
    SetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_SetDestinationIndex)
    GetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_GetDestinationIndex)
    SetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_SetSourceRegion)
    GetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_GetSourceRegion)
    SetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_SetDestinationImage)
    GetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_GetDestinationImage)
    SetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_GetSourceImage)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_GenerateInputRequestedRegion)
    VerifyInputInformation = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_VerifyInputInformation)
    __swig_destroy__ = _itkPasteImageFilterPython.delete_itkPasteImageFilterIF2
    cast = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_cast)

    def New(*args, **kargs):
        """New() -> itkPasteImageFilterIF2

        Create a new object of the class itkPasteImageFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPasteImageFilterIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPasteImageFilterIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPasteImageFilterIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPasteImageFilterIF2 in _itkPasteImageFilterPython:
_itkPasteImageFilterPython.itkPasteImageFilterIF2_swigregister(itkPasteImageFilterIF2)
itkPasteImageFilterIF2___New_orig__ = _itkPasteImageFilterPython.itkPasteImageFilterIF2___New_orig__
itkPasteImageFilterIF2_cast = _itkPasteImageFilterPython.itkPasteImageFilterIF2_cast


def itkPasteImageFilterIF3_New():
    return itkPasteImageFilterIF3.New()

class itkPasteImageFilterIF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""


    Paste an image into another image.

    PasteImageFilter allows you to take a section of one image and paste
    into another image. The SetDestinationIndex() method prescribes where
    in the first input to start pasting data from the second input. The
    SetSourceRegion method prescribes the section of the second image to
    paste into the first. If the output requested region does not include
    the SourceRegion after it has been repositioned to DestinationIndex,
    then the output will just be a copy of the input.

    The two inputs and output image will have the same pixel type.

    example{Filtering/ImageGrid/PasteImageIntoAnotherOne,Paste Image Into
    Another One}
    example{Filtering/ImageGrid/RunImageFilterOnRegionOfImage,Run Image
    Filter On Region Of Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_Clone)
    SetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_SetDestinationIndex)
    GetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_GetDestinationIndex)
    SetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_SetSourceRegion)
    GetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_GetSourceRegion)
    SetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_SetDestinationImage)
    GetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_GetDestinationImage)
    SetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_GetSourceImage)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_GenerateInputRequestedRegion)
    VerifyInputInformation = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_VerifyInputInformation)
    __swig_destroy__ = _itkPasteImageFilterPython.delete_itkPasteImageFilterIF3
    cast = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_cast)

    def New(*args, **kargs):
        """New() -> itkPasteImageFilterIF3

        Create a new object of the class itkPasteImageFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPasteImageFilterIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPasteImageFilterIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPasteImageFilterIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPasteImageFilterIF3 in _itkPasteImageFilterPython:
_itkPasteImageFilterPython.itkPasteImageFilterIF3_swigregister(itkPasteImageFilterIF3)
itkPasteImageFilterIF3___New_orig__ = _itkPasteImageFilterPython.itkPasteImageFilterIF3___New_orig__
itkPasteImageFilterIF3_cast = _itkPasteImageFilterPython.itkPasteImageFilterIF3_cast


def itkPasteImageFilterISS2_New():
    return itkPasteImageFilterISS2.New()

class itkPasteImageFilterISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    r"""


    Paste an image into another image.

    PasteImageFilter allows you to take a section of one image and paste
    into another image. The SetDestinationIndex() method prescribes where
    in the first input to start pasting data from the second input. The
    SetSourceRegion method prescribes the section of the second image to
    paste into the first. If the output requested region does not include
    the SourceRegion after it has been repositioned to DestinationIndex,
    then the output will just be a copy of the input.

    The two inputs and output image will have the same pixel type.

    example{Filtering/ImageGrid/PasteImageIntoAnotherOne,Paste Image Into
    Another One}
    example{Filtering/ImageGrid/RunImageFilterOnRegionOfImage,Run Image
    Filter On Region Of Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_Clone)
    SetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_SetDestinationIndex)
    GetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_GetDestinationIndex)
    SetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_SetSourceRegion)
    GetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_GetSourceRegion)
    SetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_SetDestinationImage)
    GetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_GetDestinationImage)
    SetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_GetSourceImage)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_GenerateInputRequestedRegion)
    VerifyInputInformation = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_VerifyInputInformation)
    __swig_destroy__ = _itkPasteImageFilterPython.delete_itkPasteImageFilterISS2
    cast = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_cast)

    def New(*args, **kargs):
        """New() -> itkPasteImageFilterISS2

        Create a new object of the class itkPasteImageFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPasteImageFilterISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPasteImageFilterISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPasteImageFilterISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPasteImageFilterISS2 in _itkPasteImageFilterPython:
_itkPasteImageFilterPython.itkPasteImageFilterISS2_swigregister(itkPasteImageFilterISS2)
itkPasteImageFilterISS2___New_orig__ = _itkPasteImageFilterPython.itkPasteImageFilterISS2___New_orig__
itkPasteImageFilterISS2_cast = _itkPasteImageFilterPython.itkPasteImageFilterISS2_cast


def itkPasteImageFilterISS3_New():
    return itkPasteImageFilterISS3.New()

class itkPasteImageFilterISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    r"""


    Paste an image into another image.

    PasteImageFilter allows you to take a section of one image and paste
    into another image. The SetDestinationIndex() method prescribes where
    in the first input to start pasting data from the second input. The
    SetSourceRegion method prescribes the section of the second image to
    paste into the first. If the output requested region does not include
    the SourceRegion after it has been repositioned to DestinationIndex,
    then the output will just be a copy of the input.

    The two inputs and output image will have the same pixel type.

    example{Filtering/ImageGrid/PasteImageIntoAnotherOne,Paste Image Into
    Another One}
    example{Filtering/ImageGrid/RunImageFilterOnRegionOfImage,Run Image
    Filter On Region Of Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_Clone)
    SetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_SetDestinationIndex)
    GetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_GetDestinationIndex)
    SetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_SetSourceRegion)
    GetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_GetSourceRegion)
    SetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_SetDestinationImage)
    GetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_GetDestinationImage)
    SetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_GetSourceImage)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_GenerateInputRequestedRegion)
    VerifyInputInformation = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_VerifyInputInformation)
    __swig_destroy__ = _itkPasteImageFilterPython.delete_itkPasteImageFilterISS3
    cast = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_cast)

    def New(*args, **kargs):
        """New() -> itkPasteImageFilterISS3

        Create a new object of the class itkPasteImageFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPasteImageFilterISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPasteImageFilterISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPasteImageFilterISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPasteImageFilterISS3 in _itkPasteImageFilterPython:
_itkPasteImageFilterPython.itkPasteImageFilterISS3_swigregister(itkPasteImageFilterISS3)
itkPasteImageFilterISS3___New_orig__ = _itkPasteImageFilterPython.itkPasteImageFilterISS3___New_orig__
itkPasteImageFilterISS3_cast = _itkPasteImageFilterPython.itkPasteImageFilterISS3_cast


def itkPasteImageFilterIUC2_New():
    return itkPasteImageFilterIUC2.New()

class itkPasteImageFilterIUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    r"""


    Paste an image into another image.

    PasteImageFilter allows you to take a section of one image and paste
    into another image. The SetDestinationIndex() method prescribes where
    in the first input to start pasting data from the second input. The
    SetSourceRegion method prescribes the section of the second image to
    paste into the first. If the output requested region does not include
    the SourceRegion after it has been repositioned to DestinationIndex,
    then the output will just be a copy of the input.

    The two inputs and output image will have the same pixel type.

    example{Filtering/ImageGrid/PasteImageIntoAnotherOne,Paste Image Into
    Another One}
    example{Filtering/ImageGrid/RunImageFilterOnRegionOfImage,Run Image
    Filter On Region Of Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_Clone)
    SetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_SetDestinationIndex)
    GetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_GetDestinationIndex)
    SetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_SetSourceRegion)
    GetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_GetSourceRegion)
    SetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_SetDestinationImage)
    GetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_GetDestinationImage)
    SetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_GetSourceImage)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_GenerateInputRequestedRegion)
    VerifyInputInformation = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_VerifyInputInformation)
    __swig_destroy__ = _itkPasteImageFilterPython.delete_itkPasteImageFilterIUC2
    cast = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_cast)

    def New(*args, **kargs):
        """New() -> itkPasteImageFilterIUC2

        Create a new object of the class itkPasteImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPasteImageFilterIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPasteImageFilterIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPasteImageFilterIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPasteImageFilterIUC2 in _itkPasteImageFilterPython:
_itkPasteImageFilterPython.itkPasteImageFilterIUC2_swigregister(itkPasteImageFilterIUC2)
itkPasteImageFilterIUC2___New_orig__ = _itkPasteImageFilterPython.itkPasteImageFilterIUC2___New_orig__
itkPasteImageFilterIUC2_cast = _itkPasteImageFilterPython.itkPasteImageFilterIUC2_cast


def itkPasteImageFilterIUC3_New():
    return itkPasteImageFilterIUC3.New()

class itkPasteImageFilterIUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    r"""


    Paste an image into another image.

    PasteImageFilter allows you to take a section of one image and paste
    into another image. The SetDestinationIndex() method prescribes where
    in the first input to start pasting data from the second input. The
    SetSourceRegion method prescribes the section of the second image to
    paste into the first. If the output requested region does not include
    the SourceRegion after it has been repositioned to DestinationIndex,
    then the output will just be a copy of the input.

    The two inputs and output image will have the same pixel type.

    example{Filtering/ImageGrid/PasteImageIntoAnotherOne,Paste Image Into
    Another One}
    example{Filtering/ImageGrid/RunImageFilterOnRegionOfImage,Run Image
    Filter On Region Of Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_Clone)
    SetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_SetDestinationIndex)
    GetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_GetDestinationIndex)
    SetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_SetSourceRegion)
    GetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_GetSourceRegion)
    SetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_SetDestinationImage)
    GetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_GetDestinationImage)
    SetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_GetSourceImage)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_GenerateInputRequestedRegion)
    VerifyInputInformation = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_VerifyInputInformation)
    __swig_destroy__ = _itkPasteImageFilterPython.delete_itkPasteImageFilterIUC3
    cast = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkPasteImageFilterIUC3

        Create a new object of the class itkPasteImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPasteImageFilterIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPasteImageFilterIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPasteImageFilterIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPasteImageFilterIUC3 in _itkPasteImageFilterPython:
_itkPasteImageFilterPython.itkPasteImageFilterIUC3_swigregister(itkPasteImageFilterIUC3)
itkPasteImageFilterIUC3___New_orig__ = _itkPasteImageFilterPython.itkPasteImageFilterIUC3___New_orig__
itkPasteImageFilterIUC3_cast = _itkPasteImageFilterPython.itkPasteImageFilterIUC3_cast


def itkPasteImageFilterIUS2_New():
    return itkPasteImageFilterIUS2.New()

class itkPasteImageFilterIUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""


    Paste an image into another image.

    PasteImageFilter allows you to take a section of one image and paste
    into another image. The SetDestinationIndex() method prescribes where
    in the first input to start pasting data from the second input. The
    SetSourceRegion method prescribes the section of the second image to
    paste into the first. If the output requested region does not include
    the SourceRegion after it has been repositioned to DestinationIndex,
    then the output will just be a copy of the input.

    The two inputs and output image will have the same pixel type.

    example{Filtering/ImageGrid/PasteImageIntoAnotherOne,Paste Image Into
    Another One}
    example{Filtering/ImageGrid/RunImageFilterOnRegionOfImage,Run Image
    Filter On Region Of Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_Clone)
    SetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_SetDestinationIndex)
    GetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_GetDestinationIndex)
    SetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_SetSourceRegion)
    GetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_GetSourceRegion)
    SetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_SetDestinationImage)
    GetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_GetDestinationImage)
    SetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_GetSourceImage)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_GenerateInputRequestedRegion)
    VerifyInputInformation = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_VerifyInputInformation)
    __swig_destroy__ = _itkPasteImageFilterPython.delete_itkPasteImageFilterIUS2
    cast = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_cast)

    def New(*args, **kargs):
        """New() -> itkPasteImageFilterIUS2

        Create a new object of the class itkPasteImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPasteImageFilterIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPasteImageFilterIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPasteImageFilterIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPasteImageFilterIUS2 in _itkPasteImageFilterPython:
_itkPasteImageFilterPython.itkPasteImageFilterIUS2_swigregister(itkPasteImageFilterIUS2)
itkPasteImageFilterIUS2___New_orig__ = _itkPasteImageFilterPython.itkPasteImageFilterIUS2___New_orig__
itkPasteImageFilterIUS2_cast = _itkPasteImageFilterPython.itkPasteImageFilterIUS2_cast


def itkPasteImageFilterIUS3_New():
    return itkPasteImageFilterIUS3.New()

class itkPasteImageFilterIUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""


    Paste an image into another image.

    PasteImageFilter allows you to take a section of one image and paste
    into another image. The SetDestinationIndex() method prescribes where
    in the first input to start pasting data from the second input. The
    SetSourceRegion method prescribes the section of the second image to
    paste into the first. If the output requested region does not include
    the SourceRegion after it has been repositioned to DestinationIndex,
    then the output will just be a copy of the input.

    The two inputs and output image will have the same pixel type.

    example{Filtering/ImageGrid/PasteImageIntoAnotherOne,Paste Image Into
    Another One}
    example{Filtering/ImageGrid/RunImageFilterOnRegionOfImage,Run Image
    Filter On Region Of Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_Clone)
    SetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_SetDestinationIndex)
    GetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_GetDestinationIndex)
    SetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_SetSourceRegion)
    GetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_GetSourceRegion)
    SetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_SetDestinationImage)
    GetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_GetDestinationImage)
    SetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_GetSourceImage)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_GenerateInputRequestedRegion)
    VerifyInputInformation = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_VerifyInputInformation)
    __swig_destroy__ = _itkPasteImageFilterPython.delete_itkPasteImageFilterIUS3
    cast = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_cast)

    def New(*args, **kargs):
        """New() -> itkPasteImageFilterIUS3

        Create a new object of the class itkPasteImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPasteImageFilterIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPasteImageFilterIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPasteImageFilterIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPasteImageFilterIUS3 in _itkPasteImageFilterPython:
_itkPasteImageFilterPython.itkPasteImageFilterIUS3_swigregister(itkPasteImageFilterIUS3)
itkPasteImageFilterIUS3___New_orig__ = _itkPasteImageFilterPython.itkPasteImageFilterIUS3___New_orig__
itkPasteImageFilterIUS3_cast = _itkPasteImageFilterPython.itkPasteImageFilterIUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def paste_image_filter(*args, **kwargs):
    """Procedural interface for PasteImageFilter"""
    import itk
    instance = itk.PasteImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def paste_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.PasteImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.PasteImageFilter.values()[0]
    else:
        filter_object = itk.PasteImageFilter

    paste_image_filter.__doc__ = filter_object.__doc__
    paste_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    paste_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.PasteImageFilter, itkTemplate.itkTemplate):
        paste_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        paste_image_filter.__doc__ += "\n"
        paste_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        paste_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



