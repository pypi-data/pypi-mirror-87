# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageIntensityPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkVectorMagnitudeImageFilterPython
else:
    import _itkVectorMagnitudeImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkVectorMagnitudeImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkVectorMagnitudeImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkInPlaceImageFilterBPython
import itk.itkImageToImageFilterBPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkFixedArrayPython
import itk.itkPointPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkRGBPixelPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython

def itkVectorMagnitudeImageFilterICVF22ID2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF22ID2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF22ID2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22ID2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF22ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ID2_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF22ID2_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF22ID2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF22ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF22ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF22ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF22ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF22ID2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ID2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF22ID2_Superclass)
itkVectorMagnitudeImageFilterICVF22ID2_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ID2_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF22ID2_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ID2_Superclass_cast


def itkVectorMagnitudeImageFilterICVF22IF2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF22IF2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF22IF2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IF2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF22IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IF2_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF22IF2_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF22IF2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF22IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF22IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF22IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF22IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF22IF2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IF2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF22IF2_Superclass)
itkVectorMagnitudeImageFilterICVF22IF2_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IF2_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF22IF2_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IF2_Superclass_cast


def itkVectorMagnitudeImageFilterICVF22ISS2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF22ISS2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF22ISS2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22ISS2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF22ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ISS2_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF22ISS2_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF22ISS2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF22ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF22ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF22ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF22ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF22ISS2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ISS2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF22ISS2_Superclass)
itkVectorMagnitudeImageFilterICVF22ISS2_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ISS2_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF22ISS2_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ISS2_Superclass_cast


def itkVectorMagnitudeImageFilterICVF22IUC2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF22IUC2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF22IUC2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUC2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF22IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUC2_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF22IUC2_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF22IUC2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF22IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF22IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF22IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF22IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF22IUC2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUC2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF22IUC2_Superclass)
itkVectorMagnitudeImageFilterICVF22IUC2_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUC2_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF22IUC2_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUC2_Superclass_cast


def itkVectorMagnitudeImageFilterICVF22IUS2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF22IUS2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF22IUS2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUS2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF22IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUS2_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF22IUS2_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF22IUS2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF22IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF22IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF22IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF22IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF22IUS2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUS2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF22IUS2_Superclass)
itkVectorMagnitudeImageFilterICVF22IUS2_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUS2_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF22IUS2_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUS2_Superclass_cast


def itkVectorMagnitudeImageFilterICVF23ID3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF23ID3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF23ID3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF23ID3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF23ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ID3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ID3_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF23ID3_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ID3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF23ID3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF23ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF23ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF23ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF23ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF23ID3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ID3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF23ID3_Superclass)
itkVectorMagnitudeImageFilterICVF23ID3_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ID3_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF23ID3_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ID3_Superclass_cast


def itkVectorMagnitudeImageFilterICVF23IF3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF23IF3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF23IF3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF23IF3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF23IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IF3_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF23IF3_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF23IF3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF23IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF23IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF23IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF23IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF23IF3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IF3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF23IF3_Superclass)
itkVectorMagnitudeImageFilterICVF23IF3_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IF3_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF23IF3_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IF3_Superclass_cast


def itkVectorMagnitudeImageFilterICVF23ISS3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF23ISS3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF23ISS3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF23ISS3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF23ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ISS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ISS3_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF23ISS3_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ISS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF23ISS3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF23ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF23ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF23ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF23ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF23ISS3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ISS3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF23ISS3_Superclass)
itkVectorMagnitudeImageFilterICVF23ISS3_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ISS3_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF23ISS3_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ISS3_Superclass_cast


def itkVectorMagnitudeImageFilterICVF23IUC3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF23IUC3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF23IUC3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF23IUC3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF23IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUC3_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF23IUC3_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF23IUC3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF23IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF23IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF23IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF23IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF23IUC3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUC3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF23IUC3_Superclass)
itkVectorMagnitudeImageFilterICVF23IUC3_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUC3_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF23IUC3_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUC3_Superclass_cast


def itkVectorMagnitudeImageFilterICVF23IUS3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF23IUS3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF23IUS3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF23IUS3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF23IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUS3_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF23IUS3_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF23IUS3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF23IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF23IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF23IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF23IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF23IUS3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUS3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF23IUS3_Superclass)
itkVectorMagnitudeImageFilterICVF23IUS3_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUS3_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF23IUS3_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUS3_Superclass_cast


def itkVectorMagnitudeImageFilterICVF32ID2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF32ID2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF32ID2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF32ID2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF32ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ID2_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF32ID2_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF32ID2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF32ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF32ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF32ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF32ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF32ID2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ID2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF32ID2_Superclass)
itkVectorMagnitudeImageFilterICVF32ID2_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ID2_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF32ID2_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ID2_Superclass_cast


def itkVectorMagnitudeImageFilterICVF32IF2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF32IF2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF32IF2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF32IF2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF32IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IF2_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF32IF2_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF32IF2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF32IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF32IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF32IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF32IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF32IF2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IF2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF32IF2_Superclass)
itkVectorMagnitudeImageFilterICVF32IF2_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IF2_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF32IF2_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IF2_Superclass_cast


def itkVectorMagnitudeImageFilterICVF32ISS2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF32ISS2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF32ISS2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF32ISS2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF32ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ISS2_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF32ISS2_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF32ISS2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF32ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF32ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF32ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF32ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF32ISS2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ISS2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF32ISS2_Superclass)
itkVectorMagnitudeImageFilterICVF32ISS2_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ISS2_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF32ISS2_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ISS2_Superclass_cast


def itkVectorMagnitudeImageFilterICVF32IUC2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF32IUC2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF32IUC2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF32IUC2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF32IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUC2_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF32IUC2_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF32IUC2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF32IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF32IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF32IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF32IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF32IUC2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUC2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF32IUC2_Superclass)
itkVectorMagnitudeImageFilterICVF32IUC2_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUC2_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF32IUC2_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUC2_Superclass_cast


def itkVectorMagnitudeImageFilterICVF32IUS2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF32IUS2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF32IUS2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF32IUS2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF32IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUS2_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF32IUS2_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF32IUS2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF32IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF32IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF32IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF32IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF32IUS2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUS2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF32IUS2_Superclass)
itkVectorMagnitudeImageFilterICVF32IUS2_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUS2_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF32IUS2_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUS2_Superclass_cast


def itkVectorMagnitudeImageFilterICVF33ID3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF33ID3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF33ID3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33ID3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF33ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ID3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ID3_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF33ID3_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ID3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF33ID3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF33ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF33ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF33ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF33ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF33ID3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ID3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF33ID3_Superclass)
itkVectorMagnitudeImageFilterICVF33ID3_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ID3_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF33ID3_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ID3_Superclass_cast


def itkVectorMagnitudeImageFilterICVF33IF3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF33IF3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF33IF3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IF3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF33IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IF3_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF33IF3_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF33IF3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF33IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF33IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF33IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF33IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF33IF3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IF3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF33IF3_Superclass)
itkVectorMagnitudeImageFilterICVF33IF3_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IF3_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF33IF3_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IF3_Superclass_cast


def itkVectorMagnitudeImageFilterICVF33ISS3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF33ISS3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF33ISS3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33ISS3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF33ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ISS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ISS3_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF33ISS3_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ISS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF33ISS3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF33ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF33ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF33ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF33ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF33ISS3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ISS3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF33ISS3_Superclass)
itkVectorMagnitudeImageFilterICVF33ISS3_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ISS3_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF33ISS3_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ISS3_Superclass_cast


def itkVectorMagnitudeImageFilterICVF33IUC3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF33IUC3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF33IUC3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUC3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF33IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUC3_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF33IUC3_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF33IUC3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF33IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF33IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF33IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF33IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF33IUC3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUC3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF33IUC3_Superclass)
itkVectorMagnitudeImageFilterICVF33IUC3_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUC3_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF33IUC3_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUC3_Superclass_cast


def itkVectorMagnitudeImageFilterICVF33IUS3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF33IUS3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF33IUS3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUS3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF33IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUS3_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF33IUS3_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF33IUS3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF33IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF33IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF33IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF33IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF33IUS3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUS3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF33IUS3_Superclass)
itkVectorMagnitudeImageFilterICVF33IUS3_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUS3_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF33IUS3_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUS3_Superclass_cast


def itkVectorMagnitudeImageFilterICVF42ID2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF42ID2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF42ID2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF42ID2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF42ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ID2_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF42ID2_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF42ID2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF42ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF42ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF42ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF42ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF42ID2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ID2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF42ID2_Superclass)
itkVectorMagnitudeImageFilterICVF42ID2_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ID2_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF42ID2_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ID2_Superclass_cast


def itkVectorMagnitudeImageFilterICVF42IF2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF42IF2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF42IF2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF42IF2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF42IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IF2_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF42IF2_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF42IF2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF42IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF42IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF42IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF42IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF42IF2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IF2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF42IF2_Superclass)
itkVectorMagnitudeImageFilterICVF42IF2_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IF2_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF42IF2_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IF2_Superclass_cast


def itkVectorMagnitudeImageFilterICVF42ISS2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF42ISS2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF42ISS2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF42ISS2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF42ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ISS2_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF42ISS2_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF42ISS2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF42ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF42ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF42ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF42ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF42ISS2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ISS2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF42ISS2_Superclass)
itkVectorMagnitudeImageFilterICVF42ISS2_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ISS2_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF42ISS2_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ISS2_Superclass_cast


def itkVectorMagnitudeImageFilterICVF42IUC2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF42IUC2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF42IUC2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF42IUC2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF42IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUC2_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF42IUC2_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF42IUC2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF42IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF42IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF42IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF42IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF42IUC2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUC2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF42IUC2_Superclass)
itkVectorMagnitudeImageFilterICVF42IUC2_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUC2_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF42IUC2_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUC2_Superclass_cast


def itkVectorMagnitudeImageFilterICVF42IUS2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF42IUS2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF42IUS2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF42IUS2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF42IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUS2_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF42IUS2_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF42IUS2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF42IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF42IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF42IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF42IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF42IUS2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUS2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF42IUS2_Superclass)
itkVectorMagnitudeImageFilterICVF42IUS2_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUS2_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF42IUS2_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUS2_Superclass_cast


def itkVectorMagnitudeImageFilterICVF43ID3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF43ID3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF43ID3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF43ID3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF43ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ID3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ID3_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF43ID3_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ID3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF43ID3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF43ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF43ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF43ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF43ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF43ID3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ID3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF43ID3_Superclass)
itkVectorMagnitudeImageFilterICVF43ID3_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ID3_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF43ID3_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ID3_Superclass_cast


def itkVectorMagnitudeImageFilterICVF43IF3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF43IF3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF43IF3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF43IF3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF43IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IF3_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF43IF3_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF43IF3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF43IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF43IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF43IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF43IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF43IF3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IF3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF43IF3_Superclass)
itkVectorMagnitudeImageFilterICVF43IF3_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IF3_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF43IF3_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IF3_Superclass_cast


def itkVectorMagnitudeImageFilterICVF43ISS3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF43ISS3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF43ISS3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF43ISS3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF43ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ISS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ISS3_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF43ISS3_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ISS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF43ISS3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF43ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF43ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF43ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF43ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF43ISS3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ISS3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF43ISS3_Superclass)
itkVectorMagnitudeImageFilterICVF43ISS3_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ISS3_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF43ISS3_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ISS3_Superclass_cast


def itkVectorMagnitudeImageFilterICVF43IUC3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF43IUC3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF43IUC3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF43IUC3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF43IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUC3_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF43IUC3_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF43IUC3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF43IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF43IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF43IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF43IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF43IUC3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUC3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF43IUC3_Superclass)
itkVectorMagnitudeImageFilterICVF43IUC3_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUC3_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF43IUC3_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUC3_Superclass_cast


def itkVectorMagnitudeImageFilterICVF43IUS3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF43IUS3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF43IUS3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF43IUS3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF43IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUS3_Superclass_Clone)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF43IUS3_Superclass
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF43IUS3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF43IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF43IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF43IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF43IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF43IUS3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUS3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF43IUS3_Superclass)
itkVectorMagnitudeImageFilterICVF43IUS3_Superclass___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUS3_Superclass___New_orig__
itkVectorMagnitudeImageFilterICVF43IUS3_Superclass_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUS3_Superclass_cast


def itkVectorMagnitudeImageFilterICVF22ID2_New():
    return itkVectorMagnitudeImageFilterICVF22ID2.New()

class itkVectorMagnitudeImageFilterICVF22ID2(itkVectorMagnitudeImageFilterICVF22ID2_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ID2_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF22ID2
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ID2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF22ID2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF22ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF22ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF22ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF22ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF22ID2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ID2_swigregister(itkVectorMagnitudeImageFilterICVF22ID2)
itkVectorMagnitudeImageFilterICVF22ID2___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ID2___New_orig__
itkVectorMagnitudeImageFilterICVF22ID2_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ID2_cast


def itkVectorMagnitudeImageFilterICVF22IF2_New():
    return itkVectorMagnitudeImageFilterICVF22IF2.New()

class itkVectorMagnitudeImageFilterICVF22IF2(itkVectorMagnitudeImageFilterICVF22IF2_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IF2_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF22IF2
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IF2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF22IF2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF22IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF22IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF22IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF22IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF22IF2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IF2_swigregister(itkVectorMagnitudeImageFilterICVF22IF2)
itkVectorMagnitudeImageFilterICVF22IF2___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IF2___New_orig__
itkVectorMagnitudeImageFilterICVF22IF2_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IF2_cast


def itkVectorMagnitudeImageFilterICVF22ISS2_New():
    return itkVectorMagnitudeImageFilterICVF22ISS2.New()

class itkVectorMagnitudeImageFilterICVF22ISS2(itkVectorMagnitudeImageFilterICVF22ISS2_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ISS2_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF22ISS2
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF22ISS2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF22ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF22ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF22ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF22ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF22ISS2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ISS2_swigregister(itkVectorMagnitudeImageFilterICVF22ISS2)
itkVectorMagnitudeImageFilterICVF22ISS2___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ISS2___New_orig__
itkVectorMagnitudeImageFilterICVF22ISS2_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ISS2_cast


def itkVectorMagnitudeImageFilterICVF22IUC2_New():
    return itkVectorMagnitudeImageFilterICVF22IUC2.New()

class itkVectorMagnitudeImageFilterICVF22IUC2(itkVectorMagnitudeImageFilterICVF22IUC2_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUC2_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF22IUC2
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF22IUC2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF22IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF22IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF22IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF22IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF22IUC2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUC2_swigregister(itkVectorMagnitudeImageFilterICVF22IUC2)
itkVectorMagnitudeImageFilterICVF22IUC2___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUC2___New_orig__
itkVectorMagnitudeImageFilterICVF22IUC2_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUC2_cast


def itkVectorMagnitudeImageFilterICVF22IUS2_New():
    return itkVectorMagnitudeImageFilterICVF22IUS2.New()

class itkVectorMagnitudeImageFilterICVF22IUS2(itkVectorMagnitudeImageFilterICVF22IUS2_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUS2_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF22IUS2
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF22IUS2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF22IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF22IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF22IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF22IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF22IUS2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUS2_swigregister(itkVectorMagnitudeImageFilterICVF22IUS2)
itkVectorMagnitudeImageFilterICVF22IUS2___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUS2___New_orig__
itkVectorMagnitudeImageFilterICVF22IUS2_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUS2_cast


def itkVectorMagnitudeImageFilterICVF23ID3_New():
    return itkVectorMagnitudeImageFilterICVF23ID3.New()

class itkVectorMagnitudeImageFilterICVF23ID3(itkVectorMagnitudeImageFilterICVF23ID3_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ID3_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF23ID3
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ID3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF23ID3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF23ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF23ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF23ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF23ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF23ID3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ID3_swigregister(itkVectorMagnitudeImageFilterICVF23ID3)
itkVectorMagnitudeImageFilterICVF23ID3___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ID3___New_orig__
itkVectorMagnitudeImageFilterICVF23ID3_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ID3_cast


def itkVectorMagnitudeImageFilterICVF23IF3_New():
    return itkVectorMagnitudeImageFilterICVF23IF3.New()

class itkVectorMagnitudeImageFilterICVF23IF3(itkVectorMagnitudeImageFilterICVF23IF3_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IF3_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF23IF3
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IF3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF23IF3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF23IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF23IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF23IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF23IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF23IF3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IF3_swigregister(itkVectorMagnitudeImageFilterICVF23IF3)
itkVectorMagnitudeImageFilterICVF23IF3___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IF3___New_orig__
itkVectorMagnitudeImageFilterICVF23IF3_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IF3_cast


def itkVectorMagnitudeImageFilterICVF23ISS3_New():
    return itkVectorMagnitudeImageFilterICVF23ISS3.New()

class itkVectorMagnitudeImageFilterICVF23ISS3(itkVectorMagnitudeImageFilterICVF23ISS3_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ISS3_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF23ISS3
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF23ISS3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF23ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF23ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF23ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF23ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF23ISS3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ISS3_swigregister(itkVectorMagnitudeImageFilterICVF23ISS3)
itkVectorMagnitudeImageFilterICVF23ISS3___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ISS3___New_orig__
itkVectorMagnitudeImageFilterICVF23ISS3_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ISS3_cast


def itkVectorMagnitudeImageFilterICVF23IUC3_New():
    return itkVectorMagnitudeImageFilterICVF23IUC3.New()

class itkVectorMagnitudeImageFilterICVF23IUC3(itkVectorMagnitudeImageFilterICVF23IUC3_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUC3_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF23IUC3
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF23IUC3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF23IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF23IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF23IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF23IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF23IUC3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUC3_swigregister(itkVectorMagnitudeImageFilterICVF23IUC3)
itkVectorMagnitudeImageFilterICVF23IUC3___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUC3___New_orig__
itkVectorMagnitudeImageFilterICVF23IUC3_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUC3_cast


def itkVectorMagnitudeImageFilterICVF23IUS3_New():
    return itkVectorMagnitudeImageFilterICVF23IUS3.New()

class itkVectorMagnitudeImageFilterICVF23IUS3(itkVectorMagnitudeImageFilterICVF23IUS3_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUS3_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF23IUS3
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF23IUS3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF23IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF23IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF23IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF23IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF23IUS3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUS3_swigregister(itkVectorMagnitudeImageFilterICVF23IUS3)
itkVectorMagnitudeImageFilterICVF23IUS3___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUS3___New_orig__
itkVectorMagnitudeImageFilterICVF23IUS3_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUS3_cast


def itkVectorMagnitudeImageFilterICVF32ID2_New():
    return itkVectorMagnitudeImageFilterICVF32ID2.New()

class itkVectorMagnitudeImageFilterICVF32ID2(itkVectorMagnitudeImageFilterICVF32ID2_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ID2_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF32ID2
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ID2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF32ID2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF32ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF32ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF32ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF32ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF32ID2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ID2_swigregister(itkVectorMagnitudeImageFilterICVF32ID2)
itkVectorMagnitudeImageFilterICVF32ID2___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ID2___New_orig__
itkVectorMagnitudeImageFilterICVF32ID2_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ID2_cast


def itkVectorMagnitudeImageFilterICVF32IF2_New():
    return itkVectorMagnitudeImageFilterICVF32IF2.New()

class itkVectorMagnitudeImageFilterICVF32IF2(itkVectorMagnitudeImageFilterICVF32IF2_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IF2_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF32IF2
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IF2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF32IF2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF32IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF32IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF32IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF32IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF32IF2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IF2_swigregister(itkVectorMagnitudeImageFilterICVF32IF2)
itkVectorMagnitudeImageFilterICVF32IF2___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IF2___New_orig__
itkVectorMagnitudeImageFilterICVF32IF2_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IF2_cast


def itkVectorMagnitudeImageFilterICVF32ISS2_New():
    return itkVectorMagnitudeImageFilterICVF32ISS2.New()

class itkVectorMagnitudeImageFilterICVF32ISS2(itkVectorMagnitudeImageFilterICVF32ISS2_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ISS2_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF32ISS2
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF32ISS2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF32ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF32ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF32ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF32ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF32ISS2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ISS2_swigregister(itkVectorMagnitudeImageFilterICVF32ISS2)
itkVectorMagnitudeImageFilterICVF32ISS2___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ISS2___New_orig__
itkVectorMagnitudeImageFilterICVF32ISS2_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ISS2_cast


def itkVectorMagnitudeImageFilterICVF32IUC2_New():
    return itkVectorMagnitudeImageFilterICVF32IUC2.New()

class itkVectorMagnitudeImageFilterICVF32IUC2(itkVectorMagnitudeImageFilterICVF32IUC2_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUC2_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF32IUC2
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF32IUC2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF32IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF32IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF32IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF32IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF32IUC2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUC2_swigregister(itkVectorMagnitudeImageFilterICVF32IUC2)
itkVectorMagnitudeImageFilterICVF32IUC2___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUC2___New_orig__
itkVectorMagnitudeImageFilterICVF32IUC2_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUC2_cast


def itkVectorMagnitudeImageFilterICVF32IUS2_New():
    return itkVectorMagnitudeImageFilterICVF32IUS2.New()

class itkVectorMagnitudeImageFilterICVF32IUS2(itkVectorMagnitudeImageFilterICVF32IUS2_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUS2_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF32IUS2
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF32IUS2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF32IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF32IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF32IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF32IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF32IUS2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUS2_swigregister(itkVectorMagnitudeImageFilterICVF32IUS2)
itkVectorMagnitudeImageFilterICVF32IUS2___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUS2___New_orig__
itkVectorMagnitudeImageFilterICVF32IUS2_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUS2_cast


def itkVectorMagnitudeImageFilterICVF33ID3_New():
    return itkVectorMagnitudeImageFilterICVF33ID3.New()

class itkVectorMagnitudeImageFilterICVF33ID3(itkVectorMagnitudeImageFilterICVF33ID3_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ID3_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF33ID3
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ID3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF33ID3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF33ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF33ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF33ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF33ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF33ID3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ID3_swigregister(itkVectorMagnitudeImageFilterICVF33ID3)
itkVectorMagnitudeImageFilterICVF33ID3___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ID3___New_orig__
itkVectorMagnitudeImageFilterICVF33ID3_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ID3_cast


def itkVectorMagnitudeImageFilterICVF33IF3_New():
    return itkVectorMagnitudeImageFilterICVF33IF3.New()

class itkVectorMagnitudeImageFilterICVF33IF3(itkVectorMagnitudeImageFilterICVF33IF3_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IF3_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF33IF3
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IF3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF33IF3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF33IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF33IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF33IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF33IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF33IF3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IF3_swigregister(itkVectorMagnitudeImageFilterICVF33IF3)
itkVectorMagnitudeImageFilterICVF33IF3___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IF3___New_orig__
itkVectorMagnitudeImageFilterICVF33IF3_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IF3_cast


def itkVectorMagnitudeImageFilterICVF33ISS3_New():
    return itkVectorMagnitudeImageFilterICVF33ISS3.New()

class itkVectorMagnitudeImageFilterICVF33ISS3(itkVectorMagnitudeImageFilterICVF33ISS3_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ISS3_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF33ISS3
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF33ISS3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF33ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF33ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF33ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF33ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF33ISS3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ISS3_swigregister(itkVectorMagnitudeImageFilterICVF33ISS3)
itkVectorMagnitudeImageFilterICVF33ISS3___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ISS3___New_orig__
itkVectorMagnitudeImageFilterICVF33ISS3_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ISS3_cast


def itkVectorMagnitudeImageFilterICVF33IUC3_New():
    return itkVectorMagnitudeImageFilterICVF33IUC3.New()

class itkVectorMagnitudeImageFilterICVF33IUC3(itkVectorMagnitudeImageFilterICVF33IUC3_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUC3_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF33IUC3
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF33IUC3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF33IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF33IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF33IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF33IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF33IUC3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUC3_swigregister(itkVectorMagnitudeImageFilterICVF33IUC3)
itkVectorMagnitudeImageFilterICVF33IUC3___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUC3___New_orig__
itkVectorMagnitudeImageFilterICVF33IUC3_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUC3_cast


def itkVectorMagnitudeImageFilterICVF33IUS3_New():
    return itkVectorMagnitudeImageFilterICVF33IUS3.New()

class itkVectorMagnitudeImageFilterICVF33IUS3(itkVectorMagnitudeImageFilterICVF33IUS3_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUS3_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF33IUS3
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF33IUS3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF33IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF33IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF33IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF33IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF33IUS3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUS3_swigregister(itkVectorMagnitudeImageFilterICVF33IUS3)
itkVectorMagnitudeImageFilterICVF33IUS3___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUS3___New_orig__
itkVectorMagnitudeImageFilterICVF33IUS3_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUS3_cast


def itkVectorMagnitudeImageFilterICVF42ID2_New():
    return itkVectorMagnitudeImageFilterICVF42ID2.New()

class itkVectorMagnitudeImageFilterICVF42ID2(itkVectorMagnitudeImageFilterICVF42ID2_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ID2_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF42ID2
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ID2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF42ID2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF42ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF42ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF42ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF42ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF42ID2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ID2_swigregister(itkVectorMagnitudeImageFilterICVF42ID2)
itkVectorMagnitudeImageFilterICVF42ID2___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ID2___New_orig__
itkVectorMagnitudeImageFilterICVF42ID2_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ID2_cast


def itkVectorMagnitudeImageFilterICVF42IF2_New():
    return itkVectorMagnitudeImageFilterICVF42IF2.New()

class itkVectorMagnitudeImageFilterICVF42IF2(itkVectorMagnitudeImageFilterICVF42IF2_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IF2_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF42IF2
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IF2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF42IF2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF42IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF42IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF42IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF42IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF42IF2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IF2_swigregister(itkVectorMagnitudeImageFilterICVF42IF2)
itkVectorMagnitudeImageFilterICVF42IF2___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IF2___New_orig__
itkVectorMagnitudeImageFilterICVF42IF2_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IF2_cast


def itkVectorMagnitudeImageFilterICVF42ISS2_New():
    return itkVectorMagnitudeImageFilterICVF42ISS2.New()

class itkVectorMagnitudeImageFilterICVF42ISS2(itkVectorMagnitudeImageFilterICVF42ISS2_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ISS2_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF42ISS2
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF42ISS2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF42ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF42ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF42ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF42ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF42ISS2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ISS2_swigregister(itkVectorMagnitudeImageFilterICVF42ISS2)
itkVectorMagnitudeImageFilterICVF42ISS2___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ISS2___New_orig__
itkVectorMagnitudeImageFilterICVF42ISS2_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ISS2_cast


def itkVectorMagnitudeImageFilterICVF42IUC2_New():
    return itkVectorMagnitudeImageFilterICVF42IUC2.New()

class itkVectorMagnitudeImageFilterICVF42IUC2(itkVectorMagnitudeImageFilterICVF42IUC2_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUC2_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF42IUC2
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF42IUC2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF42IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF42IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF42IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF42IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF42IUC2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUC2_swigregister(itkVectorMagnitudeImageFilterICVF42IUC2)
itkVectorMagnitudeImageFilterICVF42IUC2___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUC2___New_orig__
itkVectorMagnitudeImageFilterICVF42IUC2_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUC2_cast


def itkVectorMagnitudeImageFilterICVF42IUS2_New():
    return itkVectorMagnitudeImageFilterICVF42IUS2.New()

class itkVectorMagnitudeImageFilterICVF42IUS2(itkVectorMagnitudeImageFilterICVF42IUS2_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUS2_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF42IUS2
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF42IUS2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF42IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF42IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF42IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF42IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF42IUS2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUS2_swigregister(itkVectorMagnitudeImageFilterICVF42IUS2)
itkVectorMagnitudeImageFilterICVF42IUS2___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUS2___New_orig__
itkVectorMagnitudeImageFilterICVF42IUS2_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUS2_cast


def itkVectorMagnitudeImageFilterICVF43ID3_New():
    return itkVectorMagnitudeImageFilterICVF43ID3.New()

class itkVectorMagnitudeImageFilterICVF43ID3(itkVectorMagnitudeImageFilterICVF43ID3_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ID3_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF43ID3
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ID3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF43ID3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF43ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF43ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF43ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF43ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF43ID3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ID3_swigregister(itkVectorMagnitudeImageFilterICVF43ID3)
itkVectorMagnitudeImageFilterICVF43ID3___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ID3___New_orig__
itkVectorMagnitudeImageFilterICVF43ID3_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ID3_cast


def itkVectorMagnitudeImageFilterICVF43IF3_New():
    return itkVectorMagnitudeImageFilterICVF43IF3.New()

class itkVectorMagnitudeImageFilterICVF43IF3(itkVectorMagnitudeImageFilterICVF43IF3_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IF3_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF43IF3
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IF3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF43IF3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF43IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF43IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF43IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF43IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF43IF3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IF3_swigregister(itkVectorMagnitudeImageFilterICVF43IF3)
itkVectorMagnitudeImageFilterICVF43IF3___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IF3___New_orig__
itkVectorMagnitudeImageFilterICVF43IF3_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IF3_cast


def itkVectorMagnitudeImageFilterICVF43ISS3_New():
    return itkVectorMagnitudeImageFilterICVF43ISS3.New()

class itkVectorMagnitudeImageFilterICVF43ISS3(itkVectorMagnitudeImageFilterICVF43ISS3_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ISS3_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF43ISS3
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF43ISS3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF43ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF43ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF43ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF43ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF43ISS3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ISS3_swigregister(itkVectorMagnitudeImageFilterICVF43ISS3)
itkVectorMagnitudeImageFilterICVF43ISS3___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ISS3___New_orig__
itkVectorMagnitudeImageFilterICVF43ISS3_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ISS3_cast


def itkVectorMagnitudeImageFilterICVF43IUC3_New():
    return itkVectorMagnitudeImageFilterICVF43IUC3.New()

class itkVectorMagnitudeImageFilterICVF43IUC3(itkVectorMagnitudeImageFilterICVF43IUC3_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUC3_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF43IUC3
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF43IUC3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF43IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF43IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF43IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF43IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF43IUC3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUC3_swigregister(itkVectorMagnitudeImageFilterICVF43IUC3)
itkVectorMagnitudeImageFilterICVF43IUC3___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUC3___New_orig__
itkVectorMagnitudeImageFilterICVF43IUC3_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUC3_cast


def itkVectorMagnitudeImageFilterICVF43IUS3_New():
    return itkVectorMagnitudeImageFilterICVF43IUS3.New()

class itkVectorMagnitudeImageFilterICVF43IUS3(itkVectorMagnitudeImageFilterICVF43IUS3_Superclass):
    r"""


    Take an image of vectors as input and produce an image with the
    magnitude of those vectors.

    The filter expects the input image pixel type to be a vector and the
    output image pixel type to be a scalar.

    This filter assumes that the PixelType of the input image is a
    VectorType that provides a GetNorm() method.

    {Filtering/ImageIntensity/ComputerMagInVectorImageToMakeMagImage,Compu
    ter Magnitude In Vector Image To Make Magnitude Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUS3_Clone)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF43IUS3
    cast = _swig_new_static_method(_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF43IUS3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF43IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF43IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF43IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF43IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF43IUS3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUS3_swigregister(itkVectorMagnitudeImageFilterICVF43IUS3)
itkVectorMagnitudeImageFilterICVF43IUS3___New_orig__ = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUS3___New_orig__
itkVectorMagnitudeImageFilterICVF43IUS3_cast = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def unary_generator_image_filter(*args, **kwargs):
    """Procedural interface for UnaryGeneratorImageFilter"""
    import itk
    instance = itk.UnaryGeneratorImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def unary_generator_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.UnaryGeneratorImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.UnaryGeneratorImageFilter.values()[0]
    else:
        filter_object = itk.UnaryGeneratorImageFilter

    unary_generator_image_filter.__doc__ = filter_object.__doc__
    unary_generator_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    unary_generator_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.UnaryGeneratorImageFilter, itkTemplate.itkTemplate):
        unary_generator_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        unary_generator_image_filter.__doc__ += "\n"
        unary_generator_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        unary_generator_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def vector_magnitude_image_filter(*args, **kwargs):
    """Procedural interface for VectorMagnitudeImageFilter"""
    import itk
    instance = itk.VectorMagnitudeImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def vector_magnitude_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.VectorMagnitudeImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.VectorMagnitudeImageFilter.values()[0]
    else:
        filter_object = itk.VectorMagnitudeImageFilter

    vector_magnitude_image_filter.__doc__ = filter_object.__doc__
    vector_magnitude_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    vector_magnitude_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.VectorMagnitudeImageFilter, itkTemplate.itkTemplate):
        vector_magnitude_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        vector_magnitude_image_filter.__doc__ += "\n"
        vector_magnitude_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        vector_magnitude_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



