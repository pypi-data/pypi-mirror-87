# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageFilterBasePython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkCastImageFilterPython
else:
    import _itkCastImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkCastImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkCastImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkImageToImageFilterAPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.itkPointPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
class itkCastImageFilterICVF22ICVF22_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22):
    r"""Proxy of C++ itkCastImageFilterICVF22ICVF22_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF22ICVF22_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF22ICVF22_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF22ICVF22_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF22ICVF22_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF22ICVF22_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterICVF22ICVF22_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF22ICVF22_Superclass_cast)

# Register itkCastImageFilterICVF22ICVF22_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterICVF22ICVF22_Superclass_swigregister(itkCastImageFilterICVF22ICVF22_Superclass)
itkCastImageFilterICVF22ICVF22_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterICVF22ICVF22_Superclass_cast

class itkCastImageFilterICVF22IVF22_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22):
    r"""Proxy of C++ itkCastImageFilterICVF22IVF22_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF22IVF22_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF22IVF22_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF22IVF22_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF22IVF22_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF22IVF22_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterICVF22IVF22_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF22IVF22_Superclass_cast)

# Register itkCastImageFilterICVF22IVF22_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterICVF22IVF22_Superclass_swigregister(itkCastImageFilterICVF22IVF22_Superclass)
itkCastImageFilterICVF22IVF22_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterICVF22IVF22_Superclass_cast

class itkCastImageFilterICVF23ICVF23_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF23ICVF23):
    r"""Proxy of C++ itkCastImageFilterICVF23ICVF23_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF23ICVF23_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF23ICVF23_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF23ICVF23_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF23ICVF23_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF23ICVF23_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterICVF23ICVF23_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF23ICVF23_Superclass_cast)

# Register itkCastImageFilterICVF23ICVF23_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterICVF23ICVF23_Superclass_swigregister(itkCastImageFilterICVF23ICVF23_Superclass)
itkCastImageFilterICVF23ICVF23_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterICVF23ICVF23_Superclass_cast

class itkCastImageFilterICVF23IVF23_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF23IVF23):
    r"""Proxy of C++ itkCastImageFilterICVF23IVF23_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF23IVF23_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF23IVF23_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF23IVF23_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF23IVF23_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF23IVF23_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterICVF23IVF23_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF23IVF23_Superclass_cast)

# Register itkCastImageFilterICVF23IVF23_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterICVF23IVF23_Superclass_swigregister(itkCastImageFilterICVF23IVF23_Superclass)
itkCastImageFilterICVF23IVF23_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterICVF23IVF23_Superclass_cast

class itkCastImageFilterICVF32ICVF32_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF32ICVF32):
    r"""Proxy of C++ itkCastImageFilterICVF32ICVF32_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF32ICVF32_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF32ICVF32_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF32ICVF32_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF32ICVF32_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF32ICVF32_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterICVF32ICVF32_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF32ICVF32_Superclass_cast)

# Register itkCastImageFilterICVF32ICVF32_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterICVF32ICVF32_Superclass_swigregister(itkCastImageFilterICVF32ICVF32_Superclass)
itkCastImageFilterICVF32ICVF32_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterICVF32ICVF32_Superclass_cast

class itkCastImageFilterICVF32IVF32_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF32IVF32):
    r"""Proxy of C++ itkCastImageFilterICVF32IVF32_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF32IVF32_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF32IVF32_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF32IVF32_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF32IVF32_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF32IVF32_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterICVF32IVF32_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF32IVF32_Superclass_cast)

# Register itkCastImageFilterICVF32IVF32_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterICVF32IVF32_Superclass_swigregister(itkCastImageFilterICVF32IVF32_Superclass)
itkCastImageFilterICVF32IVF32_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterICVF32IVF32_Superclass_cast

class itkCastImageFilterICVF33ICVF33_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33):
    r"""Proxy of C++ itkCastImageFilterICVF33ICVF33_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF33ICVF33_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF33ICVF33_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF33ICVF33_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF33ICVF33_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF33ICVF33_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterICVF33ICVF33_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF33ICVF33_Superclass_cast)

# Register itkCastImageFilterICVF33ICVF33_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterICVF33ICVF33_Superclass_swigregister(itkCastImageFilterICVF33ICVF33_Superclass)
itkCastImageFilterICVF33ICVF33_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterICVF33ICVF33_Superclass_cast

class itkCastImageFilterICVF33IVF33_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33):
    r"""Proxy of C++ itkCastImageFilterICVF33IVF33_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF33IVF33_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF33IVF33_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF33IVF33_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF33IVF33_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF33IVF33_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterICVF33IVF33_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF33IVF33_Superclass_cast)

# Register itkCastImageFilterICVF33IVF33_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterICVF33IVF33_Superclass_swigregister(itkCastImageFilterICVF33IVF33_Superclass)
itkCastImageFilterICVF33IVF33_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterICVF33IVF33_Superclass_cast

class itkCastImageFilterICVF42ICVF42_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF42ICVF42):
    r"""Proxy of C++ itkCastImageFilterICVF42ICVF42_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF42ICVF42_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF42ICVF42_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF42ICVF42_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF42ICVF42_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF42ICVF42_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterICVF42ICVF42_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF42ICVF42_Superclass_cast)

# Register itkCastImageFilterICVF42ICVF42_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterICVF42ICVF42_Superclass_swigregister(itkCastImageFilterICVF42ICVF42_Superclass)
itkCastImageFilterICVF42ICVF42_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterICVF42ICVF42_Superclass_cast

class itkCastImageFilterICVF42IVF42_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF42IVF42):
    r"""Proxy of C++ itkCastImageFilterICVF42IVF42_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF42IVF42_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF42IVF42_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF42IVF42_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF42IVF42_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF42IVF42_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterICVF42IVF42_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF42IVF42_Superclass_cast)

# Register itkCastImageFilterICVF42IVF42_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterICVF42IVF42_Superclass_swigregister(itkCastImageFilterICVF42IVF42_Superclass)
itkCastImageFilterICVF42IVF42_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterICVF42IVF42_Superclass_cast

class itkCastImageFilterICVF43ICVF43_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF43ICVF43):
    r"""Proxy of C++ itkCastImageFilterICVF43ICVF43_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF43ICVF43_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF43ICVF43_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF43ICVF43_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF43ICVF43_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF43ICVF43_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterICVF43ICVF43_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF43ICVF43_Superclass_cast)

# Register itkCastImageFilterICVF43ICVF43_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterICVF43ICVF43_Superclass_swigregister(itkCastImageFilterICVF43ICVF43_Superclass)
itkCastImageFilterICVF43ICVF43_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterICVF43ICVF43_Superclass_cast

class itkCastImageFilterICVF43IVF43_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF43IVF43):
    r"""Proxy of C++ itkCastImageFilterICVF43IVF43_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF43IVF43_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF43IVF43_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF43IVF43_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF43IVF43_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF43IVF43_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterICVF43IVF43_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF43IVF43_Superclass_cast)

# Register itkCastImageFilterICVF43IVF43_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterICVF43IVF43_Superclass_swigregister(itkCastImageFilterICVF43IVF43_Superclass)
itkCastImageFilterICVF43IVF43_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterICVF43IVF43_Superclass_cast

class itkCastImageFilterID2ID2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkCastImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2ID2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2ID2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2ID2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2ID2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2ID2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterID2ID2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID2ID2_Superclass_cast)

# Register itkCastImageFilterID2ID2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterID2ID2_Superclass_swigregister(itkCastImageFilterID2ID2_Superclass)
itkCastImageFilterID2ID2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterID2ID2_Superclass_cast

class itkCastImageFilterID2IF2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2IF2):
    r"""Proxy of C++ itkCastImageFilterID2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2IF2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2IF2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2IF2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2IF2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2IF2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterID2IF2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID2IF2_Superclass_cast)

# Register itkCastImageFilterID2IF2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterID2IF2_Superclass_swigregister(itkCastImageFilterID2IF2_Superclass)
itkCastImageFilterID2IF2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterID2IF2_Superclass_cast

class itkCastImageFilterID2ISS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ISS2):
    r"""Proxy of C++ itkCastImageFilterID2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2ISS2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2ISS2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2ISS2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2ISS2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2ISS2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterID2ISS2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID2ISS2_Superclass_cast)

# Register itkCastImageFilterID2ISS2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterID2ISS2_Superclass_swigregister(itkCastImageFilterID2ISS2_Superclass)
itkCastImageFilterID2ISS2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterID2ISS2_Superclass_cast

class itkCastImageFilterID2IUC2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2):
    r"""Proxy of C++ itkCastImageFilterID2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2IUC2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2IUC2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2IUC2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2IUC2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2IUC2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterID2IUC2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID2IUC2_Superclass_cast)

# Register itkCastImageFilterID2IUC2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterID2IUC2_Superclass_swigregister(itkCastImageFilterID2IUC2_Superclass)
itkCastImageFilterID2IUC2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterID2IUC2_Superclass_cast

class itkCastImageFilterID2IUL2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2):
    r"""Proxy of C++ itkCastImageFilterID2IUL2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2IUL2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2IUL2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2IUL2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2IUL2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2IUL2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterID2IUL2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID2IUL2_Superclass_cast)

# Register itkCastImageFilterID2IUL2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterID2IUL2_Superclass_swigregister(itkCastImageFilterID2IUL2_Superclass)
itkCastImageFilterID2IUL2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterID2IUL2_Superclass_cast

class itkCastImageFilterID2IUS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2):
    r"""Proxy of C++ itkCastImageFilterID2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2IUS2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2IUS2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2IUS2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2IUS2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2IUS2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterID2IUS2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID2IUS2_Superclass_cast)

# Register itkCastImageFilterID2IUS2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterID2IUS2_Superclass_swigregister(itkCastImageFilterID2IUS2_Superclass)
itkCastImageFilterID2IUS2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterID2IUS2_Superclass_cast

class itkCastImageFilterID3ID3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkCastImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3ID3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3ID3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3ID3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3ID3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3ID3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterID3ID3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID3ID3_Superclass_cast)

# Register itkCastImageFilterID3ID3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterID3ID3_Superclass_swigregister(itkCastImageFilterID3ID3_Superclass)
itkCastImageFilterID3ID3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterID3ID3_Superclass_cast

class itkCastImageFilterID3IF3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3IF3):
    r"""Proxy of C++ itkCastImageFilterID3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3IF3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3IF3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3IF3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3IF3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3IF3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterID3IF3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID3IF3_Superclass_cast)

# Register itkCastImageFilterID3IF3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterID3IF3_Superclass_swigregister(itkCastImageFilterID3IF3_Superclass)
itkCastImageFilterID3IF3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterID3IF3_Superclass_cast

class itkCastImageFilterID3ISS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ISS3):
    r"""Proxy of C++ itkCastImageFilterID3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3ISS3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3ISS3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3ISS3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3ISS3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3ISS3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterID3ISS3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID3ISS3_Superclass_cast)

# Register itkCastImageFilterID3ISS3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterID3ISS3_Superclass_swigregister(itkCastImageFilterID3ISS3_Superclass)
itkCastImageFilterID3ISS3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterID3ISS3_Superclass_cast

class itkCastImageFilterID3IUC3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3):
    r"""Proxy of C++ itkCastImageFilterID3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3IUC3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3IUC3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3IUC3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3IUC3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3IUC3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterID3IUC3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID3IUC3_Superclass_cast)

# Register itkCastImageFilterID3IUC3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterID3IUC3_Superclass_swigregister(itkCastImageFilterID3IUC3_Superclass)
itkCastImageFilterID3IUC3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterID3IUC3_Superclass_cast

class itkCastImageFilterID3IUL3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3):
    r"""Proxy of C++ itkCastImageFilterID3IUL3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3IUL3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3IUL3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3IUL3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3IUL3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3IUL3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterID3IUL3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID3IUL3_Superclass_cast)

# Register itkCastImageFilterID3IUL3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterID3IUL3_Superclass_swigregister(itkCastImageFilterID3IUL3_Superclass)
itkCastImageFilterID3IUL3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterID3IUL3_Superclass_cast

class itkCastImageFilterID3IUS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3):
    r"""Proxy of C++ itkCastImageFilterID3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3IUS3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3IUS3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3IUS3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3IUS3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3IUS3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterID3IUS3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID3IUS3_Superclass_cast)

# Register itkCastImageFilterID3IUS3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterID3IUS3_Superclass_swigregister(itkCastImageFilterID3IUS3_Superclass)
itkCastImageFilterID3IUS3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterID3IUS3_Superclass_cast

class itkCastImageFilterIF2ID2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2):
    r"""Proxy of C++ itkCastImageFilterIF2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2ID2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2ID2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2ID2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2ID2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2ID2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIF2ID2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF2ID2_Superclass_cast)

# Register itkCastImageFilterIF2ID2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIF2ID2_Superclass_swigregister(itkCastImageFilterIF2ID2_Superclass)
itkCastImageFilterIF2ID2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIF2ID2_Superclass_cast

class itkCastImageFilterIF2IF2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkCastImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2IF2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2IF2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2IF2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2IF2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2IF2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIF2IF2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF2IF2_Superclass_cast)

# Register itkCastImageFilterIF2IF2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIF2IF2_Superclass_swigregister(itkCastImageFilterIF2IF2_Superclass)
itkCastImageFilterIF2IF2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIF2IF2_Superclass_cast

class itkCastImageFilterIF2ISS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2ISS2):
    r"""Proxy of C++ itkCastImageFilterIF2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2ISS2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2ISS2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2ISS2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2ISS2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2ISS2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIF2ISS2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF2ISS2_Superclass_cast)

# Register itkCastImageFilterIF2ISS2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIF2ISS2_Superclass_swigregister(itkCastImageFilterIF2ISS2_Superclass)
itkCastImageFilterIF2ISS2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIF2ISS2_Superclass_cast

class itkCastImageFilterIF2IUC2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2):
    r"""Proxy of C++ itkCastImageFilterIF2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUC2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUC2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUC2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUC2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUC2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIF2IUC2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUC2_Superclass_cast)

# Register itkCastImageFilterIF2IUC2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIF2IUC2_Superclass_swigregister(itkCastImageFilterIF2IUC2_Superclass)
itkCastImageFilterIF2IUC2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIF2IUC2_Superclass_cast

class itkCastImageFilterIF2IUL2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2):
    r"""Proxy of C++ itkCastImageFilterIF2IUL2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUL2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUL2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUL2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUL2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUL2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIF2IUL2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUL2_Superclass_cast)

# Register itkCastImageFilterIF2IUL2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIF2IUL2_Superclass_swigregister(itkCastImageFilterIF2IUL2_Superclass)
itkCastImageFilterIF2IUL2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIF2IUL2_Superclass_cast

class itkCastImageFilterIF2IUS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2):
    r"""Proxy of C++ itkCastImageFilterIF2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUS2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUS2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUS2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUS2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUS2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIF2IUS2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUS2_Superclass_cast)

# Register itkCastImageFilterIF2IUS2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIF2IUS2_Superclass_swigregister(itkCastImageFilterIF2IUS2_Superclass)
itkCastImageFilterIF2IUS2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIF2IUS2_Superclass_cast

class itkCastImageFilterIF3ID3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3):
    r"""Proxy of C++ itkCastImageFilterIF3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3ID3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3ID3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3ID3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3ID3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3ID3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIF3ID3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF3ID3_Superclass_cast)

# Register itkCastImageFilterIF3ID3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIF3ID3_Superclass_swigregister(itkCastImageFilterIF3ID3_Superclass)
itkCastImageFilterIF3ID3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIF3ID3_Superclass_cast

class itkCastImageFilterIF3IF3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkCastImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3IF3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3IF3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3IF3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3IF3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3IF3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIF3IF3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF3IF3_Superclass_cast)

# Register itkCastImageFilterIF3IF3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIF3IF3_Superclass_swigregister(itkCastImageFilterIF3IF3_Superclass)
itkCastImageFilterIF3IF3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIF3IF3_Superclass_cast

class itkCastImageFilterIF3ISS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3ISS3):
    r"""Proxy of C++ itkCastImageFilterIF3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3ISS3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3ISS3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3ISS3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3ISS3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3ISS3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIF3ISS3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF3ISS3_Superclass_cast)

# Register itkCastImageFilterIF3ISS3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIF3ISS3_Superclass_swigregister(itkCastImageFilterIF3ISS3_Superclass)
itkCastImageFilterIF3ISS3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIF3ISS3_Superclass_cast

class itkCastImageFilterIF3IUC3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3):
    r"""Proxy of C++ itkCastImageFilterIF3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUC3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUC3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUC3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUC3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUC3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIF3IUC3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUC3_Superclass_cast)

# Register itkCastImageFilterIF3IUC3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIF3IUC3_Superclass_swigregister(itkCastImageFilterIF3IUC3_Superclass)
itkCastImageFilterIF3IUC3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIF3IUC3_Superclass_cast

class itkCastImageFilterIF3IUL3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3):
    r"""Proxy of C++ itkCastImageFilterIF3IUL3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUL3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUL3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUL3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUL3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUL3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIF3IUL3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUL3_Superclass_cast)

# Register itkCastImageFilterIF3IUL3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIF3IUL3_Superclass_swigregister(itkCastImageFilterIF3IUL3_Superclass)
itkCastImageFilterIF3IUL3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIF3IUL3_Superclass_cast

class itkCastImageFilterIF3IUS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3):
    r"""Proxy of C++ itkCastImageFilterIF3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUS3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUS3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUS3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUS3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUS3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIF3IUS3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUS3_Superclass_cast)

# Register itkCastImageFilterIF3IUS3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIF3IUS3_Superclass_swigregister(itkCastImageFilterIF3IUS3_Superclass)
itkCastImageFilterIF3IUS3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIF3IUS3_Superclass_cast

class itkCastImageFilterIRGBUC2IRGBUC2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2):
    r"""Proxy of C++ itkCastImageFilterIRGBUC2IRGBUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIRGBUC2IRGBUC2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIRGBUC2IRGBUC2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIRGBUC2IRGBUC2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIRGBUC2IRGBUC2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIRGBUC2IRGBUC2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIRGBUC2IRGBUC2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIRGBUC2IRGBUC2_Superclass_cast)

# Register itkCastImageFilterIRGBUC2IRGBUC2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIRGBUC2IRGBUC2_Superclass_swigregister(itkCastImageFilterIRGBUC2IRGBUC2_Superclass)
itkCastImageFilterIRGBUC2IRGBUC2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIRGBUC2IRGBUC2_Superclass_cast

class itkCastImageFilterIRGBUC3IRGBUC3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3):
    r"""Proxy of C++ itkCastImageFilterIRGBUC3IRGBUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIRGBUC3IRGBUC3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIRGBUC3IRGBUC3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIRGBUC3IRGBUC3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIRGBUC3IRGBUC3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIRGBUC3IRGBUC3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIRGBUC3IRGBUC3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIRGBUC3IRGBUC3_Superclass_cast)

# Register itkCastImageFilterIRGBUC3IRGBUC3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIRGBUC3IRGBUC3_Superclass_swigregister(itkCastImageFilterIRGBUC3IRGBUC3_Superclass)
itkCastImageFilterIRGBUC3IRGBUC3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIRGBUC3IRGBUC3_Superclass_cast

class itkCastImageFilterISS2ID2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ID2):
    r"""Proxy of C++ itkCastImageFilterISS2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2ID2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2ID2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2ID2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2ID2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2ID2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterISS2ID2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS2ID2_Superclass_cast)

# Register itkCastImageFilterISS2ID2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterISS2ID2_Superclass_swigregister(itkCastImageFilterISS2ID2_Superclass)
itkCastImageFilterISS2ID2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterISS2ID2_Superclass_cast

class itkCastImageFilterISS2IF2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2IF2):
    r"""Proxy of C++ itkCastImageFilterISS2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2IF2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2IF2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2IF2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2IF2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2IF2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterISS2IF2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS2IF2_Superclass_cast)

# Register itkCastImageFilterISS2IF2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterISS2IF2_Superclass_swigregister(itkCastImageFilterISS2IF2_Superclass)
itkCastImageFilterISS2IF2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterISS2IF2_Superclass_cast

class itkCastImageFilterISS2ISS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkCastImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2ISS2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2ISS2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2ISS2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2ISS2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2ISS2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterISS2ISS2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS2ISS2_Superclass_cast)

# Register itkCastImageFilterISS2ISS2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterISS2ISS2_Superclass_swigregister(itkCastImageFilterISS2ISS2_Superclass)
itkCastImageFilterISS2ISS2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterISS2ISS2_Superclass_cast

class itkCastImageFilterISS2IUC2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2IUC2):
    r"""Proxy of C++ itkCastImageFilterISS2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUC2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUC2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUC2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUC2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUC2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterISS2IUC2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUC2_Superclass_cast)

# Register itkCastImageFilterISS2IUC2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterISS2IUC2_Superclass_swigregister(itkCastImageFilterISS2IUC2_Superclass)
itkCastImageFilterISS2IUC2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterISS2IUC2_Superclass_cast

class itkCastImageFilterISS2IUL2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2IUL2):
    r"""Proxy of C++ itkCastImageFilterISS2IUL2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUL2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUL2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUL2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUL2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUL2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterISS2IUL2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUL2_Superclass_cast)

# Register itkCastImageFilterISS2IUL2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterISS2IUL2_Superclass_swigregister(itkCastImageFilterISS2IUL2_Superclass)
itkCastImageFilterISS2IUL2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterISS2IUL2_Superclass_cast

class itkCastImageFilterISS2IUS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2IUS2):
    r"""Proxy of C++ itkCastImageFilterISS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUS2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUS2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUS2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUS2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUS2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterISS2IUS2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUS2_Superclass_cast)

# Register itkCastImageFilterISS2IUS2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterISS2IUS2_Superclass_swigregister(itkCastImageFilterISS2IUS2_Superclass)
itkCastImageFilterISS2IUS2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterISS2IUS2_Superclass_cast

class itkCastImageFilterISS3ID3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ID3):
    r"""Proxy of C++ itkCastImageFilterISS3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3ID3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3ID3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3ID3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3ID3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3ID3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterISS3ID3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS3ID3_Superclass_cast)

# Register itkCastImageFilterISS3ID3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterISS3ID3_Superclass_swigregister(itkCastImageFilterISS3ID3_Superclass)
itkCastImageFilterISS3ID3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterISS3ID3_Superclass_cast

class itkCastImageFilterISS3IF3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3IF3):
    r"""Proxy of C++ itkCastImageFilterISS3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3IF3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3IF3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3IF3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3IF3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3IF3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterISS3IF3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS3IF3_Superclass_cast)

# Register itkCastImageFilterISS3IF3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterISS3IF3_Superclass_swigregister(itkCastImageFilterISS3IF3_Superclass)
itkCastImageFilterISS3IF3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterISS3IF3_Superclass_cast

class itkCastImageFilterISS3ISS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkCastImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3ISS3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3ISS3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3ISS3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3ISS3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3ISS3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterISS3ISS3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS3ISS3_Superclass_cast)

# Register itkCastImageFilterISS3ISS3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterISS3ISS3_Superclass_swigregister(itkCastImageFilterISS3ISS3_Superclass)
itkCastImageFilterISS3ISS3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterISS3ISS3_Superclass_cast

class itkCastImageFilterISS3IUC3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3IUC3):
    r"""Proxy of C++ itkCastImageFilterISS3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUC3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUC3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUC3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUC3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUC3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterISS3IUC3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUC3_Superclass_cast)

# Register itkCastImageFilterISS3IUC3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterISS3IUC3_Superclass_swigregister(itkCastImageFilterISS3IUC3_Superclass)
itkCastImageFilterISS3IUC3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterISS3IUC3_Superclass_cast

class itkCastImageFilterISS3IUL3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3IUL3):
    r"""Proxy of C++ itkCastImageFilterISS3IUL3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUL3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUL3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUL3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUL3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUL3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterISS3IUL3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUL3_Superclass_cast)

# Register itkCastImageFilterISS3IUL3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterISS3IUL3_Superclass_swigregister(itkCastImageFilterISS3IUL3_Superclass)
itkCastImageFilterISS3IUL3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterISS3IUL3_Superclass_cast

class itkCastImageFilterISS3IUS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3IUS3):
    r"""Proxy of C++ itkCastImageFilterISS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUS3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUS3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUS3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUS3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUS3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterISS3IUS3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUS3_Superclass_cast)

# Register itkCastImageFilterISS3IUS3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterISS3IUS3_Superclass_swigregister(itkCastImageFilterISS3IUS3_Superclass)
itkCastImageFilterISS3IUS3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterISS3IUS3_Superclass_cast

class itkCastImageFilterIUC2ID2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2):
    r"""Proxy of C++ itkCastImageFilterIUC2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2ID2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2ID2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2ID2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2ID2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2ID2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUC2ID2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC2ID2_Superclass_cast)

# Register itkCastImageFilterIUC2ID2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUC2ID2_Superclass_swigregister(itkCastImageFilterIUC2ID2_Superclass)
itkCastImageFilterIUC2ID2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUC2ID2_Superclass_cast

class itkCastImageFilterIUC2IF2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2):
    r"""Proxy of C++ itkCastImageFilterIUC2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IF2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IF2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IF2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IF2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IF2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUC2IF2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IF2_Superclass_cast)

# Register itkCastImageFilterIUC2IF2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUC2IF2_Superclass_swigregister(itkCastImageFilterIUC2IF2_Superclass)
itkCastImageFilterIUC2IF2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUC2IF2_Superclass_cast

class itkCastImageFilterIUC2ISS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISS2):
    r"""Proxy of C++ itkCastImageFilterIUC2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2ISS2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2ISS2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2ISS2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2ISS2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2ISS2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUC2ISS2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC2ISS2_Superclass_cast)

# Register itkCastImageFilterIUC2ISS2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUC2ISS2_Superclass_swigregister(itkCastImageFilterIUC2ISS2_Superclass)
itkCastImageFilterIUC2ISS2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUC2ISS2_Superclass_cast

class itkCastImageFilterIUC2IUC2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkCastImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUC2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUC2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUC2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUC2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUC2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUC2IUC2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUC2_Superclass_cast)

# Register itkCastImageFilterIUC2IUC2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUC2IUC2_Superclass_swigregister(itkCastImageFilterIUC2IUC2_Superclass)
itkCastImageFilterIUC2IUC2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUC2IUC2_Superclass_cast

class itkCastImageFilterIUC2IUL2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2):
    r"""Proxy of C++ itkCastImageFilterIUC2IUL2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUL2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUL2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUL2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUL2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUL2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUC2IUL2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUL2_Superclass_cast)

# Register itkCastImageFilterIUC2IUL2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUC2IUL2_Superclass_swigregister(itkCastImageFilterIUC2IUL2_Superclass)
itkCastImageFilterIUC2IUL2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUC2IUL2_Superclass_cast

class itkCastImageFilterIUC2IUS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2):
    r"""Proxy of C++ itkCastImageFilterIUC2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUS2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUS2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUS2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUS2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUS2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUC2IUS2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUS2_Superclass_cast)

# Register itkCastImageFilterIUC2IUS2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUC2IUS2_Superclass_swigregister(itkCastImageFilterIUC2IUS2_Superclass)
itkCastImageFilterIUC2IUS2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUC2IUS2_Superclass_cast

class itkCastImageFilterIUC3ID3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3):
    r"""Proxy of C++ itkCastImageFilterIUC3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3ID3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3ID3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3ID3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3ID3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3ID3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUC3ID3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC3ID3_Superclass_cast)

# Register itkCastImageFilterIUC3ID3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUC3ID3_Superclass_swigregister(itkCastImageFilterIUC3ID3_Superclass)
itkCastImageFilterIUC3ID3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUC3ID3_Superclass_cast

class itkCastImageFilterIUC3IF3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3):
    r"""Proxy of C++ itkCastImageFilterIUC3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IF3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IF3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IF3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IF3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IF3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUC3IF3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IF3_Superclass_cast)

# Register itkCastImageFilterIUC3IF3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUC3IF3_Superclass_swigregister(itkCastImageFilterIUC3IF3_Superclass)
itkCastImageFilterIUC3IF3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUC3IF3_Superclass_cast

class itkCastImageFilterIUC3ISS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISS3):
    r"""Proxy of C++ itkCastImageFilterIUC3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3ISS3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3ISS3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3ISS3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3ISS3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3ISS3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUC3ISS3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC3ISS3_Superclass_cast)

# Register itkCastImageFilterIUC3ISS3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUC3ISS3_Superclass_swigregister(itkCastImageFilterIUC3ISS3_Superclass)
itkCastImageFilterIUC3ISS3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUC3ISS3_Superclass_cast

class itkCastImageFilterIUC3IUC3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkCastImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUC3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUC3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUC3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUC3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUC3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUC3IUC3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUC3_Superclass_cast)

# Register itkCastImageFilterIUC3IUC3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUC3IUC3_Superclass_swigregister(itkCastImageFilterIUC3IUC3_Superclass)
itkCastImageFilterIUC3IUC3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUC3IUC3_Superclass_cast

class itkCastImageFilterIUC3IUL3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3):
    r"""Proxy of C++ itkCastImageFilterIUC3IUL3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUL3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUL3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUL3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUL3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUL3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUC3IUL3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUL3_Superclass_cast)

# Register itkCastImageFilterIUC3IUL3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUC3IUL3_Superclass_swigregister(itkCastImageFilterIUC3IUL3_Superclass)
itkCastImageFilterIUC3IUL3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUC3IUL3_Superclass_cast

class itkCastImageFilterIUC3IUS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3):
    r"""Proxy of C++ itkCastImageFilterIUC3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUS3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUS3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUS3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUS3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUS3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUC3IUS3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUS3_Superclass_cast)

# Register itkCastImageFilterIUC3IUS3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUC3IUS3_Superclass_swigregister(itkCastImageFilterIUC3IUS3_Superclass)
itkCastImageFilterIUC3IUS3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUC3IUS3_Superclass_cast

class itkCastImageFilterIUL2ID2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2):
    r"""Proxy of C++ itkCastImageFilterIUL2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2ID2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2ID2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2ID2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2ID2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2ID2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUL2ID2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL2ID2_Superclass_cast)

# Register itkCastImageFilterIUL2ID2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUL2ID2_Superclass_swigregister(itkCastImageFilterIUL2ID2_Superclass)
itkCastImageFilterIUL2ID2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUL2ID2_Superclass_cast

class itkCastImageFilterIUL2IF2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2):
    r"""Proxy of C++ itkCastImageFilterIUL2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IF2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IF2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IF2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IF2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IF2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUL2IF2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IF2_Superclass_cast)

# Register itkCastImageFilterIUL2IF2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUL2IF2_Superclass_swigregister(itkCastImageFilterIUL2IF2_Superclass)
itkCastImageFilterIUL2IF2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUL2IF2_Superclass_cast

class itkCastImageFilterIUL2ISS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISS2):
    r"""Proxy of C++ itkCastImageFilterIUL2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2ISS2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2ISS2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2ISS2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2ISS2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2ISS2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUL2ISS2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL2ISS2_Superclass_cast)

# Register itkCastImageFilterIUL2ISS2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUL2ISS2_Superclass_swigregister(itkCastImageFilterIUL2ISS2_Superclass)
itkCastImageFilterIUL2ISS2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUL2ISS2_Superclass_cast

class itkCastImageFilterIUL2IUC2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2):
    r"""Proxy of C++ itkCastImageFilterIUL2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUC2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUC2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUC2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUC2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUC2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUL2IUC2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUC2_Superclass_cast)

# Register itkCastImageFilterIUL2IUC2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUL2IUC2_Superclass_swigregister(itkCastImageFilterIUL2IUC2_Superclass)
itkCastImageFilterIUL2IUC2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUL2IUC2_Superclass_cast

class itkCastImageFilterIUL2IUL2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2):
    r"""Proxy of C++ itkCastImageFilterIUL2IUL2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUL2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUL2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUL2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUL2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUL2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUL2IUL2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUL2_Superclass_cast)

# Register itkCastImageFilterIUL2IUL2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUL2IUL2_Superclass_swigregister(itkCastImageFilterIUL2IUL2_Superclass)
itkCastImageFilterIUL2IUL2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUL2IUL2_Superclass_cast

class itkCastImageFilterIUL2IUS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2):
    r"""Proxy of C++ itkCastImageFilterIUL2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUS2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUS2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUS2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUS2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUS2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUL2IUS2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUS2_Superclass_cast)

# Register itkCastImageFilterIUL2IUS2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUL2IUS2_Superclass_swigregister(itkCastImageFilterIUL2IUS2_Superclass)
itkCastImageFilterIUL2IUS2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUL2IUS2_Superclass_cast

class itkCastImageFilterIUL3ID3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3):
    r"""Proxy of C++ itkCastImageFilterIUL3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3ID3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3ID3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3ID3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3ID3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3ID3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUL3ID3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL3ID3_Superclass_cast)

# Register itkCastImageFilterIUL3ID3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUL3ID3_Superclass_swigregister(itkCastImageFilterIUL3ID3_Superclass)
itkCastImageFilterIUL3ID3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUL3ID3_Superclass_cast

class itkCastImageFilterIUL3IF3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3):
    r"""Proxy of C++ itkCastImageFilterIUL3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IF3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IF3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IF3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IF3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IF3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUL3IF3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IF3_Superclass_cast)

# Register itkCastImageFilterIUL3IF3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUL3IF3_Superclass_swigregister(itkCastImageFilterIUL3IF3_Superclass)
itkCastImageFilterIUL3IF3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUL3IF3_Superclass_cast

class itkCastImageFilterIUL3ISS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISS3):
    r"""Proxy of C++ itkCastImageFilterIUL3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3ISS3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3ISS3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3ISS3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3ISS3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3ISS3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUL3ISS3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL3ISS3_Superclass_cast)

# Register itkCastImageFilterIUL3ISS3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUL3ISS3_Superclass_swigregister(itkCastImageFilterIUL3ISS3_Superclass)
itkCastImageFilterIUL3ISS3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUL3ISS3_Superclass_cast

class itkCastImageFilterIUL3IUC3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3):
    r"""Proxy of C++ itkCastImageFilterIUL3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUC3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUC3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUC3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUC3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUC3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUL3IUC3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUC3_Superclass_cast)

# Register itkCastImageFilterIUL3IUC3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUL3IUC3_Superclass_swigregister(itkCastImageFilterIUL3IUC3_Superclass)
itkCastImageFilterIUL3IUC3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUL3IUC3_Superclass_cast

class itkCastImageFilterIUL3IUL3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3):
    r"""Proxy of C++ itkCastImageFilterIUL3IUL3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUL3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUL3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUL3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUL3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUL3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUL3IUL3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUL3_Superclass_cast)

# Register itkCastImageFilterIUL3IUL3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUL3IUL3_Superclass_swigregister(itkCastImageFilterIUL3IUL3_Superclass)
itkCastImageFilterIUL3IUL3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUL3IUL3_Superclass_cast

class itkCastImageFilterIUL3IUS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3):
    r"""Proxy of C++ itkCastImageFilterIUL3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUS3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUS3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUS3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUS3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUS3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUL3IUS3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUS3_Superclass_cast)

# Register itkCastImageFilterIUL3IUS3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUL3IUS3_Superclass_swigregister(itkCastImageFilterIUL3IUS3_Superclass)
itkCastImageFilterIUL3IUS3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUL3IUS3_Superclass_cast

class itkCastImageFilterIULL2ISS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISS2):
    r"""Proxy of C++ itkCastImageFilterIULL2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL2ISS2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL2ISS2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL2ISS2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL2ISS2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL2ISS2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIULL2ISS2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIULL2ISS2_Superclass_cast)

# Register itkCastImageFilterIULL2ISS2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIULL2ISS2_Superclass_swigregister(itkCastImageFilterIULL2ISS2_Superclass)
itkCastImageFilterIULL2ISS2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIULL2ISS2_Superclass_cast

class itkCastImageFilterIULL2IUC2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUC2):
    r"""Proxy of C++ itkCastImageFilterIULL2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL2IUC2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL2IUC2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL2IUC2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL2IUC2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL2IUC2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIULL2IUC2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIULL2IUC2_Superclass_cast)

# Register itkCastImageFilterIULL2IUC2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIULL2IUC2_Superclass_swigregister(itkCastImageFilterIULL2IUC2_Superclass)
itkCastImageFilterIULL2IUC2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIULL2IUC2_Superclass_cast

class itkCastImageFilterIULL2IUS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUS2):
    r"""Proxy of C++ itkCastImageFilterIULL2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL2IUS2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL2IUS2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL2IUS2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL2IUS2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL2IUS2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIULL2IUS2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIULL2IUS2_Superclass_cast)

# Register itkCastImageFilterIULL2IUS2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIULL2IUS2_Superclass_swigregister(itkCastImageFilterIULL2IUS2_Superclass)
itkCastImageFilterIULL2IUS2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIULL2IUS2_Superclass_cast

class itkCastImageFilterIULL3ISS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISS3):
    r"""Proxy of C++ itkCastImageFilterIULL3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL3ISS3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL3ISS3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL3ISS3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL3ISS3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL3ISS3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIULL3ISS3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIULL3ISS3_Superclass_cast)

# Register itkCastImageFilterIULL3ISS3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIULL3ISS3_Superclass_swigregister(itkCastImageFilterIULL3ISS3_Superclass)
itkCastImageFilterIULL3ISS3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIULL3ISS3_Superclass_cast

class itkCastImageFilterIULL3IUC3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUC3):
    r"""Proxy of C++ itkCastImageFilterIULL3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL3IUC3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL3IUC3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL3IUC3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL3IUC3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL3IUC3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIULL3IUC3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIULL3IUC3_Superclass_cast)

# Register itkCastImageFilterIULL3IUC3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIULL3IUC3_Superclass_swigregister(itkCastImageFilterIULL3IUC3_Superclass)
itkCastImageFilterIULL3IUC3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIULL3IUC3_Superclass_cast

class itkCastImageFilterIULL3IUS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUS3):
    r"""Proxy of C++ itkCastImageFilterIULL3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL3IUS3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL3IUS3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL3IUS3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL3IUS3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL3IUS3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIULL3IUS3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIULL3IUS3_Superclass_cast)

# Register itkCastImageFilterIULL3IUS3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIULL3IUS3_Superclass_swigregister(itkCastImageFilterIULL3IUS3_Superclass)
itkCastImageFilterIULL3IUS3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIULL3IUS3_Superclass_cast

class itkCastImageFilterIUS2ID2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2):
    r"""Proxy of C++ itkCastImageFilterIUS2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2ID2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2ID2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2ID2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2ID2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2ID2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUS2ID2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS2ID2_Superclass_cast)

# Register itkCastImageFilterIUS2ID2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUS2ID2_Superclass_swigregister(itkCastImageFilterIUS2ID2_Superclass)
itkCastImageFilterIUS2ID2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUS2ID2_Superclass_cast

class itkCastImageFilterIUS2IF2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2):
    r"""Proxy of C++ itkCastImageFilterIUS2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IF2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IF2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IF2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IF2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IF2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUS2IF2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IF2_Superclass_cast)

# Register itkCastImageFilterIUS2IF2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUS2IF2_Superclass_swigregister(itkCastImageFilterIUS2IF2_Superclass)
itkCastImageFilterIUS2IF2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUS2IF2_Superclass_cast

class itkCastImageFilterIUS2ISS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISS2):
    r"""Proxy of C++ itkCastImageFilterIUS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2ISS2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2ISS2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2ISS2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2ISS2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2ISS2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUS2ISS2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS2ISS2_Superclass_cast)

# Register itkCastImageFilterIUS2ISS2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUS2ISS2_Superclass_swigregister(itkCastImageFilterIUS2ISS2_Superclass)
itkCastImageFilterIUS2ISS2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUS2ISS2_Superclass_cast

class itkCastImageFilterIUS2IUC2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2):
    r"""Proxy of C++ itkCastImageFilterIUS2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUC2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUC2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUC2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUC2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUC2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUS2IUC2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUC2_Superclass_cast)

# Register itkCastImageFilterIUS2IUC2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUS2IUC2_Superclass_swigregister(itkCastImageFilterIUS2IUC2_Superclass)
itkCastImageFilterIUS2IUC2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUS2IUC2_Superclass_cast

class itkCastImageFilterIUS2IUL2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2):
    r"""Proxy of C++ itkCastImageFilterIUS2IUL2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUL2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUL2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUL2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUL2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUL2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUS2IUL2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUL2_Superclass_cast)

# Register itkCastImageFilterIUS2IUL2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUS2IUL2_Superclass_swigregister(itkCastImageFilterIUS2IUL2_Superclass)
itkCastImageFilterIUS2IUL2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUS2IUL2_Superclass_cast

class itkCastImageFilterIUS2IUS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkCastImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUS2_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUS2_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUS2_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUS2_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUS2_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUS2IUS2_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUS2_Superclass_cast)

# Register itkCastImageFilterIUS2IUS2_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUS2IUS2_Superclass_swigregister(itkCastImageFilterIUS2IUS2_Superclass)
itkCastImageFilterIUS2IUS2_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUS2IUS2_Superclass_cast

class itkCastImageFilterIUS3ID3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3):
    r"""Proxy of C++ itkCastImageFilterIUS3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3ID3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3ID3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3ID3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3ID3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3ID3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUS3ID3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS3ID3_Superclass_cast)

# Register itkCastImageFilterIUS3ID3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUS3ID3_Superclass_swigregister(itkCastImageFilterIUS3ID3_Superclass)
itkCastImageFilterIUS3ID3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUS3ID3_Superclass_cast

class itkCastImageFilterIUS3IF3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3):
    r"""Proxy of C++ itkCastImageFilterIUS3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IF3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IF3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IF3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IF3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IF3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUS3IF3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IF3_Superclass_cast)

# Register itkCastImageFilterIUS3IF3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUS3IF3_Superclass_swigregister(itkCastImageFilterIUS3IF3_Superclass)
itkCastImageFilterIUS3IF3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUS3IF3_Superclass_cast

class itkCastImageFilterIUS3ISS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISS3):
    r"""Proxy of C++ itkCastImageFilterIUS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3ISS3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3ISS3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3ISS3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3ISS3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3ISS3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUS3ISS3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS3ISS3_Superclass_cast)

# Register itkCastImageFilterIUS3ISS3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUS3ISS3_Superclass_swigregister(itkCastImageFilterIUS3ISS3_Superclass)
itkCastImageFilterIUS3ISS3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUS3ISS3_Superclass_cast

class itkCastImageFilterIUS3IUC3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3):
    r"""Proxy of C++ itkCastImageFilterIUS3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUC3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUC3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUC3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUC3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUC3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUS3IUC3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUC3_Superclass_cast)

# Register itkCastImageFilterIUS3IUC3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUS3IUC3_Superclass_swigregister(itkCastImageFilterIUS3IUC3_Superclass)
itkCastImageFilterIUS3IUC3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUS3IUC3_Superclass_cast

class itkCastImageFilterIUS3IUL3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3):
    r"""Proxy of C++ itkCastImageFilterIUS3IUL3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUL3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUL3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUL3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUL3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUL3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUS3IUL3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUL3_Superclass_cast)

# Register itkCastImageFilterIUS3IUL3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUS3IUL3_Superclass_swigregister(itkCastImageFilterIUS3IUL3_Superclass)
itkCastImageFilterIUS3IUL3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUS3IUL3_Superclass_cast

class itkCastImageFilterIUS3IUS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkCastImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUS3_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUS3_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUS3_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUS3_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUS3_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUS3IUS3_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUS3_Superclass_cast)

# Register itkCastImageFilterIUS3IUS3_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUS3IUS3_Superclass_swigregister(itkCastImageFilterIUS3IUS3_Superclass)
itkCastImageFilterIUS3IUS3_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIUS3IUS3_Superclass_cast

class itkCastImageFilterIVF22ICVF22_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22):
    r"""Proxy of C++ itkCastImageFilterIVF22ICVF22_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF22ICVF22_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF22ICVF22_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF22ICVF22_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF22ICVF22_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF22ICVF22_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIVF22ICVF22_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF22ICVF22_Superclass_cast)

# Register itkCastImageFilterIVF22ICVF22_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIVF22ICVF22_Superclass_swigregister(itkCastImageFilterIVF22ICVF22_Superclass)
itkCastImageFilterIVF22ICVF22_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIVF22ICVF22_Superclass_cast

class itkCastImageFilterIVF22IVF22_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22):
    r"""Proxy of C++ itkCastImageFilterIVF22IVF22_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF22IVF22_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF22IVF22_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF22IVF22_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF22IVF22_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF22IVF22_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIVF22IVF22_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF22IVF22_Superclass_cast)

# Register itkCastImageFilterIVF22IVF22_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIVF22IVF22_Superclass_swigregister(itkCastImageFilterIVF22IVF22_Superclass)
itkCastImageFilterIVF22IVF22_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIVF22IVF22_Superclass_cast

class itkCastImageFilterIVF23ICVF23_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF23):
    r"""Proxy of C++ itkCastImageFilterIVF23ICVF23_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF23ICVF23_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF23ICVF23_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF23ICVF23_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF23ICVF23_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF23ICVF23_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIVF23ICVF23_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF23ICVF23_Superclass_cast)

# Register itkCastImageFilterIVF23ICVF23_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIVF23ICVF23_Superclass_swigregister(itkCastImageFilterIVF23ICVF23_Superclass)
itkCastImageFilterIVF23ICVF23_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIVF23ICVF23_Superclass_cast

class itkCastImageFilterIVF23IVF23_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF23IVF23):
    r"""Proxy of C++ itkCastImageFilterIVF23IVF23_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF23IVF23_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF23IVF23_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF23IVF23_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF23IVF23_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF23IVF23_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIVF23IVF23_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF23IVF23_Superclass_cast)

# Register itkCastImageFilterIVF23IVF23_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIVF23IVF23_Superclass_swigregister(itkCastImageFilterIVF23IVF23_Superclass)
itkCastImageFilterIVF23IVF23_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIVF23IVF23_Superclass_cast

class itkCastImageFilterIVF32ICVF32_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF32ICVF32):
    r"""Proxy of C++ itkCastImageFilterIVF32ICVF32_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF32ICVF32_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF32ICVF32_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF32ICVF32_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF32ICVF32_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF32ICVF32_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIVF32ICVF32_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF32ICVF32_Superclass_cast)

# Register itkCastImageFilterIVF32ICVF32_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIVF32ICVF32_Superclass_swigregister(itkCastImageFilterIVF32ICVF32_Superclass)
itkCastImageFilterIVF32ICVF32_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIVF32ICVF32_Superclass_cast

class itkCastImageFilterIVF32IVF32_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF32IVF32):
    r"""Proxy of C++ itkCastImageFilterIVF32IVF32_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF32IVF32_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF32IVF32_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF32IVF32_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF32IVF32_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF32IVF32_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIVF32IVF32_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF32IVF32_Superclass_cast)

# Register itkCastImageFilterIVF32IVF32_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIVF32IVF32_Superclass_swigregister(itkCastImageFilterIVF32IVF32_Superclass)
itkCastImageFilterIVF32IVF32_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIVF32IVF32_Superclass_cast

class itkCastImageFilterIVF33ICVF33_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33):
    r"""Proxy of C++ itkCastImageFilterIVF33ICVF33_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF33ICVF33_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF33ICVF33_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF33ICVF33_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF33ICVF33_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF33ICVF33_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIVF33ICVF33_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF33ICVF33_Superclass_cast)

# Register itkCastImageFilterIVF33ICVF33_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIVF33ICVF33_Superclass_swigregister(itkCastImageFilterIVF33ICVF33_Superclass)
itkCastImageFilterIVF33ICVF33_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIVF33ICVF33_Superclass_cast

class itkCastImageFilterIVF33IVF33_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33):
    r"""Proxy of C++ itkCastImageFilterIVF33IVF33_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF33IVF33_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF33IVF33_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF33IVF33_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF33IVF33_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF33IVF33_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIVF33IVF33_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF33IVF33_Superclass_cast)

# Register itkCastImageFilterIVF33IVF33_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIVF33IVF33_Superclass_swigregister(itkCastImageFilterIVF33IVF33_Superclass)
itkCastImageFilterIVF33IVF33_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIVF33IVF33_Superclass_cast

class itkCastImageFilterIVF42ICVF42_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF42ICVF42):
    r"""Proxy of C++ itkCastImageFilterIVF42ICVF42_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF42ICVF42_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF42ICVF42_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF42ICVF42_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF42ICVF42_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF42ICVF42_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIVF42ICVF42_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF42ICVF42_Superclass_cast)

# Register itkCastImageFilterIVF42ICVF42_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIVF42ICVF42_Superclass_swigregister(itkCastImageFilterIVF42ICVF42_Superclass)
itkCastImageFilterIVF42ICVF42_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIVF42ICVF42_Superclass_cast

class itkCastImageFilterIVF42IVF42_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF42IVF42):
    r"""Proxy of C++ itkCastImageFilterIVF42IVF42_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF42IVF42_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF42IVF42_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF42IVF42_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF42IVF42_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF42IVF42_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIVF42IVF42_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF42IVF42_Superclass_cast)

# Register itkCastImageFilterIVF42IVF42_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIVF42IVF42_Superclass_swigregister(itkCastImageFilterIVF42IVF42_Superclass)
itkCastImageFilterIVF42IVF42_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIVF42IVF42_Superclass_cast

class itkCastImageFilterIVF43ICVF43_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF43ICVF43):
    r"""Proxy of C++ itkCastImageFilterIVF43ICVF43_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF43ICVF43_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF43ICVF43_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF43ICVF43_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF43ICVF43_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF43ICVF43_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIVF43ICVF43_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF43ICVF43_Superclass_cast)

# Register itkCastImageFilterIVF43ICVF43_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIVF43ICVF43_Superclass_swigregister(itkCastImageFilterIVF43ICVF43_Superclass)
itkCastImageFilterIVF43ICVF43_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIVF43ICVF43_Superclass_cast

class itkCastImageFilterIVF43IVF43_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF43IVF43):
    r"""Proxy of C++ itkCastImageFilterIVF43IVF43_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF43IVF43_Superclass_SetInPlace)
    GetInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF43IVF43_Superclass_GetInPlace)
    InPlaceOn = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF43IVF43_Superclass_InPlaceOn)
    InPlaceOff = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF43IVF43_Superclass_InPlaceOff)
    CanRunInPlace = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF43IVF43_Superclass_CanRunInPlace)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIVF43IVF43_Superclass
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF43IVF43_Superclass_cast)

# Register itkCastImageFilterIVF43IVF43_Superclass in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIVF43IVF43_Superclass_swigregister(itkCastImageFilterIVF43IVF43_Superclass)
itkCastImageFilterIVF43IVF43_Superclass_cast = _itkCastImageFilterPython.itkCastImageFilterIVF43IVF43_Superclass_cast


def itkCastImageFilterICVF22ICVF22_New():
    return itkCastImageFilterICVF22ICVF22.New()

class itkCastImageFilterICVF22ICVF22(itkCastImageFilterICVF22ICVF22_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF22ICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF22ICVF22_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterICVF22ICVF22
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF22ICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterICVF22ICVF22

        Create a new object of the class itkCastImageFilterICVF22ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterICVF22ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterICVF22ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterICVF22ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterICVF22ICVF22 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterICVF22ICVF22_swigregister(itkCastImageFilterICVF22ICVF22)
itkCastImageFilterICVF22ICVF22___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterICVF22ICVF22___New_orig__
itkCastImageFilterICVF22ICVF22_cast = _itkCastImageFilterPython.itkCastImageFilterICVF22ICVF22_cast


def itkCastImageFilterICVF22IVF22_New():
    return itkCastImageFilterICVF22IVF22.New()

class itkCastImageFilterICVF22IVF22(itkCastImageFilterICVF22IVF22_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF22IVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF22IVF22_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterICVF22IVF22
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF22IVF22_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterICVF22IVF22

        Create a new object of the class itkCastImageFilterICVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterICVF22IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterICVF22IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterICVF22IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterICVF22IVF22 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterICVF22IVF22_swigregister(itkCastImageFilterICVF22IVF22)
itkCastImageFilterICVF22IVF22___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterICVF22IVF22___New_orig__
itkCastImageFilterICVF22IVF22_cast = _itkCastImageFilterPython.itkCastImageFilterICVF22IVF22_cast


def itkCastImageFilterICVF23ICVF23_New():
    return itkCastImageFilterICVF23ICVF23.New()

class itkCastImageFilterICVF23ICVF23(itkCastImageFilterICVF23ICVF23_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF23ICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF23ICVF23_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterICVF23ICVF23
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF23ICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterICVF23ICVF23

        Create a new object of the class itkCastImageFilterICVF23ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterICVF23ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterICVF23ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterICVF23ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterICVF23ICVF23 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterICVF23ICVF23_swigregister(itkCastImageFilterICVF23ICVF23)
itkCastImageFilterICVF23ICVF23___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterICVF23ICVF23___New_orig__
itkCastImageFilterICVF23ICVF23_cast = _itkCastImageFilterPython.itkCastImageFilterICVF23ICVF23_cast


def itkCastImageFilterICVF23IVF23_New():
    return itkCastImageFilterICVF23IVF23.New()

class itkCastImageFilterICVF23IVF23(itkCastImageFilterICVF23IVF23_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF23IVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF23IVF23_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterICVF23IVF23
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF23IVF23_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterICVF23IVF23

        Create a new object of the class itkCastImageFilterICVF23IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterICVF23IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterICVF23IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterICVF23IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterICVF23IVF23 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterICVF23IVF23_swigregister(itkCastImageFilterICVF23IVF23)
itkCastImageFilterICVF23IVF23___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterICVF23IVF23___New_orig__
itkCastImageFilterICVF23IVF23_cast = _itkCastImageFilterPython.itkCastImageFilterICVF23IVF23_cast


def itkCastImageFilterICVF32ICVF32_New():
    return itkCastImageFilterICVF32ICVF32.New()

class itkCastImageFilterICVF32ICVF32(itkCastImageFilterICVF32ICVF32_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF32ICVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF32ICVF32_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterICVF32ICVF32
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF32ICVF32_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterICVF32ICVF32

        Create a new object of the class itkCastImageFilterICVF32ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterICVF32ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterICVF32ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterICVF32ICVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterICVF32ICVF32 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterICVF32ICVF32_swigregister(itkCastImageFilterICVF32ICVF32)
itkCastImageFilterICVF32ICVF32___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterICVF32ICVF32___New_orig__
itkCastImageFilterICVF32ICVF32_cast = _itkCastImageFilterPython.itkCastImageFilterICVF32ICVF32_cast


def itkCastImageFilterICVF32IVF32_New():
    return itkCastImageFilterICVF32IVF32.New()

class itkCastImageFilterICVF32IVF32(itkCastImageFilterICVF32IVF32_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF32IVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF32IVF32_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterICVF32IVF32
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF32IVF32_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterICVF32IVF32

        Create a new object of the class itkCastImageFilterICVF32IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterICVF32IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterICVF32IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterICVF32IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterICVF32IVF32 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterICVF32IVF32_swigregister(itkCastImageFilterICVF32IVF32)
itkCastImageFilterICVF32IVF32___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterICVF32IVF32___New_orig__
itkCastImageFilterICVF32IVF32_cast = _itkCastImageFilterPython.itkCastImageFilterICVF32IVF32_cast


def itkCastImageFilterICVF33ICVF33_New():
    return itkCastImageFilterICVF33ICVF33.New()

class itkCastImageFilterICVF33ICVF33(itkCastImageFilterICVF33ICVF33_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF33ICVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF33ICVF33_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterICVF33ICVF33
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF33ICVF33_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterICVF33ICVF33

        Create a new object of the class itkCastImageFilterICVF33ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterICVF33ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterICVF33ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterICVF33ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterICVF33ICVF33 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterICVF33ICVF33_swigregister(itkCastImageFilterICVF33ICVF33)
itkCastImageFilterICVF33ICVF33___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterICVF33ICVF33___New_orig__
itkCastImageFilterICVF33ICVF33_cast = _itkCastImageFilterPython.itkCastImageFilterICVF33ICVF33_cast


def itkCastImageFilterICVF33IVF33_New():
    return itkCastImageFilterICVF33IVF33.New()

class itkCastImageFilterICVF33IVF33(itkCastImageFilterICVF33IVF33_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF33IVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF33IVF33_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterICVF33IVF33
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF33IVF33_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterICVF33IVF33

        Create a new object of the class itkCastImageFilterICVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterICVF33IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterICVF33IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterICVF33IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterICVF33IVF33 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterICVF33IVF33_swigregister(itkCastImageFilterICVF33IVF33)
itkCastImageFilterICVF33IVF33___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterICVF33IVF33___New_orig__
itkCastImageFilterICVF33IVF33_cast = _itkCastImageFilterPython.itkCastImageFilterICVF33IVF33_cast


def itkCastImageFilterICVF42ICVF42_New():
    return itkCastImageFilterICVF42ICVF42.New()

class itkCastImageFilterICVF42ICVF42(itkCastImageFilterICVF42ICVF42_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF42ICVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF42ICVF42_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterICVF42ICVF42
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF42ICVF42_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterICVF42ICVF42

        Create a new object of the class itkCastImageFilterICVF42ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterICVF42ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterICVF42ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterICVF42ICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterICVF42ICVF42 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterICVF42ICVF42_swigregister(itkCastImageFilterICVF42ICVF42)
itkCastImageFilterICVF42ICVF42___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterICVF42ICVF42___New_orig__
itkCastImageFilterICVF42ICVF42_cast = _itkCastImageFilterPython.itkCastImageFilterICVF42ICVF42_cast


def itkCastImageFilterICVF42IVF42_New():
    return itkCastImageFilterICVF42IVF42.New()

class itkCastImageFilterICVF42IVF42(itkCastImageFilterICVF42IVF42_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF42IVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF42IVF42_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterICVF42IVF42
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF42IVF42_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterICVF42IVF42

        Create a new object of the class itkCastImageFilterICVF42IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterICVF42IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterICVF42IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterICVF42IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterICVF42IVF42 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterICVF42IVF42_swigregister(itkCastImageFilterICVF42IVF42)
itkCastImageFilterICVF42IVF42___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterICVF42IVF42___New_orig__
itkCastImageFilterICVF42IVF42_cast = _itkCastImageFilterPython.itkCastImageFilterICVF42IVF42_cast


def itkCastImageFilterICVF43ICVF43_New():
    return itkCastImageFilterICVF43ICVF43.New()

class itkCastImageFilterICVF43ICVF43(itkCastImageFilterICVF43ICVF43_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF43ICVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF43ICVF43_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterICVF43ICVF43
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF43ICVF43_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterICVF43ICVF43

        Create a new object of the class itkCastImageFilterICVF43ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterICVF43ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterICVF43ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterICVF43ICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterICVF43ICVF43 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterICVF43ICVF43_swigregister(itkCastImageFilterICVF43ICVF43)
itkCastImageFilterICVF43ICVF43___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterICVF43ICVF43___New_orig__
itkCastImageFilterICVF43ICVF43_cast = _itkCastImageFilterPython.itkCastImageFilterICVF43ICVF43_cast


def itkCastImageFilterICVF43IVF43_New():
    return itkCastImageFilterICVF43IVF43.New()

class itkCastImageFilterICVF43IVF43(itkCastImageFilterICVF43IVF43_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF43IVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterICVF43IVF43_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterICVF43IVF43
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterICVF43IVF43_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterICVF43IVF43

        Create a new object of the class itkCastImageFilterICVF43IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterICVF43IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterICVF43IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterICVF43IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterICVF43IVF43 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterICVF43IVF43_swigregister(itkCastImageFilterICVF43IVF43)
itkCastImageFilterICVF43IVF43___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterICVF43IVF43___New_orig__
itkCastImageFilterICVF43IVF43_cast = _itkCastImageFilterPython.itkCastImageFilterICVF43IVF43_cast


def itkCastImageFilterID2ID2_New():
    return itkCastImageFilterID2ID2.New()

class itkCastImageFilterID2ID2(itkCastImageFilterID2ID2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2ID2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterID2ID2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterID2ID2

        Create a new object of the class itkCastImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterID2ID2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterID2ID2_swigregister(itkCastImageFilterID2ID2)
itkCastImageFilterID2ID2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterID2ID2___New_orig__
itkCastImageFilterID2ID2_cast = _itkCastImageFilterPython.itkCastImageFilterID2ID2_cast


def itkCastImageFilterID2IF2_New():
    return itkCastImageFilterID2IF2.New()

class itkCastImageFilterID2IF2(itkCastImageFilterID2IF2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2IF2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterID2IF2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterID2IF2

        Create a new object of the class itkCastImageFilterID2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterID2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterID2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterID2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterID2IF2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterID2IF2_swigregister(itkCastImageFilterID2IF2)
itkCastImageFilterID2IF2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterID2IF2___New_orig__
itkCastImageFilterID2IF2_cast = _itkCastImageFilterPython.itkCastImageFilterID2IF2_cast


def itkCastImageFilterID2ISS2_New():
    return itkCastImageFilterID2ISS2.New()

class itkCastImageFilterID2ISS2(itkCastImageFilterID2ISS2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2ISS2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterID2ISS2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterID2ISS2

        Create a new object of the class itkCastImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterID2ISS2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterID2ISS2_swigregister(itkCastImageFilterID2ISS2)
itkCastImageFilterID2ISS2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterID2ISS2___New_orig__
itkCastImageFilterID2ISS2_cast = _itkCastImageFilterPython.itkCastImageFilterID2ISS2_cast


def itkCastImageFilterID2IUC2_New():
    return itkCastImageFilterID2IUC2.New()

class itkCastImageFilterID2IUC2(itkCastImageFilterID2IUC2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2IUC2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterID2IUC2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterID2IUC2

        Create a new object of the class itkCastImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterID2IUC2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterID2IUC2_swigregister(itkCastImageFilterID2IUC2)
itkCastImageFilterID2IUC2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterID2IUC2___New_orig__
itkCastImageFilterID2IUC2_cast = _itkCastImageFilterPython.itkCastImageFilterID2IUC2_cast


def itkCastImageFilterID2IUL2_New():
    return itkCastImageFilterID2IUL2.New()

class itkCastImageFilterID2IUL2(itkCastImageFilterID2IUL2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID2IUL2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2IUL2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterID2IUL2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID2IUL2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterID2IUL2

        Create a new object of the class itkCastImageFilterID2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterID2IUL2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterID2IUL2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterID2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterID2IUL2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterID2IUL2_swigregister(itkCastImageFilterID2IUL2)
itkCastImageFilterID2IUL2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterID2IUL2___New_orig__
itkCastImageFilterID2IUL2_cast = _itkCastImageFilterPython.itkCastImageFilterID2IUL2_cast


def itkCastImageFilterID2IUS2_New():
    return itkCastImageFilterID2IUS2.New()

class itkCastImageFilterID2IUS2(itkCastImageFilterID2IUS2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID2IUS2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterID2IUS2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterID2IUS2

        Create a new object of the class itkCastImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterID2IUS2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterID2IUS2_swigregister(itkCastImageFilterID2IUS2)
itkCastImageFilterID2IUS2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterID2IUS2___New_orig__
itkCastImageFilterID2IUS2_cast = _itkCastImageFilterPython.itkCastImageFilterID2IUS2_cast


def itkCastImageFilterID3ID3_New():
    return itkCastImageFilterID3ID3.New()

class itkCastImageFilterID3ID3(itkCastImageFilterID3ID3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3ID3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterID3ID3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterID3ID3

        Create a new object of the class itkCastImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterID3ID3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterID3ID3_swigregister(itkCastImageFilterID3ID3)
itkCastImageFilterID3ID3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterID3ID3___New_orig__
itkCastImageFilterID3ID3_cast = _itkCastImageFilterPython.itkCastImageFilterID3ID3_cast


def itkCastImageFilterID3IF3_New():
    return itkCastImageFilterID3IF3.New()

class itkCastImageFilterID3IF3(itkCastImageFilterID3IF3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3IF3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterID3IF3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterID3IF3

        Create a new object of the class itkCastImageFilterID3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterID3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterID3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterID3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterID3IF3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterID3IF3_swigregister(itkCastImageFilterID3IF3)
itkCastImageFilterID3IF3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterID3IF3___New_orig__
itkCastImageFilterID3IF3_cast = _itkCastImageFilterPython.itkCastImageFilterID3IF3_cast


def itkCastImageFilterID3ISS3_New():
    return itkCastImageFilterID3ISS3.New()

class itkCastImageFilterID3ISS3(itkCastImageFilterID3ISS3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3ISS3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterID3ISS3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterID3ISS3

        Create a new object of the class itkCastImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterID3ISS3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterID3ISS3_swigregister(itkCastImageFilterID3ISS3)
itkCastImageFilterID3ISS3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterID3ISS3___New_orig__
itkCastImageFilterID3ISS3_cast = _itkCastImageFilterPython.itkCastImageFilterID3ISS3_cast


def itkCastImageFilterID3IUC3_New():
    return itkCastImageFilterID3IUC3.New()

class itkCastImageFilterID3IUC3(itkCastImageFilterID3IUC3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3IUC3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterID3IUC3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterID3IUC3

        Create a new object of the class itkCastImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterID3IUC3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterID3IUC3_swigregister(itkCastImageFilterID3IUC3)
itkCastImageFilterID3IUC3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterID3IUC3___New_orig__
itkCastImageFilterID3IUC3_cast = _itkCastImageFilterPython.itkCastImageFilterID3IUC3_cast


def itkCastImageFilterID3IUL3_New():
    return itkCastImageFilterID3IUL3.New()

class itkCastImageFilterID3IUL3(itkCastImageFilterID3IUL3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID3IUL3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3IUL3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterID3IUL3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID3IUL3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterID3IUL3

        Create a new object of the class itkCastImageFilterID3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterID3IUL3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterID3IUL3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterID3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterID3IUL3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterID3IUL3_swigregister(itkCastImageFilterID3IUL3)
itkCastImageFilterID3IUL3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterID3IUL3___New_orig__
itkCastImageFilterID3IUL3_cast = _itkCastImageFilterPython.itkCastImageFilterID3IUL3_cast


def itkCastImageFilterID3IUS3_New():
    return itkCastImageFilterID3IUS3.New()

class itkCastImageFilterID3IUS3(itkCastImageFilterID3IUS3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterID3IUS3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterID3IUS3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterID3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterID3IUS3

        Create a new object of the class itkCastImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterID3IUS3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterID3IUS3_swigregister(itkCastImageFilterID3IUS3)
itkCastImageFilterID3IUS3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterID3IUS3___New_orig__
itkCastImageFilterID3IUS3_cast = _itkCastImageFilterPython.itkCastImageFilterID3IUS3_cast


def itkCastImageFilterIF2ID2_New():
    return itkCastImageFilterIF2ID2.New()

class itkCastImageFilterIF2ID2(itkCastImageFilterIF2ID2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2ID2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIF2ID2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIF2ID2

        Create a new object of the class itkCastImageFilterIF2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIF2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIF2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIF2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIF2ID2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIF2ID2_swigregister(itkCastImageFilterIF2ID2)
itkCastImageFilterIF2ID2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIF2ID2___New_orig__
itkCastImageFilterIF2ID2_cast = _itkCastImageFilterPython.itkCastImageFilterIF2ID2_cast


def itkCastImageFilterIF2IF2_New():
    return itkCastImageFilterIF2IF2.New()

class itkCastImageFilterIF2IF2(itkCastImageFilterIF2IF2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2IF2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIF2IF2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIF2IF2

        Create a new object of the class itkCastImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIF2IF2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIF2IF2_swigregister(itkCastImageFilterIF2IF2)
itkCastImageFilterIF2IF2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIF2IF2___New_orig__
itkCastImageFilterIF2IF2_cast = _itkCastImageFilterPython.itkCastImageFilterIF2IF2_cast


def itkCastImageFilterIF2ISS2_New():
    return itkCastImageFilterIF2ISS2.New()

class itkCastImageFilterIF2ISS2(itkCastImageFilterIF2ISS2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2ISS2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIF2ISS2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIF2ISS2

        Create a new object of the class itkCastImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIF2ISS2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIF2ISS2_swigregister(itkCastImageFilterIF2ISS2)
itkCastImageFilterIF2ISS2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIF2ISS2___New_orig__
itkCastImageFilterIF2ISS2_cast = _itkCastImageFilterPython.itkCastImageFilterIF2ISS2_cast


def itkCastImageFilterIF2IUC2_New():
    return itkCastImageFilterIF2IUC2.New()

class itkCastImageFilterIF2IUC2(itkCastImageFilterIF2IUC2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUC2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIF2IUC2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIF2IUC2

        Create a new object of the class itkCastImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIF2IUC2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIF2IUC2_swigregister(itkCastImageFilterIF2IUC2)
itkCastImageFilterIF2IUC2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIF2IUC2___New_orig__
itkCastImageFilterIF2IUC2_cast = _itkCastImageFilterPython.itkCastImageFilterIF2IUC2_cast


def itkCastImageFilterIF2IUL2_New():
    return itkCastImageFilterIF2IUL2.New()

class itkCastImageFilterIF2IUL2(itkCastImageFilterIF2IUL2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUL2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUL2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIF2IUL2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUL2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIF2IUL2

        Create a new object of the class itkCastImageFilterIF2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIF2IUL2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIF2IUL2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIF2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIF2IUL2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIF2IUL2_swigregister(itkCastImageFilterIF2IUL2)
itkCastImageFilterIF2IUL2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIF2IUL2___New_orig__
itkCastImageFilterIF2IUL2_cast = _itkCastImageFilterPython.itkCastImageFilterIF2IUL2_cast


def itkCastImageFilterIF2IUS2_New():
    return itkCastImageFilterIF2IUS2.New()

class itkCastImageFilterIF2IUS2(itkCastImageFilterIF2IUS2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUS2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIF2IUS2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIF2IUS2

        Create a new object of the class itkCastImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIF2IUS2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIF2IUS2_swigregister(itkCastImageFilterIF2IUS2)
itkCastImageFilterIF2IUS2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIF2IUS2___New_orig__
itkCastImageFilterIF2IUS2_cast = _itkCastImageFilterPython.itkCastImageFilterIF2IUS2_cast


def itkCastImageFilterIF3ID3_New():
    return itkCastImageFilterIF3ID3.New()

class itkCastImageFilterIF3ID3(itkCastImageFilterIF3ID3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3ID3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIF3ID3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIF3ID3

        Create a new object of the class itkCastImageFilterIF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIF3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIF3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIF3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIF3ID3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIF3ID3_swigregister(itkCastImageFilterIF3ID3)
itkCastImageFilterIF3ID3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIF3ID3___New_orig__
itkCastImageFilterIF3ID3_cast = _itkCastImageFilterPython.itkCastImageFilterIF3ID3_cast


def itkCastImageFilterIF3IF3_New():
    return itkCastImageFilterIF3IF3.New()

class itkCastImageFilterIF3IF3(itkCastImageFilterIF3IF3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3IF3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIF3IF3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIF3IF3

        Create a new object of the class itkCastImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIF3IF3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIF3IF3_swigregister(itkCastImageFilterIF3IF3)
itkCastImageFilterIF3IF3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIF3IF3___New_orig__
itkCastImageFilterIF3IF3_cast = _itkCastImageFilterPython.itkCastImageFilterIF3IF3_cast


def itkCastImageFilterIF3ISS3_New():
    return itkCastImageFilterIF3ISS3.New()

class itkCastImageFilterIF3ISS3(itkCastImageFilterIF3ISS3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3ISS3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIF3ISS3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIF3ISS3

        Create a new object of the class itkCastImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIF3ISS3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIF3ISS3_swigregister(itkCastImageFilterIF3ISS3)
itkCastImageFilterIF3ISS3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIF3ISS3___New_orig__
itkCastImageFilterIF3ISS3_cast = _itkCastImageFilterPython.itkCastImageFilterIF3ISS3_cast


def itkCastImageFilterIF3IUC3_New():
    return itkCastImageFilterIF3IUC3.New()

class itkCastImageFilterIF3IUC3(itkCastImageFilterIF3IUC3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUC3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIF3IUC3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIF3IUC3

        Create a new object of the class itkCastImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIF3IUC3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIF3IUC3_swigregister(itkCastImageFilterIF3IUC3)
itkCastImageFilterIF3IUC3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIF3IUC3___New_orig__
itkCastImageFilterIF3IUC3_cast = _itkCastImageFilterPython.itkCastImageFilterIF3IUC3_cast


def itkCastImageFilterIF3IUL3_New():
    return itkCastImageFilterIF3IUL3.New()

class itkCastImageFilterIF3IUL3(itkCastImageFilterIF3IUL3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUL3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUL3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIF3IUL3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUL3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIF3IUL3

        Create a new object of the class itkCastImageFilterIF3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIF3IUL3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIF3IUL3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIF3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIF3IUL3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIF3IUL3_swigregister(itkCastImageFilterIF3IUL3)
itkCastImageFilterIF3IUL3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIF3IUL3___New_orig__
itkCastImageFilterIF3IUL3_cast = _itkCastImageFilterPython.itkCastImageFilterIF3IUL3_cast


def itkCastImageFilterIF3IUS3_New():
    return itkCastImageFilterIF3IUS3.New()

class itkCastImageFilterIF3IUS3(itkCastImageFilterIF3IUS3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUS3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIF3IUS3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIF3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIF3IUS3

        Create a new object of the class itkCastImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIF3IUS3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIF3IUS3_swigregister(itkCastImageFilterIF3IUS3)
itkCastImageFilterIF3IUS3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIF3IUS3___New_orig__
itkCastImageFilterIF3IUS3_cast = _itkCastImageFilterPython.itkCastImageFilterIF3IUS3_cast


def itkCastImageFilterIRGBUC2IRGBUC2_New():
    return itkCastImageFilterIRGBUC2IRGBUC2.New()

class itkCastImageFilterIRGBUC2IRGBUC2(itkCastImageFilterIRGBUC2IRGBUC2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIRGBUC2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIRGBUC2IRGBUC2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIRGBUC2IRGBUC2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIRGBUC2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIRGBUC2IRGBUC2

        Create a new object of the class itkCastImageFilterIRGBUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIRGBUC2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIRGBUC2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIRGBUC2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIRGBUC2IRGBUC2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIRGBUC2IRGBUC2_swigregister(itkCastImageFilterIRGBUC2IRGBUC2)
itkCastImageFilterIRGBUC2IRGBUC2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIRGBUC2IRGBUC2___New_orig__
itkCastImageFilterIRGBUC2IRGBUC2_cast = _itkCastImageFilterPython.itkCastImageFilterIRGBUC2IRGBUC2_cast


def itkCastImageFilterIRGBUC3IRGBUC3_New():
    return itkCastImageFilterIRGBUC3IRGBUC3.New()

class itkCastImageFilterIRGBUC3IRGBUC3(itkCastImageFilterIRGBUC3IRGBUC3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIRGBUC3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIRGBUC3IRGBUC3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIRGBUC3IRGBUC3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIRGBUC3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIRGBUC3IRGBUC3

        Create a new object of the class itkCastImageFilterIRGBUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIRGBUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIRGBUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIRGBUC3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIRGBUC3IRGBUC3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIRGBUC3IRGBUC3_swigregister(itkCastImageFilterIRGBUC3IRGBUC3)
itkCastImageFilterIRGBUC3IRGBUC3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIRGBUC3IRGBUC3___New_orig__
itkCastImageFilterIRGBUC3IRGBUC3_cast = _itkCastImageFilterPython.itkCastImageFilterIRGBUC3IRGBUC3_cast


def itkCastImageFilterISS2ID2_New():
    return itkCastImageFilterISS2ID2.New()

class itkCastImageFilterISS2ID2(itkCastImageFilterISS2ID2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2ID2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterISS2ID2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterISS2ID2

        Create a new object of the class itkCastImageFilterISS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterISS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterISS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterISS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterISS2ID2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterISS2ID2_swigregister(itkCastImageFilterISS2ID2)
itkCastImageFilterISS2ID2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterISS2ID2___New_orig__
itkCastImageFilterISS2ID2_cast = _itkCastImageFilterPython.itkCastImageFilterISS2ID2_cast


def itkCastImageFilterISS2IF2_New():
    return itkCastImageFilterISS2IF2.New()

class itkCastImageFilterISS2IF2(itkCastImageFilterISS2IF2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2IF2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterISS2IF2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterISS2IF2

        Create a new object of the class itkCastImageFilterISS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterISS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterISS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterISS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterISS2IF2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterISS2IF2_swigregister(itkCastImageFilterISS2IF2)
itkCastImageFilterISS2IF2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterISS2IF2___New_orig__
itkCastImageFilterISS2IF2_cast = _itkCastImageFilterPython.itkCastImageFilterISS2IF2_cast


def itkCastImageFilterISS2ISS2_New():
    return itkCastImageFilterISS2ISS2.New()

class itkCastImageFilterISS2ISS2(itkCastImageFilterISS2ISS2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2ISS2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterISS2ISS2

        Create a new object of the class itkCastImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterISS2ISS2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterISS2ISS2_swigregister(itkCastImageFilterISS2ISS2)
itkCastImageFilterISS2ISS2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterISS2ISS2___New_orig__
itkCastImageFilterISS2ISS2_cast = _itkCastImageFilterPython.itkCastImageFilterISS2ISS2_cast


def itkCastImageFilterISS2IUC2_New():
    return itkCastImageFilterISS2IUC2.New()

class itkCastImageFilterISS2IUC2(itkCastImageFilterISS2IUC2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUC2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterISS2IUC2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterISS2IUC2

        Create a new object of the class itkCastImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterISS2IUC2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterISS2IUC2_swigregister(itkCastImageFilterISS2IUC2)
itkCastImageFilterISS2IUC2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterISS2IUC2___New_orig__
itkCastImageFilterISS2IUC2_cast = _itkCastImageFilterPython.itkCastImageFilterISS2IUC2_cast


def itkCastImageFilterISS2IUL2_New():
    return itkCastImageFilterISS2IUL2.New()

class itkCastImageFilterISS2IUL2(itkCastImageFilterISS2IUL2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUL2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUL2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterISS2IUL2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUL2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterISS2IUL2

        Create a new object of the class itkCastImageFilterISS2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterISS2IUL2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterISS2IUL2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterISS2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterISS2IUL2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterISS2IUL2_swigregister(itkCastImageFilterISS2IUL2)
itkCastImageFilterISS2IUL2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterISS2IUL2___New_orig__
itkCastImageFilterISS2IUL2_cast = _itkCastImageFilterPython.itkCastImageFilterISS2IUL2_cast


def itkCastImageFilterISS2IUS2_New():
    return itkCastImageFilterISS2IUS2.New()

class itkCastImageFilterISS2IUS2(itkCastImageFilterISS2IUS2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUS2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterISS2IUS2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterISS2IUS2

        Create a new object of the class itkCastImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterISS2IUS2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterISS2IUS2_swigregister(itkCastImageFilterISS2IUS2)
itkCastImageFilterISS2IUS2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterISS2IUS2___New_orig__
itkCastImageFilterISS2IUS2_cast = _itkCastImageFilterPython.itkCastImageFilterISS2IUS2_cast


def itkCastImageFilterISS3ID3_New():
    return itkCastImageFilterISS3ID3.New()

class itkCastImageFilterISS3ID3(itkCastImageFilterISS3ID3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3ID3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterISS3ID3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterISS3ID3

        Create a new object of the class itkCastImageFilterISS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterISS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterISS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterISS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterISS3ID3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterISS3ID3_swigregister(itkCastImageFilterISS3ID3)
itkCastImageFilterISS3ID3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterISS3ID3___New_orig__
itkCastImageFilterISS3ID3_cast = _itkCastImageFilterPython.itkCastImageFilterISS3ID3_cast


def itkCastImageFilterISS3IF3_New():
    return itkCastImageFilterISS3IF3.New()

class itkCastImageFilterISS3IF3(itkCastImageFilterISS3IF3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3IF3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterISS3IF3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterISS3IF3

        Create a new object of the class itkCastImageFilterISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterISS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterISS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterISS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterISS3IF3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterISS3IF3_swigregister(itkCastImageFilterISS3IF3)
itkCastImageFilterISS3IF3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterISS3IF3___New_orig__
itkCastImageFilterISS3IF3_cast = _itkCastImageFilterPython.itkCastImageFilterISS3IF3_cast


def itkCastImageFilterISS3ISS3_New():
    return itkCastImageFilterISS3ISS3.New()

class itkCastImageFilterISS3ISS3(itkCastImageFilterISS3ISS3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3ISS3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterISS3ISS3

        Create a new object of the class itkCastImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterISS3ISS3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterISS3ISS3_swigregister(itkCastImageFilterISS3ISS3)
itkCastImageFilterISS3ISS3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterISS3ISS3___New_orig__
itkCastImageFilterISS3ISS3_cast = _itkCastImageFilterPython.itkCastImageFilterISS3ISS3_cast


def itkCastImageFilterISS3IUC3_New():
    return itkCastImageFilterISS3IUC3.New()

class itkCastImageFilterISS3IUC3(itkCastImageFilterISS3IUC3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUC3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterISS3IUC3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterISS3IUC3

        Create a new object of the class itkCastImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterISS3IUC3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterISS3IUC3_swigregister(itkCastImageFilterISS3IUC3)
itkCastImageFilterISS3IUC3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterISS3IUC3___New_orig__
itkCastImageFilterISS3IUC3_cast = _itkCastImageFilterPython.itkCastImageFilterISS3IUC3_cast


def itkCastImageFilterISS3IUL3_New():
    return itkCastImageFilterISS3IUL3.New()

class itkCastImageFilterISS3IUL3(itkCastImageFilterISS3IUL3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUL3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUL3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterISS3IUL3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUL3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterISS3IUL3

        Create a new object of the class itkCastImageFilterISS3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterISS3IUL3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterISS3IUL3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterISS3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterISS3IUL3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterISS3IUL3_swigregister(itkCastImageFilterISS3IUL3)
itkCastImageFilterISS3IUL3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterISS3IUL3___New_orig__
itkCastImageFilterISS3IUL3_cast = _itkCastImageFilterPython.itkCastImageFilterISS3IUL3_cast


def itkCastImageFilterISS3IUS3_New():
    return itkCastImageFilterISS3IUS3.New()

class itkCastImageFilterISS3IUS3(itkCastImageFilterISS3IUS3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUS3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterISS3IUS3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterISS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterISS3IUS3

        Create a new object of the class itkCastImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterISS3IUS3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterISS3IUS3_swigregister(itkCastImageFilterISS3IUS3)
itkCastImageFilterISS3IUS3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterISS3IUS3___New_orig__
itkCastImageFilterISS3IUS3_cast = _itkCastImageFilterPython.itkCastImageFilterISS3IUS3_cast


def itkCastImageFilterIUC2ID2_New():
    return itkCastImageFilterIUC2ID2.New()

class itkCastImageFilterIUC2ID2(itkCastImageFilterIUC2ID2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2ID2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUC2ID2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUC2ID2

        Create a new object of the class itkCastImageFilterIUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUC2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUC2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUC2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUC2ID2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUC2ID2_swigregister(itkCastImageFilterIUC2ID2)
itkCastImageFilterIUC2ID2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUC2ID2___New_orig__
itkCastImageFilterIUC2ID2_cast = _itkCastImageFilterPython.itkCastImageFilterIUC2ID2_cast


def itkCastImageFilterIUC2IF2_New():
    return itkCastImageFilterIUC2IF2.New()

class itkCastImageFilterIUC2IF2(itkCastImageFilterIUC2IF2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IF2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUC2IF2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUC2IF2

        Create a new object of the class itkCastImageFilterIUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUC2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUC2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUC2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUC2IF2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUC2IF2_swigregister(itkCastImageFilterIUC2IF2)
itkCastImageFilterIUC2IF2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUC2IF2___New_orig__
itkCastImageFilterIUC2IF2_cast = _itkCastImageFilterPython.itkCastImageFilterIUC2IF2_cast


def itkCastImageFilterIUC2ISS2_New():
    return itkCastImageFilterIUC2ISS2.New()

class itkCastImageFilterIUC2ISS2(itkCastImageFilterIUC2ISS2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2ISS2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUC2ISS2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUC2ISS2

        Create a new object of the class itkCastImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUC2ISS2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUC2ISS2_swigregister(itkCastImageFilterIUC2ISS2)
itkCastImageFilterIUC2ISS2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUC2ISS2___New_orig__
itkCastImageFilterIUC2ISS2_cast = _itkCastImageFilterPython.itkCastImageFilterIUC2ISS2_cast


def itkCastImageFilterIUC2IUC2_New():
    return itkCastImageFilterIUC2IUC2.New()

class itkCastImageFilterIUC2IUC2(itkCastImageFilterIUC2IUC2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUC2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUC2IUC2

        Create a new object of the class itkCastImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUC2IUC2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUC2IUC2_swigregister(itkCastImageFilterIUC2IUC2)
itkCastImageFilterIUC2IUC2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUC2IUC2___New_orig__
itkCastImageFilterIUC2IUC2_cast = _itkCastImageFilterPython.itkCastImageFilterIUC2IUC2_cast


def itkCastImageFilterIUC2IUL2_New():
    return itkCastImageFilterIUC2IUL2.New()

class itkCastImageFilterIUC2IUL2(itkCastImageFilterIUC2IUL2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUL2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUL2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUC2IUL2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUL2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUC2IUL2

        Create a new object of the class itkCastImageFilterIUC2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUC2IUL2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUC2IUL2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUC2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUC2IUL2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUC2IUL2_swigregister(itkCastImageFilterIUC2IUL2)
itkCastImageFilterIUC2IUL2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUC2IUL2___New_orig__
itkCastImageFilterIUC2IUL2_cast = _itkCastImageFilterPython.itkCastImageFilterIUC2IUL2_cast


def itkCastImageFilterIUC2IUS2_New():
    return itkCastImageFilterIUC2IUS2.New()

class itkCastImageFilterIUC2IUS2(itkCastImageFilterIUC2IUS2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUS2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUC2IUS2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUC2IUS2

        Create a new object of the class itkCastImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUC2IUS2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUC2IUS2_swigregister(itkCastImageFilterIUC2IUS2)
itkCastImageFilterIUC2IUS2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUC2IUS2___New_orig__
itkCastImageFilterIUC2IUS2_cast = _itkCastImageFilterPython.itkCastImageFilterIUC2IUS2_cast


def itkCastImageFilterIUC3ID3_New():
    return itkCastImageFilterIUC3ID3.New()

class itkCastImageFilterIUC3ID3(itkCastImageFilterIUC3ID3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3ID3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUC3ID3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUC3ID3

        Create a new object of the class itkCastImageFilterIUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUC3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUC3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUC3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUC3ID3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUC3ID3_swigregister(itkCastImageFilterIUC3ID3)
itkCastImageFilterIUC3ID3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUC3ID3___New_orig__
itkCastImageFilterIUC3ID3_cast = _itkCastImageFilterPython.itkCastImageFilterIUC3ID3_cast


def itkCastImageFilterIUC3IF3_New():
    return itkCastImageFilterIUC3IF3.New()

class itkCastImageFilterIUC3IF3(itkCastImageFilterIUC3IF3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IF3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUC3IF3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUC3IF3

        Create a new object of the class itkCastImageFilterIUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUC3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUC3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUC3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUC3IF3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUC3IF3_swigregister(itkCastImageFilterIUC3IF3)
itkCastImageFilterIUC3IF3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUC3IF3___New_orig__
itkCastImageFilterIUC3IF3_cast = _itkCastImageFilterPython.itkCastImageFilterIUC3IF3_cast


def itkCastImageFilterIUC3ISS3_New():
    return itkCastImageFilterIUC3ISS3.New()

class itkCastImageFilterIUC3ISS3(itkCastImageFilterIUC3ISS3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3ISS3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUC3ISS3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUC3ISS3

        Create a new object of the class itkCastImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUC3ISS3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUC3ISS3_swigregister(itkCastImageFilterIUC3ISS3)
itkCastImageFilterIUC3ISS3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUC3ISS3___New_orig__
itkCastImageFilterIUC3ISS3_cast = _itkCastImageFilterPython.itkCastImageFilterIUC3ISS3_cast


def itkCastImageFilterIUC3IUC3_New():
    return itkCastImageFilterIUC3IUC3.New()

class itkCastImageFilterIUC3IUC3(itkCastImageFilterIUC3IUC3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUC3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUC3IUC3

        Create a new object of the class itkCastImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUC3IUC3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUC3IUC3_swigregister(itkCastImageFilterIUC3IUC3)
itkCastImageFilterIUC3IUC3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUC3IUC3___New_orig__
itkCastImageFilterIUC3IUC3_cast = _itkCastImageFilterPython.itkCastImageFilterIUC3IUC3_cast


def itkCastImageFilterIUC3IUL3_New():
    return itkCastImageFilterIUC3IUL3.New()

class itkCastImageFilterIUC3IUL3(itkCastImageFilterIUC3IUL3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUL3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUL3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUC3IUL3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUL3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUC3IUL3

        Create a new object of the class itkCastImageFilterIUC3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUC3IUL3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUC3IUL3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUC3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUC3IUL3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUC3IUL3_swigregister(itkCastImageFilterIUC3IUL3)
itkCastImageFilterIUC3IUL3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUC3IUL3___New_orig__
itkCastImageFilterIUC3IUL3_cast = _itkCastImageFilterPython.itkCastImageFilterIUC3IUL3_cast


def itkCastImageFilterIUC3IUS3_New():
    return itkCastImageFilterIUC3IUS3.New()

class itkCastImageFilterIUC3IUS3(itkCastImageFilterIUC3IUS3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUS3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUC3IUS3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUC3IUS3

        Create a new object of the class itkCastImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUC3IUS3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUC3IUS3_swigregister(itkCastImageFilterIUC3IUS3)
itkCastImageFilterIUC3IUS3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUC3IUS3___New_orig__
itkCastImageFilterIUC3IUS3_cast = _itkCastImageFilterPython.itkCastImageFilterIUC3IUS3_cast


def itkCastImageFilterIUL2ID2_New():
    return itkCastImageFilterIUL2ID2.New()

class itkCastImageFilterIUL2ID2(itkCastImageFilterIUL2ID2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2ID2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUL2ID2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUL2ID2

        Create a new object of the class itkCastImageFilterIUL2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUL2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUL2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUL2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUL2ID2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUL2ID2_swigregister(itkCastImageFilterIUL2ID2)
itkCastImageFilterIUL2ID2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUL2ID2___New_orig__
itkCastImageFilterIUL2ID2_cast = _itkCastImageFilterPython.itkCastImageFilterIUL2ID2_cast


def itkCastImageFilterIUL2IF2_New():
    return itkCastImageFilterIUL2IF2.New()

class itkCastImageFilterIUL2IF2(itkCastImageFilterIUL2IF2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IF2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUL2IF2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUL2IF2

        Create a new object of the class itkCastImageFilterIUL2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUL2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUL2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUL2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUL2IF2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUL2IF2_swigregister(itkCastImageFilterIUL2IF2)
itkCastImageFilterIUL2IF2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUL2IF2___New_orig__
itkCastImageFilterIUL2IF2_cast = _itkCastImageFilterPython.itkCastImageFilterIUL2IF2_cast


def itkCastImageFilterIUL2ISS2_New():
    return itkCastImageFilterIUL2ISS2.New()

class itkCastImageFilterIUL2ISS2(itkCastImageFilterIUL2ISS2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2ISS2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUL2ISS2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUL2ISS2

        Create a new object of the class itkCastImageFilterIUL2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUL2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUL2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUL2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUL2ISS2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUL2ISS2_swigregister(itkCastImageFilterIUL2ISS2)
itkCastImageFilterIUL2ISS2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUL2ISS2___New_orig__
itkCastImageFilterIUL2ISS2_cast = _itkCastImageFilterPython.itkCastImageFilterIUL2ISS2_cast


def itkCastImageFilterIUL2IUC2_New():
    return itkCastImageFilterIUL2IUC2.New()

class itkCastImageFilterIUL2IUC2(itkCastImageFilterIUL2IUC2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUC2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUL2IUC2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUL2IUC2

        Create a new object of the class itkCastImageFilterIUL2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUL2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUL2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUL2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUL2IUC2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUL2IUC2_swigregister(itkCastImageFilterIUL2IUC2)
itkCastImageFilterIUL2IUC2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUL2IUC2___New_orig__
itkCastImageFilterIUL2IUC2_cast = _itkCastImageFilterPython.itkCastImageFilterIUL2IUC2_cast


def itkCastImageFilterIUL2IUL2_New():
    return itkCastImageFilterIUL2IUL2.New()

class itkCastImageFilterIUL2IUL2(itkCastImageFilterIUL2IUL2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUL2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUL2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUL2IUL2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUL2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUL2IUL2

        Create a new object of the class itkCastImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUL2IUL2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUL2IUL2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUL2IUL2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUL2IUL2_swigregister(itkCastImageFilterIUL2IUL2)
itkCastImageFilterIUL2IUL2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUL2IUL2___New_orig__
itkCastImageFilterIUL2IUL2_cast = _itkCastImageFilterPython.itkCastImageFilterIUL2IUL2_cast


def itkCastImageFilterIUL2IUS2_New():
    return itkCastImageFilterIUL2IUS2.New()

class itkCastImageFilterIUL2IUS2(itkCastImageFilterIUL2IUS2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUS2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUL2IUS2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUL2IUS2

        Create a new object of the class itkCastImageFilterIUL2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUL2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUL2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUL2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUL2IUS2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUL2IUS2_swigregister(itkCastImageFilterIUL2IUS2)
itkCastImageFilterIUL2IUS2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUL2IUS2___New_orig__
itkCastImageFilterIUL2IUS2_cast = _itkCastImageFilterPython.itkCastImageFilterIUL2IUS2_cast


def itkCastImageFilterIUL3ID3_New():
    return itkCastImageFilterIUL3ID3.New()

class itkCastImageFilterIUL3ID3(itkCastImageFilterIUL3ID3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3ID3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUL3ID3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUL3ID3

        Create a new object of the class itkCastImageFilterIUL3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUL3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUL3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUL3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUL3ID3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUL3ID3_swigregister(itkCastImageFilterIUL3ID3)
itkCastImageFilterIUL3ID3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUL3ID3___New_orig__
itkCastImageFilterIUL3ID3_cast = _itkCastImageFilterPython.itkCastImageFilterIUL3ID3_cast


def itkCastImageFilterIUL3IF3_New():
    return itkCastImageFilterIUL3IF3.New()

class itkCastImageFilterIUL3IF3(itkCastImageFilterIUL3IF3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IF3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUL3IF3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUL3IF3

        Create a new object of the class itkCastImageFilterIUL3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUL3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUL3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUL3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUL3IF3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUL3IF3_swigregister(itkCastImageFilterIUL3IF3)
itkCastImageFilterIUL3IF3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUL3IF3___New_orig__
itkCastImageFilterIUL3IF3_cast = _itkCastImageFilterPython.itkCastImageFilterIUL3IF3_cast


def itkCastImageFilterIUL3ISS3_New():
    return itkCastImageFilterIUL3ISS3.New()

class itkCastImageFilterIUL3ISS3(itkCastImageFilterIUL3ISS3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3ISS3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUL3ISS3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUL3ISS3

        Create a new object of the class itkCastImageFilterIUL3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUL3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUL3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUL3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUL3ISS3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUL3ISS3_swigregister(itkCastImageFilterIUL3ISS3)
itkCastImageFilterIUL3ISS3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUL3ISS3___New_orig__
itkCastImageFilterIUL3ISS3_cast = _itkCastImageFilterPython.itkCastImageFilterIUL3ISS3_cast


def itkCastImageFilterIUL3IUC3_New():
    return itkCastImageFilterIUL3IUC3.New()

class itkCastImageFilterIUL3IUC3(itkCastImageFilterIUL3IUC3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUC3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUL3IUC3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUL3IUC3

        Create a new object of the class itkCastImageFilterIUL3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUL3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUL3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUL3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUL3IUC3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUL3IUC3_swigregister(itkCastImageFilterIUL3IUC3)
itkCastImageFilterIUL3IUC3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUL3IUC3___New_orig__
itkCastImageFilterIUL3IUC3_cast = _itkCastImageFilterPython.itkCastImageFilterIUL3IUC3_cast


def itkCastImageFilterIUL3IUL3_New():
    return itkCastImageFilterIUL3IUL3.New()

class itkCastImageFilterIUL3IUL3(itkCastImageFilterIUL3IUL3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUL3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUL3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUL3IUL3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUL3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUL3IUL3

        Create a new object of the class itkCastImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUL3IUL3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUL3IUL3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUL3IUL3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUL3IUL3_swigregister(itkCastImageFilterIUL3IUL3)
itkCastImageFilterIUL3IUL3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUL3IUL3___New_orig__
itkCastImageFilterIUL3IUL3_cast = _itkCastImageFilterPython.itkCastImageFilterIUL3IUL3_cast


def itkCastImageFilterIUL3IUS3_New():
    return itkCastImageFilterIUL3IUS3.New()

class itkCastImageFilterIUL3IUS3(itkCastImageFilterIUL3IUS3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUS3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUL3IUS3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUL3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUL3IUS3

        Create a new object of the class itkCastImageFilterIUL3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUL3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUL3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUL3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUL3IUS3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUL3IUS3_swigregister(itkCastImageFilterIUL3IUS3)
itkCastImageFilterIUL3IUS3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUL3IUS3___New_orig__
itkCastImageFilterIUL3IUS3_cast = _itkCastImageFilterPython.itkCastImageFilterIUL3IUS3_cast


def itkCastImageFilterIULL2ISS2_New():
    return itkCastImageFilterIULL2ISS2.New()

class itkCastImageFilterIULL2ISS2(itkCastImageFilterIULL2ISS2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIULL2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL2ISS2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIULL2ISS2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIULL2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIULL2ISS2

        Create a new object of the class itkCastImageFilterIULL2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIULL2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIULL2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIULL2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIULL2ISS2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIULL2ISS2_swigregister(itkCastImageFilterIULL2ISS2)
itkCastImageFilterIULL2ISS2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIULL2ISS2___New_orig__
itkCastImageFilterIULL2ISS2_cast = _itkCastImageFilterPython.itkCastImageFilterIULL2ISS2_cast


def itkCastImageFilterIULL2IUC2_New():
    return itkCastImageFilterIULL2IUC2.New()

class itkCastImageFilterIULL2IUC2(itkCastImageFilterIULL2IUC2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIULL2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL2IUC2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIULL2IUC2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIULL2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIULL2IUC2

        Create a new object of the class itkCastImageFilterIULL2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIULL2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIULL2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIULL2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIULL2IUC2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIULL2IUC2_swigregister(itkCastImageFilterIULL2IUC2)
itkCastImageFilterIULL2IUC2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIULL2IUC2___New_orig__
itkCastImageFilterIULL2IUC2_cast = _itkCastImageFilterPython.itkCastImageFilterIULL2IUC2_cast


def itkCastImageFilterIULL2IUS2_New():
    return itkCastImageFilterIULL2IUS2.New()

class itkCastImageFilterIULL2IUS2(itkCastImageFilterIULL2IUS2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIULL2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL2IUS2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIULL2IUS2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIULL2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIULL2IUS2

        Create a new object of the class itkCastImageFilterIULL2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIULL2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIULL2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIULL2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIULL2IUS2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIULL2IUS2_swigregister(itkCastImageFilterIULL2IUS2)
itkCastImageFilterIULL2IUS2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIULL2IUS2___New_orig__
itkCastImageFilterIULL2IUS2_cast = _itkCastImageFilterPython.itkCastImageFilterIULL2IUS2_cast


def itkCastImageFilterIULL3ISS3_New():
    return itkCastImageFilterIULL3ISS3.New()

class itkCastImageFilterIULL3ISS3(itkCastImageFilterIULL3ISS3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIULL3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL3ISS3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIULL3ISS3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIULL3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIULL3ISS3

        Create a new object of the class itkCastImageFilterIULL3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIULL3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIULL3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIULL3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIULL3ISS3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIULL3ISS3_swigregister(itkCastImageFilterIULL3ISS3)
itkCastImageFilterIULL3ISS3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIULL3ISS3___New_orig__
itkCastImageFilterIULL3ISS3_cast = _itkCastImageFilterPython.itkCastImageFilterIULL3ISS3_cast


def itkCastImageFilterIULL3IUC3_New():
    return itkCastImageFilterIULL3IUC3.New()

class itkCastImageFilterIULL3IUC3(itkCastImageFilterIULL3IUC3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIULL3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL3IUC3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIULL3IUC3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIULL3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIULL3IUC3

        Create a new object of the class itkCastImageFilterIULL3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIULL3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIULL3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIULL3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIULL3IUC3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIULL3IUC3_swigregister(itkCastImageFilterIULL3IUC3)
itkCastImageFilterIULL3IUC3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIULL3IUC3___New_orig__
itkCastImageFilterIULL3IUC3_cast = _itkCastImageFilterPython.itkCastImageFilterIULL3IUC3_cast


def itkCastImageFilterIULL3IUS3_New():
    return itkCastImageFilterIULL3IUS3.New()

class itkCastImageFilterIULL3IUS3(itkCastImageFilterIULL3IUS3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIULL3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIULL3IUS3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIULL3IUS3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIULL3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIULL3IUS3

        Create a new object of the class itkCastImageFilterIULL3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIULL3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIULL3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIULL3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIULL3IUS3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIULL3IUS3_swigregister(itkCastImageFilterIULL3IUS3)
itkCastImageFilterIULL3IUS3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIULL3IUS3___New_orig__
itkCastImageFilterIULL3IUS3_cast = _itkCastImageFilterPython.itkCastImageFilterIULL3IUS3_cast


def itkCastImageFilterIUS2ID2_New():
    return itkCastImageFilterIUS2ID2.New()

class itkCastImageFilterIUS2ID2(itkCastImageFilterIUS2ID2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2ID2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUS2ID2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUS2ID2

        Create a new object of the class itkCastImageFilterIUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUS2ID2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUS2ID2_swigregister(itkCastImageFilterIUS2ID2)
itkCastImageFilterIUS2ID2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUS2ID2___New_orig__
itkCastImageFilterIUS2ID2_cast = _itkCastImageFilterPython.itkCastImageFilterIUS2ID2_cast


def itkCastImageFilterIUS2IF2_New():
    return itkCastImageFilterIUS2IF2.New()

class itkCastImageFilterIUS2IF2(itkCastImageFilterIUS2IF2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IF2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUS2IF2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUS2IF2

        Create a new object of the class itkCastImageFilterIUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUS2IF2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUS2IF2_swigregister(itkCastImageFilterIUS2IF2)
itkCastImageFilterIUS2IF2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUS2IF2___New_orig__
itkCastImageFilterIUS2IF2_cast = _itkCastImageFilterPython.itkCastImageFilterIUS2IF2_cast


def itkCastImageFilterIUS2ISS2_New():
    return itkCastImageFilterIUS2ISS2.New()

class itkCastImageFilterIUS2ISS2(itkCastImageFilterIUS2ISS2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2ISS2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUS2ISS2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUS2ISS2

        Create a new object of the class itkCastImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUS2ISS2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUS2ISS2_swigregister(itkCastImageFilterIUS2ISS2)
itkCastImageFilterIUS2ISS2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUS2ISS2___New_orig__
itkCastImageFilterIUS2ISS2_cast = _itkCastImageFilterPython.itkCastImageFilterIUS2ISS2_cast


def itkCastImageFilterIUS2IUC2_New():
    return itkCastImageFilterIUS2IUC2.New()

class itkCastImageFilterIUS2IUC2(itkCastImageFilterIUS2IUC2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUC2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUS2IUC2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUS2IUC2

        Create a new object of the class itkCastImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUS2IUC2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUS2IUC2_swigregister(itkCastImageFilterIUS2IUC2)
itkCastImageFilterIUS2IUC2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUS2IUC2___New_orig__
itkCastImageFilterIUS2IUC2_cast = _itkCastImageFilterPython.itkCastImageFilterIUS2IUC2_cast


def itkCastImageFilterIUS2IUL2_New():
    return itkCastImageFilterIUS2IUL2.New()

class itkCastImageFilterIUS2IUL2(itkCastImageFilterIUS2IUL2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUL2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUL2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUS2IUL2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUL2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUS2IUL2

        Create a new object of the class itkCastImageFilterIUS2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUS2IUL2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUS2IUL2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUS2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUS2IUL2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUS2IUL2_swigregister(itkCastImageFilterIUS2IUL2)
itkCastImageFilterIUS2IUL2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUS2IUL2___New_orig__
itkCastImageFilterIUS2IUL2_cast = _itkCastImageFilterPython.itkCastImageFilterIUS2IUL2_cast


def itkCastImageFilterIUS2IUS2_New():
    return itkCastImageFilterIUS2IUS2.New()

class itkCastImageFilterIUS2IUS2(itkCastImageFilterIUS2IUS2_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUS2_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUS2IUS2

        Create a new object of the class itkCastImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUS2IUS2 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUS2IUS2_swigregister(itkCastImageFilterIUS2IUS2)
itkCastImageFilterIUS2IUS2___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUS2IUS2___New_orig__
itkCastImageFilterIUS2IUS2_cast = _itkCastImageFilterPython.itkCastImageFilterIUS2IUS2_cast


def itkCastImageFilterIUS3ID3_New():
    return itkCastImageFilterIUS3ID3.New()

class itkCastImageFilterIUS3ID3(itkCastImageFilterIUS3ID3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3ID3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUS3ID3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUS3ID3

        Create a new object of the class itkCastImageFilterIUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUS3ID3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUS3ID3_swigregister(itkCastImageFilterIUS3ID3)
itkCastImageFilterIUS3ID3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUS3ID3___New_orig__
itkCastImageFilterIUS3ID3_cast = _itkCastImageFilterPython.itkCastImageFilterIUS3ID3_cast


def itkCastImageFilterIUS3IF3_New():
    return itkCastImageFilterIUS3IF3.New()

class itkCastImageFilterIUS3IF3(itkCastImageFilterIUS3IF3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IF3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUS3IF3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUS3IF3

        Create a new object of the class itkCastImageFilterIUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUS3IF3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUS3IF3_swigregister(itkCastImageFilterIUS3IF3)
itkCastImageFilterIUS3IF3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUS3IF3___New_orig__
itkCastImageFilterIUS3IF3_cast = _itkCastImageFilterPython.itkCastImageFilterIUS3IF3_cast


def itkCastImageFilterIUS3ISS3_New():
    return itkCastImageFilterIUS3ISS3.New()

class itkCastImageFilterIUS3ISS3(itkCastImageFilterIUS3ISS3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3ISS3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUS3ISS3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUS3ISS3

        Create a new object of the class itkCastImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUS3ISS3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUS3ISS3_swigregister(itkCastImageFilterIUS3ISS3)
itkCastImageFilterIUS3ISS3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUS3ISS3___New_orig__
itkCastImageFilterIUS3ISS3_cast = _itkCastImageFilterPython.itkCastImageFilterIUS3ISS3_cast


def itkCastImageFilterIUS3IUC3_New():
    return itkCastImageFilterIUS3IUC3.New()

class itkCastImageFilterIUS3IUC3(itkCastImageFilterIUS3IUC3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUC3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUS3IUC3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUS3IUC3

        Create a new object of the class itkCastImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUS3IUC3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUS3IUC3_swigregister(itkCastImageFilterIUS3IUC3)
itkCastImageFilterIUS3IUC3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUS3IUC3___New_orig__
itkCastImageFilterIUS3IUC3_cast = _itkCastImageFilterPython.itkCastImageFilterIUS3IUC3_cast


def itkCastImageFilterIUS3IUL3_New():
    return itkCastImageFilterIUS3IUL3.New()

class itkCastImageFilterIUS3IUL3(itkCastImageFilterIUS3IUL3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUL3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUL3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUS3IUL3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUL3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUS3IUL3

        Create a new object of the class itkCastImageFilterIUS3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUS3IUL3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUS3IUL3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUS3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUS3IUL3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUS3IUL3_swigregister(itkCastImageFilterIUS3IUL3)
itkCastImageFilterIUS3IUL3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUS3IUL3___New_orig__
itkCastImageFilterIUS3IUL3_cast = _itkCastImageFilterPython.itkCastImageFilterIUS3IUL3_cast


def itkCastImageFilterIUS3IUS3_New():
    return itkCastImageFilterIUS3IUS3.New()

class itkCastImageFilterIUS3IUS3(itkCastImageFilterIUS3IUS3_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUS3_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIUS3IUS3

        Create a new object of the class itkCastImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIUS3IUS3 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIUS3IUS3_swigregister(itkCastImageFilterIUS3IUS3)
itkCastImageFilterIUS3IUS3___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIUS3IUS3___New_orig__
itkCastImageFilterIUS3IUS3_cast = _itkCastImageFilterPython.itkCastImageFilterIUS3IUS3_cast


def itkCastImageFilterIVF22ICVF22_New():
    return itkCastImageFilterIVF22ICVF22.New()

class itkCastImageFilterIVF22ICVF22(itkCastImageFilterIVF22ICVF22_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF22ICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF22ICVF22_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIVF22ICVF22
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF22ICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIVF22ICVF22

        Create a new object of the class itkCastImageFilterIVF22ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIVF22ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIVF22ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIVF22ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIVF22ICVF22 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIVF22ICVF22_swigregister(itkCastImageFilterIVF22ICVF22)
itkCastImageFilterIVF22ICVF22___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIVF22ICVF22___New_orig__
itkCastImageFilterIVF22ICVF22_cast = _itkCastImageFilterPython.itkCastImageFilterIVF22ICVF22_cast


def itkCastImageFilterIVF22IVF22_New():
    return itkCastImageFilterIVF22IVF22.New()

class itkCastImageFilterIVF22IVF22(itkCastImageFilterIVF22IVF22_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF22IVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF22IVF22_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIVF22IVF22
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF22IVF22_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIVF22IVF22

        Create a new object of the class itkCastImageFilterIVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIVF22IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIVF22IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIVF22IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIVF22IVF22 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIVF22IVF22_swigregister(itkCastImageFilterIVF22IVF22)
itkCastImageFilterIVF22IVF22___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIVF22IVF22___New_orig__
itkCastImageFilterIVF22IVF22_cast = _itkCastImageFilterPython.itkCastImageFilterIVF22IVF22_cast


def itkCastImageFilterIVF23ICVF23_New():
    return itkCastImageFilterIVF23ICVF23.New()

class itkCastImageFilterIVF23ICVF23(itkCastImageFilterIVF23ICVF23_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF23ICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF23ICVF23_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIVF23ICVF23
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF23ICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIVF23ICVF23

        Create a new object of the class itkCastImageFilterIVF23ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIVF23ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIVF23ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIVF23ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIVF23ICVF23 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIVF23ICVF23_swigregister(itkCastImageFilterIVF23ICVF23)
itkCastImageFilterIVF23ICVF23___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIVF23ICVF23___New_orig__
itkCastImageFilterIVF23ICVF23_cast = _itkCastImageFilterPython.itkCastImageFilterIVF23ICVF23_cast


def itkCastImageFilterIVF23IVF23_New():
    return itkCastImageFilterIVF23IVF23.New()

class itkCastImageFilterIVF23IVF23(itkCastImageFilterIVF23IVF23_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF23IVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF23IVF23_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIVF23IVF23
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF23IVF23_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIVF23IVF23

        Create a new object of the class itkCastImageFilterIVF23IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIVF23IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIVF23IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIVF23IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIVF23IVF23 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIVF23IVF23_swigregister(itkCastImageFilterIVF23IVF23)
itkCastImageFilterIVF23IVF23___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIVF23IVF23___New_orig__
itkCastImageFilterIVF23IVF23_cast = _itkCastImageFilterPython.itkCastImageFilterIVF23IVF23_cast


def itkCastImageFilterIVF32ICVF32_New():
    return itkCastImageFilterIVF32ICVF32.New()

class itkCastImageFilterIVF32ICVF32(itkCastImageFilterIVF32ICVF32_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF32ICVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF32ICVF32_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIVF32ICVF32
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF32ICVF32_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIVF32ICVF32

        Create a new object of the class itkCastImageFilterIVF32ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIVF32ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIVF32ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIVF32ICVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIVF32ICVF32 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIVF32ICVF32_swigregister(itkCastImageFilterIVF32ICVF32)
itkCastImageFilterIVF32ICVF32___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIVF32ICVF32___New_orig__
itkCastImageFilterIVF32ICVF32_cast = _itkCastImageFilterPython.itkCastImageFilterIVF32ICVF32_cast


def itkCastImageFilterIVF32IVF32_New():
    return itkCastImageFilterIVF32IVF32.New()

class itkCastImageFilterIVF32IVF32(itkCastImageFilterIVF32IVF32_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF32IVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF32IVF32_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIVF32IVF32
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF32IVF32_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIVF32IVF32

        Create a new object of the class itkCastImageFilterIVF32IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIVF32IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIVF32IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIVF32IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIVF32IVF32 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIVF32IVF32_swigregister(itkCastImageFilterIVF32IVF32)
itkCastImageFilterIVF32IVF32___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIVF32IVF32___New_orig__
itkCastImageFilterIVF32IVF32_cast = _itkCastImageFilterPython.itkCastImageFilterIVF32IVF32_cast


def itkCastImageFilterIVF33ICVF33_New():
    return itkCastImageFilterIVF33ICVF33.New()

class itkCastImageFilterIVF33ICVF33(itkCastImageFilterIVF33ICVF33_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF33ICVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF33ICVF33_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIVF33ICVF33
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF33ICVF33_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIVF33ICVF33

        Create a new object of the class itkCastImageFilterIVF33ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIVF33ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIVF33ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIVF33ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIVF33ICVF33 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIVF33ICVF33_swigregister(itkCastImageFilterIVF33ICVF33)
itkCastImageFilterIVF33ICVF33___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIVF33ICVF33___New_orig__
itkCastImageFilterIVF33ICVF33_cast = _itkCastImageFilterPython.itkCastImageFilterIVF33ICVF33_cast


def itkCastImageFilterIVF33IVF33_New():
    return itkCastImageFilterIVF33IVF33.New()

class itkCastImageFilterIVF33IVF33(itkCastImageFilterIVF33IVF33_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF33IVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF33IVF33_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIVF33IVF33
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF33IVF33_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIVF33IVF33

        Create a new object of the class itkCastImageFilterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIVF33IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIVF33IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIVF33IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIVF33IVF33 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIVF33IVF33_swigregister(itkCastImageFilterIVF33IVF33)
itkCastImageFilterIVF33IVF33___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIVF33IVF33___New_orig__
itkCastImageFilterIVF33IVF33_cast = _itkCastImageFilterPython.itkCastImageFilterIVF33IVF33_cast


def itkCastImageFilterIVF42ICVF42_New():
    return itkCastImageFilterIVF42ICVF42.New()

class itkCastImageFilterIVF42ICVF42(itkCastImageFilterIVF42ICVF42_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF42ICVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF42ICVF42_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIVF42ICVF42
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF42ICVF42_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIVF42ICVF42

        Create a new object of the class itkCastImageFilterIVF42ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIVF42ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIVF42ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIVF42ICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIVF42ICVF42 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIVF42ICVF42_swigregister(itkCastImageFilterIVF42ICVF42)
itkCastImageFilterIVF42ICVF42___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIVF42ICVF42___New_orig__
itkCastImageFilterIVF42ICVF42_cast = _itkCastImageFilterPython.itkCastImageFilterIVF42ICVF42_cast


def itkCastImageFilterIVF42IVF42_New():
    return itkCastImageFilterIVF42IVF42.New()

class itkCastImageFilterIVF42IVF42(itkCastImageFilterIVF42IVF42_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF42IVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF42IVF42_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIVF42IVF42
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF42IVF42_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIVF42IVF42

        Create a new object of the class itkCastImageFilterIVF42IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIVF42IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIVF42IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIVF42IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIVF42IVF42 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIVF42IVF42_swigregister(itkCastImageFilterIVF42IVF42)
itkCastImageFilterIVF42IVF42___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIVF42IVF42___New_orig__
itkCastImageFilterIVF42IVF42_cast = _itkCastImageFilterPython.itkCastImageFilterIVF42IVF42_cast


def itkCastImageFilterIVF43ICVF43_New():
    return itkCastImageFilterIVF43ICVF43.New()

class itkCastImageFilterIVF43ICVF43(itkCastImageFilterIVF43ICVF43_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF43ICVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF43ICVF43_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIVF43ICVF43
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF43ICVF43_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIVF43ICVF43

        Create a new object of the class itkCastImageFilterIVF43ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIVF43ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIVF43ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIVF43ICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIVF43ICVF43 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIVF43ICVF43_swigregister(itkCastImageFilterIVF43ICVF43)
itkCastImageFilterIVF43ICVF43___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIVF43ICVF43___New_orig__
itkCastImageFilterIVF43ICVF43_cast = _itkCastImageFilterPython.itkCastImageFilterIVF43ICVF43_cast


def itkCastImageFilterIVF43IVF43_New():
    return itkCastImageFilterIVF43IVF43.New()

class itkCastImageFilterIVF43IVF43(itkCastImageFilterIVF43IVF43_Superclass):
    r"""


    Casts input pixels to output pixel type.

    This filter is templated over the input image type and the output
    image type.

    A typical use is to cast a to a

    This filter can also be used to cast a to a

    If you need to perform a dimensionaly reduction, you may want to use
    the ExtractImageFilter instead of the CastImageFilter.

    See:  UnaryFunctorImageFilter

    See:  ExtractImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF43IVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkCastImageFilterPython.itkCastImageFilterIVF43IVF43_Clone)
    __swig_destroy__ = _itkCastImageFilterPython.delete_itkCastImageFilterIVF43IVF43
    cast = _swig_new_static_method(_itkCastImageFilterPython.itkCastImageFilterIVF43IVF43_cast)

    def New(*args, **kargs):
        """New() -> itkCastImageFilterIVF43IVF43

        Create a new object of the class itkCastImageFilterIVF43IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCastImageFilterIVF43IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCastImageFilterIVF43IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCastImageFilterIVF43IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCastImageFilterIVF43IVF43 in _itkCastImageFilterPython:
_itkCastImageFilterPython.itkCastImageFilterIVF43IVF43_swigregister(itkCastImageFilterIVF43IVF43)
itkCastImageFilterIVF43IVF43___New_orig__ = _itkCastImageFilterPython.itkCastImageFilterIVF43IVF43___New_orig__
itkCastImageFilterIVF43IVF43_cast = _itkCastImageFilterPython.itkCastImageFilterIVF43IVF43_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def cast_image_filter(*args, **kwargs):
    """Procedural interface for CastImageFilter"""
    import itk
    instance = itk.CastImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def cast_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.CastImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.CastImageFilter.values()[0]
    else:
        filter_object = itk.CastImageFilter

    cast_image_filter.__doc__ = filter_object.__doc__
    cast_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    cast_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.CastImageFilter, itkTemplate.itkTemplate):
        cast_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        cast_image_filter.__doc__ += "\n"
        cast_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        cast_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def in_place_image_filter(*args, **kwargs):
    """Procedural interface for InPlaceImageFilter"""
    import itk
    instance = itk.InPlaceImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def in_place_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.InPlaceImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.InPlaceImageFilter.values()[0]
    else:
        filter_object = itk.InPlaceImageFilter

    in_place_image_filter.__doc__ = filter_object.__doc__
    in_place_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    in_place_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.InPlaceImageFilter, itkTemplate.itkTemplate):
        in_place_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        in_place_image_filter.__doc__ += "\n"
        in_place_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        in_place_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



