# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKBinaryMathematicalMorphologyPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBinaryClosingByReconstructionImageFilterPython
else:
    import _itkBinaryClosingByReconstructionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkBinaryClosingByReconstructionImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkBinaryClosingByReconstructionImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkFlatStructuringElementPython
import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkNeighborhoodPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.itkRGBPixelPython
import itk.itkImagePython
import itk.itkPointPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkIndexPython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkBoxImageFilterPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython

def itkBinaryClosingByReconstructionImageFilterIUC2SE2_New():
    return itkBinaryClosingByReconstructionImageFilterIUC2SE2.New()

class itkBinaryClosingByReconstructionImageFilterIUC2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC2IUC2SE2):
    r"""


    binary closing by reconstruction of an image.

    This filter removes small (i.e., smaller than the structuring element)
    holes in the image. It is defined as: Closing(f) =
    ReconstructionByErosion(Dilation(f)).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/1926/584
    orhttp://www.insight-journal.org/browse/publication/176

    See:  MorphologyImageFilter, ClosingByReconstructionImageFilter,
    BinaryOpeningByReconstructionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUC2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUC2SE2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUC2SE2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUC2SE2_GetForegroundValue)
    SetFullyConnected = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUC2SE2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUC2SE2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUC2SE2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUC2SE2_FullyConnectedOff)
    __swig_destroy__ = _itkBinaryClosingByReconstructionImageFilterPython.delete_itkBinaryClosingByReconstructionImageFilterIUC2SE2
    cast = _swig_new_static_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUC2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryClosingByReconstructionImageFilterIUC2SE2

        Create a new object of the class itkBinaryClosingByReconstructionImageFilterIUC2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryClosingByReconstructionImageFilterIUC2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryClosingByReconstructionImageFilterIUC2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryClosingByReconstructionImageFilterIUC2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryClosingByReconstructionImageFilterIUC2SE2 in _itkBinaryClosingByReconstructionImageFilterPython:
_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUC2SE2_swigregister(itkBinaryClosingByReconstructionImageFilterIUC2SE2)
itkBinaryClosingByReconstructionImageFilterIUC2SE2___New_orig__ = _itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUC2SE2___New_orig__
itkBinaryClosingByReconstructionImageFilterIUC2SE2_cast = _itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUC2SE2_cast


def itkBinaryClosingByReconstructionImageFilterIUC3SE3_New():
    return itkBinaryClosingByReconstructionImageFilterIUC3SE3.New()

class itkBinaryClosingByReconstructionImageFilterIUC3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC3IUC3SE3):
    r"""


    binary closing by reconstruction of an image.

    This filter removes small (i.e., smaller than the structuring element)
    holes in the image. It is defined as: Closing(f) =
    ReconstructionByErosion(Dilation(f)).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/1926/584
    orhttp://www.insight-journal.org/browse/publication/176

    See:  MorphologyImageFilter, ClosingByReconstructionImageFilter,
    BinaryOpeningByReconstructionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUC3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUC3SE3_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUC3SE3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUC3SE3_GetForegroundValue)
    SetFullyConnected = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUC3SE3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUC3SE3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUC3SE3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUC3SE3_FullyConnectedOff)
    __swig_destroy__ = _itkBinaryClosingByReconstructionImageFilterPython.delete_itkBinaryClosingByReconstructionImageFilterIUC3SE3
    cast = _swig_new_static_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUC3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryClosingByReconstructionImageFilterIUC3SE3

        Create a new object of the class itkBinaryClosingByReconstructionImageFilterIUC3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryClosingByReconstructionImageFilterIUC3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryClosingByReconstructionImageFilterIUC3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryClosingByReconstructionImageFilterIUC3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryClosingByReconstructionImageFilterIUC3SE3 in _itkBinaryClosingByReconstructionImageFilterPython:
_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUC3SE3_swigregister(itkBinaryClosingByReconstructionImageFilterIUC3SE3)
itkBinaryClosingByReconstructionImageFilterIUC3SE3___New_orig__ = _itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUC3SE3___New_orig__
itkBinaryClosingByReconstructionImageFilterIUC3SE3_cast = _itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUC3SE3_cast


def itkBinaryClosingByReconstructionImageFilterIUS2SE2_New():
    return itkBinaryClosingByReconstructionImageFilterIUS2SE2.New()

class itkBinaryClosingByReconstructionImageFilterIUS2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS2IUS2SE2):
    r"""


    binary closing by reconstruction of an image.

    This filter removes small (i.e., smaller than the structuring element)
    holes in the image. It is defined as: Closing(f) =
    ReconstructionByErosion(Dilation(f)).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/1926/584
    orhttp://www.insight-journal.org/browse/publication/176

    See:  MorphologyImageFilter, ClosingByReconstructionImageFilter,
    BinaryOpeningByReconstructionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUS2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUS2SE2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUS2SE2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUS2SE2_GetForegroundValue)
    SetFullyConnected = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUS2SE2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUS2SE2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUS2SE2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUS2SE2_FullyConnectedOff)
    __swig_destroy__ = _itkBinaryClosingByReconstructionImageFilterPython.delete_itkBinaryClosingByReconstructionImageFilterIUS2SE2
    cast = _swig_new_static_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUS2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryClosingByReconstructionImageFilterIUS2SE2

        Create a new object of the class itkBinaryClosingByReconstructionImageFilterIUS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryClosingByReconstructionImageFilterIUS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryClosingByReconstructionImageFilterIUS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryClosingByReconstructionImageFilterIUS2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryClosingByReconstructionImageFilterIUS2SE2 in _itkBinaryClosingByReconstructionImageFilterPython:
_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUS2SE2_swigregister(itkBinaryClosingByReconstructionImageFilterIUS2SE2)
itkBinaryClosingByReconstructionImageFilterIUS2SE2___New_orig__ = _itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUS2SE2___New_orig__
itkBinaryClosingByReconstructionImageFilterIUS2SE2_cast = _itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUS2SE2_cast


def itkBinaryClosingByReconstructionImageFilterIUS3SE3_New():
    return itkBinaryClosingByReconstructionImageFilterIUS3SE3.New()

class itkBinaryClosingByReconstructionImageFilterIUS3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS3IUS3SE3):
    r"""


    binary closing by reconstruction of an image.

    This filter removes small (i.e., smaller than the structuring element)
    holes in the image. It is defined as: Closing(f) =
    ReconstructionByErosion(Dilation(f)).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/1926/584
    orhttp://www.insight-journal.org/browse/publication/176

    See:  MorphologyImageFilter, ClosingByReconstructionImageFilter,
    BinaryOpeningByReconstructionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUS3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUS3SE3_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUS3SE3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUS3SE3_GetForegroundValue)
    SetFullyConnected = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUS3SE3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUS3SE3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUS3SE3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUS3SE3_FullyConnectedOff)
    __swig_destroy__ = _itkBinaryClosingByReconstructionImageFilterPython.delete_itkBinaryClosingByReconstructionImageFilterIUS3SE3
    cast = _swig_new_static_method(_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUS3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryClosingByReconstructionImageFilterIUS3SE3

        Create a new object of the class itkBinaryClosingByReconstructionImageFilterIUS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryClosingByReconstructionImageFilterIUS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryClosingByReconstructionImageFilterIUS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryClosingByReconstructionImageFilterIUS3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryClosingByReconstructionImageFilterIUS3SE3 in _itkBinaryClosingByReconstructionImageFilterPython:
_itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUS3SE3_swigregister(itkBinaryClosingByReconstructionImageFilterIUS3SE3)
itkBinaryClosingByReconstructionImageFilterIUS3SE3___New_orig__ = _itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUS3SE3___New_orig__
itkBinaryClosingByReconstructionImageFilterIUS3SE3_cast = _itkBinaryClosingByReconstructionImageFilterPython.itkBinaryClosingByReconstructionImageFilterIUS3SE3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def binary_closing_by_reconstruction_image_filter(*args, **kwargs):
    """Procedural interface for BinaryClosingByReconstructionImageFilter"""
    import itk
    instance = itk.BinaryClosingByReconstructionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def binary_closing_by_reconstruction_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.BinaryClosingByReconstructionImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.BinaryClosingByReconstructionImageFilter.values()[0]
    else:
        filter_object = itk.BinaryClosingByReconstructionImageFilter

    binary_closing_by_reconstruction_image_filter.__doc__ = filter_object.__doc__
    binary_closing_by_reconstruction_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    binary_closing_by_reconstruction_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.BinaryClosingByReconstructionImageFilter, itkTemplate.itkTemplate):
        binary_closing_by_reconstruction_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        binary_closing_by_reconstruction_image_filter.__doc__ += "\n"
        binary_closing_by_reconstruction_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        binary_closing_by_reconstruction_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



