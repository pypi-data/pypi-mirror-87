# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKCommonPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkDefaultDynamicMeshTraitsPython
else:
    import _itkDefaultDynamicMeshTraitsPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkDefaultDynamicMeshTraitsPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkDefaultDynamicMeshTraitsPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.pyBasePython
class itkDefaultDynamicMeshTraitsD2(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsD2 self) -> itkDefaultDynamicMeshTraitsD2
        __init__(itkDefaultDynamicMeshTraitsD2 self, itkDefaultDynamicMeshTraitsD2 arg0) -> itkDefaultDynamicMeshTraitsD2


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD2_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsD2(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsD2

# Register itkDefaultDynamicMeshTraitsD2 in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD2_swigregister(itkDefaultDynamicMeshTraitsD2)

class itkDefaultDynamicMeshTraitsD22DD(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsD22DD self) -> itkDefaultDynamicMeshTraitsD22DD
        __init__(itkDefaultDynamicMeshTraitsD22DD self, itkDefaultDynamicMeshTraitsD22DD arg0) -> itkDefaultDynamicMeshTraitsD22DD


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD22DD_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsD22DD(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsD22DD

# Register itkDefaultDynamicMeshTraitsD22DD in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD22DD_swigregister(itkDefaultDynamicMeshTraitsD22DD)

class itkDefaultDynamicMeshTraitsD22DDD(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsD22DDD self) -> itkDefaultDynamicMeshTraitsD22DDD
        __init__(itkDefaultDynamicMeshTraitsD22DDD self, itkDefaultDynamicMeshTraitsD22DD arg0) -> itkDefaultDynamicMeshTraitsD22DDD


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD22DDD_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsD22DDD(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsD22DDD

# Register itkDefaultDynamicMeshTraitsD22DDD in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD22DDD_swigregister(itkDefaultDynamicMeshTraitsD22DDD)

class itkDefaultDynamicMeshTraitsD22DFD(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsD22DFD self) -> itkDefaultDynamicMeshTraitsD22DFD
        __init__(itkDefaultDynamicMeshTraitsD22DFD self, itkDefaultDynamicMeshTraitsD22DFD arg0) -> itkDefaultDynamicMeshTraitsD22DFD


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD22DFD_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsD22DFD(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsD22DFD

# Register itkDefaultDynamicMeshTraitsD22DFD in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD22DFD_swigregister(itkDefaultDynamicMeshTraitsD22DFD)

class itkDefaultDynamicMeshTraitsD3(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsD3 self) -> itkDefaultDynamicMeshTraitsD3
        __init__(itkDefaultDynamicMeshTraitsD3 self, itkDefaultDynamicMeshTraitsD3 arg0) -> itkDefaultDynamicMeshTraitsD3


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD3_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsD3(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsD3

# Register itkDefaultDynamicMeshTraitsD3 in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD3_swigregister(itkDefaultDynamicMeshTraitsD3)

class itkDefaultDynamicMeshTraitsD33DD(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsD33DD self) -> itkDefaultDynamicMeshTraitsD33DD
        __init__(itkDefaultDynamicMeshTraitsD33DD self, itkDefaultDynamicMeshTraitsD33DD arg0) -> itkDefaultDynamicMeshTraitsD33DD


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD33DD_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsD33DD(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsD33DD

# Register itkDefaultDynamicMeshTraitsD33DD in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD33DD_swigregister(itkDefaultDynamicMeshTraitsD33DD)

class itkDefaultDynamicMeshTraitsD33DDD(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsD33DDD self) -> itkDefaultDynamicMeshTraitsD33DDD
        __init__(itkDefaultDynamicMeshTraitsD33DDD self, itkDefaultDynamicMeshTraitsD33DD arg0) -> itkDefaultDynamicMeshTraitsD33DDD


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD33DDD_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsD33DDD(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsD33DDD

# Register itkDefaultDynamicMeshTraitsD33DDD in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD33DDD_swigregister(itkDefaultDynamicMeshTraitsD33DDD)

class itkDefaultDynamicMeshTraitsD33DFD(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsD33DFD self) -> itkDefaultDynamicMeshTraitsD33DFD
        __init__(itkDefaultDynamicMeshTraitsD33DFD self, itkDefaultDynamicMeshTraitsD33DFD arg0) -> itkDefaultDynamicMeshTraitsD33DFD


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD33DFD_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsD33DFD(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsD33DFD

# Register itkDefaultDynamicMeshTraitsD33DFD in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsD33DFD_swigregister(itkDefaultDynamicMeshTraitsD33DFD)

class itkDefaultDynamicMeshTraitsF2(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsF2 self) -> itkDefaultDynamicMeshTraitsF2
        __init__(itkDefaultDynamicMeshTraitsF2 self, itkDefaultDynamicMeshTraitsF2 arg0) -> itkDefaultDynamicMeshTraitsF2


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsF2_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsF2(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsF2

# Register itkDefaultDynamicMeshTraitsF2 in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsF2_swigregister(itkDefaultDynamicMeshTraitsF2)

class itkDefaultDynamicMeshTraitsF22FF(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsF22FF self) -> itkDefaultDynamicMeshTraitsF22FF
        __init__(itkDefaultDynamicMeshTraitsF22FF self, itkDefaultDynamicMeshTraitsF2 arg0) -> itkDefaultDynamicMeshTraitsF22FF


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsF22FF_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsF22FF(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsF22FF

# Register itkDefaultDynamicMeshTraitsF22FF in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsF22FF_swigregister(itkDefaultDynamicMeshTraitsF22FF)

class itkDefaultDynamicMeshTraitsF22FFF(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsF22FFF self) -> itkDefaultDynamicMeshTraitsF22FFF
        __init__(itkDefaultDynamicMeshTraitsF22FFF self, itkDefaultDynamicMeshTraitsF2 arg0) -> itkDefaultDynamicMeshTraitsF22FFF


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsF22FFF_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsF22FFF(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsF22FFF

# Register itkDefaultDynamicMeshTraitsF22FFF in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsF22FFF_swigregister(itkDefaultDynamicMeshTraitsF22FFF)

class itkDefaultDynamicMeshTraitsF3(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsF3 self) -> itkDefaultDynamicMeshTraitsF3
        __init__(itkDefaultDynamicMeshTraitsF3 self, itkDefaultDynamicMeshTraitsF3 arg0) -> itkDefaultDynamicMeshTraitsF3


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsF3_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsF3(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsF3

# Register itkDefaultDynamicMeshTraitsF3 in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsF3_swigregister(itkDefaultDynamicMeshTraitsF3)

class itkDefaultDynamicMeshTraitsF33FF(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsF33FF self) -> itkDefaultDynamicMeshTraitsF33FF
        __init__(itkDefaultDynamicMeshTraitsF33FF self, itkDefaultDynamicMeshTraitsF3 arg0) -> itkDefaultDynamicMeshTraitsF33FF


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsF33FF_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsF33FF(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsF33FF

# Register itkDefaultDynamicMeshTraitsF33FF in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsF33FF_swigregister(itkDefaultDynamicMeshTraitsF33FF)

class itkDefaultDynamicMeshTraitsF33FFF(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsF33FFF self) -> itkDefaultDynamicMeshTraitsF33FFF
        __init__(itkDefaultDynamicMeshTraitsF33FFF self, itkDefaultDynamicMeshTraitsF3 arg0) -> itkDefaultDynamicMeshTraitsF33FFF


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsF33FFF_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsF33FFF(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsF33FFF

# Register itkDefaultDynamicMeshTraitsF33FFF in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsF33FFF_swigregister(itkDefaultDynamicMeshTraitsF33FFF)

class itkDefaultDynamicMeshTraitsMD2222FFMD22(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsMD2222FFMD22 self) -> itkDefaultDynamicMeshTraitsMD2222FFMD22
        __init__(itkDefaultDynamicMeshTraitsMD2222FFMD22 self, itkDefaultDynamicMeshTraitsMD2222FFMD22 arg0) -> itkDefaultDynamicMeshTraitsMD2222FFMD22


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsMD2222FFMD22_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsMD2222FFMD22(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsMD2222FFMD22

# Register itkDefaultDynamicMeshTraitsMD2222FFMD22 in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsMD2222FFMD22_swigregister(itkDefaultDynamicMeshTraitsMD2222FFMD22)

class itkDefaultDynamicMeshTraitsMD3333FFMD33(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsMD3333FFMD33 self) -> itkDefaultDynamicMeshTraitsMD3333FFMD33
        __init__(itkDefaultDynamicMeshTraitsMD3333FFMD33 self, itkDefaultDynamicMeshTraitsMD3333FFMD33 arg0) -> itkDefaultDynamicMeshTraitsMD3333FFMD33


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsMD3333FFMD33_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsMD3333FFMD33(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsMD3333FFMD33

# Register itkDefaultDynamicMeshTraitsMD3333FFMD33 in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsMD3333FFMD33_swigregister(itkDefaultDynamicMeshTraitsMD3333FFMD33)

class itkDefaultDynamicMeshTraitsSS2(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsSS2 self) -> itkDefaultDynamicMeshTraitsSS2
        __init__(itkDefaultDynamicMeshTraitsSS2 self, itkDefaultDynamicMeshTraitsSS2 arg0) -> itkDefaultDynamicMeshTraitsSS2


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsSS2_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsSS2(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsSS2

# Register itkDefaultDynamicMeshTraitsSS2 in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsSS2_swigregister(itkDefaultDynamicMeshTraitsSS2)

class itkDefaultDynamicMeshTraitsSS22SSSS(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsSS22SSSS self) -> itkDefaultDynamicMeshTraitsSS22SSSS
        __init__(itkDefaultDynamicMeshTraitsSS22SSSS self, itkDefaultDynamicMeshTraitsSS22SSSS arg0) -> itkDefaultDynamicMeshTraitsSS22SSSS


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsSS22SSSS_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsSS22SSSS(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsSS22SSSS

# Register itkDefaultDynamicMeshTraitsSS22SSSS in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsSS22SSSS_swigregister(itkDefaultDynamicMeshTraitsSS22SSSS)

class itkDefaultDynamicMeshTraitsSS22SSSSSS(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsSS22SSSSSS self) -> itkDefaultDynamicMeshTraitsSS22SSSSSS
        __init__(itkDefaultDynamicMeshTraitsSS22SSSSSS self, itkDefaultDynamicMeshTraitsSS22SSSS arg0) -> itkDefaultDynamicMeshTraitsSS22SSSSSS


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsSS22SSSSSS_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsSS22SSSSSS(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsSS22SSSSSS

# Register itkDefaultDynamicMeshTraitsSS22SSSSSS in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsSS22SSSSSS_swigregister(itkDefaultDynamicMeshTraitsSS22SSSSSS)

class itkDefaultDynamicMeshTraitsSS3(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsSS3 self) -> itkDefaultDynamicMeshTraitsSS3
        __init__(itkDefaultDynamicMeshTraitsSS3 self, itkDefaultDynamicMeshTraitsSS3 arg0) -> itkDefaultDynamicMeshTraitsSS3


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsSS3_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsSS3(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsSS3

# Register itkDefaultDynamicMeshTraitsSS3 in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsSS3_swigregister(itkDefaultDynamicMeshTraitsSS3)

class itkDefaultDynamicMeshTraitsSS33SSSS(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsSS33SSSS self) -> itkDefaultDynamicMeshTraitsSS33SSSS
        __init__(itkDefaultDynamicMeshTraitsSS33SSSS self, itkDefaultDynamicMeshTraitsSS33SSSS arg0) -> itkDefaultDynamicMeshTraitsSS33SSSS


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsSS33SSSS_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsSS33SSSS(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsSS33SSSS

# Register itkDefaultDynamicMeshTraitsSS33SSSS in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsSS33SSSS_swigregister(itkDefaultDynamicMeshTraitsSS33SSSS)

class itkDefaultDynamicMeshTraitsSS33SSSSSS(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsSS33SSSSSS self) -> itkDefaultDynamicMeshTraitsSS33SSSSSS
        __init__(itkDefaultDynamicMeshTraitsSS33SSSSSS self, itkDefaultDynamicMeshTraitsSS33SSSS arg0) -> itkDefaultDynamicMeshTraitsSS33SSSSSS


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsSS33SSSSSS_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsSS33SSSSSS(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsSS33SSSSSS

# Register itkDefaultDynamicMeshTraitsSS33SSSSSS in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsSS33SSSSSS_swigregister(itkDefaultDynamicMeshTraitsSS33SSSSSS)

class itkDefaultDynamicMeshTraitsUC2(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsUC2 self) -> itkDefaultDynamicMeshTraitsUC2
        __init__(itkDefaultDynamicMeshTraitsUC2 self, itkDefaultDynamicMeshTraitsUC2 arg0) -> itkDefaultDynamicMeshTraitsUC2


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUC2_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsUC2(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsUC2

# Register itkDefaultDynamicMeshTraitsUC2 in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUC2_swigregister(itkDefaultDynamicMeshTraitsUC2)

class itkDefaultDynamicMeshTraitsUC22UCUC(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsUC22UCUC self) -> itkDefaultDynamicMeshTraitsUC22UCUC
        __init__(itkDefaultDynamicMeshTraitsUC22UCUC self, itkDefaultDynamicMeshTraitsUC22UCUC arg0) -> itkDefaultDynamicMeshTraitsUC22UCUC


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUC22UCUC_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsUC22UCUC(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsUC22UCUC

# Register itkDefaultDynamicMeshTraitsUC22UCUC in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUC22UCUC_swigregister(itkDefaultDynamicMeshTraitsUC22UCUC)

class itkDefaultDynamicMeshTraitsUC22UCUCUC(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsUC22UCUCUC self) -> itkDefaultDynamicMeshTraitsUC22UCUCUC
        __init__(itkDefaultDynamicMeshTraitsUC22UCUCUC self, itkDefaultDynamicMeshTraitsUC22UCUC arg0) -> itkDefaultDynamicMeshTraitsUC22UCUCUC


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUC22UCUCUC_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsUC22UCUCUC(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsUC22UCUCUC

# Register itkDefaultDynamicMeshTraitsUC22UCUCUC in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUC22UCUCUC_swigregister(itkDefaultDynamicMeshTraitsUC22UCUCUC)

class itkDefaultDynamicMeshTraitsUC3(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsUC3 self) -> itkDefaultDynamicMeshTraitsUC3
        __init__(itkDefaultDynamicMeshTraitsUC3 self, itkDefaultDynamicMeshTraitsUC3 arg0) -> itkDefaultDynamicMeshTraitsUC3


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUC3_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsUC3(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsUC3

# Register itkDefaultDynamicMeshTraitsUC3 in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUC3_swigregister(itkDefaultDynamicMeshTraitsUC3)

class itkDefaultDynamicMeshTraitsUC33UCUC(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsUC33UCUC self) -> itkDefaultDynamicMeshTraitsUC33UCUC
        __init__(itkDefaultDynamicMeshTraitsUC33UCUC self, itkDefaultDynamicMeshTraitsUC33UCUC arg0) -> itkDefaultDynamicMeshTraitsUC33UCUC


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUC33UCUC_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsUC33UCUC(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsUC33UCUC

# Register itkDefaultDynamicMeshTraitsUC33UCUC in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUC33UCUC_swigregister(itkDefaultDynamicMeshTraitsUC33UCUC)

class itkDefaultDynamicMeshTraitsUC33UCUCUC(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsUC33UCUCUC self) -> itkDefaultDynamicMeshTraitsUC33UCUCUC
        __init__(itkDefaultDynamicMeshTraitsUC33UCUCUC self, itkDefaultDynamicMeshTraitsUC33UCUC arg0) -> itkDefaultDynamicMeshTraitsUC33UCUCUC


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUC33UCUCUC_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsUC33UCUCUC(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsUC33UCUCUC

# Register itkDefaultDynamicMeshTraitsUC33UCUCUC in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUC33UCUCUC_swigregister(itkDefaultDynamicMeshTraitsUC33UCUCUC)

class itkDefaultDynamicMeshTraitsUS2(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsUS2 self) -> itkDefaultDynamicMeshTraitsUS2
        __init__(itkDefaultDynamicMeshTraitsUS2 self, itkDefaultDynamicMeshTraitsUS2 arg0) -> itkDefaultDynamicMeshTraitsUS2


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUS2_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsUS2(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsUS2

# Register itkDefaultDynamicMeshTraitsUS2 in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUS2_swigregister(itkDefaultDynamicMeshTraitsUS2)

class itkDefaultDynamicMeshTraitsUS22USUS(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsUS22USUS self) -> itkDefaultDynamicMeshTraitsUS22USUS
        __init__(itkDefaultDynamicMeshTraitsUS22USUS self, itkDefaultDynamicMeshTraitsUS22USUS arg0) -> itkDefaultDynamicMeshTraitsUS22USUS


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUS22USUS_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsUS22USUS(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsUS22USUS

# Register itkDefaultDynamicMeshTraitsUS22USUS in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUS22USUS_swigregister(itkDefaultDynamicMeshTraitsUS22USUS)

class itkDefaultDynamicMeshTraitsUS22USUSUS(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsUS22USUSUS self) -> itkDefaultDynamicMeshTraitsUS22USUSUS
        __init__(itkDefaultDynamicMeshTraitsUS22USUSUS self, itkDefaultDynamicMeshTraitsUS22USUS arg0) -> itkDefaultDynamicMeshTraitsUS22USUSUS


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUS22USUSUS_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsUS22USUSUS(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsUS22USUSUS

# Register itkDefaultDynamicMeshTraitsUS22USUSUS in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUS22USUSUS_swigregister(itkDefaultDynamicMeshTraitsUS22USUSUS)

class itkDefaultDynamicMeshTraitsUS3(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsUS3 self) -> itkDefaultDynamicMeshTraitsUS3
        __init__(itkDefaultDynamicMeshTraitsUS3 self, itkDefaultDynamicMeshTraitsUS3 arg0) -> itkDefaultDynamicMeshTraitsUS3


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUS3_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsUS3(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsUS3

# Register itkDefaultDynamicMeshTraitsUS3 in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUS3_swigregister(itkDefaultDynamicMeshTraitsUS3)

class itkDefaultDynamicMeshTraitsUS33USUS(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsUS33USUS self) -> itkDefaultDynamicMeshTraitsUS33USUS
        __init__(itkDefaultDynamicMeshTraitsUS33USUS self, itkDefaultDynamicMeshTraitsUS33USUS arg0) -> itkDefaultDynamicMeshTraitsUS33USUS


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUS33USUS_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsUS33USUS(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsUS33USUS

# Register itkDefaultDynamicMeshTraitsUS33USUS in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUS33USUS_swigregister(itkDefaultDynamicMeshTraitsUS33USUS)

class itkDefaultDynamicMeshTraitsUS33USUSUS(object):
    r"""


    A simple structure that holds type information for a mesh and its
    cells.

    DefaultDynamicMeshTraits is a simple structure that holds type
    information for a mesh and its cells. It is used to avoid the passing
    of many template parameters while still enjoying the benefits of
    generic programming.

    Unlike DefaultStaticMeshTraits, this version of the MeshTraits
    structure is designed to create Mesh instances that will have many
    insert and delete operations done on them.

    Parameters:
    -----------

    TPixelType:  The type stored as data for an entity (cell, point, or
    boundary).

    VPointDimension:  Geometric dimension of space.

    VMaxTopologicalDimension:  Max topological dimension of a cell that
    can be inserted into this mesh.

    TCoordRep:  Numerical type to store each coordinate value.

    TInterpolationWeight:  Numerical type to store interpolation weights.

    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkDefaultDynamicMeshTraitsUS33USUSUS self) -> itkDefaultDynamicMeshTraitsUS33USUSUS
        __init__(itkDefaultDynamicMeshTraitsUS33USUSUS self, itkDefaultDynamicMeshTraitsUS33USUS arg0) -> itkDefaultDynamicMeshTraitsUS33USUSUS


        A simple structure that holds type information for a mesh and its
        cells.

        DefaultDynamicMeshTraits is a simple structure that holds type
        information for a mesh and its cells. It is used to avoid the passing
        of many template parameters while still enjoying the benefits of
        generic programming.

        Unlike DefaultStaticMeshTraits, this version of the MeshTraits
        structure is designed to create Mesh instances that will have many
        insert and delete operations done on them.

        Parameters:
        -----------

        TPixelType:  The type stored as data for an entity (cell, point, or
        boundary).

        VPointDimension:  Geometric dimension of space.

        VMaxTopologicalDimension:  Max topological dimension of a cell that
        can be inserted into this mesh.

        TCoordRep:  Numerical type to store each coordinate value.

        TInterpolationWeight:  Numerical type to store interpolation weights.

        """
        _itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUS33USUSUS_swiginit(self, _itkDefaultDynamicMeshTraitsPython.new_itkDefaultDynamicMeshTraitsUS33USUSUS(*args))
    __swig_destroy__ = _itkDefaultDynamicMeshTraitsPython.delete_itkDefaultDynamicMeshTraitsUS33USUSUS

# Register itkDefaultDynamicMeshTraitsUS33USUSUS in _itkDefaultDynamicMeshTraitsPython:
_itkDefaultDynamicMeshTraitsPython.itkDefaultDynamicMeshTraitsUS33USUSUS_swigregister(itkDefaultDynamicMeshTraitsUS33USUSUS)



