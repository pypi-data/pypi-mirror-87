# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _ITKImageIntensityPython
else:
    import _ITKImageIntensityPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _ITKImageIntensityPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _ITKImageIntensityPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)



swig = {}
import itk.ITKPyBasePython
import itk.ITKPathPython
import itk.ITKImageStatisticsPython
import itk.ITKImageGridPython
from itk.itkAbsImageFilterPython import *
from itk.itkAcosImageFilterPython import *
from itk.itkAddImageFilterPython import *
from itk.itkAndImageFilterPython import *
from itk.itkAsinImageFilterPython import *
from itk.itkAtan2ImageFilterPython import *
from itk.itkAtanImageFilterPython import *
from itk.itkBinaryMagnitudeImageFilterPython import *
from itk.itkBoundedReciprocalImageFilterPython import *
from itk.itkClampImageFilterPython import *
from itk.itkComplexToImaginaryImageFilterPython import *
from itk.itkComplexToModulusImageFilterPython import *
from itk.itkComplexToPhaseImageFilterPython import *
from itk.itkComplexToRealImageFilterPython import *
from itk.itkConstrainedValueAdditionImageFilterPython import *
from itk.itkConstrainedValueDifferenceImageFilterPython import *
from itk.itkCosImageFilterPython import *
from itk.itkDivideImageFilterPython import *
from itk.itkEdgePotentialImageFilterPython import *
from itk.itkExpImageFilterPython import *
from itk.itkExpNegativeImageFilterPython import *
from itk.itkHistogramMatchingImageFilterPython import *
from itk.itkIntensityWindowingImageFilterPython import *
from itk.itkInvertIntensityImageFilterPython import *
from itk.itkLog10ImageFilterPython import *
from itk.itkLogImageFilterPython import *
from itk.itkMagnitudeAndPhaseToComplexImageFilterPython import *
from itk.itkMaskImageFilterPython import *
from itk.itkMaskNegatedImageFilterPython import *
from itk.itkMaximumImageFilterPython import *
from itk.itkMinimumImageFilterPython import *
from itk.itkModulusImageFilterPython import *
from itk.itkMultiplyImageFilterPython import *
from itk.itkNaryAddImageFilterPython import *
from itk.itkNaryMaximumImageFilterPython import *
from itk.itkNormalizeImageFilterPython import *
from itk.itkNormalizeToConstantImageFilterPython import *
from itk.itkNotImageFilterPython import *
from itk.itkOrImageFilterPython import *
from itk.itkPowImageFilterPython import *
from itk.itkRGBToLuminanceImageFilterPython import *
from itk.itkRescaleIntensityImageFilterPython import *
from itk.itkRoundImageFilterPython import *
from itk.itkShiftScaleImageFilterPython import *
from itk.itkSigmoidImageFilterPython import *
from itk.itkSinImageFilterPython import *
from itk.itkSqrtImageFilterPython import *
from itk.itkSquareImageFilterPython import *
from itk.itkSubtractImageFilterPython import *
from itk.itkSymmetricEigenAnalysisImageFilterPython import *
from itk.itkTanImageFilterPython import *
from itk.itkTernaryAddImageFilterPython import *
from itk.itkTernaryMagnitudeImageFilterPython import *
from itk.itkTernaryMagnitudeSquaredImageFilterPython import *
from itk.itkVectorIndexSelectionCastImageFilterPython import *
from itk.itkVectorMagnitudeImageFilterPython import *
from itk.itkVectorRescaleIntensityImageFilterPython import *
from itk.itkWeightedAddImageFilterPython import *
from itk.itkXorImageFilterPython import *




