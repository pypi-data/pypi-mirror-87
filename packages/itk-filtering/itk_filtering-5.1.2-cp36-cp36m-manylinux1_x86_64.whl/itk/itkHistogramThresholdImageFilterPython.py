# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKThresholdingPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkHistogramThresholdImageFilterPython
else:
    import _itkHistogramThresholdImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkHistogramThresholdImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkHistogramThresholdImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageToImageFilterAPython
import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.stdcomplexPython
import itk.itkImagePython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToHistogramFilterPython
import itk.itkArrayPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkHistogramPython
import itk.itkSamplePython
import itk.itkImageSinkPython
import itk.itkHistogramThresholdCalculatorPython

def itkHistogramThresholdImageFilterID2ISS2_New():
    return itkHistogramThresholdImageFilterID2ISS2.New()

class itkHistogramThresholdImageFilterID2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ISS2):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterID2ISS2
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterID2ISS2

        Create a new object of the class itkHistogramThresholdImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterID2ISS2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_swigregister(itkHistogramThresholdImageFilterID2ISS2)
itkHistogramThresholdImageFilterID2ISS2___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2___New_orig__
itkHistogramThresholdImageFilterID2ISS2_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_cast


def itkHistogramThresholdImageFilterID2IUC2_New():
    return itkHistogramThresholdImageFilterID2IUC2.New()

class itkHistogramThresholdImageFilterID2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterID2IUC2
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterID2IUC2

        Create a new object of the class itkHistogramThresholdImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterID2IUC2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_swigregister(itkHistogramThresholdImageFilterID2IUC2)
itkHistogramThresholdImageFilterID2IUC2___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2___New_orig__
itkHistogramThresholdImageFilterID2IUC2_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_cast


def itkHistogramThresholdImageFilterID2IUS2_New():
    return itkHistogramThresholdImageFilterID2IUS2.New()

class itkHistogramThresholdImageFilterID2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterID2IUS2
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterID2IUS2

        Create a new object of the class itkHistogramThresholdImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterID2IUS2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_swigregister(itkHistogramThresholdImageFilterID2IUS2)
itkHistogramThresholdImageFilterID2IUS2___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2___New_orig__
itkHistogramThresholdImageFilterID2IUS2_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_cast


def itkHistogramThresholdImageFilterID3ISS3_New():
    return itkHistogramThresholdImageFilterID3ISS3.New()

class itkHistogramThresholdImageFilterID3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ISS3):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterID3ISS3
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterID3ISS3

        Create a new object of the class itkHistogramThresholdImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterID3ISS3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_swigregister(itkHistogramThresholdImageFilterID3ISS3)
itkHistogramThresholdImageFilterID3ISS3___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3___New_orig__
itkHistogramThresholdImageFilterID3ISS3_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_cast


def itkHistogramThresholdImageFilterID3IUC3_New():
    return itkHistogramThresholdImageFilterID3IUC3.New()

class itkHistogramThresholdImageFilterID3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterID3IUC3
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterID3IUC3

        Create a new object of the class itkHistogramThresholdImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterID3IUC3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_swigregister(itkHistogramThresholdImageFilterID3IUC3)
itkHistogramThresholdImageFilterID3IUC3___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3___New_orig__
itkHistogramThresholdImageFilterID3IUC3_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_cast


def itkHistogramThresholdImageFilterID3IUS3_New():
    return itkHistogramThresholdImageFilterID3IUS3.New()

class itkHistogramThresholdImageFilterID3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterID3IUS3
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterID3IUS3

        Create a new object of the class itkHistogramThresholdImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterID3IUS3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_swigregister(itkHistogramThresholdImageFilterID3IUS3)
itkHistogramThresholdImageFilterID3IUS3___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3___New_orig__
itkHistogramThresholdImageFilterID3IUS3_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_cast


def itkHistogramThresholdImageFilterIF2ISS2_New():
    return itkHistogramThresholdImageFilterIF2ISS2.New()

class itkHistogramThresholdImageFilterIF2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2ISS2):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIF2ISS2
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIF2ISS2

        Create a new object of the class itkHistogramThresholdImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIF2ISS2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_swigregister(itkHistogramThresholdImageFilterIF2ISS2)
itkHistogramThresholdImageFilterIF2ISS2___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2___New_orig__
itkHistogramThresholdImageFilterIF2ISS2_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_cast


def itkHistogramThresholdImageFilterIF2IUC2_New():
    return itkHistogramThresholdImageFilterIF2IUC2.New()

class itkHistogramThresholdImageFilterIF2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIF2IUC2
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIF2IUC2

        Create a new object of the class itkHistogramThresholdImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIF2IUC2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_swigregister(itkHistogramThresholdImageFilterIF2IUC2)
itkHistogramThresholdImageFilterIF2IUC2___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2___New_orig__
itkHistogramThresholdImageFilterIF2IUC2_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_cast


def itkHistogramThresholdImageFilterIF2IUS2_New():
    return itkHistogramThresholdImageFilterIF2IUS2.New()

class itkHistogramThresholdImageFilterIF2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIF2IUS2
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIF2IUS2

        Create a new object of the class itkHistogramThresholdImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIF2IUS2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_swigregister(itkHistogramThresholdImageFilterIF2IUS2)
itkHistogramThresholdImageFilterIF2IUS2___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2___New_orig__
itkHistogramThresholdImageFilterIF2IUS2_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_cast


def itkHistogramThresholdImageFilterIF3ISS3_New():
    return itkHistogramThresholdImageFilterIF3ISS3.New()

class itkHistogramThresholdImageFilterIF3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3ISS3):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIF3ISS3
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIF3ISS3

        Create a new object of the class itkHistogramThresholdImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIF3ISS3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_swigregister(itkHistogramThresholdImageFilterIF3ISS3)
itkHistogramThresholdImageFilterIF3ISS3___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3___New_orig__
itkHistogramThresholdImageFilterIF3ISS3_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_cast


def itkHistogramThresholdImageFilterIF3IUC3_New():
    return itkHistogramThresholdImageFilterIF3IUC3.New()

class itkHistogramThresholdImageFilterIF3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIF3IUC3
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIF3IUC3

        Create a new object of the class itkHistogramThresholdImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIF3IUC3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_swigregister(itkHistogramThresholdImageFilterIF3IUC3)
itkHistogramThresholdImageFilterIF3IUC3___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3___New_orig__
itkHistogramThresholdImageFilterIF3IUC3_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_cast


def itkHistogramThresholdImageFilterIF3IUS3_New():
    return itkHistogramThresholdImageFilterIF3IUS3.New()

class itkHistogramThresholdImageFilterIF3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIF3IUS3
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIF3IUS3

        Create a new object of the class itkHistogramThresholdImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIF3IUS3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_swigregister(itkHistogramThresholdImageFilterIF3IUS3)
itkHistogramThresholdImageFilterIF3IUS3___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3___New_orig__
itkHistogramThresholdImageFilterIF3IUS3_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_cast


def itkHistogramThresholdImageFilterISS2ISS2_New():
    return itkHistogramThresholdImageFilterISS2ISS2.New()

class itkHistogramThresholdImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterISS2ISS2

        Create a new object of the class itkHistogramThresholdImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterISS2ISS2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_swigregister(itkHistogramThresholdImageFilterISS2ISS2)
itkHistogramThresholdImageFilterISS2ISS2___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2___New_orig__
itkHistogramThresholdImageFilterISS2ISS2_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_cast


def itkHistogramThresholdImageFilterISS2IUC2_New():
    return itkHistogramThresholdImageFilterISS2IUC2.New()

class itkHistogramThresholdImageFilterISS2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2IUC2):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterISS2IUC2
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterISS2IUC2

        Create a new object of the class itkHistogramThresholdImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterISS2IUC2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_swigregister(itkHistogramThresholdImageFilterISS2IUC2)
itkHistogramThresholdImageFilterISS2IUC2___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2___New_orig__
itkHistogramThresholdImageFilterISS2IUC2_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_cast


def itkHistogramThresholdImageFilterISS2IUS2_New():
    return itkHistogramThresholdImageFilterISS2IUS2.New()

class itkHistogramThresholdImageFilterISS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2IUS2):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterISS2IUS2
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterISS2IUS2

        Create a new object of the class itkHistogramThresholdImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterISS2IUS2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_swigregister(itkHistogramThresholdImageFilterISS2IUS2)
itkHistogramThresholdImageFilterISS2IUS2___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2___New_orig__
itkHistogramThresholdImageFilterISS2IUS2_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_cast


def itkHistogramThresholdImageFilterISS3ISS3_New():
    return itkHistogramThresholdImageFilterISS3ISS3.New()

class itkHistogramThresholdImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterISS3ISS3

        Create a new object of the class itkHistogramThresholdImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterISS3ISS3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_swigregister(itkHistogramThresholdImageFilterISS3ISS3)
itkHistogramThresholdImageFilterISS3ISS3___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3___New_orig__
itkHistogramThresholdImageFilterISS3ISS3_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_cast


def itkHistogramThresholdImageFilterISS3IUC3_New():
    return itkHistogramThresholdImageFilterISS3IUC3.New()

class itkHistogramThresholdImageFilterISS3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3IUC3):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterISS3IUC3
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterISS3IUC3

        Create a new object of the class itkHistogramThresholdImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterISS3IUC3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_swigregister(itkHistogramThresholdImageFilterISS3IUC3)
itkHistogramThresholdImageFilterISS3IUC3___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3___New_orig__
itkHistogramThresholdImageFilterISS3IUC3_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_cast


def itkHistogramThresholdImageFilterISS3IUS3_New():
    return itkHistogramThresholdImageFilterISS3IUS3.New()

class itkHistogramThresholdImageFilterISS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3IUS3):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterISS3IUS3
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterISS3IUS3

        Create a new object of the class itkHistogramThresholdImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterISS3IUS3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_swigregister(itkHistogramThresholdImageFilterISS3IUS3)
itkHistogramThresholdImageFilterISS3IUS3___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3___New_orig__
itkHistogramThresholdImageFilterISS3IUS3_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_cast


def itkHistogramThresholdImageFilterIUC2ISS2_New():
    return itkHistogramThresholdImageFilterIUC2ISS2.New()

class itkHistogramThresholdImageFilterIUC2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISS2):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUC2ISS2
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUC2ISS2

        Create a new object of the class itkHistogramThresholdImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUC2ISS2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_swigregister(itkHistogramThresholdImageFilterIUC2ISS2)
itkHistogramThresholdImageFilterIUC2ISS2___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2___New_orig__
itkHistogramThresholdImageFilterIUC2ISS2_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_cast


def itkHistogramThresholdImageFilterIUC2IUC2_New():
    return itkHistogramThresholdImageFilterIUC2IUC2.New()

class itkHistogramThresholdImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUC2IUC2

        Create a new object of the class itkHistogramThresholdImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUC2IUC2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_swigregister(itkHistogramThresholdImageFilterIUC2IUC2)
itkHistogramThresholdImageFilterIUC2IUC2___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2___New_orig__
itkHistogramThresholdImageFilterIUC2IUC2_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_cast


def itkHistogramThresholdImageFilterIUC2IUS2_New():
    return itkHistogramThresholdImageFilterIUC2IUS2.New()

class itkHistogramThresholdImageFilterIUC2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUC2IUS2
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUC2IUS2

        Create a new object of the class itkHistogramThresholdImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUC2IUS2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_swigregister(itkHistogramThresholdImageFilterIUC2IUS2)
itkHistogramThresholdImageFilterIUC2IUS2___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2___New_orig__
itkHistogramThresholdImageFilterIUC2IUS2_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_cast


def itkHistogramThresholdImageFilterIUC3ISS3_New():
    return itkHistogramThresholdImageFilterIUC3ISS3.New()

class itkHistogramThresholdImageFilterIUC3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISS3):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUC3ISS3
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUC3ISS3

        Create a new object of the class itkHistogramThresholdImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUC3ISS3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_swigregister(itkHistogramThresholdImageFilterIUC3ISS3)
itkHistogramThresholdImageFilterIUC3ISS3___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3___New_orig__
itkHistogramThresholdImageFilterIUC3ISS3_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_cast


def itkHistogramThresholdImageFilterIUC3IUC3_New():
    return itkHistogramThresholdImageFilterIUC3IUC3.New()

class itkHistogramThresholdImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUC3IUC3

        Create a new object of the class itkHistogramThresholdImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUC3IUC3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_swigregister(itkHistogramThresholdImageFilterIUC3IUC3)
itkHistogramThresholdImageFilterIUC3IUC3___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3___New_orig__
itkHistogramThresholdImageFilterIUC3IUC3_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_cast


def itkHistogramThresholdImageFilterIUC3IUS3_New():
    return itkHistogramThresholdImageFilterIUC3IUS3.New()

class itkHistogramThresholdImageFilterIUC3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUC3IUS3
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUC3IUS3

        Create a new object of the class itkHistogramThresholdImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUC3IUS3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_swigregister(itkHistogramThresholdImageFilterIUC3IUS3)
itkHistogramThresholdImageFilterIUC3IUS3___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3___New_orig__
itkHistogramThresholdImageFilterIUC3IUS3_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_cast


def itkHistogramThresholdImageFilterIUS2ISS2_New():
    return itkHistogramThresholdImageFilterIUS2ISS2.New()

class itkHistogramThresholdImageFilterIUS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISS2):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUS2ISS2
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUS2ISS2

        Create a new object of the class itkHistogramThresholdImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUS2ISS2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_swigregister(itkHistogramThresholdImageFilterIUS2ISS2)
itkHistogramThresholdImageFilterIUS2ISS2___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2___New_orig__
itkHistogramThresholdImageFilterIUS2ISS2_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_cast


def itkHistogramThresholdImageFilterIUS2IUC2_New():
    return itkHistogramThresholdImageFilterIUS2IUC2.New()

class itkHistogramThresholdImageFilterIUS2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUS2IUC2
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUS2IUC2

        Create a new object of the class itkHistogramThresholdImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUS2IUC2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_swigregister(itkHistogramThresholdImageFilterIUS2IUC2)
itkHistogramThresholdImageFilterIUS2IUC2___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2___New_orig__
itkHistogramThresholdImageFilterIUS2IUC2_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_cast


def itkHistogramThresholdImageFilterIUS2IUS2_New():
    return itkHistogramThresholdImageFilterIUS2IUS2.New()

class itkHistogramThresholdImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUS2IUS2

        Create a new object of the class itkHistogramThresholdImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUS2IUS2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_swigregister(itkHistogramThresholdImageFilterIUS2IUS2)
itkHistogramThresholdImageFilterIUS2IUS2___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2___New_orig__
itkHistogramThresholdImageFilterIUS2IUS2_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_cast


def itkHistogramThresholdImageFilterIUS3ISS3_New():
    return itkHistogramThresholdImageFilterIUS3ISS3.New()

class itkHistogramThresholdImageFilterIUS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISS3):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUS3ISS3
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUS3ISS3

        Create a new object of the class itkHistogramThresholdImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUS3ISS3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_swigregister(itkHistogramThresholdImageFilterIUS3ISS3)
itkHistogramThresholdImageFilterIUS3ISS3___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3___New_orig__
itkHistogramThresholdImageFilterIUS3ISS3_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_cast


def itkHistogramThresholdImageFilterIUS3IUC3_New():
    return itkHistogramThresholdImageFilterIUS3IUC3.New()

class itkHistogramThresholdImageFilterIUS3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUS3IUC3
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUS3IUC3

        Create a new object of the class itkHistogramThresholdImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUS3IUC3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_swigregister(itkHistogramThresholdImageFilterIUS3IUC3)
itkHistogramThresholdImageFilterIUS3IUC3___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3___New_orig__
itkHistogramThresholdImageFilterIUS3IUC3_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_cast


def itkHistogramThresholdImageFilterIUS3IUS3_New():
    return itkHistogramThresholdImageFilterIUS3IUS3.New()

class itkHistogramThresholdImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""


    Threshold an image using a HistogramThresholdCalculator.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using a user provided HistogramThresholdCalculator and
    applies that threshold to the input image using the
    BinaryThresholdImageFilter.

    The filter also has the option of providing a mask, in which case the
    histogram and therefore the threshold is computed from the parts of
    the mask with values indicated by MaskValue. The output image is, by
    default, masked by the same image. This output masking can be disabled
    using SetMaskOutput(false). Note that there is an inconsistency here.
    The MaskImageFilter (used internally) masks by non zero values, where
    as the MaskedImageToHistogramFilter uses explicit values. If this does
    not match your usage then the output masking will need to be managed
    by the user.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetInput2)
    SetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetInsideValue)
    SetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetNumberOfHistogramBins)
    GetNumberOfHistogramBins = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetNumberOfHistogramBins)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_AutoMinimumMaximumOff)
    SetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetMaskOutput)
    GetMaskOutput = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetMaskOutput)
    MaskOutputOn = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_MaskOutputOn)
    MaskOutputOff = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_MaskOutputOff)
    SetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetMaskValue)
    GetThreshold = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetThreshold)
    SetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetCalculator)
    GetModifiableCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetModifiableCalculator)
    GetCalculator = _swig_new_instance_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetCalculator)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUS3IUS3

        Create a new object of the class itkHistogramThresholdImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUS3IUS3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_swigregister(itkHistogramThresholdImageFilterIUS3IUS3)
itkHistogramThresholdImageFilterIUS3IUS3___New_orig__ = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3___New_orig__
itkHistogramThresholdImageFilterIUS3IUS3_cast = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def histogram_threshold_image_filter(*args, **kwargs):
    """Procedural interface for HistogramThresholdImageFilter"""
    import itk
    instance = itk.HistogramThresholdImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def histogram_threshold_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.HistogramThresholdImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.HistogramThresholdImageFilter.values()[0]
    else:
        filter_object = itk.HistogramThresholdImageFilter

    histogram_threshold_image_filter.__doc__ = filter_object.__doc__
    histogram_threshold_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    histogram_threshold_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.HistogramThresholdImageFilter, itkTemplate.itkTemplate):
        histogram_threshold_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        histogram_threshold_image_filter.__doc__ += "\n"
        histogram_threshold_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        histogram_threshold_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



