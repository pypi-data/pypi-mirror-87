# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKColormapPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkScalarToRGBColormapImageFilterPython
else:
    import _itkScalarToRGBColormapImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkScalarToRGBColormapImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkScalarToRGBColormapImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkColormapFunctionPython
import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.itkRGBAPixelPython
import itk.itkImageToImageFilterBPython
import itk.itkImageSourcePython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.stdcomplexPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.itkIndexPython
import itk.itkImageRegionPython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
class itkScalarToRGBColormapImageFilterEnums(object):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterEnums class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    RGBColormapFilter_Red = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_Red
    
    RGBColormapFilter_Green = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_Green
    
    RGBColormapFilter_Blue = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_Blue
    
    RGBColormapFilter_Grey = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_Grey
    
    RGBColormapFilter_Hot = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_Hot
    
    RGBColormapFilter_Cool = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_Cool
    
    RGBColormapFilter_Spring = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_Spring
    
    RGBColormapFilter_Summer = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_Summer
    
    RGBColormapFilter_Autumn = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_Autumn
    
    RGBColormapFilter_Winter = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_Winter
    
    RGBColormapFilter_Copper = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_Copper
    
    RGBColormapFilter_Jet = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_Jet
    
    RGBColormapFilter_HSV = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_HSV
    
    RGBColormapFilter_OverUnder = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_OverUnder
    

    def __init__(self, *args):
        r"""
        __init__(itkScalarToRGBColormapImageFilterEnums self) -> itkScalarToRGBColormapImageFilterEnums
        __init__(itkScalarToRGBColormapImageFilterEnums self, itkScalarToRGBColormapImageFilterEnums arg0) -> itkScalarToRGBColormapImageFilterEnums
        """
        _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_swiginit(self, _itkScalarToRGBColormapImageFilterPython.new_itkScalarToRGBColormapImageFilterEnums(*args))
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterEnums

# Register itkScalarToRGBColormapImageFilterEnums in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_swigregister(itkScalarToRGBColormapImageFilterEnums)


def itkScalarToRGBColormapImageFilterID2IRGBAUC2_New():
    return itkScalarToRGBColormapImageFilterID2IRGBAUC2.New()

class itkScalarToRGBColormapImageFilterID2IRGBAUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBAUC2):
    r"""


    Implements pixel-wise intensity->rgb mapping operation on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    The input image's scalar pixel values are mapped into a color map. The
    color map is specified by passing the SetColormap function one of the
    predefined maps. The following selects the
    "RGBColormapFilterEnum::Hot" colormap:

    You can also specify a custom color map. This is done by creating a
    CustomColormapFunction, and then creating lists of values for the red,
    green, and blue channel. An example of setting the red channel of a
    colormap with only 2 colors is given below. The blue and green
    channels should be specified in the same manner.

    The range of values present in the input image is the range that is
    mapped to the entire range of colors.

    This code was contributed in the Insight Journal paper: "Meeting Andy
    Warhol Somewhere Over the Rainbow: RGB Colormapping and ITK" by
    Tustison N., Zhang H., Lehmann G., Yushkevich P., Gee
    J.https://hdl.handle.net/1926/1452http://www.insight-
    journal.org/browse/publication/285

    See:  BinaryFunctionImageFilter TernaryFunctionImageFilter
    example{Filtering/Colormap/CreateACustomColormap, Create A Custom
    Colormap}  example{Filtering/Colormap/ApplyAColormapToAnImage,Apply A
    Colormap To An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBAUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBAUC2_Clone)
    GetModifiableColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBAUC2_GetModifiableColormap)
    GetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBAUC2_GetColormap)
    SetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBAUC2_SetColormap)
    SetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBAUC2_SetUseInputImageExtremaForScaling)
    GetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBAUC2_GetUseInputImageExtremaForScaling)
    UseInputImageExtremaForScalingOn = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBAUC2_UseInputImageExtremaForScalingOn)
    UseInputImageExtremaForScalingOff = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBAUC2_UseInputImageExtremaForScalingOff)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterID2IRGBAUC2
    cast = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBAUC2_cast)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterID2IRGBAUC2

        Create a new object of the class itkScalarToRGBColormapImageFilterID2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterID2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterID2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterID2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterID2IRGBAUC2 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBAUC2_swigregister(itkScalarToRGBColormapImageFilterID2IRGBAUC2)
itkScalarToRGBColormapImageFilterID2IRGBAUC2___New_orig__ = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBAUC2___New_orig__
itkScalarToRGBColormapImageFilterID2IRGBAUC2_cast = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBAUC2_cast


def itkScalarToRGBColormapImageFilterID2IRGBUC2_New():
    return itkScalarToRGBColormapImageFilterID2IRGBUC2.New()

class itkScalarToRGBColormapImageFilterID2IRGBUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBUC2):
    r"""


    Implements pixel-wise intensity->rgb mapping operation on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    The input image's scalar pixel values are mapped into a color map. The
    color map is specified by passing the SetColormap function one of the
    predefined maps. The following selects the
    "RGBColormapFilterEnum::Hot" colormap:

    You can also specify a custom color map. This is done by creating a
    CustomColormapFunction, and then creating lists of values for the red,
    green, and blue channel. An example of setting the red channel of a
    colormap with only 2 colors is given below. The blue and green
    channels should be specified in the same manner.

    The range of values present in the input image is the range that is
    mapped to the entire range of colors.

    This code was contributed in the Insight Journal paper: "Meeting Andy
    Warhol Somewhere Over the Rainbow: RGB Colormapping and ITK" by
    Tustison N., Zhang H., Lehmann G., Yushkevich P., Gee
    J.https://hdl.handle.net/1926/1452http://www.insight-
    journal.org/browse/publication/285

    See:  BinaryFunctionImageFilter TernaryFunctionImageFilter
    example{Filtering/Colormap/CreateACustomColormap, Create A Custom
    Colormap}  example{Filtering/Colormap/ApplyAColormapToAnImage,Apply A
    Colormap To An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBUC2_Clone)
    GetModifiableColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBUC2_GetModifiableColormap)
    GetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBUC2_GetColormap)
    SetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBUC2_SetColormap)
    SetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBUC2_SetUseInputImageExtremaForScaling)
    GetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBUC2_GetUseInputImageExtremaForScaling)
    UseInputImageExtremaForScalingOn = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBUC2_UseInputImageExtremaForScalingOn)
    UseInputImageExtremaForScalingOff = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBUC2_UseInputImageExtremaForScalingOff)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterID2IRGBUC2
    cast = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterID2IRGBUC2

        Create a new object of the class itkScalarToRGBColormapImageFilterID2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterID2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterID2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterID2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterID2IRGBUC2 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBUC2_swigregister(itkScalarToRGBColormapImageFilterID2IRGBUC2)
itkScalarToRGBColormapImageFilterID2IRGBUC2___New_orig__ = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBUC2___New_orig__
itkScalarToRGBColormapImageFilterID2IRGBUC2_cast = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBUC2_cast


def itkScalarToRGBColormapImageFilterID3IRGBAUC3_New():
    return itkScalarToRGBColormapImageFilterID3IRGBAUC3.New()

class itkScalarToRGBColormapImageFilterID3IRGBAUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBAUC3):
    r"""


    Implements pixel-wise intensity->rgb mapping operation on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    The input image's scalar pixel values are mapped into a color map. The
    color map is specified by passing the SetColormap function one of the
    predefined maps. The following selects the
    "RGBColormapFilterEnum::Hot" colormap:

    You can also specify a custom color map. This is done by creating a
    CustomColormapFunction, and then creating lists of values for the red,
    green, and blue channel. An example of setting the red channel of a
    colormap with only 2 colors is given below. The blue and green
    channels should be specified in the same manner.

    The range of values present in the input image is the range that is
    mapped to the entire range of colors.

    This code was contributed in the Insight Journal paper: "Meeting Andy
    Warhol Somewhere Over the Rainbow: RGB Colormapping and ITK" by
    Tustison N., Zhang H., Lehmann G., Yushkevich P., Gee
    J.https://hdl.handle.net/1926/1452http://www.insight-
    journal.org/browse/publication/285

    See:  BinaryFunctionImageFilter TernaryFunctionImageFilter
    example{Filtering/Colormap/CreateACustomColormap, Create A Custom
    Colormap}  example{Filtering/Colormap/ApplyAColormapToAnImage,Apply A
    Colormap To An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBAUC3_Clone)
    GetModifiableColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBAUC3_GetModifiableColormap)
    GetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBAUC3_GetColormap)
    SetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBAUC3_SetColormap)
    SetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBAUC3_SetUseInputImageExtremaForScaling)
    GetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBAUC3_GetUseInputImageExtremaForScaling)
    UseInputImageExtremaForScalingOn = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBAUC3_UseInputImageExtremaForScalingOn)
    UseInputImageExtremaForScalingOff = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBAUC3_UseInputImageExtremaForScalingOff)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterID3IRGBAUC3
    cast = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterID3IRGBAUC3

        Create a new object of the class itkScalarToRGBColormapImageFilterID3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterID3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterID3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterID3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterID3IRGBAUC3 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBAUC3_swigregister(itkScalarToRGBColormapImageFilterID3IRGBAUC3)
itkScalarToRGBColormapImageFilterID3IRGBAUC3___New_orig__ = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBAUC3___New_orig__
itkScalarToRGBColormapImageFilterID3IRGBAUC3_cast = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBAUC3_cast


def itkScalarToRGBColormapImageFilterID3IRGBUC3_New():
    return itkScalarToRGBColormapImageFilterID3IRGBUC3.New()

class itkScalarToRGBColormapImageFilterID3IRGBUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBUC3):
    r"""


    Implements pixel-wise intensity->rgb mapping operation on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    The input image's scalar pixel values are mapped into a color map. The
    color map is specified by passing the SetColormap function one of the
    predefined maps. The following selects the
    "RGBColormapFilterEnum::Hot" colormap:

    You can also specify a custom color map. This is done by creating a
    CustomColormapFunction, and then creating lists of values for the red,
    green, and blue channel. An example of setting the red channel of a
    colormap with only 2 colors is given below. The blue and green
    channels should be specified in the same manner.

    The range of values present in the input image is the range that is
    mapped to the entire range of colors.

    This code was contributed in the Insight Journal paper: "Meeting Andy
    Warhol Somewhere Over the Rainbow: RGB Colormapping and ITK" by
    Tustison N., Zhang H., Lehmann G., Yushkevich P., Gee
    J.https://hdl.handle.net/1926/1452http://www.insight-
    journal.org/browse/publication/285

    See:  BinaryFunctionImageFilter TernaryFunctionImageFilter
    example{Filtering/Colormap/CreateACustomColormap, Create A Custom
    Colormap}  example{Filtering/Colormap/ApplyAColormapToAnImage,Apply A
    Colormap To An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBUC3_Clone)
    GetModifiableColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBUC3_GetModifiableColormap)
    GetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBUC3_GetColormap)
    SetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBUC3_SetColormap)
    SetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBUC3_SetUseInputImageExtremaForScaling)
    GetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBUC3_GetUseInputImageExtremaForScaling)
    UseInputImageExtremaForScalingOn = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBUC3_UseInputImageExtremaForScalingOn)
    UseInputImageExtremaForScalingOff = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBUC3_UseInputImageExtremaForScalingOff)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterID3IRGBUC3
    cast = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterID3IRGBUC3

        Create a new object of the class itkScalarToRGBColormapImageFilterID3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterID3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterID3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterID3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterID3IRGBUC3 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBUC3_swigregister(itkScalarToRGBColormapImageFilterID3IRGBUC3)
itkScalarToRGBColormapImageFilterID3IRGBUC3___New_orig__ = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBUC3___New_orig__
itkScalarToRGBColormapImageFilterID3IRGBUC3_cast = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBUC3_cast


def itkScalarToRGBColormapImageFilterIF2IRGBAUC2_New():
    return itkScalarToRGBColormapImageFilterIF2IRGBAUC2.New()

class itkScalarToRGBColormapImageFilterIF2IRGBAUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBAUC2):
    r"""


    Implements pixel-wise intensity->rgb mapping operation on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    The input image's scalar pixel values are mapped into a color map. The
    color map is specified by passing the SetColormap function one of the
    predefined maps. The following selects the
    "RGBColormapFilterEnum::Hot" colormap:

    You can also specify a custom color map. This is done by creating a
    CustomColormapFunction, and then creating lists of values for the red,
    green, and blue channel. An example of setting the red channel of a
    colormap with only 2 colors is given below. The blue and green
    channels should be specified in the same manner.

    The range of values present in the input image is the range that is
    mapped to the entire range of colors.

    This code was contributed in the Insight Journal paper: "Meeting Andy
    Warhol Somewhere Over the Rainbow: RGB Colormapping and ITK" by
    Tustison N., Zhang H., Lehmann G., Yushkevich P., Gee
    J.https://hdl.handle.net/1926/1452http://www.insight-
    journal.org/browse/publication/285

    See:  BinaryFunctionImageFilter TernaryFunctionImageFilter
    example{Filtering/Colormap/CreateACustomColormap, Create A Custom
    Colormap}  example{Filtering/Colormap/ApplyAColormapToAnImage,Apply A
    Colormap To An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBAUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBAUC2_Clone)
    GetModifiableColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBAUC2_GetModifiableColormap)
    GetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBAUC2_GetColormap)
    SetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBAUC2_SetColormap)
    SetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBAUC2_SetUseInputImageExtremaForScaling)
    GetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBAUC2_GetUseInputImageExtremaForScaling)
    UseInputImageExtremaForScalingOn = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBAUC2_UseInputImageExtremaForScalingOn)
    UseInputImageExtremaForScalingOff = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBAUC2_UseInputImageExtremaForScalingOff)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIF2IRGBAUC2
    cast = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBAUC2_cast)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIF2IRGBAUC2

        Create a new object of the class itkScalarToRGBColormapImageFilterIF2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIF2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIF2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIF2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIF2IRGBAUC2 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBAUC2_swigregister(itkScalarToRGBColormapImageFilterIF2IRGBAUC2)
itkScalarToRGBColormapImageFilterIF2IRGBAUC2___New_orig__ = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBAUC2___New_orig__
itkScalarToRGBColormapImageFilterIF2IRGBAUC2_cast = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBAUC2_cast


def itkScalarToRGBColormapImageFilterIF2IRGBUC2_New():
    return itkScalarToRGBColormapImageFilterIF2IRGBUC2.New()

class itkScalarToRGBColormapImageFilterIF2IRGBUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBUC2):
    r"""


    Implements pixel-wise intensity->rgb mapping operation on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    The input image's scalar pixel values are mapped into a color map. The
    color map is specified by passing the SetColormap function one of the
    predefined maps. The following selects the
    "RGBColormapFilterEnum::Hot" colormap:

    You can also specify a custom color map. This is done by creating a
    CustomColormapFunction, and then creating lists of values for the red,
    green, and blue channel. An example of setting the red channel of a
    colormap with only 2 colors is given below. The blue and green
    channels should be specified in the same manner.

    The range of values present in the input image is the range that is
    mapped to the entire range of colors.

    This code was contributed in the Insight Journal paper: "Meeting Andy
    Warhol Somewhere Over the Rainbow: RGB Colormapping and ITK" by
    Tustison N., Zhang H., Lehmann G., Yushkevich P., Gee
    J.https://hdl.handle.net/1926/1452http://www.insight-
    journal.org/browse/publication/285

    See:  BinaryFunctionImageFilter TernaryFunctionImageFilter
    example{Filtering/Colormap/CreateACustomColormap, Create A Custom
    Colormap}  example{Filtering/Colormap/ApplyAColormapToAnImage,Apply A
    Colormap To An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBUC2_Clone)
    GetModifiableColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBUC2_GetModifiableColormap)
    GetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBUC2_GetColormap)
    SetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBUC2_SetColormap)
    SetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBUC2_SetUseInputImageExtremaForScaling)
    GetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBUC2_GetUseInputImageExtremaForScaling)
    UseInputImageExtremaForScalingOn = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBUC2_UseInputImageExtremaForScalingOn)
    UseInputImageExtremaForScalingOff = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBUC2_UseInputImageExtremaForScalingOff)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIF2IRGBUC2
    cast = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIF2IRGBUC2

        Create a new object of the class itkScalarToRGBColormapImageFilterIF2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIF2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIF2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIF2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIF2IRGBUC2 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBUC2_swigregister(itkScalarToRGBColormapImageFilterIF2IRGBUC2)
itkScalarToRGBColormapImageFilterIF2IRGBUC2___New_orig__ = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBUC2___New_orig__
itkScalarToRGBColormapImageFilterIF2IRGBUC2_cast = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBUC2_cast


def itkScalarToRGBColormapImageFilterIF3IRGBAUC3_New():
    return itkScalarToRGBColormapImageFilterIF3IRGBAUC3.New()

class itkScalarToRGBColormapImageFilterIF3IRGBAUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBAUC3):
    r"""


    Implements pixel-wise intensity->rgb mapping operation on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    The input image's scalar pixel values are mapped into a color map. The
    color map is specified by passing the SetColormap function one of the
    predefined maps. The following selects the
    "RGBColormapFilterEnum::Hot" colormap:

    You can also specify a custom color map. This is done by creating a
    CustomColormapFunction, and then creating lists of values for the red,
    green, and blue channel. An example of setting the red channel of a
    colormap with only 2 colors is given below. The blue and green
    channels should be specified in the same manner.

    The range of values present in the input image is the range that is
    mapped to the entire range of colors.

    This code was contributed in the Insight Journal paper: "Meeting Andy
    Warhol Somewhere Over the Rainbow: RGB Colormapping and ITK" by
    Tustison N., Zhang H., Lehmann G., Yushkevich P., Gee
    J.https://hdl.handle.net/1926/1452http://www.insight-
    journal.org/browse/publication/285

    See:  BinaryFunctionImageFilter TernaryFunctionImageFilter
    example{Filtering/Colormap/CreateACustomColormap, Create A Custom
    Colormap}  example{Filtering/Colormap/ApplyAColormapToAnImage,Apply A
    Colormap To An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBAUC3_Clone)
    GetModifiableColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBAUC3_GetModifiableColormap)
    GetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBAUC3_GetColormap)
    SetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBAUC3_SetColormap)
    SetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBAUC3_SetUseInputImageExtremaForScaling)
    GetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBAUC3_GetUseInputImageExtremaForScaling)
    UseInputImageExtremaForScalingOn = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBAUC3_UseInputImageExtremaForScalingOn)
    UseInputImageExtremaForScalingOff = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBAUC3_UseInputImageExtremaForScalingOff)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIF3IRGBAUC3
    cast = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIF3IRGBAUC3

        Create a new object of the class itkScalarToRGBColormapImageFilterIF3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIF3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIF3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIF3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIF3IRGBAUC3 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBAUC3_swigregister(itkScalarToRGBColormapImageFilterIF3IRGBAUC3)
itkScalarToRGBColormapImageFilterIF3IRGBAUC3___New_orig__ = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBAUC3___New_orig__
itkScalarToRGBColormapImageFilterIF3IRGBAUC3_cast = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBAUC3_cast


def itkScalarToRGBColormapImageFilterIF3IRGBUC3_New():
    return itkScalarToRGBColormapImageFilterIF3IRGBUC3.New()

class itkScalarToRGBColormapImageFilterIF3IRGBUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBUC3):
    r"""


    Implements pixel-wise intensity->rgb mapping operation on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    The input image's scalar pixel values are mapped into a color map. The
    color map is specified by passing the SetColormap function one of the
    predefined maps. The following selects the
    "RGBColormapFilterEnum::Hot" colormap:

    You can also specify a custom color map. This is done by creating a
    CustomColormapFunction, and then creating lists of values for the red,
    green, and blue channel. An example of setting the red channel of a
    colormap with only 2 colors is given below. The blue and green
    channels should be specified in the same manner.

    The range of values present in the input image is the range that is
    mapped to the entire range of colors.

    This code was contributed in the Insight Journal paper: "Meeting Andy
    Warhol Somewhere Over the Rainbow: RGB Colormapping and ITK" by
    Tustison N., Zhang H., Lehmann G., Yushkevich P., Gee
    J.https://hdl.handle.net/1926/1452http://www.insight-
    journal.org/browse/publication/285

    See:  BinaryFunctionImageFilter TernaryFunctionImageFilter
    example{Filtering/Colormap/CreateACustomColormap, Create A Custom
    Colormap}  example{Filtering/Colormap/ApplyAColormapToAnImage,Apply A
    Colormap To An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBUC3_Clone)
    GetModifiableColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBUC3_GetModifiableColormap)
    GetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBUC3_GetColormap)
    SetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBUC3_SetColormap)
    SetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBUC3_SetUseInputImageExtremaForScaling)
    GetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBUC3_GetUseInputImageExtremaForScaling)
    UseInputImageExtremaForScalingOn = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBUC3_UseInputImageExtremaForScalingOn)
    UseInputImageExtremaForScalingOff = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBUC3_UseInputImageExtremaForScalingOff)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIF3IRGBUC3
    cast = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIF3IRGBUC3

        Create a new object of the class itkScalarToRGBColormapImageFilterIF3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIF3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIF3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIF3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIF3IRGBUC3 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBUC3_swigregister(itkScalarToRGBColormapImageFilterIF3IRGBUC3)
itkScalarToRGBColormapImageFilterIF3IRGBUC3___New_orig__ = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBUC3___New_orig__
itkScalarToRGBColormapImageFilterIF3IRGBUC3_cast = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBUC3_cast


def itkScalarToRGBColormapImageFilterISS2IRGBAUC2_New():
    return itkScalarToRGBColormapImageFilterISS2IRGBAUC2.New()

class itkScalarToRGBColormapImageFilterISS2IRGBAUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS2IRGBAUC2):
    r"""


    Implements pixel-wise intensity->rgb mapping operation on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    The input image's scalar pixel values are mapped into a color map. The
    color map is specified by passing the SetColormap function one of the
    predefined maps. The following selects the
    "RGBColormapFilterEnum::Hot" colormap:

    You can also specify a custom color map. This is done by creating a
    CustomColormapFunction, and then creating lists of values for the red,
    green, and blue channel. An example of setting the red channel of a
    colormap with only 2 colors is given below. The blue and green
    channels should be specified in the same manner.

    The range of values present in the input image is the range that is
    mapped to the entire range of colors.

    This code was contributed in the Insight Journal paper: "Meeting Andy
    Warhol Somewhere Over the Rainbow: RGB Colormapping and ITK" by
    Tustison N., Zhang H., Lehmann G., Yushkevich P., Gee
    J.https://hdl.handle.net/1926/1452http://www.insight-
    journal.org/browse/publication/285

    See:  BinaryFunctionImageFilter TernaryFunctionImageFilter
    example{Filtering/Colormap/CreateACustomColormap, Create A Custom
    Colormap}  example{Filtering/Colormap/ApplyAColormapToAnImage,Apply A
    Colormap To An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBAUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBAUC2_Clone)
    GetModifiableColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBAUC2_GetModifiableColormap)
    GetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBAUC2_GetColormap)
    SetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBAUC2_SetColormap)
    SetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBAUC2_SetUseInputImageExtremaForScaling)
    GetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBAUC2_GetUseInputImageExtremaForScaling)
    UseInputImageExtremaForScalingOn = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBAUC2_UseInputImageExtremaForScalingOn)
    UseInputImageExtremaForScalingOff = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBAUC2_UseInputImageExtremaForScalingOff)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterISS2IRGBAUC2
    cast = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBAUC2_cast)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterISS2IRGBAUC2

        Create a new object of the class itkScalarToRGBColormapImageFilterISS2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterISS2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterISS2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterISS2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterISS2IRGBAUC2 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBAUC2_swigregister(itkScalarToRGBColormapImageFilterISS2IRGBAUC2)
itkScalarToRGBColormapImageFilterISS2IRGBAUC2___New_orig__ = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBAUC2___New_orig__
itkScalarToRGBColormapImageFilterISS2IRGBAUC2_cast = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBAUC2_cast


def itkScalarToRGBColormapImageFilterISS2IRGBUC2_New():
    return itkScalarToRGBColormapImageFilterISS2IRGBUC2.New()

class itkScalarToRGBColormapImageFilterISS2IRGBUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS2IRGBUC2):
    r"""


    Implements pixel-wise intensity->rgb mapping operation on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    The input image's scalar pixel values are mapped into a color map. The
    color map is specified by passing the SetColormap function one of the
    predefined maps. The following selects the
    "RGBColormapFilterEnum::Hot" colormap:

    You can also specify a custom color map. This is done by creating a
    CustomColormapFunction, and then creating lists of values for the red,
    green, and blue channel. An example of setting the red channel of a
    colormap with only 2 colors is given below. The blue and green
    channels should be specified in the same manner.

    The range of values present in the input image is the range that is
    mapped to the entire range of colors.

    This code was contributed in the Insight Journal paper: "Meeting Andy
    Warhol Somewhere Over the Rainbow: RGB Colormapping and ITK" by
    Tustison N., Zhang H., Lehmann G., Yushkevich P., Gee
    J.https://hdl.handle.net/1926/1452http://www.insight-
    journal.org/browse/publication/285

    See:  BinaryFunctionImageFilter TernaryFunctionImageFilter
    example{Filtering/Colormap/CreateACustomColormap, Create A Custom
    Colormap}  example{Filtering/Colormap/ApplyAColormapToAnImage,Apply A
    Colormap To An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBUC2_Clone)
    GetModifiableColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBUC2_GetModifiableColormap)
    GetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBUC2_GetColormap)
    SetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBUC2_SetColormap)
    SetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBUC2_SetUseInputImageExtremaForScaling)
    GetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBUC2_GetUseInputImageExtremaForScaling)
    UseInputImageExtremaForScalingOn = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBUC2_UseInputImageExtremaForScalingOn)
    UseInputImageExtremaForScalingOff = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBUC2_UseInputImageExtremaForScalingOff)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterISS2IRGBUC2
    cast = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterISS2IRGBUC2

        Create a new object of the class itkScalarToRGBColormapImageFilterISS2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterISS2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterISS2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterISS2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterISS2IRGBUC2 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBUC2_swigregister(itkScalarToRGBColormapImageFilterISS2IRGBUC2)
itkScalarToRGBColormapImageFilterISS2IRGBUC2___New_orig__ = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBUC2___New_orig__
itkScalarToRGBColormapImageFilterISS2IRGBUC2_cast = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBUC2_cast


def itkScalarToRGBColormapImageFilterISS3IRGBAUC3_New():
    return itkScalarToRGBColormapImageFilterISS3IRGBAUC3.New()

class itkScalarToRGBColormapImageFilterISS3IRGBAUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS3IRGBAUC3):
    r"""


    Implements pixel-wise intensity->rgb mapping operation on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    The input image's scalar pixel values are mapped into a color map. The
    color map is specified by passing the SetColormap function one of the
    predefined maps. The following selects the
    "RGBColormapFilterEnum::Hot" colormap:

    You can also specify a custom color map. This is done by creating a
    CustomColormapFunction, and then creating lists of values for the red,
    green, and blue channel. An example of setting the red channel of a
    colormap with only 2 colors is given below. The blue and green
    channels should be specified in the same manner.

    The range of values present in the input image is the range that is
    mapped to the entire range of colors.

    This code was contributed in the Insight Journal paper: "Meeting Andy
    Warhol Somewhere Over the Rainbow: RGB Colormapping and ITK" by
    Tustison N., Zhang H., Lehmann G., Yushkevich P., Gee
    J.https://hdl.handle.net/1926/1452http://www.insight-
    journal.org/browse/publication/285

    See:  BinaryFunctionImageFilter TernaryFunctionImageFilter
    example{Filtering/Colormap/CreateACustomColormap, Create A Custom
    Colormap}  example{Filtering/Colormap/ApplyAColormapToAnImage,Apply A
    Colormap To An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBAUC3_Clone)
    GetModifiableColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBAUC3_GetModifiableColormap)
    GetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBAUC3_GetColormap)
    SetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBAUC3_SetColormap)
    SetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBAUC3_SetUseInputImageExtremaForScaling)
    GetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBAUC3_GetUseInputImageExtremaForScaling)
    UseInputImageExtremaForScalingOn = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBAUC3_UseInputImageExtremaForScalingOn)
    UseInputImageExtremaForScalingOff = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBAUC3_UseInputImageExtremaForScalingOff)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterISS3IRGBAUC3
    cast = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterISS3IRGBAUC3

        Create a new object of the class itkScalarToRGBColormapImageFilterISS3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterISS3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterISS3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterISS3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterISS3IRGBAUC3 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBAUC3_swigregister(itkScalarToRGBColormapImageFilterISS3IRGBAUC3)
itkScalarToRGBColormapImageFilterISS3IRGBAUC3___New_orig__ = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBAUC3___New_orig__
itkScalarToRGBColormapImageFilterISS3IRGBAUC3_cast = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBAUC3_cast


def itkScalarToRGBColormapImageFilterISS3IRGBUC3_New():
    return itkScalarToRGBColormapImageFilterISS3IRGBUC3.New()

class itkScalarToRGBColormapImageFilterISS3IRGBUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS3IRGBUC3):
    r"""


    Implements pixel-wise intensity->rgb mapping operation on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    The input image's scalar pixel values are mapped into a color map. The
    color map is specified by passing the SetColormap function one of the
    predefined maps. The following selects the
    "RGBColormapFilterEnum::Hot" colormap:

    You can also specify a custom color map. This is done by creating a
    CustomColormapFunction, and then creating lists of values for the red,
    green, and blue channel. An example of setting the red channel of a
    colormap with only 2 colors is given below. The blue and green
    channels should be specified in the same manner.

    The range of values present in the input image is the range that is
    mapped to the entire range of colors.

    This code was contributed in the Insight Journal paper: "Meeting Andy
    Warhol Somewhere Over the Rainbow: RGB Colormapping and ITK" by
    Tustison N., Zhang H., Lehmann G., Yushkevich P., Gee
    J.https://hdl.handle.net/1926/1452http://www.insight-
    journal.org/browse/publication/285

    See:  BinaryFunctionImageFilter TernaryFunctionImageFilter
    example{Filtering/Colormap/CreateACustomColormap, Create A Custom
    Colormap}  example{Filtering/Colormap/ApplyAColormapToAnImage,Apply A
    Colormap To An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBUC3_Clone)
    GetModifiableColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBUC3_GetModifiableColormap)
    GetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBUC3_GetColormap)
    SetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBUC3_SetColormap)
    SetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBUC3_SetUseInputImageExtremaForScaling)
    GetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBUC3_GetUseInputImageExtremaForScaling)
    UseInputImageExtremaForScalingOn = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBUC3_UseInputImageExtremaForScalingOn)
    UseInputImageExtremaForScalingOff = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBUC3_UseInputImageExtremaForScalingOff)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterISS3IRGBUC3
    cast = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterISS3IRGBUC3

        Create a new object of the class itkScalarToRGBColormapImageFilterISS3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterISS3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterISS3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterISS3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterISS3IRGBUC3 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBUC3_swigregister(itkScalarToRGBColormapImageFilterISS3IRGBUC3)
itkScalarToRGBColormapImageFilterISS3IRGBUC3___New_orig__ = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBUC3___New_orig__
itkScalarToRGBColormapImageFilterISS3IRGBUC3_cast = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBUC3_cast


def itkScalarToRGBColormapImageFilterIUC2IRGBAUC2_New():
    return itkScalarToRGBColormapImageFilterIUC2IRGBAUC2.New()

class itkScalarToRGBColormapImageFilterIUC2IRGBAUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBAUC2):
    r"""


    Implements pixel-wise intensity->rgb mapping operation on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    The input image's scalar pixel values are mapped into a color map. The
    color map is specified by passing the SetColormap function one of the
    predefined maps. The following selects the
    "RGBColormapFilterEnum::Hot" colormap:

    You can also specify a custom color map. This is done by creating a
    CustomColormapFunction, and then creating lists of values for the red,
    green, and blue channel. An example of setting the red channel of a
    colormap with only 2 colors is given below. The blue and green
    channels should be specified in the same manner.

    The range of values present in the input image is the range that is
    mapped to the entire range of colors.

    This code was contributed in the Insight Journal paper: "Meeting Andy
    Warhol Somewhere Over the Rainbow: RGB Colormapping and ITK" by
    Tustison N., Zhang H., Lehmann G., Yushkevich P., Gee
    J.https://hdl.handle.net/1926/1452http://www.insight-
    journal.org/browse/publication/285

    See:  BinaryFunctionImageFilter TernaryFunctionImageFilter
    example{Filtering/Colormap/CreateACustomColormap, Create A Custom
    Colormap}  example{Filtering/Colormap/ApplyAColormapToAnImage,Apply A
    Colormap To An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBAUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBAUC2_Clone)
    GetModifiableColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBAUC2_GetModifiableColormap)
    GetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBAUC2_GetColormap)
    SetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBAUC2_SetColormap)
    SetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBAUC2_SetUseInputImageExtremaForScaling)
    GetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBAUC2_GetUseInputImageExtremaForScaling)
    UseInputImageExtremaForScalingOn = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBAUC2_UseInputImageExtremaForScalingOn)
    UseInputImageExtremaForScalingOff = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBAUC2_UseInputImageExtremaForScalingOff)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUC2IRGBAUC2
    cast = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBAUC2_cast)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUC2IRGBAUC2

        Create a new object of the class itkScalarToRGBColormapImageFilterIUC2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUC2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUC2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUC2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUC2IRGBAUC2 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBAUC2_swigregister(itkScalarToRGBColormapImageFilterIUC2IRGBAUC2)
itkScalarToRGBColormapImageFilterIUC2IRGBAUC2___New_orig__ = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBAUC2___New_orig__
itkScalarToRGBColormapImageFilterIUC2IRGBAUC2_cast = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBAUC2_cast


def itkScalarToRGBColormapImageFilterIUC2IRGBUC2_New():
    return itkScalarToRGBColormapImageFilterIUC2IRGBUC2.New()

class itkScalarToRGBColormapImageFilterIUC2IRGBUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBUC2):
    r"""


    Implements pixel-wise intensity->rgb mapping operation on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    The input image's scalar pixel values are mapped into a color map. The
    color map is specified by passing the SetColormap function one of the
    predefined maps. The following selects the
    "RGBColormapFilterEnum::Hot" colormap:

    You can also specify a custom color map. This is done by creating a
    CustomColormapFunction, and then creating lists of values for the red,
    green, and blue channel. An example of setting the red channel of a
    colormap with only 2 colors is given below. The blue and green
    channels should be specified in the same manner.

    The range of values present in the input image is the range that is
    mapped to the entire range of colors.

    This code was contributed in the Insight Journal paper: "Meeting Andy
    Warhol Somewhere Over the Rainbow: RGB Colormapping and ITK" by
    Tustison N., Zhang H., Lehmann G., Yushkevich P., Gee
    J.https://hdl.handle.net/1926/1452http://www.insight-
    journal.org/browse/publication/285

    See:  BinaryFunctionImageFilter TernaryFunctionImageFilter
    example{Filtering/Colormap/CreateACustomColormap, Create A Custom
    Colormap}  example{Filtering/Colormap/ApplyAColormapToAnImage,Apply A
    Colormap To An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBUC2_Clone)
    GetModifiableColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBUC2_GetModifiableColormap)
    GetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBUC2_GetColormap)
    SetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBUC2_SetColormap)
    SetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBUC2_SetUseInputImageExtremaForScaling)
    GetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBUC2_GetUseInputImageExtremaForScaling)
    UseInputImageExtremaForScalingOn = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBUC2_UseInputImageExtremaForScalingOn)
    UseInputImageExtremaForScalingOff = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBUC2_UseInputImageExtremaForScalingOff)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUC2IRGBUC2
    cast = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUC2IRGBUC2

        Create a new object of the class itkScalarToRGBColormapImageFilterIUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUC2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUC2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUC2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUC2IRGBUC2 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBUC2_swigregister(itkScalarToRGBColormapImageFilterIUC2IRGBUC2)
itkScalarToRGBColormapImageFilterIUC2IRGBUC2___New_orig__ = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBUC2___New_orig__
itkScalarToRGBColormapImageFilterIUC2IRGBUC2_cast = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBUC2_cast


def itkScalarToRGBColormapImageFilterIUC3IRGBAUC3_New():
    return itkScalarToRGBColormapImageFilterIUC3IRGBAUC3.New()

class itkScalarToRGBColormapImageFilterIUC3IRGBAUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBAUC3):
    r"""


    Implements pixel-wise intensity->rgb mapping operation on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    The input image's scalar pixel values are mapped into a color map. The
    color map is specified by passing the SetColormap function one of the
    predefined maps. The following selects the
    "RGBColormapFilterEnum::Hot" colormap:

    You can also specify a custom color map. This is done by creating a
    CustomColormapFunction, and then creating lists of values for the red,
    green, and blue channel. An example of setting the red channel of a
    colormap with only 2 colors is given below. The blue and green
    channels should be specified in the same manner.

    The range of values present in the input image is the range that is
    mapped to the entire range of colors.

    This code was contributed in the Insight Journal paper: "Meeting Andy
    Warhol Somewhere Over the Rainbow: RGB Colormapping and ITK" by
    Tustison N., Zhang H., Lehmann G., Yushkevich P., Gee
    J.https://hdl.handle.net/1926/1452http://www.insight-
    journal.org/browse/publication/285

    See:  BinaryFunctionImageFilter TernaryFunctionImageFilter
    example{Filtering/Colormap/CreateACustomColormap, Create A Custom
    Colormap}  example{Filtering/Colormap/ApplyAColormapToAnImage,Apply A
    Colormap To An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBAUC3_Clone)
    GetModifiableColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBAUC3_GetModifiableColormap)
    GetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBAUC3_GetColormap)
    SetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBAUC3_SetColormap)
    SetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBAUC3_SetUseInputImageExtremaForScaling)
    GetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBAUC3_GetUseInputImageExtremaForScaling)
    UseInputImageExtremaForScalingOn = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBAUC3_UseInputImageExtremaForScalingOn)
    UseInputImageExtremaForScalingOff = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBAUC3_UseInputImageExtremaForScalingOff)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUC3IRGBAUC3
    cast = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUC3IRGBAUC3

        Create a new object of the class itkScalarToRGBColormapImageFilterIUC3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUC3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUC3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUC3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUC3IRGBAUC3 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBAUC3_swigregister(itkScalarToRGBColormapImageFilterIUC3IRGBAUC3)
itkScalarToRGBColormapImageFilterIUC3IRGBAUC3___New_orig__ = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBAUC3___New_orig__
itkScalarToRGBColormapImageFilterIUC3IRGBAUC3_cast = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBAUC3_cast


def itkScalarToRGBColormapImageFilterIUC3IRGBUC3_New():
    return itkScalarToRGBColormapImageFilterIUC3IRGBUC3.New()

class itkScalarToRGBColormapImageFilterIUC3IRGBUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBUC3):
    r"""


    Implements pixel-wise intensity->rgb mapping operation on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    The input image's scalar pixel values are mapped into a color map. The
    color map is specified by passing the SetColormap function one of the
    predefined maps. The following selects the
    "RGBColormapFilterEnum::Hot" colormap:

    You can also specify a custom color map. This is done by creating a
    CustomColormapFunction, and then creating lists of values for the red,
    green, and blue channel. An example of setting the red channel of a
    colormap with only 2 colors is given below. The blue and green
    channels should be specified in the same manner.

    The range of values present in the input image is the range that is
    mapped to the entire range of colors.

    This code was contributed in the Insight Journal paper: "Meeting Andy
    Warhol Somewhere Over the Rainbow: RGB Colormapping and ITK" by
    Tustison N., Zhang H., Lehmann G., Yushkevich P., Gee
    J.https://hdl.handle.net/1926/1452http://www.insight-
    journal.org/browse/publication/285

    See:  BinaryFunctionImageFilter TernaryFunctionImageFilter
    example{Filtering/Colormap/CreateACustomColormap, Create A Custom
    Colormap}  example{Filtering/Colormap/ApplyAColormapToAnImage,Apply A
    Colormap To An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBUC3_Clone)
    GetModifiableColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBUC3_GetModifiableColormap)
    GetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBUC3_GetColormap)
    SetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBUC3_SetColormap)
    SetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBUC3_SetUseInputImageExtremaForScaling)
    GetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBUC3_GetUseInputImageExtremaForScaling)
    UseInputImageExtremaForScalingOn = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBUC3_UseInputImageExtremaForScalingOn)
    UseInputImageExtremaForScalingOff = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBUC3_UseInputImageExtremaForScalingOff)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUC3IRGBUC3
    cast = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUC3IRGBUC3

        Create a new object of the class itkScalarToRGBColormapImageFilterIUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUC3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUC3IRGBUC3 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBUC3_swigregister(itkScalarToRGBColormapImageFilterIUC3IRGBUC3)
itkScalarToRGBColormapImageFilterIUC3IRGBUC3___New_orig__ = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBUC3___New_orig__
itkScalarToRGBColormapImageFilterIUC3IRGBUC3_cast = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBUC3_cast


def itkScalarToRGBColormapImageFilterIUL2IRGBAUC2_New():
    return itkScalarToRGBColormapImageFilterIUL2IRGBAUC2.New()

class itkScalarToRGBColormapImageFilterIUL2IRGBAUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBAUC2):
    r"""


    Implements pixel-wise intensity->rgb mapping operation on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    The input image's scalar pixel values are mapped into a color map. The
    color map is specified by passing the SetColormap function one of the
    predefined maps. The following selects the
    "RGBColormapFilterEnum::Hot" colormap:

    You can also specify a custom color map. This is done by creating a
    CustomColormapFunction, and then creating lists of values for the red,
    green, and blue channel. An example of setting the red channel of a
    colormap with only 2 colors is given below. The blue and green
    channels should be specified in the same manner.

    The range of values present in the input image is the range that is
    mapped to the entire range of colors.

    This code was contributed in the Insight Journal paper: "Meeting Andy
    Warhol Somewhere Over the Rainbow: RGB Colormapping and ITK" by
    Tustison N., Zhang H., Lehmann G., Yushkevich P., Gee
    J.https://hdl.handle.net/1926/1452http://www.insight-
    journal.org/browse/publication/285

    See:  BinaryFunctionImageFilter TernaryFunctionImageFilter
    example{Filtering/Colormap/CreateACustomColormap, Create A Custom
    Colormap}  example{Filtering/Colormap/ApplyAColormapToAnImage,Apply A
    Colormap To An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBAUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBAUC2_Clone)
    GetModifiableColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBAUC2_GetModifiableColormap)
    GetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBAUC2_GetColormap)
    SetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBAUC2_SetColormap)
    SetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBAUC2_SetUseInputImageExtremaForScaling)
    GetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBAUC2_GetUseInputImageExtremaForScaling)
    UseInputImageExtremaForScalingOn = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBAUC2_UseInputImageExtremaForScalingOn)
    UseInputImageExtremaForScalingOff = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBAUC2_UseInputImageExtremaForScalingOff)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUL2IRGBAUC2
    cast = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBAUC2_cast)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUL2IRGBAUC2

        Create a new object of the class itkScalarToRGBColormapImageFilterIUL2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUL2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUL2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUL2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUL2IRGBAUC2 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBAUC2_swigregister(itkScalarToRGBColormapImageFilterIUL2IRGBAUC2)
itkScalarToRGBColormapImageFilterIUL2IRGBAUC2___New_orig__ = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBAUC2___New_orig__
itkScalarToRGBColormapImageFilterIUL2IRGBAUC2_cast = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBAUC2_cast


def itkScalarToRGBColormapImageFilterIUL2IRGBUC2_New():
    return itkScalarToRGBColormapImageFilterIUL2IRGBUC2.New()

class itkScalarToRGBColormapImageFilterIUL2IRGBUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBUC2):
    r"""


    Implements pixel-wise intensity->rgb mapping operation on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    The input image's scalar pixel values are mapped into a color map. The
    color map is specified by passing the SetColormap function one of the
    predefined maps. The following selects the
    "RGBColormapFilterEnum::Hot" colormap:

    You can also specify a custom color map. This is done by creating a
    CustomColormapFunction, and then creating lists of values for the red,
    green, and blue channel. An example of setting the red channel of a
    colormap with only 2 colors is given below. The blue and green
    channels should be specified in the same manner.

    The range of values present in the input image is the range that is
    mapped to the entire range of colors.

    This code was contributed in the Insight Journal paper: "Meeting Andy
    Warhol Somewhere Over the Rainbow: RGB Colormapping and ITK" by
    Tustison N., Zhang H., Lehmann G., Yushkevich P., Gee
    J.https://hdl.handle.net/1926/1452http://www.insight-
    journal.org/browse/publication/285

    See:  BinaryFunctionImageFilter TernaryFunctionImageFilter
    example{Filtering/Colormap/CreateACustomColormap, Create A Custom
    Colormap}  example{Filtering/Colormap/ApplyAColormapToAnImage,Apply A
    Colormap To An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBUC2_Clone)
    GetModifiableColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBUC2_GetModifiableColormap)
    GetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBUC2_GetColormap)
    SetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBUC2_SetColormap)
    SetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBUC2_SetUseInputImageExtremaForScaling)
    GetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBUC2_GetUseInputImageExtremaForScaling)
    UseInputImageExtremaForScalingOn = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBUC2_UseInputImageExtremaForScalingOn)
    UseInputImageExtremaForScalingOff = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBUC2_UseInputImageExtremaForScalingOff)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUL2IRGBUC2
    cast = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUL2IRGBUC2

        Create a new object of the class itkScalarToRGBColormapImageFilterIUL2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUL2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUL2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUL2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUL2IRGBUC2 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBUC2_swigregister(itkScalarToRGBColormapImageFilterIUL2IRGBUC2)
itkScalarToRGBColormapImageFilterIUL2IRGBUC2___New_orig__ = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBUC2___New_orig__
itkScalarToRGBColormapImageFilterIUL2IRGBUC2_cast = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBUC2_cast


def itkScalarToRGBColormapImageFilterIUL3IRGBAUC3_New():
    return itkScalarToRGBColormapImageFilterIUL3IRGBAUC3.New()

class itkScalarToRGBColormapImageFilterIUL3IRGBAUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBAUC3):
    r"""


    Implements pixel-wise intensity->rgb mapping operation on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    The input image's scalar pixel values are mapped into a color map. The
    color map is specified by passing the SetColormap function one of the
    predefined maps. The following selects the
    "RGBColormapFilterEnum::Hot" colormap:

    You can also specify a custom color map. This is done by creating a
    CustomColormapFunction, and then creating lists of values for the red,
    green, and blue channel. An example of setting the red channel of a
    colormap with only 2 colors is given below. The blue and green
    channels should be specified in the same manner.

    The range of values present in the input image is the range that is
    mapped to the entire range of colors.

    This code was contributed in the Insight Journal paper: "Meeting Andy
    Warhol Somewhere Over the Rainbow: RGB Colormapping and ITK" by
    Tustison N., Zhang H., Lehmann G., Yushkevich P., Gee
    J.https://hdl.handle.net/1926/1452http://www.insight-
    journal.org/browse/publication/285

    See:  BinaryFunctionImageFilter TernaryFunctionImageFilter
    example{Filtering/Colormap/CreateACustomColormap, Create A Custom
    Colormap}  example{Filtering/Colormap/ApplyAColormapToAnImage,Apply A
    Colormap To An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBAUC3_Clone)
    GetModifiableColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBAUC3_GetModifiableColormap)
    GetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBAUC3_GetColormap)
    SetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBAUC3_SetColormap)
    SetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBAUC3_SetUseInputImageExtremaForScaling)
    GetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBAUC3_GetUseInputImageExtremaForScaling)
    UseInputImageExtremaForScalingOn = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBAUC3_UseInputImageExtremaForScalingOn)
    UseInputImageExtremaForScalingOff = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBAUC3_UseInputImageExtremaForScalingOff)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUL3IRGBAUC3
    cast = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUL3IRGBAUC3

        Create a new object of the class itkScalarToRGBColormapImageFilterIUL3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUL3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUL3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUL3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUL3IRGBAUC3 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBAUC3_swigregister(itkScalarToRGBColormapImageFilterIUL3IRGBAUC3)
itkScalarToRGBColormapImageFilterIUL3IRGBAUC3___New_orig__ = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBAUC3___New_orig__
itkScalarToRGBColormapImageFilterIUL3IRGBAUC3_cast = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBAUC3_cast


def itkScalarToRGBColormapImageFilterIUL3IRGBUC3_New():
    return itkScalarToRGBColormapImageFilterIUL3IRGBUC3.New()

class itkScalarToRGBColormapImageFilterIUL3IRGBUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBUC3):
    r"""


    Implements pixel-wise intensity->rgb mapping operation on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    The input image's scalar pixel values are mapped into a color map. The
    color map is specified by passing the SetColormap function one of the
    predefined maps. The following selects the
    "RGBColormapFilterEnum::Hot" colormap:

    You can also specify a custom color map. This is done by creating a
    CustomColormapFunction, and then creating lists of values for the red,
    green, and blue channel. An example of setting the red channel of a
    colormap with only 2 colors is given below. The blue and green
    channels should be specified in the same manner.

    The range of values present in the input image is the range that is
    mapped to the entire range of colors.

    This code was contributed in the Insight Journal paper: "Meeting Andy
    Warhol Somewhere Over the Rainbow: RGB Colormapping and ITK" by
    Tustison N., Zhang H., Lehmann G., Yushkevich P., Gee
    J.https://hdl.handle.net/1926/1452http://www.insight-
    journal.org/browse/publication/285

    See:  BinaryFunctionImageFilter TernaryFunctionImageFilter
    example{Filtering/Colormap/CreateACustomColormap, Create A Custom
    Colormap}  example{Filtering/Colormap/ApplyAColormapToAnImage,Apply A
    Colormap To An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBUC3_Clone)
    GetModifiableColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBUC3_GetModifiableColormap)
    GetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBUC3_GetColormap)
    SetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBUC3_SetColormap)
    SetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBUC3_SetUseInputImageExtremaForScaling)
    GetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBUC3_GetUseInputImageExtremaForScaling)
    UseInputImageExtremaForScalingOn = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBUC3_UseInputImageExtremaForScalingOn)
    UseInputImageExtremaForScalingOff = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBUC3_UseInputImageExtremaForScalingOff)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUL3IRGBUC3
    cast = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUL3IRGBUC3

        Create a new object of the class itkScalarToRGBColormapImageFilterIUL3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUL3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUL3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUL3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUL3IRGBUC3 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBUC3_swigregister(itkScalarToRGBColormapImageFilterIUL3IRGBUC3)
itkScalarToRGBColormapImageFilterIUL3IRGBUC3___New_orig__ = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBUC3___New_orig__
itkScalarToRGBColormapImageFilterIUL3IRGBUC3_cast = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBUC3_cast


def itkScalarToRGBColormapImageFilterIUS2IRGBAUC2_New():
    return itkScalarToRGBColormapImageFilterIUS2IRGBAUC2.New()

class itkScalarToRGBColormapImageFilterIUS2IRGBAUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBAUC2):
    r"""


    Implements pixel-wise intensity->rgb mapping operation on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    The input image's scalar pixel values are mapped into a color map. The
    color map is specified by passing the SetColormap function one of the
    predefined maps. The following selects the
    "RGBColormapFilterEnum::Hot" colormap:

    You can also specify a custom color map. This is done by creating a
    CustomColormapFunction, and then creating lists of values for the red,
    green, and blue channel. An example of setting the red channel of a
    colormap with only 2 colors is given below. The blue and green
    channels should be specified in the same manner.

    The range of values present in the input image is the range that is
    mapped to the entire range of colors.

    This code was contributed in the Insight Journal paper: "Meeting Andy
    Warhol Somewhere Over the Rainbow: RGB Colormapping and ITK" by
    Tustison N., Zhang H., Lehmann G., Yushkevich P., Gee
    J.https://hdl.handle.net/1926/1452http://www.insight-
    journal.org/browse/publication/285

    See:  BinaryFunctionImageFilter TernaryFunctionImageFilter
    example{Filtering/Colormap/CreateACustomColormap, Create A Custom
    Colormap}  example{Filtering/Colormap/ApplyAColormapToAnImage,Apply A
    Colormap To An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBAUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBAUC2_Clone)
    GetModifiableColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBAUC2_GetModifiableColormap)
    GetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBAUC2_GetColormap)
    SetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBAUC2_SetColormap)
    SetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBAUC2_SetUseInputImageExtremaForScaling)
    GetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBAUC2_GetUseInputImageExtremaForScaling)
    UseInputImageExtremaForScalingOn = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBAUC2_UseInputImageExtremaForScalingOn)
    UseInputImageExtremaForScalingOff = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBAUC2_UseInputImageExtremaForScalingOff)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUS2IRGBAUC2
    cast = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBAUC2_cast)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUS2IRGBAUC2

        Create a new object of the class itkScalarToRGBColormapImageFilterIUS2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUS2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUS2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUS2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUS2IRGBAUC2 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBAUC2_swigregister(itkScalarToRGBColormapImageFilterIUS2IRGBAUC2)
itkScalarToRGBColormapImageFilterIUS2IRGBAUC2___New_orig__ = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBAUC2___New_orig__
itkScalarToRGBColormapImageFilterIUS2IRGBAUC2_cast = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBAUC2_cast


def itkScalarToRGBColormapImageFilterIUS2IRGBUC2_New():
    return itkScalarToRGBColormapImageFilterIUS2IRGBUC2.New()

class itkScalarToRGBColormapImageFilterIUS2IRGBUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBUC2):
    r"""


    Implements pixel-wise intensity->rgb mapping operation on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    The input image's scalar pixel values are mapped into a color map. The
    color map is specified by passing the SetColormap function one of the
    predefined maps. The following selects the
    "RGBColormapFilterEnum::Hot" colormap:

    You can also specify a custom color map. This is done by creating a
    CustomColormapFunction, and then creating lists of values for the red,
    green, and blue channel. An example of setting the red channel of a
    colormap with only 2 colors is given below. The blue and green
    channels should be specified in the same manner.

    The range of values present in the input image is the range that is
    mapped to the entire range of colors.

    This code was contributed in the Insight Journal paper: "Meeting Andy
    Warhol Somewhere Over the Rainbow: RGB Colormapping and ITK" by
    Tustison N., Zhang H., Lehmann G., Yushkevich P., Gee
    J.https://hdl.handle.net/1926/1452http://www.insight-
    journal.org/browse/publication/285

    See:  BinaryFunctionImageFilter TernaryFunctionImageFilter
    example{Filtering/Colormap/CreateACustomColormap, Create A Custom
    Colormap}  example{Filtering/Colormap/ApplyAColormapToAnImage,Apply A
    Colormap To An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBUC2_Clone)
    GetModifiableColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBUC2_GetModifiableColormap)
    GetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBUC2_GetColormap)
    SetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBUC2_SetColormap)
    SetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBUC2_SetUseInputImageExtremaForScaling)
    GetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBUC2_GetUseInputImageExtremaForScaling)
    UseInputImageExtremaForScalingOn = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBUC2_UseInputImageExtremaForScalingOn)
    UseInputImageExtremaForScalingOff = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBUC2_UseInputImageExtremaForScalingOff)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUS2IRGBUC2
    cast = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUS2IRGBUC2

        Create a new object of the class itkScalarToRGBColormapImageFilterIUS2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUS2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUS2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUS2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUS2IRGBUC2 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBUC2_swigregister(itkScalarToRGBColormapImageFilterIUS2IRGBUC2)
itkScalarToRGBColormapImageFilterIUS2IRGBUC2___New_orig__ = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBUC2___New_orig__
itkScalarToRGBColormapImageFilterIUS2IRGBUC2_cast = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBUC2_cast


def itkScalarToRGBColormapImageFilterIUS3IRGBAUC3_New():
    return itkScalarToRGBColormapImageFilterIUS3IRGBAUC3.New()

class itkScalarToRGBColormapImageFilterIUS3IRGBAUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBAUC3):
    r"""


    Implements pixel-wise intensity->rgb mapping operation on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    The input image's scalar pixel values are mapped into a color map. The
    color map is specified by passing the SetColormap function one of the
    predefined maps. The following selects the
    "RGBColormapFilterEnum::Hot" colormap:

    You can also specify a custom color map. This is done by creating a
    CustomColormapFunction, and then creating lists of values for the red,
    green, and blue channel. An example of setting the red channel of a
    colormap with only 2 colors is given below. The blue and green
    channels should be specified in the same manner.

    The range of values present in the input image is the range that is
    mapped to the entire range of colors.

    This code was contributed in the Insight Journal paper: "Meeting Andy
    Warhol Somewhere Over the Rainbow: RGB Colormapping and ITK" by
    Tustison N., Zhang H., Lehmann G., Yushkevich P., Gee
    J.https://hdl.handle.net/1926/1452http://www.insight-
    journal.org/browse/publication/285

    See:  BinaryFunctionImageFilter TernaryFunctionImageFilter
    example{Filtering/Colormap/CreateACustomColormap, Create A Custom
    Colormap}  example{Filtering/Colormap/ApplyAColormapToAnImage,Apply A
    Colormap To An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBAUC3_Clone)
    GetModifiableColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBAUC3_GetModifiableColormap)
    GetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBAUC3_GetColormap)
    SetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBAUC3_SetColormap)
    SetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBAUC3_SetUseInputImageExtremaForScaling)
    GetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBAUC3_GetUseInputImageExtremaForScaling)
    UseInputImageExtremaForScalingOn = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBAUC3_UseInputImageExtremaForScalingOn)
    UseInputImageExtremaForScalingOff = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBAUC3_UseInputImageExtremaForScalingOff)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUS3IRGBAUC3
    cast = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUS3IRGBAUC3

        Create a new object of the class itkScalarToRGBColormapImageFilterIUS3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUS3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUS3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUS3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUS3IRGBAUC3 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBAUC3_swigregister(itkScalarToRGBColormapImageFilterIUS3IRGBAUC3)
itkScalarToRGBColormapImageFilterIUS3IRGBAUC3___New_orig__ = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBAUC3___New_orig__
itkScalarToRGBColormapImageFilterIUS3IRGBAUC3_cast = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBAUC3_cast


def itkScalarToRGBColormapImageFilterIUS3IRGBUC3_New():
    return itkScalarToRGBColormapImageFilterIUS3IRGBUC3.New()

class itkScalarToRGBColormapImageFilterIUS3IRGBUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBUC3):
    r"""


    Implements pixel-wise intensity->rgb mapping operation on one image.

    This class is parameterized over the type of the input image and the
    type of the output image.

    The input image's scalar pixel values are mapped into a color map. The
    color map is specified by passing the SetColormap function one of the
    predefined maps. The following selects the
    "RGBColormapFilterEnum::Hot" colormap:

    You can also specify a custom color map. This is done by creating a
    CustomColormapFunction, and then creating lists of values for the red,
    green, and blue channel. An example of setting the red channel of a
    colormap with only 2 colors is given below. The blue and green
    channels should be specified in the same manner.

    The range of values present in the input image is the range that is
    mapped to the entire range of colors.

    This code was contributed in the Insight Journal paper: "Meeting Andy
    Warhol Somewhere Over the Rainbow: RGB Colormapping and ITK" by
    Tustison N., Zhang H., Lehmann G., Yushkevich P., Gee
    J.https://hdl.handle.net/1926/1452http://www.insight-
    journal.org/browse/publication/285

    See:  BinaryFunctionImageFilter TernaryFunctionImageFilter
    example{Filtering/Colormap/CreateACustomColormap, Create A Custom
    Colormap}  example{Filtering/Colormap/ApplyAColormapToAnImage,Apply A
    Colormap To An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBUC3_Clone)
    GetModifiableColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBUC3_GetModifiableColormap)
    GetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBUC3_GetColormap)
    SetColormap = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBUC3_SetColormap)
    SetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBUC3_SetUseInputImageExtremaForScaling)
    GetUseInputImageExtremaForScaling = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBUC3_GetUseInputImageExtremaForScaling)
    UseInputImageExtremaForScalingOn = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBUC3_UseInputImageExtremaForScalingOn)
    UseInputImageExtremaForScalingOff = _swig_new_instance_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBUC3_UseInputImageExtremaForScalingOff)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUS3IRGBUC3
    cast = _swig_new_static_method(_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUS3IRGBUC3

        Create a new object of the class itkScalarToRGBColormapImageFilterIUS3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUS3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUS3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUS3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUS3IRGBUC3 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBUC3_swigregister(itkScalarToRGBColormapImageFilterIUS3IRGBUC3)
itkScalarToRGBColormapImageFilterIUS3IRGBUC3___New_orig__ = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBUC3___New_orig__
itkScalarToRGBColormapImageFilterIUS3IRGBUC3_cast = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBUC3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def scalar_to_rgb_colormap_image_filter(*args, **kwargs):
    """Procedural interface for ScalarToRGBColormapImageFilter"""
    import itk
    instance = itk.ScalarToRGBColormapImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def scalar_to_rgb_colormap_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ScalarToRGBColormapImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ScalarToRGBColormapImageFilter.values()[0]
    else:
        filter_object = itk.ScalarToRGBColormapImageFilter

    scalar_to_rgb_colormap_image_filter.__doc__ = filter_object.__doc__
    scalar_to_rgb_colormap_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    scalar_to_rgb_colormap_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ScalarToRGBColormapImageFilter, itkTemplate.itkTemplate):
        scalar_to_rgb_colormap_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        scalar_to_rgb_colormap_image_filter.__doc__ += "\n"
        scalar_to_rgb_colormap_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        scalar_to_rgb_colormap_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



