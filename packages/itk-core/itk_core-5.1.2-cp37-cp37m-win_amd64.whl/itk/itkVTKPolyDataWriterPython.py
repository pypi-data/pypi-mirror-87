# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKMeshPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkVTKPolyDataWriterPython
else:
    import _itkVTKPolyDataWriterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkVTKPolyDataWriterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkVTKPolyDataWriterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkMeshBasePython
import itk.itkMapContainerPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkFixedArrayPython
import itk.itkPointPython
import itk.itkVectorContainerPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkPointSetPython
import itk.itkArrayPython
import itk.itkBoundingBoxPython

def itkVTKPolyDataWriterMD2_Superclass_New():
    return itkVTKPolyDataWriterMD2_Superclass.New()

class itkVTKPolyDataWriterMD2_Superclass(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkVTKPolyDataWriterMD2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass___New_orig__)
    DebugOn = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_DebugOn)
    DebugOff = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_DebugOff)
    GetDebug = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_GetDebug)
    SetDebug = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_SetDebug)
    GetMTime = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_Modified)
    SetGlobalWarningDisplay = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_SetGlobalWarningDisplay)
    GetGlobalWarningDisplay = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_GetGlobalWarningDisplay)
    GlobalWarningDisplayOn = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_GlobalWarningDisplayOn)
    GlobalWarningDisplayOff = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_GlobalWarningDisplayOff)
    AddObserver = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_AddObserver)
    GetCommand = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_GetCommand)
    InvokeEvent = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_InvokeEvent)
    RemoveObserver = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_RemoveObserver)
    RemoveAllObservers = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_RemoveAllObservers)
    HasObserver = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_GetMetaDataDictionary)
    SetMetaDataDictionary = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_SetMetaDataDictionary)
    SetObjectName = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_SetObjectName)
    GetObjectName = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_GetObjectName)
    __swig_destroy__ = _itkVTKPolyDataWriterPython.delete_itkVTKPolyDataWriterMD2_Superclass
    cast = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataWriterMD2_Superclass

        Create a new object of the class itkVTKPolyDataWriterMD2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataWriterMD2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataWriterMD2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKPolyDataWriterMD2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKPolyDataWriterMD2_Superclass in _itkVTKPolyDataWriterPython:
_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_swigregister(itkVTKPolyDataWriterMD2_Superclass)
itkVTKPolyDataWriterMD2_Superclass___New_orig__ = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass___New_orig__
itkVTKPolyDataWriterMD2_Superclass_SetGlobalWarningDisplay = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_SetGlobalWarningDisplay
itkVTKPolyDataWriterMD2_Superclass_GetGlobalWarningDisplay = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_GetGlobalWarningDisplay
itkVTKPolyDataWriterMD2_Superclass_GlobalWarningDisplayOn = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_GlobalWarningDisplayOn
itkVTKPolyDataWriterMD2_Superclass_GlobalWarningDisplayOff = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_GlobalWarningDisplayOff
itkVTKPolyDataWriterMD2_Superclass_cast = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_cast


def itkVTKPolyDataWriterMD3_Superclass_New():
    return itkVTKPolyDataWriterMD3_Superclass.New()

class itkVTKPolyDataWriterMD3_Superclass(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkVTKPolyDataWriterMD3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass___New_orig__)
    DebugOn = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_DebugOn)
    DebugOff = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_DebugOff)
    GetDebug = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_GetDebug)
    SetDebug = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_SetDebug)
    GetMTime = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_Modified)
    SetGlobalWarningDisplay = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_SetGlobalWarningDisplay)
    GetGlobalWarningDisplay = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_GetGlobalWarningDisplay)
    GlobalWarningDisplayOn = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_GlobalWarningDisplayOn)
    GlobalWarningDisplayOff = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_GlobalWarningDisplayOff)
    AddObserver = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_AddObserver)
    GetCommand = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_GetCommand)
    InvokeEvent = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_InvokeEvent)
    RemoveObserver = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_RemoveObserver)
    RemoveAllObservers = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_RemoveAllObservers)
    HasObserver = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_GetMetaDataDictionary)
    SetMetaDataDictionary = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_SetMetaDataDictionary)
    SetObjectName = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_SetObjectName)
    GetObjectName = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_GetObjectName)
    __swig_destroy__ = _itkVTKPolyDataWriterPython.delete_itkVTKPolyDataWriterMD3_Superclass
    cast = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataWriterMD3_Superclass

        Create a new object of the class itkVTKPolyDataWriterMD3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataWriterMD3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataWriterMD3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKPolyDataWriterMD3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKPolyDataWriterMD3_Superclass in _itkVTKPolyDataWriterPython:
_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_swigregister(itkVTKPolyDataWriterMD3_Superclass)
itkVTKPolyDataWriterMD3_Superclass___New_orig__ = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass___New_orig__
itkVTKPolyDataWriterMD3_Superclass_SetGlobalWarningDisplay = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_SetGlobalWarningDisplay
itkVTKPolyDataWriterMD3_Superclass_GetGlobalWarningDisplay = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_GetGlobalWarningDisplay
itkVTKPolyDataWriterMD3_Superclass_GlobalWarningDisplayOn = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_GlobalWarningDisplayOn
itkVTKPolyDataWriterMD3_Superclass_GlobalWarningDisplayOff = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_GlobalWarningDisplayOff
itkVTKPolyDataWriterMD3_Superclass_cast = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_cast


def itkVTKPolyDataWriterMF2_Superclass_New():
    return itkVTKPolyDataWriterMF2_Superclass.New()

class itkVTKPolyDataWriterMF2_Superclass(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkVTKPolyDataWriterMF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass___New_orig__)
    DebugOn = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_DebugOn)
    DebugOff = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_DebugOff)
    GetDebug = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_GetDebug)
    SetDebug = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_SetDebug)
    GetMTime = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_Modified)
    SetGlobalWarningDisplay = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_SetGlobalWarningDisplay)
    GetGlobalWarningDisplay = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_GetGlobalWarningDisplay)
    GlobalWarningDisplayOn = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_GlobalWarningDisplayOn)
    GlobalWarningDisplayOff = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_GlobalWarningDisplayOff)
    AddObserver = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_AddObserver)
    GetCommand = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_GetCommand)
    InvokeEvent = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_InvokeEvent)
    RemoveObserver = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_RemoveObserver)
    RemoveAllObservers = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_RemoveAllObservers)
    HasObserver = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_GetMetaDataDictionary)
    SetMetaDataDictionary = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_SetMetaDataDictionary)
    SetObjectName = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_SetObjectName)
    GetObjectName = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_GetObjectName)
    __swig_destroy__ = _itkVTKPolyDataWriterPython.delete_itkVTKPolyDataWriterMF2_Superclass
    cast = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataWriterMF2_Superclass

        Create a new object of the class itkVTKPolyDataWriterMF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataWriterMF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataWriterMF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKPolyDataWriterMF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKPolyDataWriterMF2_Superclass in _itkVTKPolyDataWriterPython:
_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_swigregister(itkVTKPolyDataWriterMF2_Superclass)
itkVTKPolyDataWriterMF2_Superclass___New_orig__ = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass___New_orig__
itkVTKPolyDataWriterMF2_Superclass_SetGlobalWarningDisplay = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_SetGlobalWarningDisplay
itkVTKPolyDataWriterMF2_Superclass_GetGlobalWarningDisplay = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_GetGlobalWarningDisplay
itkVTKPolyDataWriterMF2_Superclass_GlobalWarningDisplayOn = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_GlobalWarningDisplayOn
itkVTKPolyDataWriterMF2_Superclass_GlobalWarningDisplayOff = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_GlobalWarningDisplayOff
itkVTKPolyDataWriterMF2_Superclass_cast = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_cast


def itkVTKPolyDataWriterMF3_New():
    return itkVTKPolyDataWriterMF3.New()

class itkVTKPolyDataWriterMF3(itkVTKPolyDataWriterMF2_Superclass):
    r"""


    Writes an itkMesh to a file in VTK file format.

    Caveat: The input to itkVTKPolyDataWriter must be a triangle mesh. Use
    vtkTriangleFilter to convert your mesh to a triangle mesh.

    This class may be deprecated in the future. The MeshFileWriter is
    preferred.

    See:  MeshFileWriter  {Core/Mesh/WorkingWithPointAndCellData,Write
    Mesh To VTP} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3___New_orig__)
    Clone = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Clone)
    Update = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Update)
    Write = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Write)
    SetInput = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_SetInput)
    SetFileName = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_SetFileName)
    GetFileName = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_GetFileName)
    __swig_destroy__ = _itkVTKPolyDataWriterPython.delete_itkVTKPolyDataWriterMF3
    cast = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_cast)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataWriterMF3

        Create a new object of the class itkVTKPolyDataWriterMF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataWriterMF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataWriterMF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKPolyDataWriterMF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKPolyDataWriterMF3 in _itkVTKPolyDataWriterPython:
_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_swigregister(itkVTKPolyDataWriterMF3)
itkVTKPolyDataWriterMF3___New_orig__ = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3___New_orig__
itkVTKPolyDataWriterMF3_cast = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_cast


def itkVTKPolyDataWriterMF3_Superclass_New():
    return itkVTKPolyDataWriterMF3_Superclass.New()

class itkVTKPolyDataWriterMF3_Superclass(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkVTKPolyDataWriterMF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass___New_orig__)
    DebugOn = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_DebugOn)
    DebugOff = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_DebugOff)
    GetDebug = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_GetDebug)
    SetDebug = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_SetDebug)
    GetMTime = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_GetMTime)
    GetTimeStamp = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_GetTimeStamp)
    Modified = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_Modified)
    SetGlobalWarningDisplay = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_SetGlobalWarningDisplay)
    GetGlobalWarningDisplay = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_GetGlobalWarningDisplay)
    GlobalWarningDisplayOn = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_GlobalWarningDisplayOn)
    GlobalWarningDisplayOff = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_GlobalWarningDisplayOff)
    AddObserver = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_AddObserver)
    GetCommand = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_GetCommand)
    InvokeEvent = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_InvokeEvent)
    RemoveObserver = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_RemoveObserver)
    RemoveAllObservers = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_RemoveAllObservers)
    HasObserver = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_HasObserver)
    GetMetaDataDictionary = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_GetMetaDataDictionary)
    SetMetaDataDictionary = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_SetMetaDataDictionary)
    SetObjectName = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_SetObjectName)
    GetObjectName = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_GetObjectName)
    __swig_destroy__ = _itkVTKPolyDataWriterPython.delete_itkVTKPolyDataWriterMF3_Superclass
    cast = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataWriterMF3_Superclass

        Create a new object of the class itkVTKPolyDataWriterMF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataWriterMF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataWriterMF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKPolyDataWriterMF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKPolyDataWriterMF3_Superclass in _itkVTKPolyDataWriterPython:
_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_swigregister(itkVTKPolyDataWriterMF3_Superclass)
itkVTKPolyDataWriterMF3_Superclass___New_orig__ = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass___New_orig__
itkVTKPolyDataWriterMF3_Superclass_SetGlobalWarningDisplay = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_SetGlobalWarningDisplay
itkVTKPolyDataWriterMF3_Superclass_GetGlobalWarningDisplay = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_GetGlobalWarningDisplay
itkVTKPolyDataWriterMF3_Superclass_GlobalWarningDisplayOn = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_GlobalWarningDisplayOn
itkVTKPolyDataWriterMF3_Superclass_GlobalWarningDisplayOff = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_GlobalWarningDisplayOff
itkVTKPolyDataWriterMF3_Superclass_cast = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_cast


def itkVTKPolyDataWriterMD2_New():
    return itkVTKPolyDataWriterMD2.New()

class itkVTKPolyDataWriterMD2(itkVTKPolyDataWriterMF2_Superclass):
    r"""


    Writes an itkMesh to a file in VTK file format.

    Caveat: The input to itkVTKPolyDataWriter must be a triangle mesh. Use
    vtkTriangleFilter to convert your mesh to a triangle mesh.

    This class may be deprecated in the future. The MeshFileWriter is
    preferred.

    See:  MeshFileWriter  {Core/Mesh/WorkingWithPointAndCellData,Write
    Mesh To VTP} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2___New_orig__)
    Clone = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Clone)
    Update = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Update)
    Write = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Write)
    SetInput = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_SetInput)
    SetFileName = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_SetFileName)
    GetFileName = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_GetFileName)
    __swig_destroy__ = _itkVTKPolyDataWriterPython.delete_itkVTKPolyDataWriterMD2
    cast = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_cast)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataWriterMD2

        Create a new object of the class itkVTKPolyDataWriterMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataWriterMD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataWriterMD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKPolyDataWriterMD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKPolyDataWriterMD2 in _itkVTKPolyDataWriterPython:
_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_swigregister(itkVTKPolyDataWriterMD2)
itkVTKPolyDataWriterMD2___New_orig__ = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2___New_orig__
itkVTKPolyDataWriterMD2_cast = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_cast


def itkVTKPolyDataWriterMD3_New():
    return itkVTKPolyDataWriterMD3.New()

class itkVTKPolyDataWriterMD3(itkVTKPolyDataWriterMF2_Superclass):
    r"""


    Writes an itkMesh to a file in VTK file format.

    Caveat: The input to itkVTKPolyDataWriter must be a triangle mesh. Use
    vtkTriangleFilter to convert your mesh to a triangle mesh.

    This class may be deprecated in the future. The MeshFileWriter is
    preferred.

    See:  MeshFileWriter  {Core/Mesh/WorkingWithPointAndCellData,Write
    Mesh To VTP} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3___New_orig__)
    Clone = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Clone)
    Update = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Update)
    Write = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Write)
    SetInput = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_SetInput)
    SetFileName = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_SetFileName)
    GetFileName = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_GetFileName)
    __swig_destroy__ = _itkVTKPolyDataWriterPython.delete_itkVTKPolyDataWriterMD3
    cast = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_cast)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataWriterMD3

        Create a new object of the class itkVTKPolyDataWriterMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataWriterMD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataWriterMD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKPolyDataWriterMD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKPolyDataWriterMD3 in _itkVTKPolyDataWriterPython:
_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_swigregister(itkVTKPolyDataWriterMD3)
itkVTKPolyDataWriterMD3___New_orig__ = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3___New_orig__
itkVTKPolyDataWriterMD3_cast = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_cast


def itkVTKPolyDataWriterMF2_New():
    return itkVTKPolyDataWriterMF2.New()

class itkVTKPolyDataWriterMF2(itkVTKPolyDataWriterMF2_Superclass):
    r"""


    Writes an itkMesh to a file in VTK file format.

    Caveat: The input to itkVTKPolyDataWriter must be a triangle mesh. Use
    vtkTriangleFilter to convert your mesh to a triangle mesh.

    This class may be deprecated in the future. The MeshFileWriter is
    preferred.

    See:  MeshFileWriter  {Core/Mesh/WorkingWithPointAndCellData,Write
    Mesh To VTP} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2___New_orig__)
    Clone = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Clone)
    Update = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Update)
    Write = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Write)
    SetInput = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_SetInput)
    SetFileName = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_SetFileName)
    GetFileName = _swig_new_instance_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_GetFileName)
    __swig_destroy__ = _itkVTKPolyDataWriterPython.delete_itkVTKPolyDataWriterMF2
    cast = _swig_new_static_method(_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_cast)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataWriterMF2

        Create a new object of the class itkVTKPolyDataWriterMF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataWriterMF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataWriterMF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKPolyDataWriterMF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKPolyDataWriterMF2 in _itkVTKPolyDataWriterPython:
_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_swigregister(itkVTKPolyDataWriterMF2)
itkVTKPolyDataWriterMF2___New_orig__ = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2___New_orig__
itkVTKPolyDataWriterMF2_cast = _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_cast



