# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: blickfeld/common.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import options_pb2 as blickfeld_dot_options__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='blickfeld/common.proto',
  package='blickfeld.protocol',
  syntax='proto2',
  serialized_options=None,
  serialized_pb=_b('\n\x16\x62lickfeld/common.proto\x12\x12\x62lickfeld.protocol\x1a\x17\x62lickfeld/options.proto\".\n\nValueRange\x12\x0f\n\x07minimum\x18\x01 \x01(\x02\x12\x0f\n\x07maximum\x18\x02 \x01(\x02\"B\n\x12OptionalValueRange\x12\x15\n\x07minimum\x18\x01 \x01(\x02\x42\x04\xb0\xb5\x18\x01\x12\x15\n\x07maximum\x18\x02 \x01(\x02\x42\x04\xb0\xb5\x18\x01\"\x8f\x01\n\x05\x46ield\x12\x39\n\x0bidentifiers\x18\x01 \x03(\x0b\x32$.blickfeld.protocol.Field.Identifier\x12\r\n\x05scale\x18\x02 \x01(\x02\x1a<\n\nIdentifier\x12\n\n\x02id\x18\x01 \x01(\r\x12\x0b\n\x03key\x18\x02 \x01(\t\x12\x15\n\rcamelcase_key\x18\x03 \x01(\t\"\xe5\x02\n\nConstraint\x12)\n\x06target\x18\x01 \x01(\x0b\x32\x19.blickfeld.protocol.Field\x12\x0e\n\x06reason\x18\x02 \x01(\t\x12;\n\x08\x63onstant\x18\n \x01(\x0b\x32\'.blickfeld.protocol.Constraint.ConstantH\x00\x12?\n\npolynomial\x18\x0b \x01(\x0b\x32).blickfeld.protocol.Constraint.PolynomialH\x00\x1a\x38\n\x08\x43onstant\x12\x15\n\x07minimum\x18\x01 \x01(\x02\x42\x04\xb0\xb5\x18\x01\x12\x15\n\x07maximum\x18\x02 \x01(\x02\x42\x04\xb0\xb5\x18\x01\x1a\\\n\nPolynomial\x12,\n\treference\x18\x01 \x01(\x0b\x32\x19.blickfeld.protocol.Field\x12\x0f\n\x07minimum\x18\x02 \x03(\x02\x12\x0f\n\x07maximum\x18\x03 \x03(\x02\x42\x06\n\x04type')
  ,
  dependencies=[blickfeld_dot_options__pb2.DESCRIPTOR,])




_VALUERANGE = _descriptor.Descriptor(
  name='ValueRange',
  full_name='blickfeld.protocol.ValueRange',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='minimum', full_name='blickfeld.protocol.ValueRange.minimum', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='maximum', full_name='blickfeld.protocol.ValueRange.maximum', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=71,
  serialized_end=117,
)


_OPTIONALVALUERANGE = _descriptor.Descriptor(
  name='OptionalValueRange',
  full_name='blickfeld.protocol.OptionalValueRange',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='minimum', full_name='blickfeld.protocol.OptionalValueRange.minimum', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\260\265\030\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='maximum', full_name='blickfeld.protocol.OptionalValueRange.maximum', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\260\265\030\001'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=119,
  serialized_end=185,
)


_FIELD_IDENTIFIER = _descriptor.Descriptor(
  name='Identifier',
  full_name='blickfeld.protocol.Field.Identifier',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='blickfeld.protocol.Field.Identifier.id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='key', full_name='blickfeld.protocol.Field.Identifier.key', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='camelcase_key', full_name='blickfeld.protocol.Field.Identifier.camelcase_key', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=271,
  serialized_end=331,
)

_FIELD = _descriptor.Descriptor(
  name='Field',
  full_name='blickfeld.protocol.Field',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='identifiers', full_name='blickfeld.protocol.Field.identifiers', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='scale', full_name='blickfeld.protocol.Field.scale', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_FIELD_IDENTIFIER, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=188,
  serialized_end=331,
)


_CONSTRAINT_CONSTANT = _descriptor.Descriptor(
  name='Constant',
  full_name='blickfeld.protocol.Constraint.Constant',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='minimum', full_name='blickfeld.protocol.Constraint.Constant.minimum', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\260\265\030\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='maximum', full_name='blickfeld.protocol.Constraint.Constant.maximum', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\260\265\030\001'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=533,
  serialized_end=589,
)

_CONSTRAINT_POLYNOMIAL = _descriptor.Descriptor(
  name='Polynomial',
  full_name='blickfeld.protocol.Constraint.Polynomial',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='reference', full_name='blickfeld.protocol.Constraint.Polynomial.reference', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='minimum', full_name='blickfeld.protocol.Constraint.Polynomial.minimum', index=1,
      number=2, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='maximum', full_name='blickfeld.protocol.Constraint.Polynomial.maximum', index=2,
      number=3, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=591,
  serialized_end=683,
)

_CONSTRAINT = _descriptor.Descriptor(
  name='Constraint',
  full_name='blickfeld.protocol.Constraint',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='target', full_name='blickfeld.protocol.Constraint.target', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='reason', full_name='blickfeld.protocol.Constraint.reason', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='constant', full_name='blickfeld.protocol.Constraint.constant', index=2,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='polynomial', full_name='blickfeld.protocol.Constraint.polynomial', index=3,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_CONSTRAINT_CONSTANT, _CONSTRAINT_POLYNOMIAL, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='type', full_name='blickfeld.protocol.Constraint.type',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=334,
  serialized_end=691,
)

_FIELD_IDENTIFIER.containing_type = _FIELD
_FIELD.fields_by_name['identifiers'].message_type = _FIELD_IDENTIFIER
_CONSTRAINT_CONSTANT.containing_type = _CONSTRAINT
_CONSTRAINT_POLYNOMIAL.fields_by_name['reference'].message_type = _FIELD
_CONSTRAINT_POLYNOMIAL.containing_type = _CONSTRAINT
_CONSTRAINT.fields_by_name['target'].message_type = _FIELD
_CONSTRAINT.fields_by_name['constant'].message_type = _CONSTRAINT_CONSTANT
_CONSTRAINT.fields_by_name['polynomial'].message_type = _CONSTRAINT_POLYNOMIAL
_CONSTRAINT.oneofs_by_name['type'].fields.append(
  _CONSTRAINT.fields_by_name['constant'])
_CONSTRAINT.fields_by_name['constant'].containing_oneof = _CONSTRAINT.oneofs_by_name['type']
_CONSTRAINT.oneofs_by_name['type'].fields.append(
  _CONSTRAINT.fields_by_name['polynomial'])
_CONSTRAINT.fields_by_name['polynomial'].containing_oneof = _CONSTRAINT.oneofs_by_name['type']
DESCRIPTOR.message_types_by_name['ValueRange'] = _VALUERANGE
DESCRIPTOR.message_types_by_name['OptionalValueRange'] = _OPTIONALVALUERANGE
DESCRIPTOR.message_types_by_name['Field'] = _FIELD
DESCRIPTOR.message_types_by_name['Constraint'] = _CONSTRAINT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ValueRange = _reflection.GeneratedProtocolMessageType('ValueRange', (_message.Message,), dict(
  DESCRIPTOR = _VALUERANGE,
  __module__ = 'blickfeld.common_pb2'
  # @@protoc_insertion_point(class_scope:blickfeld.protocol.ValueRange)
  ))
_sym_db.RegisterMessage(ValueRange)

OptionalValueRange = _reflection.GeneratedProtocolMessageType('OptionalValueRange', (_message.Message,), dict(
  DESCRIPTOR = _OPTIONALVALUERANGE,
  __module__ = 'blickfeld.common_pb2'
  # @@protoc_insertion_point(class_scope:blickfeld.protocol.OptionalValueRange)
  ))
_sym_db.RegisterMessage(OptionalValueRange)

Field = _reflection.GeneratedProtocolMessageType('Field', (_message.Message,), dict(

  Identifier = _reflection.GeneratedProtocolMessageType('Identifier', (_message.Message,), dict(
    DESCRIPTOR = _FIELD_IDENTIFIER,
    __module__ = 'blickfeld.common_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.Field.Identifier)
    ))
  ,
  DESCRIPTOR = _FIELD,
  __module__ = 'blickfeld.common_pb2'
  # @@protoc_insertion_point(class_scope:blickfeld.protocol.Field)
  ))
_sym_db.RegisterMessage(Field)
_sym_db.RegisterMessage(Field.Identifier)

Constraint = _reflection.GeneratedProtocolMessageType('Constraint', (_message.Message,), dict(

  Constant = _reflection.GeneratedProtocolMessageType('Constant', (_message.Message,), dict(
    DESCRIPTOR = _CONSTRAINT_CONSTANT,
    __module__ = 'blickfeld.common_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.Constraint.Constant)
    ))
  ,

  Polynomial = _reflection.GeneratedProtocolMessageType('Polynomial', (_message.Message,), dict(
    DESCRIPTOR = _CONSTRAINT_POLYNOMIAL,
    __module__ = 'blickfeld.common_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.protocol.Constraint.Polynomial)
    ))
  ,
  DESCRIPTOR = _CONSTRAINT,
  __module__ = 'blickfeld.common_pb2'
  # @@protoc_insertion_point(class_scope:blickfeld.protocol.Constraint)
  ))
_sym_db.RegisterMessage(Constraint)
_sym_db.RegisterMessage(Constraint.Constant)
_sym_db.RegisterMessage(Constraint.Polynomial)


_OPTIONALVALUERANGE.fields_by_name['minimum']._options = None
_OPTIONALVALUERANGE.fields_by_name['maximum']._options = None
_CONSTRAINT_CONSTANT.fields_by_name['minimum']._options = None
_CONSTRAINT_CONSTANT.fields_by_name['maximum']._options = None
# @@protoc_insertion_point(module_scope)
