# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKStatisticsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkImageToHistogramFilterPython
else:
    import _itkImageToHistogramFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkImageToHistogramFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkImageToHistogramFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkArrayPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkHistogramPython
import itk.ITKCommonBasePython
import itk.itkSamplePython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkImageSinkPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSimpleDataObjectDecoratorPython

def itkImageToHistogramFilterICF2_New():
    return itkImageToHistogramFilterICF2.New()

class itkImageToHistogramFilterICF2(itk.itkImageSinkPython.itkImageSinkICF2):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterICF2
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterICF2

        Create a new object of the class itkImageToHistogramFilterICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterICF2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_swigregister(itkImageToHistogramFilterICF2)
itkImageToHistogramFilterICF2___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2___New_orig__
itkImageToHistogramFilterICF2_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_cast


def itkImageToHistogramFilterICF3_New():
    return itkImageToHistogramFilterICF3.New()

class itkImageToHistogramFilterICF3(itk.itkImageSinkPython.itkImageSinkICF3):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterICF3
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterICF3

        Create a new object of the class itkImageToHistogramFilterICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterICF3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_swigregister(itkImageToHistogramFilterICF3)
itkImageToHistogramFilterICF3___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3___New_orig__
itkImageToHistogramFilterICF3_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_cast


def itkImageToHistogramFilterICVF22_New():
    return itkImageToHistogramFilterICVF22.New()

class itkImageToHistogramFilterICVF22(itk.itkImageSinkPython.itkImageSinkICVF22):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterICVF22
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterICVF22

        Create a new object of the class itkImageToHistogramFilterICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterICVF22 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_swigregister(itkImageToHistogramFilterICVF22)
itkImageToHistogramFilterICVF22___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22___New_orig__
itkImageToHistogramFilterICVF22_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_cast


def itkImageToHistogramFilterICVF23_New():
    return itkImageToHistogramFilterICVF23.New()

class itkImageToHistogramFilterICVF23(itk.itkImageSinkPython.itkImageSinkICVF23):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterICVF23
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterICVF23

        Create a new object of the class itkImageToHistogramFilterICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterICVF23 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_swigregister(itkImageToHistogramFilterICVF23)
itkImageToHistogramFilterICVF23___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23___New_orig__
itkImageToHistogramFilterICVF23_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_cast


def itkImageToHistogramFilterICVF32_New():
    return itkImageToHistogramFilterICVF32.New()

class itkImageToHistogramFilterICVF32(itk.itkImageSinkPython.itkImageSinkICVF32):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterICVF32
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterICVF32

        Create a new object of the class itkImageToHistogramFilterICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterICVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterICVF32 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_swigregister(itkImageToHistogramFilterICVF32)
itkImageToHistogramFilterICVF32___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32___New_orig__
itkImageToHistogramFilterICVF32_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_cast


def itkImageToHistogramFilterICVF33_New():
    return itkImageToHistogramFilterICVF33.New()

class itkImageToHistogramFilterICVF33(itk.itkImageSinkPython.itkImageSinkICVF33):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterICVF33
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterICVF33

        Create a new object of the class itkImageToHistogramFilterICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterICVF33 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_swigregister(itkImageToHistogramFilterICVF33)
itkImageToHistogramFilterICVF33___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33___New_orig__
itkImageToHistogramFilterICVF33_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_cast


def itkImageToHistogramFilterICVF42_New():
    return itkImageToHistogramFilterICVF42.New()

class itkImageToHistogramFilterICVF42(itk.itkImageSinkPython.itkImageSinkICVF42):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterICVF42
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterICVF42

        Create a new object of the class itkImageToHistogramFilterICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterICVF42 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_swigregister(itkImageToHistogramFilterICVF42)
itkImageToHistogramFilterICVF42___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42___New_orig__
itkImageToHistogramFilterICVF42_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_cast


def itkImageToHistogramFilterICVF43_New():
    return itkImageToHistogramFilterICVF43.New()

class itkImageToHistogramFilterICVF43(itk.itkImageSinkPython.itkImageSinkICVF43):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterICVF43
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterICVF43

        Create a new object of the class itkImageToHistogramFilterICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterICVF43 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_swigregister(itkImageToHistogramFilterICVF43)
itkImageToHistogramFilterICVF43___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43___New_orig__
itkImageToHistogramFilterICVF43_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_cast


def itkImageToHistogramFilterID2_New():
    return itkImageToHistogramFilterID2.New()

class itkImageToHistogramFilterID2(itk.itkImageSinkPython.itkImageSinkID2):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterID2
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterID2

        Create a new object of the class itkImageToHistogramFilterID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterID2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_swigregister(itkImageToHistogramFilterID2)
itkImageToHistogramFilterID2___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2___New_orig__
itkImageToHistogramFilterID2_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_cast


def itkImageToHistogramFilterID3_New():
    return itkImageToHistogramFilterID3.New()

class itkImageToHistogramFilterID3(itk.itkImageSinkPython.itkImageSinkID3):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterID3
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterID3

        Create a new object of the class itkImageToHistogramFilterID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterID3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_swigregister(itkImageToHistogramFilterID3)
itkImageToHistogramFilterID3___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3___New_orig__
itkImageToHistogramFilterID3_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_cast


def itkImageToHistogramFilterIF2_New():
    return itkImageToHistogramFilterIF2.New()

class itkImageToHistogramFilterIF2(itk.itkImageSinkPython.itkImageSinkIF2):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIF2
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIF2

        Create a new object of the class itkImageToHistogramFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIF2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_swigregister(itkImageToHistogramFilterIF2)
itkImageToHistogramFilterIF2___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2___New_orig__
itkImageToHistogramFilterIF2_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_cast


def itkImageToHistogramFilterIF3_New():
    return itkImageToHistogramFilterIF3.New()

class itkImageToHistogramFilterIF3(itk.itkImageSinkPython.itkImageSinkIF3):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIF3
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIF3

        Create a new object of the class itkImageToHistogramFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIF3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_swigregister(itkImageToHistogramFilterIF3)
itkImageToHistogramFilterIF3___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3___New_orig__
itkImageToHistogramFilterIF3_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_cast


def itkImageToHistogramFilterIRGBAUC2_New():
    return itkImageToHistogramFilterIRGBAUC2.New()

class itkImageToHistogramFilterIRGBAUC2(itk.itkImageSinkPython.itkImageSinkIRGBAUC2):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIRGBAUC2
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIRGBAUC2

        Create a new object of the class itkImageToHistogramFilterIRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIRGBAUC2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_swigregister(itkImageToHistogramFilterIRGBAUC2)
itkImageToHistogramFilterIRGBAUC2___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2___New_orig__
itkImageToHistogramFilterIRGBAUC2_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_cast


def itkImageToHistogramFilterIRGBAUC3_New():
    return itkImageToHistogramFilterIRGBAUC3.New()

class itkImageToHistogramFilterIRGBAUC3(itk.itkImageSinkPython.itkImageSinkIRGBAUC3):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIRGBAUC3
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIRGBAUC3

        Create a new object of the class itkImageToHistogramFilterIRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIRGBAUC3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_swigregister(itkImageToHistogramFilterIRGBAUC3)
itkImageToHistogramFilterIRGBAUC3___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3___New_orig__
itkImageToHistogramFilterIRGBAUC3_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_cast


def itkImageToHistogramFilterIRGBUC2_New():
    return itkImageToHistogramFilterIRGBUC2.New()

class itkImageToHistogramFilterIRGBUC2(itk.itkImageSinkPython.itkImageSinkIRGBUC2):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIRGBUC2
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIRGBUC2

        Create a new object of the class itkImageToHistogramFilterIRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIRGBUC2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_swigregister(itkImageToHistogramFilterIRGBUC2)
itkImageToHistogramFilterIRGBUC2___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2___New_orig__
itkImageToHistogramFilterIRGBUC2_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_cast


def itkImageToHistogramFilterIRGBUC3_New():
    return itkImageToHistogramFilterIRGBUC3.New()

class itkImageToHistogramFilterIRGBUC3(itk.itkImageSinkPython.itkImageSinkIRGBUC3):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIRGBUC3
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIRGBUC3

        Create a new object of the class itkImageToHistogramFilterIRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIRGBUC3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_swigregister(itkImageToHistogramFilterIRGBUC3)
itkImageToHistogramFilterIRGBUC3___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3___New_orig__
itkImageToHistogramFilterIRGBUC3_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_cast


def itkImageToHistogramFilterISS2_New():
    return itkImageToHistogramFilterISS2.New()

class itkImageToHistogramFilterISS2(itk.itkImageSinkPython.itkImageSinkISS2):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterISS2
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterISS2

        Create a new object of the class itkImageToHistogramFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterISS2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_swigregister(itkImageToHistogramFilterISS2)
itkImageToHistogramFilterISS2___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2___New_orig__
itkImageToHistogramFilterISS2_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_cast


def itkImageToHistogramFilterISS3_New():
    return itkImageToHistogramFilterISS3.New()

class itkImageToHistogramFilterISS3(itk.itkImageSinkPython.itkImageSinkISS3):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterISS3
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterISS3

        Create a new object of the class itkImageToHistogramFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterISS3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_swigregister(itkImageToHistogramFilterISS3)
itkImageToHistogramFilterISS3___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3___New_orig__
itkImageToHistogramFilterISS3_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_cast


def itkImageToHistogramFilterIUC2_New():
    return itkImageToHistogramFilterIUC2.New()

class itkImageToHistogramFilterIUC2(itk.itkImageSinkPython.itkImageSinkIUC2):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIUC2
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIUC2

        Create a new object of the class itkImageToHistogramFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIUC2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_swigregister(itkImageToHistogramFilterIUC2)
itkImageToHistogramFilterIUC2___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2___New_orig__
itkImageToHistogramFilterIUC2_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_cast


def itkImageToHistogramFilterIUC3_New():
    return itkImageToHistogramFilterIUC3.New()

class itkImageToHistogramFilterIUC3(itk.itkImageSinkPython.itkImageSinkIUC3):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIUC3
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIUC3

        Create a new object of the class itkImageToHistogramFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIUC3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_swigregister(itkImageToHistogramFilterIUC3)
itkImageToHistogramFilterIUC3___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3___New_orig__
itkImageToHistogramFilterIUC3_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_cast


def itkImageToHistogramFilterIUS2_New():
    return itkImageToHistogramFilterIUS2.New()

class itkImageToHistogramFilterIUS2(itk.itkImageSinkPython.itkImageSinkIUS2):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIUS2
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIUS2

        Create a new object of the class itkImageToHistogramFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIUS2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_swigregister(itkImageToHistogramFilterIUS2)
itkImageToHistogramFilterIUS2___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2___New_orig__
itkImageToHistogramFilterIUS2_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_cast


def itkImageToHistogramFilterIUS3_New():
    return itkImageToHistogramFilterIUS3.New()

class itkImageToHistogramFilterIUS3(itk.itkImageSinkPython.itkImageSinkIUS3):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIUS3
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIUS3

        Create a new object of the class itkImageToHistogramFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIUS3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_swigregister(itkImageToHistogramFilterIUS3)
itkImageToHistogramFilterIUS3___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3___New_orig__
itkImageToHistogramFilterIUS3_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_cast


def itkImageToHistogramFilterIVF22_New():
    return itkImageToHistogramFilterIVF22.New()

class itkImageToHistogramFilterIVF22(itk.itkImageSinkPython.itkImageSinkIVF22):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIVF22
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIVF22

        Create a new object of the class itkImageToHistogramFilterIVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIVF22 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_swigregister(itkImageToHistogramFilterIVF22)
itkImageToHistogramFilterIVF22___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22___New_orig__
itkImageToHistogramFilterIVF22_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_cast


def itkImageToHistogramFilterIVF23_New():
    return itkImageToHistogramFilterIVF23.New()

class itkImageToHistogramFilterIVF23(itk.itkImageSinkPython.itkImageSinkIVF23):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIVF23
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIVF23

        Create a new object of the class itkImageToHistogramFilterIVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIVF23 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_swigregister(itkImageToHistogramFilterIVF23)
itkImageToHistogramFilterIVF23___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23___New_orig__
itkImageToHistogramFilterIVF23_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_cast


def itkImageToHistogramFilterIVF32_New():
    return itkImageToHistogramFilterIVF32.New()

class itkImageToHistogramFilterIVF32(itk.itkImageSinkPython.itkImageSinkIVF32):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIVF32
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIVF32

        Create a new object of the class itkImageToHistogramFilterIVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIVF32 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_swigregister(itkImageToHistogramFilterIVF32)
itkImageToHistogramFilterIVF32___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32___New_orig__
itkImageToHistogramFilterIVF32_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_cast


def itkImageToHistogramFilterIVF33_New():
    return itkImageToHistogramFilterIVF33.New()

class itkImageToHistogramFilterIVF33(itk.itkImageSinkPython.itkImageSinkIVF33):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIVF33
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIVF33

        Create a new object of the class itkImageToHistogramFilterIVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIVF33 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_swigregister(itkImageToHistogramFilterIVF33)
itkImageToHistogramFilterIVF33___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33___New_orig__
itkImageToHistogramFilterIVF33_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_cast


def itkImageToHistogramFilterIVF42_New():
    return itkImageToHistogramFilterIVF42.New()

class itkImageToHistogramFilterIVF42(itk.itkImageSinkPython.itkImageSinkIVF42):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIVF42
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIVF42

        Create a new object of the class itkImageToHistogramFilterIVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIVF42 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_swigregister(itkImageToHistogramFilterIVF42)
itkImageToHistogramFilterIVF42___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42___New_orig__
itkImageToHistogramFilterIVF42_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_cast


def itkImageToHistogramFilterIVF43_New():
    return itkImageToHistogramFilterIVF43.New()

class itkImageToHistogramFilterIVF43(itk.itkImageSinkPython.itkImageSinkIVF43):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIVF43
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIVF43

        Create a new object of the class itkImageToHistogramFilterIVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIVF43 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_swigregister(itkImageToHistogramFilterIVF43)
itkImageToHistogramFilterIVF43___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43___New_orig__
itkImageToHistogramFilterIVF43_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_cast


def itkImageToHistogramFilterVID2_New():
    return itkImageToHistogramFilterVID2.New()

class itkImageToHistogramFilterVID2(itk.itkImageSinkPython.itkImageSinkVID2):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterVID2
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterVID2

        Create a new object of the class itkImageToHistogramFilterVID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterVID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterVID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterVID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterVID2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_swigregister(itkImageToHistogramFilterVID2)
itkImageToHistogramFilterVID2___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2___New_orig__
itkImageToHistogramFilterVID2_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_cast


def itkImageToHistogramFilterVID3_New():
    return itkImageToHistogramFilterVID3.New()

class itkImageToHistogramFilterVID3(itk.itkImageSinkPython.itkImageSinkVID3):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterVID3
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterVID3

        Create a new object of the class itkImageToHistogramFilterVID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterVID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterVID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterVID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterVID3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_swigregister(itkImageToHistogramFilterVID3)
itkImageToHistogramFilterVID3___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3___New_orig__
itkImageToHistogramFilterVID3_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_cast


def itkImageToHistogramFilterVIF2_New():
    return itkImageToHistogramFilterVIF2.New()

class itkImageToHistogramFilterVIF2(itk.itkImageSinkPython.itkImageSinkVIF2):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterVIF2
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterVIF2

        Create a new object of the class itkImageToHistogramFilterVIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterVIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterVIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterVIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterVIF2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_swigregister(itkImageToHistogramFilterVIF2)
itkImageToHistogramFilterVIF2___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2___New_orig__
itkImageToHistogramFilterVIF2_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_cast


def itkImageToHistogramFilterVIF3_New():
    return itkImageToHistogramFilterVIF3.New()

class itkImageToHistogramFilterVIF3(itk.itkImageSinkPython.itkImageSinkVIF3):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterVIF3
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterVIF3

        Create a new object of the class itkImageToHistogramFilterVIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterVIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterVIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterVIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterVIF3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_swigregister(itkImageToHistogramFilterVIF3)
itkImageToHistogramFilterVIF3___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3___New_orig__
itkImageToHistogramFilterVIF3_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_cast


def itkImageToHistogramFilterVISS2_New():
    return itkImageToHistogramFilterVISS2.New()

class itkImageToHistogramFilterVISS2(itk.itkImageSinkPython.itkImageSinkVISS2):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterVISS2
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterVISS2

        Create a new object of the class itkImageToHistogramFilterVISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterVISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterVISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterVISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterVISS2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_swigregister(itkImageToHistogramFilterVISS2)
itkImageToHistogramFilterVISS2___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2___New_orig__
itkImageToHistogramFilterVISS2_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_cast


def itkImageToHistogramFilterVISS3_New():
    return itkImageToHistogramFilterVISS3.New()

class itkImageToHistogramFilterVISS3(itk.itkImageSinkPython.itkImageSinkVISS3):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterVISS3
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterVISS3

        Create a new object of the class itkImageToHistogramFilterVISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterVISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterVISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterVISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterVISS3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_swigregister(itkImageToHistogramFilterVISS3)
itkImageToHistogramFilterVISS3___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3___New_orig__
itkImageToHistogramFilterVISS3_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_cast


def itkImageToHistogramFilterVIUC2_New():
    return itkImageToHistogramFilterVIUC2.New()

class itkImageToHistogramFilterVIUC2(itk.itkImageSinkPython.itkImageSinkVIUC2):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterVIUC2
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterVIUC2

        Create a new object of the class itkImageToHistogramFilterVIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterVIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterVIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterVIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterVIUC2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_swigregister(itkImageToHistogramFilterVIUC2)
itkImageToHistogramFilterVIUC2___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2___New_orig__
itkImageToHistogramFilterVIUC2_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_cast


def itkImageToHistogramFilterVIUC3_New():
    return itkImageToHistogramFilterVIUC3.New()

class itkImageToHistogramFilterVIUC3(itk.itkImageSinkPython.itkImageSinkVIUC3):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterVIUC3
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterVIUC3

        Create a new object of the class itkImageToHistogramFilterVIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterVIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterVIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterVIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterVIUC3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_swigregister(itkImageToHistogramFilterVIUC3)
itkImageToHistogramFilterVIUC3___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3___New_orig__
itkImageToHistogramFilterVIUC3_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_cast


def itkImageToHistogramFilterVIUS2_New():
    return itkImageToHistogramFilterVIUS2.New()

class itkImageToHistogramFilterVIUS2(itk.itkImageSinkPython.itkImageSinkVIUS2):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterVIUS2
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterVIUS2

        Create a new object of the class itkImageToHistogramFilterVIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterVIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterVIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterVIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterVIUS2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_swigregister(itkImageToHistogramFilterVIUS2)
itkImageToHistogramFilterVIUS2___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2___New_orig__
itkImageToHistogramFilterVIUS2_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_cast


def itkImageToHistogramFilterVIUS3_New():
    return itkImageToHistogramFilterVIUS3.New()

class itkImageToHistogramFilterVIUS3(itk.itkImageSinkPython.itkImageSinkVIUS3):
    r"""


    This class generates a histogram from an image.

    The concept of Histogram in ITK is quite generic. It has been designed
    to manage multiple components data. This class facilitates the
    computation of an histogram from an image.

    This filter is automatically multi-threaded. When AutoMinimumMaximum
    is off and the NumberOfStreamDivisions is set to more than one, then
    this filter streams its input in a series of requested regions. A
    histogram is computed for each streamed and threaded region then
    merged. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_Clone)
    GetOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_GetOutput)
    SetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_SetHistogramSizeInput)
    SetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_SetHistogramSize)
    GetHistogramSizeInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_GetHistogramSizeInput)
    GetHistogramSize = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_GetHistogramSize)
    SetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_SetMarginalScaleInput)
    SetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_SetMarginalScale)
    GetMarginalScaleInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_GetMarginalScaleInput)
    GetMarginalScale = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_GetMarginalScale)
    SetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_SetHistogramBinMinimumInput)
    SetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_SetHistogramBinMinimum)
    GetHistogramBinMinimumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_GetHistogramBinMinimumInput)
    GetHistogramBinMinimum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_GetHistogramBinMinimum)
    SetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_SetHistogramBinMaximumInput)
    SetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_SetHistogramBinMaximum)
    GetHistogramBinMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_GetHistogramBinMaximumInput)
    GetHistogramBinMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_GetHistogramBinMaximum)
    SetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_SetAutoMinimumMaximumInput)
    SetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_SetAutoMinimumMaximum)
    GetAutoMinimumMaximumInput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_GetAutoMinimumMaximumInput)
    GetAutoMinimumMaximum = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_GetAutoMinimumMaximum)
    AutoMinimumMaximumOn = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_AutoMinimumMaximumOn)
    AutoMinimumMaximumOff = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_AutoMinimumMaximumOff)
    GraftOutput = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_GraftOutput)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_GetNumberOfStreamDivisions)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterVIUS3
    cast = _swig_new_static_method(_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_cast)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterVIUS3

        Create a new object of the class itkImageToHistogramFilterVIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterVIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterVIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterVIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterVIUS3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_swigregister(itkImageToHistogramFilterVIUS3)
itkImageToHistogramFilterVIUS3___New_orig__ = _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3___New_orig__
itkImageToHistogramFilterVIUS3_cast = _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def image_to_histogram_filter(*args, **kwargs):
    """Procedural interface for ImageToHistogramFilter"""
    import itk
    instance = itk.ImageToHistogramFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def image_to_histogram_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ImageToHistogramFilter, itkTemplate.itkTemplate):
        filter_object = itk.ImageToHistogramFilter.values()[0]
    else:
        filter_object = itk.ImageToHistogramFilter

    image_to_histogram_filter.__doc__ = filter_object.__doc__
    image_to_histogram_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    image_to_histogram_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ImageToHistogramFilter, itkTemplate.itkTemplate):
        image_to_histogram_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        image_to_histogram_filter.__doc__ += "\n"
        image_to_histogram_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        image_to_histogram_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



