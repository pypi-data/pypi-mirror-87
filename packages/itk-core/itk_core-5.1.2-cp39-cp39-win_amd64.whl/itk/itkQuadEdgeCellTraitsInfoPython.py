# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKQuadEdgeMeshPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkQuadEdgeCellTraitsInfoPython
else:
    import _itkQuadEdgeCellTraitsInfoPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkQuadEdgeCellTraitsInfoPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkQuadEdgeCellTraitsInfoPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkQuadEdgeMeshPointPython
import itk.itkPointPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkGeometricalQuadEdgePython
import itk.itkQuadEdgePython
import itk.ITKCommonBasePython

def itkMapContainerULLQEMPF2GQEULLULLBBT_New():
    return itkMapContainerULLQEMPF2GQEULLULLBBT.New()

class itkMapContainerULLQEMPF2GQEULLULLBBT(itk.ITKCommonBasePython.itkObject):
    r"""


    A wrapper of the STL "map" container.

    Define a front-end to the STL "map" container that conforms to the
    IndexedContainerInterface. This is a full-fleged Object, so there are
    events, modification time, debug, and reference count information.

    Parameters:
    -----------

    TElementIdentifier:  A type that shall be used to index the container.
    It must have a < operator defined for ordering.

    TElement:  The element type stored in the container. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkMapContainerULLQEMPF2GQEULLULLBBT self) -> itkMapContainerULLQEMPF2GQEULLULLBBT
        __init__(itkMapContainerULLQEMPF2GQEULLULLBBT self, std::less< unsigned long long > const & comp) -> itkMapContainerULLQEMPF2GQEULLULLBBT


        A wrapper of the STL "map" container.

        Define a front-end to the STL "map" container that conforms to the
        IndexedContainerInterface. This is a full-fleged Object, so there are
        events, modification time, debug, and reference count information.

        Parameters:
        -----------

        TElementIdentifier:  A type that shall be used to index the container.
        It must have a < operator defined for ordering.

        TElement:  The element type stored in the container. 
        """
        _itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF2GQEULLULLBBT_swiginit(self, _itkQuadEdgeCellTraitsInfoPython.new_itkMapContainerULLQEMPF2GQEULLULLBBT(*args))
    __New_orig__ = _swig_new_static_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF2GQEULLULLBBT___New_orig__)
    Clone = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF2GQEULLULLBBT_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF2GQEULLULLBBT_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF2GQEULLULLBBT_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF2GQEULLULLBBT_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF2GQEULLULLBBT_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF2GQEULLULLBBT_GetElement)
    SetElement = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF2GQEULLULLBBT_SetElement)
    InsertElement = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF2GQEULLULLBBT_InsertElement)
    IndexExists = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF2GQEULLULLBBT_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF2GQEULLULLBBT_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF2GQEULLULLBBT_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF2GQEULLULLBBT_DeleteIndex)
    Size = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF2GQEULLULLBBT_Size)
    Reserve = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF2GQEULLULLBBT_Reserve)
    Squeeze = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF2GQEULLULLBBT_Squeeze)
    Initialize = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF2GQEULLULLBBT_Initialize)
    __swig_destroy__ = _itkQuadEdgeCellTraitsInfoPython.delete_itkMapContainerULLQEMPF2GQEULLULLBBT
    cast = _swig_new_static_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF2GQEULLULLBBT_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULLQEMPF2GQEULLULLBBT

        Create a new object of the class itkMapContainerULLQEMPF2GQEULLULLBBT and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULLQEMPF2GQEULLULLBBT.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULLQEMPF2GQEULLULLBBT.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULLQEMPF2GQEULLULLBBT.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULLQEMPF2GQEULLULLBBT in _itkQuadEdgeCellTraitsInfoPython:
_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF2GQEULLULLBBT_swigregister(itkMapContainerULLQEMPF2GQEULLULLBBT)
itkMapContainerULLQEMPF2GQEULLULLBBT___New_orig__ = _itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF2GQEULLULLBBT___New_orig__
itkMapContainerULLQEMPF2GQEULLULLBBT_cast = _itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF2GQEULLULLBBT_cast


def itkMapContainerULLQEMPF3GQEULLULLBBT_New():
    return itkMapContainerULLQEMPF3GQEULLULLBBT.New()

class itkMapContainerULLQEMPF3GQEULLULLBBT(itk.ITKCommonBasePython.itkObject):
    r"""


    A wrapper of the STL "map" container.

    Define a front-end to the STL "map" container that conforms to the
    IndexedContainerInterface. This is a full-fleged Object, so there are
    events, modification time, debug, and reference count information.

    Parameters:
    -----------

    TElementIdentifier:  A type that shall be used to index the container.
    It must have a < operator defined for ordering.

    TElement:  The element type stored in the container. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkMapContainerULLQEMPF3GQEULLULLBBT self) -> itkMapContainerULLQEMPF3GQEULLULLBBT
        __init__(itkMapContainerULLQEMPF3GQEULLULLBBT self, std::less< unsigned long long > const & comp) -> itkMapContainerULLQEMPF3GQEULLULLBBT


        A wrapper of the STL "map" container.

        Define a front-end to the STL "map" container that conforms to the
        IndexedContainerInterface. This is a full-fleged Object, so there are
        events, modification time, debug, and reference count information.

        Parameters:
        -----------

        TElementIdentifier:  A type that shall be used to index the container.
        It must have a < operator defined for ordering.

        TElement:  The element type stored in the container. 
        """
        _itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF3GQEULLULLBBT_swiginit(self, _itkQuadEdgeCellTraitsInfoPython.new_itkMapContainerULLQEMPF3GQEULLULLBBT(*args))
    __New_orig__ = _swig_new_static_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF3GQEULLULLBBT___New_orig__)
    Clone = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF3GQEULLULLBBT_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF3GQEULLULLBBT_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF3GQEULLULLBBT_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF3GQEULLULLBBT_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF3GQEULLULLBBT_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF3GQEULLULLBBT_GetElement)
    SetElement = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF3GQEULLULLBBT_SetElement)
    InsertElement = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF3GQEULLULLBBT_InsertElement)
    IndexExists = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF3GQEULLULLBBT_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF3GQEULLULLBBT_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF3GQEULLULLBBT_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF3GQEULLULLBBT_DeleteIndex)
    Size = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF3GQEULLULLBBT_Size)
    Reserve = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF3GQEULLULLBBT_Reserve)
    Squeeze = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF3GQEULLULLBBT_Squeeze)
    Initialize = _swig_new_instance_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF3GQEULLULLBBT_Initialize)
    __swig_destroy__ = _itkQuadEdgeCellTraitsInfoPython.delete_itkMapContainerULLQEMPF3GQEULLULLBBT
    cast = _swig_new_static_method(_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF3GQEULLULLBBT_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULLQEMPF3GQEULLULLBBT

        Create a new object of the class itkMapContainerULLQEMPF3GQEULLULLBBT and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULLQEMPF3GQEULLULLBBT.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULLQEMPF3GQEULLULLBBT.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULLQEMPF3GQEULLULLBBT.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULLQEMPF3GQEULLULLBBT in _itkQuadEdgeCellTraitsInfoPython:
_itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF3GQEULLULLBBT_swigregister(itkMapContainerULLQEMPF3GQEULLULLBBT)
itkMapContainerULLQEMPF3GQEULLULLBBT___New_orig__ = _itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF3GQEULLULLBBT___New_orig__
itkMapContainerULLQEMPF3GQEULLULLBBT_cast = _itkQuadEdgeCellTraitsInfoPython.itkMapContainerULLQEMPF3GQEULLULLBBT_cast

class itkQuadEdgeMeshCellTraitsInfo2FFULLULLUCQEMPGQEULLQEMPF2GQEULLULLBBTGQE(object):
    r"""Proxy of C++ itkQuadEdgeMeshCellTraitsInfo2FFULLULLUCQEMPGQEULLQEMPF2GQEULLULLBBTGQE class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkQuadEdgeMeshCellTraitsInfo2FFULLULLUCQEMPGQEULLQEMPF2GQEULLULLBBTGQE self) -> itkQuadEdgeMeshCellTraitsInfo2FFULLULLUCQEMPGQEULLQEMPF2GQEULLULLBBTGQE
        __init__(itkQuadEdgeMeshCellTraitsInfo2FFULLULLUCQEMPGQEULLQEMPF2GQEULLULLBBTGQE self, itkQuadEdgeMeshCellTraitsInfo2FFULLULLUCQEMPGQEULLQEMPF2GQEULLULLBBTGQE arg0) -> itkQuadEdgeMeshCellTraitsInfo2FFULLULLUCQEMPGQEULLQEMPF2GQEULLULLBBTGQE
        """
        _itkQuadEdgeCellTraitsInfoPython.itkQuadEdgeMeshCellTraitsInfo2FFULLULLUCQEMPGQEULLQEMPF2GQEULLULLBBTGQE_swiginit(self, _itkQuadEdgeCellTraitsInfoPython.new_itkQuadEdgeMeshCellTraitsInfo2FFULLULLUCQEMPGQEULLQEMPF2GQEULLULLBBTGQE(*args))
    __swig_destroy__ = _itkQuadEdgeCellTraitsInfoPython.delete_itkQuadEdgeMeshCellTraitsInfo2FFULLULLUCQEMPGQEULLQEMPF2GQEULLULLBBTGQE

# Register itkQuadEdgeMeshCellTraitsInfo2FFULLULLUCQEMPGQEULLQEMPF2GQEULLULLBBTGQE in _itkQuadEdgeCellTraitsInfoPython:
_itkQuadEdgeCellTraitsInfoPython.itkQuadEdgeMeshCellTraitsInfo2FFULLULLUCQEMPGQEULLQEMPF2GQEULLULLBBTGQE_swigregister(itkQuadEdgeMeshCellTraitsInfo2FFULLULLUCQEMPGQEULLQEMPF2GQEULLULLBBTGQE)

class itkQuadEdgeMeshCellTraitsInfo3FFULLULLUCQEMPGQEULLQEMPF3GQEULLULLBBTGQE(object):
    r"""Proxy of C++ itkQuadEdgeMeshCellTraitsInfo3FFULLULLUCQEMPGQEULLQEMPF3GQEULLULLBBTGQE class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkQuadEdgeMeshCellTraitsInfo3FFULLULLUCQEMPGQEULLQEMPF3GQEULLULLBBTGQE self) -> itkQuadEdgeMeshCellTraitsInfo3FFULLULLUCQEMPGQEULLQEMPF3GQEULLULLBBTGQE
        __init__(itkQuadEdgeMeshCellTraitsInfo3FFULLULLUCQEMPGQEULLQEMPF3GQEULLULLBBTGQE self, itkQuadEdgeMeshCellTraitsInfo3FFULLULLUCQEMPGQEULLQEMPF3GQEULLULLBBTGQE arg0) -> itkQuadEdgeMeshCellTraitsInfo3FFULLULLUCQEMPGQEULLQEMPF3GQEULLULLBBTGQE
        """
        _itkQuadEdgeCellTraitsInfoPython.itkQuadEdgeMeshCellTraitsInfo3FFULLULLUCQEMPGQEULLQEMPF3GQEULLULLBBTGQE_swiginit(self, _itkQuadEdgeCellTraitsInfoPython.new_itkQuadEdgeMeshCellTraitsInfo3FFULLULLUCQEMPGQEULLQEMPF3GQEULLULLBBTGQE(*args))
    __swig_destroy__ = _itkQuadEdgeCellTraitsInfoPython.delete_itkQuadEdgeMeshCellTraitsInfo3FFULLULLUCQEMPGQEULLQEMPF3GQEULLULLBBTGQE

# Register itkQuadEdgeMeshCellTraitsInfo3FFULLULLUCQEMPGQEULLQEMPF3GQEULLULLBBTGQE in _itkQuadEdgeCellTraitsInfoPython:
_itkQuadEdgeCellTraitsInfoPython.itkQuadEdgeMeshCellTraitsInfo3FFULLULLUCQEMPGQEULLQEMPF3GQEULLULLBBTGQE_swigregister(itkQuadEdgeMeshCellTraitsInfo3FFULLULLUCQEMPGQEULLQEMPF3GQEULLULLBBTGQE)



