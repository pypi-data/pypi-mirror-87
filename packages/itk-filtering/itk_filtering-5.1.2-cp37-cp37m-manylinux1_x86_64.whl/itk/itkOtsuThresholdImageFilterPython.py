# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKThresholdingPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkOtsuThresholdImageFilterPython
else:
    import _itkOtsuThresholdImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkOtsuThresholdImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkOtsuThresholdImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkHistogramThresholdImageFilterPython
import itk.itkImageToHistogramFilterPython
import itk.itkHistogramPython
import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkArrayPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkSamplePython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkCovariantVectorPython
import itk.itkImageSinkPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImagePython
import itk.itkPointPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkHistogramThresholdCalculatorPython

def itkOtsuThresholdImageFilterID2ISS2_New():
    return itkOtsuThresholdImageFilterID2ISS2.New()

class itkOtsuThresholdImageFilterID2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2ISS2_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2ISS2_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2ISS2_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2ISS2_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2ISS2_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterID2ISS2
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterID2ISS2

        Create a new object of the class itkOtsuThresholdImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterID2ISS2 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2ISS2_swigregister(itkOtsuThresholdImageFilterID2ISS2)
itkOtsuThresholdImageFilterID2ISS2___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2ISS2___New_orig__
itkOtsuThresholdImageFilterID2ISS2_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2ISS2_cast


def itkOtsuThresholdImageFilterID2IUC2_New():
    return itkOtsuThresholdImageFilterID2IUC2.New()

class itkOtsuThresholdImageFilterID2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2IUC2_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2IUC2_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2IUC2_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2IUC2_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2IUC2_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterID2IUC2
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterID2IUC2

        Create a new object of the class itkOtsuThresholdImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterID2IUC2 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2IUC2_swigregister(itkOtsuThresholdImageFilterID2IUC2)
itkOtsuThresholdImageFilterID2IUC2___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2IUC2___New_orig__
itkOtsuThresholdImageFilterID2IUC2_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2IUC2_cast


def itkOtsuThresholdImageFilterID2IUS2_New():
    return itkOtsuThresholdImageFilterID2IUS2.New()

class itkOtsuThresholdImageFilterID2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2IUS2_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2IUS2_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2IUS2_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2IUS2_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2IUS2_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterID2IUS2
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterID2IUS2

        Create a new object of the class itkOtsuThresholdImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterID2IUS2 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2IUS2_swigregister(itkOtsuThresholdImageFilterID2IUS2)
itkOtsuThresholdImageFilterID2IUS2___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2IUS2___New_orig__
itkOtsuThresholdImageFilterID2IUS2_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID2IUS2_cast


def itkOtsuThresholdImageFilterID3ISS3_New():
    return itkOtsuThresholdImageFilterID3ISS3.New()

class itkOtsuThresholdImageFilterID3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3ISS3_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3ISS3_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3ISS3_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3ISS3_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3ISS3_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterID3ISS3
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterID3ISS3

        Create a new object of the class itkOtsuThresholdImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterID3ISS3 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3ISS3_swigregister(itkOtsuThresholdImageFilterID3ISS3)
itkOtsuThresholdImageFilterID3ISS3___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3ISS3___New_orig__
itkOtsuThresholdImageFilterID3ISS3_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3ISS3_cast


def itkOtsuThresholdImageFilterID3IUC3_New():
    return itkOtsuThresholdImageFilterID3IUC3.New()

class itkOtsuThresholdImageFilterID3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3IUC3_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3IUC3_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3IUC3_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3IUC3_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3IUC3_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterID3IUC3
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterID3IUC3

        Create a new object of the class itkOtsuThresholdImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterID3IUC3 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3IUC3_swigregister(itkOtsuThresholdImageFilterID3IUC3)
itkOtsuThresholdImageFilterID3IUC3___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3IUC3___New_orig__
itkOtsuThresholdImageFilterID3IUC3_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3IUC3_cast


def itkOtsuThresholdImageFilterID3IUS3_New():
    return itkOtsuThresholdImageFilterID3IUS3.New()

class itkOtsuThresholdImageFilterID3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3IUS3_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3IUS3_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3IUS3_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3IUS3_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3IUS3_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterID3IUS3
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterID3IUS3

        Create a new object of the class itkOtsuThresholdImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterID3IUS3 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3IUS3_swigregister(itkOtsuThresholdImageFilterID3IUS3)
itkOtsuThresholdImageFilterID3IUS3___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3IUS3___New_orig__
itkOtsuThresholdImageFilterID3IUS3_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterID3IUS3_cast


def itkOtsuThresholdImageFilterIF2ISS2_New():
    return itkOtsuThresholdImageFilterIF2ISS2.New()

class itkOtsuThresholdImageFilterIF2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2ISS2_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2ISS2_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2ISS2_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2ISS2_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2ISS2_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIF2ISS2
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIF2ISS2

        Create a new object of the class itkOtsuThresholdImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterIF2ISS2 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2ISS2_swigregister(itkOtsuThresholdImageFilterIF2ISS2)
itkOtsuThresholdImageFilterIF2ISS2___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2ISS2___New_orig__
itkOtsuThresholdImageFilterIF2ISS2_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2ISS2_cast


def itkOtsuThresholdImageFilterIF2IUC2_New():
    return itkOtsuThresholdImageFilterIF2IUC2.New()

class itkOtsuThresholdImageFilterIF2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUC2_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUC2_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUC2_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUC2_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUC2_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIF2IUC2
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIF2IUC2

        Create a new object of the class itkOtsuThresholdImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterIF2IUC2 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUC2_swigregister(itkOtsuThresholdImageFilterIF2IUC2)
itkOtsuThresholdImageFilterIF2IUC2___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUC2___New_orig__
itkOtsuThresholdImageFilterIF2IUC2_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUC2_cast


def itkOtsuThresholdImageFilterIF2IUS2_New():
    return itkOtsuThresholdImageFilterIF2IUS2.New()

class itkOtsuThresholdImageFilterIF2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUS2_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUS2_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUS2_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUS2_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUS2_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIF2IUS2
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIF2IUS2

        Create a new object of the class itkOtsuThresholdImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterIF2IUS2 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUS2_swigregister(itkOtsuThresholdImageFilterIF2IUS2)
itkOtsuThresholdImageFilterIF2IUS2___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUS2___New_orig__
itkOtsuThresholdImageFilterIF2IUS2_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUS2_cast


def itkOtsuThresholdImageFilterIF3ISS3_New():
    return itkOtsuThresholdImageFilterIF3ISS3.New()

class itkOtsuThresholdImageFilterIF3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3ISS3_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3ISS3_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3ISS3_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3ISS3_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3ISS3_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIF3ISS3
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIF3ISS3

        Create a new object of the class itkOtsuThresholdImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterIF3ISS3 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3ISS3_swigregister(itkOtsuThresholdImageFilterIF3ISS3)
itkOtsuThresholdImageFilterIF3ISS3___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3ISS3___New_orig__
itkOtsuThresholdImageFilterIF3ISS3_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3ISS3_cast


def itkOtsuThresholdImageFilterIF3IUC3_New():
    return itkOtsuThresholdImageFilterIF3IUC3.New()

class itkOtsuThresholdImageFilterIF3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUC3_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUC3_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUC3_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUC3_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUC3_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIF3IUC3
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIF3IUC3

        Create a new object of the class itkOtsuThresholdImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterIF3IUC3 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUC3_swigregister(itkOtsuThresholdImageFilterIF3IUC3)
itkOtsuThresholdImageFilterIF3IUC3___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUC3___New_orig__
itkOtsuThresholdImageFilterIF3IUC3_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUC3_cast


def itkOtsuThresholdImageFilterIF3IUS3_New():
    return itkOtsuThresholdImageFilterIF3IUS3.New()

class itkOtsuThresholdImageFilterIF3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUS3_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUS3_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUS3_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUS3_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUS3_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIF3IUS3
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIF3IUS3

        Create a new object of the class itkOtsuThresholdImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterIF3IUS3 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUS3_swigregister(itkOtsuThresholdImageFilterIF3IUS3)
itkOtsuThresholdImageFilterIF3IUS3___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUS3___New_orig__
itkOtsuThresholdImageFilterIF3IUS3_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUS3_cast


def itkOtsuThresholdImageFilterISS2ISS2_New():
    return itkOtsuThresholdImageFilterISS2ISS2.New()

class itkOtsuThresholdImageFilterISS2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2ISS2_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2ISS2_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2ISS2_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2ISS2_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2ISS2_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterISS2ISS2

        Create a new object of the class itkOtsuThresholdImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterISS2ISS2 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2ISS2_swigregister(itkOtsuThresholdImageFilterISS2ISS2)
itkOtsuThresholdImageFilterISS2ISS2___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2ISS2___New_orig__
itkOtsuThresholdImageFilterISS2ISS2_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2ISS2_cast


def itkOtsuThresholdImageFilterISS2IUC2_New():
    return itkOtsuThresholdImageFilterISS2IUC2.New()

class itkOtsuThresholdImageFilterISS2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUC2_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUC2_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUC2_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUC2_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUC2_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterISS2IUC2
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterISS2IUC2

        Create a new object of the class itkOtsuThresholdImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterISS2IUC2 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUC2_swigregister(itkOtsuThresholdImageFilterISS2IUC2)
itkOtsuThresholdImageFilterISS2IUC2___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUC2___New_orig__
itkOtsuThresholdImageFilterISS2IUC2_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUC2_cast


def itkOtsuThresholdImageFilterISS2IUS2_New():
    return itkOtsuThresholdImageFilterISS2IUS2.New()

class itkOtsuThresholdImageFilterISS2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUS2_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUS2_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUS2_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUS2_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUS2_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterISS2IUS2
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterISS2IUS2

        Create a new object of the class itkOtsuThresholdImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterISS2IUS2 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUS2_swigregister(itkOtsuThresholdImageFilterISS2IUS2)
itkOtsuThresholdImageFilterISS2IUS2___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUS2___New_orig__
itkOtsuThresholdImageFilterISS2IUS2_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUS2_cast


def itkOtsuThresholdImageFilterISS3ISS3_New():
    return itkOtsuThresholdImageFilterISS3ISS3.New()

class itkOtsuThresholdImageFilterISS3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3ISS3_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3ISS3_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3ISS3_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3ISS3_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3ISS3_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterISS3ISS3

        Create a new object of the class itkOtsuThresholdImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterISS3ISS3 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3ISS3_swigregister(itkOtsuThresholdImageFilterISS3ISS3)
itkOtsuThresholdImageFilterISS3ISS3___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3ISS3___New_orig__
itkOtsuThresholdImageFilterISS3ISS3_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3ISS3_cast


def itkOtsuThresholdImageFilterISS3IUC3_New():
    return itkOtsuThresholdImageFilterISS3IUC3.New()

class itkOtsuThresholdImageFilterISS3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUC3_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUC3_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUC3_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUC3_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUC3_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterISS3IUC3
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterISS3IUC3

        Create a new object of the class itkOtsuThresholdImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterISS3IUC3 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUC3_swigregister(itkOtsuThresholdImageFilterISS3IUC3)
itkOtsuThresholdImageFilterISS3IUC3___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUC3___New_orig__
itkOtsuThresholdImageFilterISS3IUC3_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUC3_cast


def itkOtsuThresholdImageFilterISS3IUS3_New():
    return itkOtsuThresholdImageFilterISS3IUS3.New()

class itkOtsuThresholdImageFilterISS3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUS3_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUS3_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUS3_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUS3_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUS3_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterISS3IUS3
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterISS3IUS3

        Create a new object of the class itkOtsuThresholdImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterISS3IUS3 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUS3_swigregister(itkOtsuThresholdImageFilterISS3IUS3)
itkOtsuThresholdImageFilterISS3IUS3___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUS3___New_orig__
itkOtsuThresholdImageFilterISS3IUS3_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUS3_cast


def itkOtsuThresholdImageFilterIUC2ISS2_New():
    return itkOtsuThresholdImageFilterIUC2ISS2.New()

class itkOtsuThresholdImageFilterIUC2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2ISS2_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2ISS2_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2ISS2_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2ISS2_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2ISS2_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIUC2ISS2
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIUC2ISS2

        Create a new object of the class itkOtsuThresholdImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterIUC2ISS2 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2ISS2_swigregister(itkOtsuThresholdImageFilterIUC2ISS2)
itkOtsuThresholdImageFilterIUC2ISS2___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2ISS2___New_orig__
itkOtsuThresholdImageFilterIUC2ISS2_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2ISS2_cast


def itkOtsuThresholdImageFilterIUC2IUC2_New():
    return itkOtsuThresholdImageFilterIUC2IUC2.New()

class itkOtsuThresholdImageFilterIUC2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUC2_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUC2_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUC2_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUC2_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUC2_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIUC2IUC2

        Create a new object of the class itkOtsuThresholdImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterIUC2IUC2 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUC2_swigregister(itkOtsuThresholdImageFilterIUC2IUC2)
itkOtsuThresholdImageFilterIUC2IUC2___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUC2___New_orig__
itkOtsuThresholdImageFilterIUC2IUC2_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUC2_cast


def itkOtsuThresholdImageFilterIUC2IUS2_New():
    return itkOtsuThresholdImageFilterIUC2IUS2.New()

class itkOtsuThresholdImageFilterIUC2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUS2_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUS2_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUS2_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUS2_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUS2_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIUC2IUS2
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIUC2IUS2

        Create a new object of the class itkOtsuThresholdImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterIUC2IUS2 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUS2_swigregister(itkOtsuThresholdImageFilterIUC2IUS2)
itkOtsuThresholdImageFilterIUC2IUS2___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUS2___New_orig__
itkOtsuThresholdImageFilterIUC2IUS2_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUS2_cast


def itkOtsuThresholdImageFilterIUC3ISS3_New():
    return itkOtsuThresholdImageFilterIUC3ISS3.New()

class itkOtsuThresholdImageFilterIUC3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3ISS3_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3ISS3_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3ISS3_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3ISS3_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3ISS3_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIUC3ISS3
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIUC3ISS3

        Create a new object of the class itkOtsuThresholdImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterIUC3ISS3 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3ISS3_swigregister(itkOtsuThresholdImageFilterIUC3ISS3)
itkOtsuThresholdImageFilterIUC3ISS3___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3ISS3___New_orig__
itkOtsuThresholdImageFilterIUC3ISS3_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3ISS3_cast


def itkOtsuThresholdImageFilterIUC3IUC3_New():
    return itkOtsuThresholdImageFilterIUC3IUC3.New()

class itkOtsuThresholdImageFilterIUC3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUC3_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUC3_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUC3_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUC3_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUC3_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIUC3IUC3

        Create a new object of the class itkOtsuThresholdImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterIUC3IUC3 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUC3_swigregister(itkOtsuThresholdImageFilterIUC3IUC3)
itkOtsuThresholdImageFilterIUC3IUC3___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUC3___New_orig__
itkOtsuThresholdImageFilterIUC3IUC3_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUC3_cast


def itkOtsuThresholdImageFilterIUC3IUS3_New():
    return itkOtsuThresholdImageFilterIUC3IUS3.New()

class itkOtsuThresholdImageFilterIUC3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUS3_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUS3_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUS3_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUS3_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUS3_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIUC3IUS3
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIUC3IUS3

        Create a new object of the class itkOtsuThresholdImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterIUC3IUS3 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUS3_swigregister(itkOtsuThresholdImageFilterIUC3IUS3)
itkOtsuThresholdImageFilterIUC3IUS3___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUS3___New_orig__
itkOtsuThresholdImageFilterIUC3IUS3_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUS3_cast


def itkOtsuThresholdImageFilterIUS2ISS2_New():
    return itkOtsuThresholdImageFilterIUS2ISS2.New()

class itkOtsuThresholdImageFilterIUS2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2ISS2_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2ISS2_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2ISS2_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2ISS2_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2ISS2_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIUS2ISS2
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIUS2ISS2

        Create a new object of the class itkOtsuThresholdImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterIUS2ISS2 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2ISS2_swigregister(itkOtsuThresholdImageFilterIUS2ISS2)
itkOtsuThresholdImageFilterIUS2ISS2___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2ISS2___New_orig__
itkOtsuThresholdImageFilterIUS2ISS2_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2ISS2_cast


def itkOtsuThresholdImageFilterIUS2IUC2_New():
    return itkOtsuThresholdImageFilterIUS2IUC2.New()

class itkOtsuThresholdImageFilterIUS2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUC2_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUC2_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUC2_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUC2_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUC2_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIUS2IUC2
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIUS2IUC2

        Create a new object of the class itkOtsuThresholdImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterIUS2IUC2 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUC2_swigregister(itkOtsuThresholdImageFilterIUS2IUC2)
itkOtsuThresholdImageFilterIUS2IUC2___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUC2___New_orig__
itkOtsuThresholdImageFilterIUS2IUC2_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUC2_cast


def itkOtsuThresholdImageFilterIUS2IUS2_New():
    return itkOtsuThresholdImageFilterIUS2IUS2.New()

class itkOtsuThresholdImageFilterIUS2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUS2_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUS2_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUS2_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUS2_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUS2_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIUS2IUS2

        Create a new object of the class itkOtsuThresholdImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterIUS2IUS2 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUS2_swigregister(itkOtsuThresholdImageFilterIUS2IUS2)
itkOtsuThresholdImageFilterIUS2IUS2___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUS2___New_orig__
itkOtsuThresholdImageFilterIUS2IUS2_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUS2_cast


def itkOtsuThresholdImageFilterIUS3ISS3_New():
    return itkOtsuThresholdImageFilterIUS3ISS3.New()

class itkOtsuThresholdImageFilterIUS3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3ISS3_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3ISS3_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3ISS3_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3ISS3_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3ISS3_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIUS3ISS3
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIUS3ISS3

        Create a new object of the class itkOtsuThresholdImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterIUS3ISS3 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3ISS3_swigregister(itkOtsuThresholdImageFilterIUS3ISS3)
itkOtsuThresholdImageFilterIUS3ISS3___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3ISS3___New_orig__
itkOtsuThresholdImageFilterIUS3ISS3_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3ISS3_cast


def itkOtsuThresholdImageFilterIUS3IUC3_New():
    return itkOtsuThresholdImageFilterIUS3IUC3.New()

class itkOtsuThresholdImageFilterIUS3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUC3_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUC3_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUC3_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUC3_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUC3_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIUS3IUC3
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIUS3IUC3

        Create a new object of the class itkOtsuThresholdImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterIUS3IUC3 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUC3_swigregister(itkOtsuThresholdImageFilterIUS3IUC3)
itkOtsuThresholdImageFilterIUS3IUC3___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUC3___New_orig__
itkOtsuThresholdImageFilterIUS3IUC3_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUC3_cast


def itkOtsuThresholdImageFilterIUS3IUS3_New():
    return itkOtsuThresholdImageFilterIUS3IUS3.New()

class itkOtsuThresholdImageFilterIUS3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3):
    r"""


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUS3_Clone)
    SetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUS3_SetReturnBinMidpoint)
    GetReturnBinMidpoint = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUS3_GetReturnBinMidpoint)
    ReturnBinMidpointOn = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUS3_ReturnBinMidpointOn)
    ReturnBinMidpointOff = _swig_new_instance_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUS3_ReturnBinMidpointOff)
    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIUS3IUS3

        Create a new object of the class itkOtsuThresholdImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdImageFilterIUS3IUS3 in _itkOtsuThresholdImageFilterPython:
_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUS3_swigregister(itkOtsuThresholdImageFilterIUS3IUS3)
itkOtsuThresholdImageFilterIUS3IUS3___New_orig__ = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUS3___New_orig__
itkOtsuThresholdImageFilterIUS3IUS3_cast = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def otsu_threshold_image_filter(*args, **kwargs):
    """Procedural interface for OtsuThresholdImageFilter"""
    import itk
    instance = itk.OtsuThresholdImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def otsu_threshold_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.OtsuThresholdImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.OtsuThresholdImageFilter.values()[0]
    else:
        filter_object = itk.OtsuThresholdImageFilter

    otsu_threshold_image_filter.__doc__ = filter_object.__doc__
    otsu_threshold_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    otsu_threshold_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.OtsuThresholdImageFilter, itkTemplate.itkTemplate):
        otsu_threshold_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        otsu_threshold_image_filter.__doc__ += "\n"
        otsu_threshold_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        otsu_threshold_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



