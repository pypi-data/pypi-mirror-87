# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKThresholdingPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkShanbhagThresholdImageFilterPython
else:
    import _itkShanbhagThresholdImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkShanbhagThresholdImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkShanbhagThresholdImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkHistogramThresholdImageFilterPython
import itk.itkImageToImageFilterAPython
import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.stdcomplexPython
import itk.itkImagePython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToHistogramFilterPython
import itk.itkArrayPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkHistogramPython
import itk.itkSamplePython
import itk.itkImageSinkPython
import itk.itkHistogramThresholdCalculatorPython

def itkShanbhagThresholdImageFilterID2ISS2_New():
    return itkShanbhagThresholdImageFilterID2ISS2.New()

class itkShanbhagThresholdImageFilterID2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID2ISS2_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterID2ISS2
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterID2ISS2

        Create a new object of the class itkShanbhagThresholdImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterID2ISS2 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID2ISS2_swigregister(itkShanbhagThresholdImageFilterID2ISS2)
itkShanbhagThresholdImageFilterID2ISS2___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID2ISS2___New_orig__
itkShanbhagThresholdImageFilterID2ISS2_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID2ISS2_cast


def itkShanbhagThresholdImageFilterID2IUC2_New():
    return itkShanbhagThresholdImageFilterID2IUC2.New()

class itkShanbhagThresholdImageFilterID2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID2IUC2_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterID2IUC2
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterID2IUC2

        Create a new object of the class itkShanbhagThresholdImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterID2IUC2 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID2IUC2_swigregister(itkShanbhagThresholdImageFilterID2IUC2)
itkShanbhagThresholdImageFilterID2IUC2___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID2IUC2___New_orig__
itkShanbhagThresholdImageFilterID2IUC2_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID2IUC2_cast


def itkShanbhagThresholdImageFilterID2IUS2_New():
    return itkShanbhagThresholdImageFilterID2IUS2.New()

class itkShanbhagThresholdImageFilterID2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID2IUS2_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterID2IUS2
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterID2IUS2

        Create a new object of the class itkShanbhagThresholdImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterID2IUS2 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID2IUS2_swigregister(itkShanbhagThresholdImageFilterID2IUS2)
itkShanbhagThresholdImageFilterID2IUS2___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID2IUS2___New_orig__
itkShanbhagThresholdImageFilterID2IUS2_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID2IUS2_cast


def itkShanbhagThresholdImageFilterID3ISS3_New():
    return itkShanbhagThresholdImageFilterID3ISS3.New()

class itkShanbhagThresholdImageFilterID3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID3ISS3_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterID3ISS3
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterID3ISS3

        Create a new object of the class itkShanbhagThresholdImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterID3ISS3 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID3ISS3_swigregister(itkShanbhagThresholdImageFilterID3ISS3)
itkShanbhagThresholdImageFilterID3ISS3___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID3ISS3___New_orig__
itkShanbhagThresholdImageFilterID3ISS3_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID3ISS3_cast


def itkShanbhagThresholdImageFilterID3IUC3_New():
    return itkShanbhagThresholdImageFilterID3IUC3.New()

class itkShanbhagThresholdImageFilterID3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID3IUC3_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterID3IUC3
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterID3IUC3

        Create a new object of the class itkShanbhagThresholdImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterID3IUC3 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID3IUC3_swigregister(itkShanbhagThresholdImageFilterID3IUC3)
itkShanbhagThresholdImageFilterID3IUC3___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID3IUC3___New_orig__
itkShanbhagThresholdImageFilterID3IUC3_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID3IUC3_cast


def itkShanbhagThresholdImageFilterID3IUS3_New():
    return itkShanbhagThresholdImageFilterID3IUS3.New()

class itkShanbhagThresholdImageFilterID3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID3IUS3_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterID3IUS3
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterID3IUS3

        Create a new object of the class itkShanbhagThresholdImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterID3IUS3 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID3IUS3_swigregister(itkShanbhagThresholdImageFilterID3IUS3)
itkShanbhagThresholdImageFilterID3IUS3___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID3IUS3___New_orig__
itkShanbhagThresholdImageFilterID3IUS3_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterID3IUS3_cast


def itkShanbhagThresholdImageFilterIF2ISS2_New():
    return itkShanbhagThresholdImageFilterIF2ISS2.New()

class itkShanbhagThresholdImageFilterIF2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2ISS2_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterIF2ISS2
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterIF2ISS2

        Create a new object of the class itkShanbhagThresholdImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterIF2ISS2 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2ISS2_swigregister(itkShanbhagThresholdImageFilterIF2ISS2)
itkShanbhagThresholdImageFilterIF2ISS2___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2ISS2___New_orig__
itkShanbhagThresholdImageFilterIF2ISS2_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2ISS2_cast


def itkShanbhagThresholdImageFilterIF2IUC2_New():
    return itkShanbhagThresholdImageFilterIF2IUC2.New()

class itkShanbhagThresholdImageFilterIF2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2IUC2_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterIF2IUC2
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterIF2IUC2

        Create a new object of the class itkShanbhagThresholdImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterIF2IUC2 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2IUC2_swigregister(itkShanbhagThresholdImageFilterIF2IUC2)
itkShanbhagThresholdImageFilterIF2IUC2___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2IUC2___New_orig__
itkShanbhagThresholdImageFilterIF2IUC2_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2IUC2_cast


def itkShanbhagThresholdImageFilterIF2IUS2_New():
    return itkShanbhagThresholdImageFilterIF2IUS2.New()

class itkShanbhagThresholdImageFilterIF2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2IUS2_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterIF2IUS2
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterIF2IUS2

        Create a new object of the class itkShanbhagThresholdImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterIF2IUS2 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2IUS2_swigregister(itkShanbhagThresholdImageFilterIF2IUS2)
itkShanbhagThresholdImageFilterIF2IUS2___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2IUS2___New_orig__
itkShanbhagThresholdImageFilterIF2IUS2_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2IUS2_cast


def itkShanbhagThresholdImageFilterIF3ISS3_New():
    return itkShanbhagThresholdImageFilterIF3ISS3.New()

class itkShanbhagThresholdImageFilterIF3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3ISS3_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterIF3ISS3
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterIF3ISS3

        Create a new object of the class itkShanbhagThresholdImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterIF3ISS3 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3ISS3_swigregister(itkShanbhagThresholdImageFilterIF3ISS3)
itkShanbhagThresholdImageFilterIF3ISS3___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3ISS3___New_orig__
itkShanbhagThresholdImageFilterIF3ISS3_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3ISS3_cast


def itkShanbhagThresholdImageFilterIF3IUC3_New():
    return itkShanbhagThresholdImageFilterIF3IUC3.New()

class itkShanbhagThresholdImageFilterIF3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3IUC3_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterIF3IUC3
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterIF3IUC3

        Create a new object of the class itkShanbhagThresholdImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterIF3IUC3 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3IUC3_swigregister(itkShanbhagThresholdImageFilterIF3IUC3)
itkShanbhagThresholdImageFilterIF3IUC3___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3IUC3___New_orig__
itkShanbhagThresholdImageFilterIF3IUC3_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3IUC3_cast


def itkShanbhagThresholdImageFilterIF3IUS3_New():
    return itkShanbhagThresholdImageFilterIF3IUS3.New()

class itkShanbhagThresholdImageFilterIF3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3IUS3_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterIF3IUS3
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterIF3IUS3

        Create a new object of the class itkShanbhagThresholdImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterIF3IUS3 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3IUS3_swigregister(itkShanbhagThresholdImageFilterIF3IUS3)
itkShanbhagThresholdImageFilterIF3IUS3___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3IUS3___New_orig__
itkShanbhagThresholdImageFilterIF3IUS3_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3IUS3_cast


def itkShanbhagThresholdImageFilterISS2ISS2_New():
    return itkShanbhagThresholdImageFilterISS2ISS2.New()

class itkShanbhagThresholdImageFilterISS2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2ISS2_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterISS2ISS2

        Create a new object of the class itkShanbhagThresholdImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterISS2ISS2 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2ISS2_swigregister(itkShanbhagThresholdImageFilterISS2ISS2)
itkShanbhagThresholdImageFilterISS2ISS2___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2ISS2___New_orig__
itkShanbhagThresholdImageFilterISS2ISS2_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2ISS2_cast


def itkShanbhagThresholdImageFilterISS2IUC2_New():
    return itkShanbhagThresholdImageFilterISS2IUC2.New()

class itkShanbhagThresholdImageFilterISS2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2IUC2_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterISS2IUC2
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterISS2IUC2

        Create a new object of the class itkShanbhagThresholdImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterISS2IUC2 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2IUC2_swigregister(itkShanbhagThresholdImageFilterISS2IUC2)
itkShanbhagThresholdImageFilterISS2IUC2___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2IUC2___New_orig__
itkShanbhagThresholdImageFilterISS2IUC2_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2IUC2_cast


def itkShanbhagThresholdImageFilterISS2IUS2_New():
    return itkShanbhagThresholdImageFilterISS2IUS2.New()

class itkShanbhagThresholdImageFilterISS2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2IUS2_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterISS2IUS2
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterISS2IUS2

        Create a new object of the class itkShanbhagThresholdImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterISS2IUS2 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2IUS2_swigregister(itkShanbhagThresholdImageFilterISS2IUS2)
itkShanbhagThresholdImageFilterISS2IUS2___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2IUS2___New_orig__
itkShanbhagThresholdImageFilterISS2IUS2_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2IUS2_cast


def itkShanbhagThresholdImageFilterISS3ISS3_New():
    return itkShanbhagThresholdImageFilterISS3ISS3.New()

class itkShanbhagThresholdImageFilterISS3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3ISS3_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterISS3ISS3

        Create a new object of the class itkShanbhagThresholdImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterISS3ISS3 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3ISS3_swigregister(itkShanbhagThresholdImageFilterISS3ISS3)
itkShanbhagThresholdImageFilterISS3ISS3___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3ISS3___New_orig__
itkShanbhagThresholdImageFilterISS3ISS3_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3ISS3_cast


def itkShanbhagThresholdImageFilterISS3IUC3_New():
    return itkShanbhagThresholdImageFilterISS3IUC3.New()

class itkShanbhagThresholdImageFilterISS3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3IUC3_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterISS3IUC3
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterISS3IUC3

        Create a new object of the class itkShanbhagThresholdImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterISS3IUC3 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3IUC3_swigregister(itkShanbhagThresholdImageFilterISS3IUC3)
itkShanbhagThresholdImageFilterISS3IUC3___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3IUC3___New_orig__
itkShanbhagThresholdImageFilterISS3IUC3_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3IUC3_cast


def itkShanbhagThresholdImageFilterISS3IUS3_New():
    return itkShanbhagThresholdImageFilterISS3IUS3.New()

class itkShanbhagThresholdImageFilterISS3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3IUS3_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterISS3IUS3
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterISS3IUS3

        Create a new object of the class itkShanbhagThresholdImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterISS3IUS3 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3IUS3_swigregister(itkShanbhagThresholdImageFilterISS3IUS3)
itkShanbhagThresholdImageFilterISS3IUS3___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3IUS3___New_orig__
itkShanbhagThresholdImageFilterISS3IUS3_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3IUS3_cast


def itkShanbhagThresholdImageFilterIUC2ISS2_New():
    return itkShanbhagThresholdImageFilterIUC2ISS2.New()

class itkShanbhagThresholdImageFilterIUC2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2ISS2_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterIUC2ISS2
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterIUC2ISS2

        Create a new object of the class itkShanbhagThresholdImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterIUC2ISS2 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2ISS2_swigregister(itkShanbhagThresholdImageFilterIUC2ISS2)
itkShanbhagThresholdImageFilterIUC2ISS2___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2ISS2___New_orig__
itkShanbhagThresholdImageFilterIUC2ISS2_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2ISS2_cast


def itkShanbhagThresholdImageFilterIUC2IUC2_New():
    return itkShanbhagThresholdImageFilterIUC2IUC2.New()

class itkShanbhagThresholdImageFilterIUC2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2IUC2_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterIUC2IUC2

        Create a new object of the class itkShanbhagThresholdImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterIUC2IUC2 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2IUC2_swigregister(itkShanbhagThresholdImageFilterIUC2IUC2)
itkShanbhagThresholdImageFilterIUC2IUC2___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2IUC2___New_orig__
itkShanbhagThresholdImageFilterIUC2IUC2_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2IUC2_cast


def itkShanbhagThresholdImageFilterIUC2IUS2_New():
    return itkShanbhagThresholdImageFilterIUC2IUS2.New()

class itkShanbhagThresholdImageFilterIUC2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2IUS2_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterIUC2IUS2
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterIUC2IUS2

        Create a new object of the class itkShanbhagThresholdImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterIUC2IUS2 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2IUS2_swigregister(itkShanbhagThresholdImageFilterIUC2IUS2)
itkShanbhagThresholdImageFilterIUC2IUS2___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2IUS2___New_orig__
itkShanbhagThresholdImageFilterIUC2IUS2_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2IUS2_cast


def itkShanbhagThresholdImageFilterIUC3ISS3_New():
    return itkShanbhagThresholdImageFilterIUC3ISS3.New()

class itkShanbhagThresholdImageFilterIUC3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3ISS3_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterIUC3ISS3
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterIUC3ISS3

        Create a new object of the class itkShanbhagThresholdImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterIUC3ISS3 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3ISS3_swigregister(itkShanbhagThresholdImageFilterIUC3ISS3)
itkShanbhagThresholdImageFilterIUC3ISS3___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3ISS3___New_orig__
itkShanbhagThresholdImageFilterIUC3ISS3_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3ISS3_cast


def itkShanbhagThresholdImageFilterIUC3IUC3_New():
    return itkShanbhagThresholdImageFilterIUC3IUC3.New()

class itkShanbhagThresholdImageFilterIUC3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3IUC3_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterIUC3IUC3

        Create a new object of the class itkShanbhagThresholdImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterIUC3IUC3 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3IUC3_swigregister(itkShanbhagThresholdImageFilterIUC3IUC3)
itkShanbhagThresholdImageFilterIUC3IUC3___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3IUC3___New_orig__
itkShanbhagThresholdImageFilterIUC3IUC3_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3IUC3_cast


def itkShanbhagThresholdImageFilterIUC3IUS3_New():
    return itkShanbhagThresholdImageFilterIUC3IUS3.New()

class itkShanbhagThresholdImageFilterIUC3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3IUS3_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterIUC3IUS3
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterIUC3IUS3

        Create a new object of the class itkShanbhagThresholdImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterIUC3IUS3 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3IUS3_swigregister(itkShanbhagThresholdImageFilterIUC3IUS3)
itkShanbhagThresholdImageFilterIUC3IUS3___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3IUS3___New_orig__
itkShanbhagThresholdImageFilterIUC3IUS3_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3IUS3_cast


def itkShanbhagThresholdImageFilterIUS2ISS2_New():
    return itkShanbhagThresholdImageFilterIUS2ISS2.New()

class itkShanbhagThresholdImageFilterIUS2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS2ISS2_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterIUS2ISS2
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterIUS2ISS2

        Create a new object of the class itkShanbhagThresholdImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterIUS2ISS2 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS2ISS2_swigregister(itkShanbhagThresholdImageFilterIUS2ISS2)
itkShanbhagThresholdImageFilterIUS2ISS2___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS2ISS2___New_orig__
itkShanbhagThresholdImageFilterIUS2ISS2_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS2ISS2_cast


def itkShanbhagThresholdImageFilterIUS2IUC2_New():
    return itkShanbhagThresholdImageFilterIUS2IUC2.New()

class itkShanbhagThresholdImageFilterIUS2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS2IUC2_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterIUS2IUC2
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterIUS2IUC2

        Create a new object of the class itkShanbhagThresholdImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterIUS2IUC2 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS2IUC2_swigregister(itkShanbhagThresholdImageFilterIUS2IUC2)
itkShanbhagThresholdImageFilterIUS2IUC2___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS2IUC2___New_orig__
itkShanbhagThresholdImageFilterIUS2IUC2_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS2IUC2_cast


def itkShanbhagThresholdImageFilterIUS2IUS2_New():
    return itkShanbhagThresholdImageFilterIUS2IUS2.New()

class itkShanbhagThresholdImageFilterIUS2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS2IUS2_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterIUS2IUS2

        Create a new object of the class itkShanbhagThresholdImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterIUS2IUS2 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS2IUS2_swigregister(itkShanbhagThresholdImageFilterIUS2IUS2)
itkShanbhagThresholdImageFilterIUS2IUS2___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS2IUS2___New_orig__
itkShanbhagThresholdImageFilterIUS2IUS2_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS2IUS2_cast


def itkShanbhagThresholdImageFilterIUS3ISS3_New():
    return itkShanbhagThresholdImageFilterIUS3ISS3.New()

class itkShanbhagThresholdImageFilterIUS3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS3ISS3_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterIUS3ISS3
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterIUS3ISS3

        Create a new object of the class itkShanbhagThresholdImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterIUS3ISS3 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS3ISS3_swigregister(itkShanbhagThresholdImageFilterIUS3ISS3)
itkShanbhagThresholdImageFilterIUS3ISS3___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS3ISS3___New_orig__
itkShanbhagThresholdImageFilterIUS3ISS3_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS3ISS3_cast


def itkShanbhagThresholdImageFilterIUS3IUC3_New():
    return itkShanbhagThresholdImageFilterIUS3IUC3.New()

class itkShanbhagThresholdImageFilterIUS3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS3IUC3_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterIUS3IUC3
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterIUS3IUC3

        Create a new object of the class itkShanbhagThresholdImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterIUS3IUC3 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS3IUC3_swigregister(itkShanbhagThresholdImageFilterIUS3IUC3)
itkShanbhagThresholdImageFilterIUS3IUC3___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS3IUC3___New_orig__
itkShanbhagThresholdImageFilterIUS3IUC3_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS3IUC3_cast


def itkShanbhagThresholdImageFilterIUS3IUS3_New():
    return itkShanbhagThresholdImageFilterIUS3IUS3.New()

class itkShanbhagThresholdImageFilterIUS3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3):
    r"""


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS3IUS3_Clone)
    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterIUS3IUS3

        Create a new object of the class itkShanbhagThresholdImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShanbhagThresholdImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShanbhagThresholdImageFilterIUS3IUS3 in _itkShanbhagThresholdImageFilterPython:
_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS3IUS3_swigregister(itkShanbhagThresholdImageFilterIUS3IUS3)
itkShanbhagThresholdImageFilterIUS3IUS3___New_orig__ = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS3IUS3___New_orig__
itkShanbhagThresholdImageFilterIUS3IUS3_cast = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def shanbhag_threshold_image_filter(*args, **kwargs):
    """Procedural interface for ShanbhagThresholdImageFilter"""
    import itk
    instance = itk.ShanbhagThresholdImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def shanbhag_threshold_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ShanbhagThresholdImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ShanbhagThresholdImageFilter.values()[0]
    else:
        filter_object = itk.ShanbhagThresholdImageFilter

    shanbhag_threshold_image_filter.__doc__ = filter_object.__doc__
    shanbhag_threshold_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    shanbhag_threshold_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ShanbhagThresholdImageFilter, itkTemplate.itkTemplate):
        shanbhag_threshold_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        shanbhag_threshold_image_filter.__doc__ += "\n"
        shanbhag_threshold_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        shanbhag_threshold_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



