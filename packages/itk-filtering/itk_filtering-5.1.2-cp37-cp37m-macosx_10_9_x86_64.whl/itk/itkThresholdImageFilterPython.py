# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKThresholdingPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkThresholdImageFilterPython
else:
    import _itkThresholdImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkThresholdImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkThresholdImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
import itk.itkImagePython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkRGBPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterBPython

def itkThresholdImageFilterID2_New():
    return itkThresholdImageFilterID2.New()

class itkThresholdImageFilterID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""


    Set image values to a user-specified value if they are below, above,
    or between simple threshold values.

    ThresholdImageFilter sets image values to a user-specified "outside"
    value (by default, "black") if the image values are below, above, or
    between simple threshold values.

    The available methods are:

    ThresholdAbove(): The values greater than the threshold value are set
    to OutsideValue

    ThresholdBelow(): The values less than the threshold value are set to
    OutsideValue

    ThresholdOutside(): The values outside the threshold range (less than
    lower or greater than upper) are set to OutsideValue

    Note that these definitions indicate that pixels equal to the
    threshold value are not set to OutsideValue in any of these methods

    The pixels must support the operators >= and <=.

    example{Filtering/Thresholding/ThresholdAnImage,Threshold An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkThresholdImageFilterPython.itkThresholdImageFilterID2___New_orig__)
    Clone = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterID2_Clone)
    PixelTypeComparableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterID2_PixelTypeComparableCheck
    
    PixelTypeOStreamWritableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterID2_PixelTypeOStreamWritableCheck
    
    SetOutsideValue = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterID2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterID2_GetOutsideValue)
    ThresholdAbove = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterID2_ThresholdAbove)
    ThresholdBelow = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterID2_ThresholdBelow)
    ThresholdOutside = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterID2_ThresholdOutside)
    SetLower = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterID2_SetLower)
    GetLower = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterID2_GetLower)
    SetUpper = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterID2_SetUpper)
    GetUpper = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterID2_GetUpper)
    __swig_destroy__ = _itkThresholdImageFilterPython.delete_itkThresholdImageFilterID2
    cast = _swig_new_static_method(_itkThresholdImageFilterPython.itkThresholdImageFilterID2_cast)

    def New(*args, **kargs):
        """New() -> itkThresholdImageFilterID2

        Create a new object of the class itkThresholdImageFilterID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdImageFilterID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdImageFilterID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdImageFilterID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdImageFilterID2 in _itkThresholdImageFilterPython:
_itkThresholdImageFilterPython.itkThresholdImageFilterID2_swigregister(itkThresholdImageFilterID2)
itkThresholdImageFilterID2___New_orig__ = _itkThresholdImageFilterPython.itkThresholdImageFilterID2___New_orig__
itkThresholdImageFilterID2_cast = _itkThresholdImageFilterPython.itkThresholdImageFilterID2_cast


def itkThresholdImageFilterID3_New():
    return itkThresholdImageFilterID3.New()

class itkThresholdImageFilterID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""


    Set image values to a user-specified value if they are below, above,
    or between simple threshold values.

    ThresholdImageFilter sets image values to a user-specified "outside"
    value (by default, "black") if the image values are below, above, or
    between simple threshold values.

    The available methods are:

    ThresholdAbove(): The values greater than the threshold value are set
    to OutsideValue

    ThresholdBelow(): The values less than the threshold value are set to
    OutsideValue

    ThresholdOutside(): The values outside the threshold range (less than
    lower or greater than upper) are set to OutsideValue

    Note that these definitions indicate that pixels equal to the
    threshold value are not set to OutsideValue in any of these methods

    The pixels must support the operators >= and <=.

    example{Filtering/Thresholding/ThresholdAnImage,Threshold An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkThresholdImageFilterPython.itkThresholdImageFilterID3___New_orig__)
    Clone = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterID3_Clone)
    PixelTypeComparableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterID3_PixelTypeComparableCheck
    
    PixelTypeOStreamWritableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterID3_PixelTypeOStreamWritableCheck
    
    SetOutsideValue = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterID3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterID3_GetOutsideValue)
    ThresholdAbove = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterID3_ThresholdAbove)
    ThresholdBelow = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterID3_ThresholdBelow)
    ThresholdOutside = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterID3_ThresholdOutside)
    SetLower = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterID3_SetLower)
    GetLower = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterID3_GetLower)
    SetUpper = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterID3_SetUpper)
    GetUpper = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterID3_GetUpper)
    __swig_destroy__ = _itkThresholdImageFilterPython.delete_itkThresholdImageFilterID3
    cast = _swig_new_static_method(_itkThresholdImageFilterPython.itkThresholdImageFilterID3_cast)

    def New(*args, **kargs):
        """New() -> itkThresholdImageFilterID3

        Create a new object of the class itkThresholdImageFilterID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdImageFilterID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdImageFilterID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdImageFilterID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdImageFilterID3 in _itkThresholdImageFilterPython:
_itkThresholdImageFilterPython.itkThresholdImageFilterID3_swigregister(itkThresholdImageFilterID3)
itkThresholdImageFilterID3___New_orig__ = _itkThresholdImageFilterPython.itkThresholdImageFilterID3___New_orig__
itkThresholdImageFilterID3_cast = _itkThresholdImageFilterPython.itkThresholdImageFilterID3_cast


def itkThresholdImageFilterIF2_New():
    return itkThresholdImageFilterIF2.New()

class itkThresholdImageFilterIF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""


    Set image values to a user-specified value if they are below, above,
    or between simple threshold values.

    ThresholdImageFilter sets image values to a user-specified "outside"
    value (by default, "black") if the image values are below, above, or
    between simple threshold values.

    The available methods are:

    ThresholdAbove(): The values greater than the threshold value are set
    to OutsideValue

    ThresholdBelow(): The values less than the threshold value are set to
    OutsideValue

    ThresholdOutside(): The values outside the threshold range (less than
    lower or greater than upper) are set to OutsideValue

    Note that these definitions indicate that pixels equal to the
    threshold value are not set to OutsideValue in any of these methods

    The pixels must support the operators >= and <=.

    example{Filtering/Thresholding/ThresholdAnImage,Threshold An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIF2_Clone)
    PixelTypeComparableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIF2_PixelTypeComparableCheck
    
    PixelTypeOStreamWritableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIF2_PixelTypeOStreamWritableCheck
    
    SetOutsideValue = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIF2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIF2_GetOutsideValue)
    ThresholdAbove = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIF2_ThresholdAbove)
    ThresholdBelow = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIF2_ThresholdBelow)
    ThresholdOutside = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIF2_ThresholdOutside)
    SetLower = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIF2_SetLower)
    GetLower = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIF2_GetLower)
    SetUpper = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIF2_SetUpper)
    GetUpper = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIF2_GetUpper)
    __swig_destroy__ = _itkThresholdImageFilterPython.delete_itkThresholdImageFilterIF2
    cast = _swig_new_static_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIF2_cast)

    def New(*args, **kargs):
        """New() -> itkThresholdImageFilterIF2

        Create a new object of the class itkThresholdImageFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdImageFilterIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdImageFilterIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdImageFilterIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdImageFilterIF2 in _itkThresholdImageFilterPython:
_itkThresholdImageFilterPython.itkThresholdImageFilterIF2_swigregister(itkThresholdImageFilterIF2)
itkThresholdImageFilterIF2___New_orig__ = _itkThresholdImageFilterPython.itkThresholdImageFilterIF2___New_orig__
itkThresholdImageFilterIF2_cast = _itkThresholdImageFilterPython.itkThresholdImageFilterIF2_cast


def itkThresholdImageFilterIF3_New():
    return itkThresholdImageFilterIF3.New()

class itkThresholdImageFilterIF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""


    Set image values to a user-specified value if they are below, above,
    or between simple threshold values.

    ThresholdImageFilter sets image values to a user-specified "outside"
    value (by default, "black") if the image values are below, above, or
    between simple threshold values.

    The available methods are:

    ThresholdAbove(): The values greater than the threshold value are set
    to OutsideValue

    ThresholdBelow(): The values less than the threshold value are set to
    OutsideValue

    ThresholdOutside(): The values outside the threshold range (less than
    lower or greater than upper) are set to OutsideValue

    Note that these definitions indicate that pixels equal to the
    threshold value are not set to OutsideValue in any of these methods

    The pixels must support the operators >= and <=.

    example{Filtering/Thresholding/ThresholdAnImage,Threshold An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIF3_Clone)
    PixelTypeComparableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIF3_PixelTypeComparableCheck
    
    PixelTypeOStreamWritableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIF3_PixelTypeOStreamWritableCheck
    
    SetOutsideValue = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIF3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIF3_GetOutsideValue)
    ThresholdAbove = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIF3_ThresholdAbove)
    ThresholdBelow = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIF3_ThresholdBelow)
    ThresholdOutside = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIF3_ThresholdOutside)
    SetLower = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIF3_SetLower)
    GetLower = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIF3_GetLower)
    SetUpper = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIF3_SetUpper)
    GetUpper = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIF3_GetUpper)
    __swig_destroy__ = _itkThresholdImageFilterPython.delete_itkThresholdImageFilterIF3
    cast = _swig_new_static_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIF3_cast)

    def New(*args, **kargs):
        """New() -> itkThresholdImageFilterIF3

        Create a new object of the class itkThresholdImageFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdImageFilterIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdImageFilterIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdImageFilterIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdImageFilterIF3 in _itkThresholdImageFilterPython:
_itkThresholdImageFilterPython.itkThresholdImageFilterIF3_swigregister(itkThresholdImageFilterIF3)
itkThresholdImageFilterIF3___New_orig__ = _itkThresholdImageFilterPython.itkThresholdImageFilterIF3___New_orig__
itkThresholdImageFilterIF3_cast = _itkThresholdImageFilterPython.itkThresholdImageFilterIF3_cast


def itkThresholdImageFilterISS2_New():
    return itkThresholdImageFilterISS2.New()

class itkThresholdImageFilterISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    r"""


    Set image values to a user-specified value if they are below, above,
    or between simple threshold values.

    ThresholdImageFilter sets image values to a user-specified "outside"
    value (by default, "black") if the image values are below, above, or
    between simple threshold values.

    The available methods are:

    ThresholdAbove(): The values greater than the threshold value are set
    to OutsideValue

    ThresholdBelow(): The values less than the threshold value are set to
    OutsideValue

    ThresholdOutside(): The values outside the threshold range (less than
    lower or greater than upper) are set to OutsideValue

    Note that these definitions indicate that pixels equal to the
    threshold value are not set to OutsideValue in any of these methods

    The pixels must support the operators >= and <=.

    example{Filtering/Thresholding/ThresholdAnImage,Threshold An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkThresholdImageFilterPython.itkThresholdImageFilterISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterISS2_Clone)
    PixelTypeComparableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterISS2_PixelTypeComparableCheck
    
    PixelTypeOStreamWritableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterISS2_PixelTypeOStreamWritableCheck
    
    SetOutsideValue = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterISS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterISS2_GetOutsideValue)
    ThresholdAbove = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterISS2_ThresholdAbove)
    ThresholdBelow = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterISS2_ThresholdBelow)
    ThresholdOutside = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterISS2_ThresholdOutside)
    SetLower = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterISS2_SetLower)
    GetLower = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterISS2_GetLower)
    SetUpper = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterISS2_SetUpper)
    GetUpper = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterISS2_GetUpper)
    __swig_destroy__ = _itkThresholdImageFilterPython.delete_itkThresholdImageFilterISS2
    cast = _swig_new_static_method(_itkThresholdImageFilterPython.itkThresholdImageFilterISS2_cast)

    def New(*args, **kargs):
        """New() -> itkThresholdImageFilterISS2

        Create a new object of the class itkThresholdImageFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdImageFilterISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdImageFilterISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdImageFilterISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdImageFilterISS2 in _itkThresholdImageFilterPython:
_itkThresholdImageFilterPython.itkThresholdImageFilterISS2_swigregister(itkThresholdImageFilterISS2)
itkThresholdImageFilterISS2___New_orig__ = _itkThresholdImageFilterPython.itkThresholdImageFilterISS2___New_orig__
itkThresholdImageFilterISS2_cast = _itkThresholdImageFilterPython.itkThresholdImageFilterISS2_cast


def itkThresholdImageFilterISS3_New():
    return itkThresholdImageFilterISS3.New()

class itkThresholdImageFilterISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    r"""


    Set image values to a user-specified value if they are below, above,
    or between simple threshold values.

    ThresholdImageFilter sets image values to a user-specified "outside"
    value (by default, "black") if the image values are below, above, or
    between simple threshold values.

    The available methods are:

    ThresholdAbove(): The values greater than the threshold value are set
    to OutsideValue

    ThresholdBelow(): The values less than the threshold value are set to
    OutsideValue

    ThresholdOutside(): The values outside the threshold range (less than
    lower or greater than upper) are set to OutsideValue

    Note that these definitions indicate that pixels equal to the
    threshold value are not set to OutsideValue in any of these methods

    The pixels must support the operators >= and <=.

    example{Filtering/Thresholding/ThresholdAnImage,Threshold An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkThresholdImageFilterPython.itkThresholdImageFilterISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterISS3_Clone)
    PixelTypeComparableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterISS3_PixelTypeComparableCheck
    
    PixelTypeOStreamWritableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterISS3_PixelTypeOStreamWritableCheck
    
    SetOutsideValue = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterISS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterISS3_GetOutsideValue)
    ThresholdAbove = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterISS3_ThresholdAbove)
    ThresholdBelow = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterISS3_ThresholdBelow)
    ThresholdOutside = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterISS3_ThresholdOutside)
    SetLower = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterISS3_SetLower)
    GetLower = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterISS3_GetLower)
    SetUpper = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterISS3_SetUpper)
    GetUpper = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterISS3_GetUpper)
    __swig_destroy__ = _itkThresholdImageFilterPython.delete_itkThresholdImageFilterISS3
    cast = _swig_new_static_method(_itkThresholdImageFilterPython.itkThresholdImageFilterISS3_cast)

    def New(*args, **kargs):
        """New() -> itkThresholdImageFilterISS3

        Create a new object of the class itkThresholdImageFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdImageFilterISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdImageFilterISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdImageFilterISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdImageFilterISS3 in _itkThresholdImageFilterPython:
_itkThresholdImageFilterPython.itkThresholdImageFilterISS3_swigregister(itkThresholdImageFilterISS3)
itkThresholdImageFilterISS3___New_orig__ = _itkThresholdImageFilterPython.itkThresholdImageFilterISS3___New_orig__
itkThresholdImageFilterISS3_cast = _itkThresholdImageFilterPython.itkThresholdImageFilterISS3_cast


def itkThresholdImageFilterIUC2_New():
    return itkThresholdImageFilterIUC2.New()

class itkThresholdImageFilterIUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    r"""


    Set image values to a user-specified value if they are below, above,
    or between simple threshold values.

    ThresholdImageFilter sets image values to a user-specified "outside"
    value (by default, "black") if the image values are below, above, or
    between simple threshold values.

    The available methods are:

    ThresholdAbove(): The values greater than the threshold value are set
    to OutsideValue

    ThresholdBelow(): The values less than the threshold value are set to
    OutsideValue

    ThresholdOutside(): The values outside the threshold range (less than
    lower or greater than upper) are set to OutsideValue

    Note that these definitions indicate that pixels equal to the
    threshold value are not set to OutsideValue in any of these methods

    The pixels must support the operators >= and <=.

    example{Filtering/Thresholding/ThresholdAnImage,Threshold An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_Clone)
    PixelTypeComparableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_PixelTypeComparableCheck
    
    PixelTypeOStreamWritableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_PixelTypeOStreamWritableCheck
    
    SetOutsideValue = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_GetOutsideValue)
    ThresholdAbove = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_ThresholdAbove)
    ThresholdBelow = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_ThresholdBelow)
    ThresholdOutside = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_ThresholdOutside)
    SetLower = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_SetLower)
    GetLower = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_GetLower)
    SetUpper = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_SetUpper)
    GetUpper = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_GetUpper)
    __swig_destroy__ = _itkThresholdImageFilterPython.delete_itkThresholdImageFilterIUC2
    cast = _swig_new_static_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_cast)

    def New(*args, **kargs):
        """New() -> itkThresholdImageFilterIUC2

        Create a new object of the class itkThresholdImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdImageFilterIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdImageFilterIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdImageFilterIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdImageFilterIUC2 in _itkThresholdImageFilterPython:
_itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_swigregister(itkThresholdImageFilterIUC2)
itkThresholdImageFilterIUC2___New_orig__ = _itkThresholdImageFilterPython.itkThresholdImageFilterIUC2___New_orig__
itkThresholdImageFilterIUC2_cast = _itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_cast


def itkThresholdImageFilterIUC3_New():
    return itkThresholdImageFilterIUC3.New()

class itkThresholdImageFilterIUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    r"""


    Set image values to a user-specified value if they are below, above,
    or between simple threshold values.

    ThresholdImageFilter sets image values to a user-specified "outside"
    value (by default, "black") if the image values are below, above, or
    between simple threshold values.

    The available methods are:

    ThresholdAbove(): The values greater than the threshold value are set
    to OutsideValue

    ThresholdBelow(): The values less than the threshold value are set to
    OutsideValue

    ThresholdOutside(): The values outside the threshold range (less than
    lower or greater than upper) are set to OutsideValue

    Note that these definitions indicate that pixels equal to the
    threshold value are not set to OutsideValue in any of these methods

    The pixels must support the operators >= and <=.

    example{Filtering/Thresholding/ThresholdAnImage,Threshold An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_Clone)
    PixelTypeComparableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_PixelTypeComparableCheck
    
    PixelTypeOStreamWritableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_PixelTypeOStreamWritableCheck
    
    SetOutsideValue = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_GetOutsideValue)
    ThresholdAbove = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_ThresholdAbove)
    ThresholdBelow = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_ThresholdBelow)
    ThresholdOutside = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_ThresholdOutside)
    SetLower = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_SetLower)
    GetLower = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_GetLower)
    SetUpper = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_SetUpper)
    GetUpper = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_GetUpper)
    __swig_destroy__ = _itkThresholdImageFilterPython.delete_itkThresholdImageFilterIUC3
    cast = _swig_new_static_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkThresholdImageFilterIUC3

        Create a new object of the class itkThresholdImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdImageFilterIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdImageFilterIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdImageFilterIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdImageFilterIUC3 in _itkThresholdImageFilterPython:
_itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_swigregister(itkThresholdImageFilterIUC3)
itkThresholdImageFilterIUC3___New_orig__ = _itkThresholdImageFilterPython.itkThresholdImageFilterIUC3___New_orig__
itkThresholdImageFilterIUC3_cast = _itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_cast


def itkThresholdImageFilterIUS2_New():
    return itkThresholdImageFilterIUS2.New()

class itkThresholdImageFilterIUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""


    Set image values to a user-specified value if they are below, above,
    or between simple threshold values.

    ThresholdImageFilter sets image values to a user-specified "outside"
    value (by default, "black") if the image values are below, above, or
    between simple threshold values.

    The available methods are:

    ThresholdAbove(): The values greater than the threshold value are set
    to OutsideValue

    ThresholdBelow(): The values less than the threshold value are set to
    OutsideValue

    ThresholdOutside(): The values outside the threshold range (less than
    lower or greater than upper) are set to OutsideValue

    Note that these definitions indicate that pixels equal to the
    threshold value are not set to OutsideValue in any of these methods

    The pixels must support the operators >= and <=.

    example{Filtering/Thresholding/ThresholdAnImage,Threshold An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_Clone)
    PixelTypeComparableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_PixelTypeComparableCheck
    
    PixelTypeOStreamWritableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_PixelTypeOStreamWritableCheck
    
    SetOutsideValue = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_GetOutsideValue)
    ThresholdAbove = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_ThresholdAbove)
    ThresholdBelow = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_ThresholdBelow)
    ThresholdOutside = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_ThresholdOutside)
    SetLower = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_SetLower)
    GetLower = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_GetLower)
    SetUpper = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_SetUpper)
    GetUpper = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_GetUpper)
    __swig_destroy__ = _itkThresholdImageFilterPython.delete_itkThresholdImageFilterIUS2
    cast = _swig_new_static_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_cast)

    def New(*args, **kargs):
        """New() -> itkThresholdImageFilterIUS2

        Create a new object of the class itkThresholdImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdImageFilterIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdImageFilterIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdImageFilterIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdImageFilterIUS2 in _itkThresholdImageFilterPython:
_itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_swigregister(itkThresholdImageFilterIUS2)
itkThresholdImageFilterIUS2___New_orig__ = _itkThresholdImageFilterPython.itkThresholdImageFilterIUS2___New_orig__
itkThresholdImageFilterIUS2_cast = _itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_cast


def itkThresholdImageFilterIUS3_New():
    return itkThresholdImageFilterIUS3.New()

class itkThresholdImageFilterIUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""


    Set image values to a user-specified value if they are below, above,
    or between simple threshold values.

    ThresholdImageFilter sets image values to a user-specified "outside"
    value (by default, "black") if the image values are below, above, or
    between simple threshold values.

    The available methods are:

    ThresholdAbove(): The values greater than the threshold value are set
    to OutsideValue

    ThresholdBelow(): The values less than the threshold value are set to
    OutsideValue

    ThresholdOutside(): The values outside the threshold range (less than
    lower or greater than upper) are set to OutsideValue

    Note that these definitions indicate that pixels equal to the
    threshold value are not set to OutsideValue in any of these methods

    The pixels must support the operators >= and <=.

    example{Filtering/Thresholding/ThresholdAnImage,Threshold An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_Clone)
    PixelTypeComparableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_PixelTypeComparableCheck
    
    PixelTypeOStreamWritableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_PixelTypeOStreamWritableCheck
    
    SetOutsideValue = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_GetOutsideValue)
    ThresholdAbove = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_ThresholdAbove)
    ThresholdBelow = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_ThresholdBelow)
    ThresholdOutside = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_ThresholdOutside)
    SetLower = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_SetLower)
    GetLower = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_GetLower)
    SetUpper = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_SetUpper)
    GetUpper = _swig_new_instance_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_GetUpper)
    __swig_destroy__ = _itkThresholdImageFilterPython.delete_itkThresholdImageFilterIUS3
    cast = _swig_new_static_method(_itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_cast)

    def New(*args, **kargs):
        """New() -> itkThresholdImageFilterIUS3

        Create a new object of the class itkThresholdImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdImageFilterIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdImageFilterIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdImageFilterIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdImageFilterIUS3 in _itkThresholdImageFilterPython:
_itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_swigregister(itkThresholdImageFilterIUS3)
itkThresholdImageFilterIUS3___New_orig__ = _itkThresholdImageFilterPython.itkThresholdImageFilterIUS3___New_orig__
itkThresholdImageFilterIUS3_cast = _itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def threshold_image_filter(*args, **kwargs):
    """Procedural interface for ThresholdImageFilter"""
    import itk
    instance = itk.ThresholdImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def threshold_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ThresholdImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ThresholdImageFilter.values()[0]
    else:
        filter_object = itk.ThresholdImageFilter

    threshold_image_filter.__doc__ = filter_object.__doc__
    threshold_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    threshold_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ThresholdImageFilter, itkTemplate.itkTemplate):
        threshold_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        threshold_image_filter.__doc__ += "\n"
        threshold_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        threshold_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



