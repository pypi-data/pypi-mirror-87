# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageSourcesPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkParametricImageSourcePython
else:
    import _itkParametricImageSourcePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkParametricImageSourcePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkParametricImageSourcePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkArrayPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.ITKCommonBasePython
import itk.itkGenerateImageSourcePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageSourcePython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourceCommonPython
class itkParametricImageSourceICF2(itk.itkGenerateImageSourcePython.itkGenerateImageSourceICF2):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceICF2_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceICF2_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceICF2_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceICF2
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceICF2_cast)

# Register itkParametricImageSourceICF2 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceICF2_swigregister(itkParametricImageSourceICF2)
itkParametricImageSourceICF2_cast = _itkParametricImageSourcePython.itkParametricImageSourceICF2_cast

class itkParametricImageSourceICF3(itk.itkGenerateImageSourcePython.itkGenerateImageSourceICF3):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceICF3_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceICF3_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceICF3_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceICF3
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceICF3_cast)

# Register itkParametricImageSourceICF3 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceICF3_swigregister(itkParametricImageSourceICF3)
itkParametricImageSourceICF3_cast = _itkParametricImageSourcePython.itkParametricImageSourceICF3_cast

class itkParametricImageSourceICVF22(itk.itkGenerateImageSourcePython.itkGenerateImageSourceICVF22):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceICVF22_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceICVF22_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceICVF22_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceICVF22
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceICVF22_cast)

# Register itkParametricImageSourceICVF22 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceICVF22_swigregister(itkParametricImageSourceICVF22)
itkParametricImageSourceICVF22_cast = _itkParametricImageSourcePython.itkParametricImageSourceICVF22_cast

class itkParametricImageSourceICVF23(itk.itkGenerateImageSourcePython.itkGenerateImageSourceICVF23):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceICVF23_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceICVF23_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceICVF23_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceICVF23
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceICVF23_cast)

# Register itkParametricImageSourceICVF23 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceICVF23_swigregister(itkParametricImageSourceICVF23)
itkParametricImageSourceICVF23_cast = _itkParametricImageSourcePython.itkParametricImageSourceICVF23_cast

class itkParametricImageSourceICVF32(itk.itkGenerateImageSourcePython.itkGenerateImageSourceICVF32):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceICVF32_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceICVF32_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceICVF32_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceICVF32
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceICVF32_cast)

# Register itkParametricImageSourceICVF32 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceICVF32_swigregister(itkParametricImageSourceICVF32)
itkParametricImageSourceICVF32_cast = _itkParametricImageSourcePython.itkParametricImageSourceICVF32_cast

class itkParametricImageSourceICVF33(itk.itkGenerateImageSourcePython.itkGenerateImageSourceICVF33):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceICVF33_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceICVF33_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceICVF33_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceICVF33
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceICVF33_cast)

# Register itkParametricImageSourceICVF33 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceICVF33_swigregister(itkParametricImageSourceICVF33)
itkParametricImageSourceICVF33_cast = _itkParametricImageSourcePython.itkParametricImageSourceICVF33_cast

class itkParametricImageSourceICVF42(itk.itkGenerateImageSourcePython.itkGenerateImageSourceICVF42):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceICVF42_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceICVF42_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceICVF42_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceICVF42
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceICVF42_cast)

# Register itkParametricImageSourceICVF42 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceICVF42_swigregister(itkParametricImageSourceICVF42)
itkParametricImageSourceICVF42_cast = _itkParametricImageSourcePython.itkParametricImageSourceICVF42_cast

class itkParametricImageSourceICVF43(itk.itkGenerateImageSourcePython.itkGenerateImageSourceICVF43):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceICVF43_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceICVF43_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceICVF43_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceICVF43
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceICVF43_cast)

# Register itkParametricImageSourceICVF43 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceICVF43_swigregister(itkParametricImageSourceICVF43)
itkParametricImageSourceICVF43_cast = _itkParametricImageSourcePython.itkParametricImageSourceICVF43_cast

class itkParametricImageSourceID2(itk.itkGenerateImageSourcePython.itkGenerateImageSourceID2):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceID2_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceID2_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceID2_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceID2
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceID2_cast)

# Register itkParametricImageSourceID2 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceID2_swigregister(itkParametricImageSourceID2)
itkParametricImageSourceID2_cast = _itkParametricImageSourcePython.itkParametricImageSourceID2_cast

class itkParametricImageSourceID3(itk.itkGenerateImageSourcePython.itkGenerateImageSourceID3):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceID3_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceID3_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceID3_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceID3
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceID3_cast)

# Register itkParametricImageSourceID3 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceID3_swigregister(itkParametricImageSourceID3)
itkParametricImageSourceID3_cast = _itkParametricImageSourcePython.itkParametricImageSourceID3_cast

class itkParametricImageSourceIF2(itk.itkGenerateImageSourcePython.itkGenerateImageSourceIF2):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIF2_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIF2_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIF2_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceIF2
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceIF2_cast)

# Register itkParametricImageSourceIF2 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceIF2_swigregister(itkParametricImageSourceIF2)
itkParametricImageSourceIF2_cast = _itkParametricImageSourcePython.itkParametricImageSourceIF2_cast

class itkParametricImageSourceIF3(itk.itkGenerateImageSourcePython.itkGenerateImageSourceIF3):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIF3_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIF3_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIF3_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceIF3
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceIF3_cast)

# Register itkParametricImageSourceIF3 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceIF3_swigregister(itkParametricImageSourceIF3)
itkParametricImageSourceIF3_cast = _itkParametricImageSourcePython.itkParametricImageSourceIF3_cast

class itkParametricImageSourceIRGBAUC2(itk.itkGenerateImageSourcePython.itkGenerateImageSourceIRGBAUC2):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIRGBAUC2_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIRGBAUC2_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIRGBAUC2_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceIRGBAUC2
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceIRGBAUC2_cast)

# Register itkParametricImageSourceIRGBAUC2 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceIRGBAUC2_swigregister(itkParametricImageSourceIRGBAUC2)
itkParametricImageSourceIRGBAUC2_cast = _itkParametricImageSourcePython.itkParametricImageSourceIRGBAUC2_cast

class itkParametricImageSourceIRGBAUC3(itk.itkGenerateImageSourcePython.itkGenerateImageSourceIRGBAUC3):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIRGBAUC3_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIRGBAUC3_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIRGBAUC3_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceIRGBAUC3
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceIRGBAUC3_cast)

# Register itkParametricImageSourceIRGBAUC3 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceIRGBAUC3_swigregister(itkParametricImageSourceIRGBAUC3)
itkParametricImageSourceIRGBAUC3_cast = _itkParametricImageSourcePython.itkParametricImageSourceIRGBAUC3_cast

class itkParametricImageSourceIRGBUC2(itk.itkGenerateImageSourcePython.itkGenerateImageSourceIRGBUC2):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIRGBUC2_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIRGBUC2_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIRGBUC2_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceIRGBUC2
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceIRGBUC2_cast)

# Register itkParametricImageSourceIRGBUC2 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceIRGBUC2_swigregister(itkParametricImageSourceIRGBUC2)
itkParametricImageSourceIRGBUC2_cast = _itkParametricImageSourcePython.itkParametricImageSourceIRGBUC2_cast

class itkParametricImageSourceIRGBUC3(itk.itkGenerateImageSourcePython.itkGenerateImageSourceIRGBUC3):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIRGBUC3_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIRGBUC3_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIRGBUC3_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceIRGBUC3
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceIRGBUC3_cast)

# Register itkParametricImageSourceIRGBUC3 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceIRGBUC3_swigregister(itkParametricImageSourceIRGBUC3)
itkParametricImageSourceIRGBUC3_cast = _itkParametricImageSourcePython.itkParametricImageSourceIRGBUC3_cast

class itkParametricImageSourceISS2(itk.itkGenerateImageSourcePython.itkGenerateImageSourceISS2):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceISS2_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceISS2_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceISS2_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceISS2
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceISS2_cast)

# Register itkParametricImageSourceISS2 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceISS2_swigregister(itkParametricImageSourceISS2)
itkParametricImageSourceISS2_cast = _itkParametricImageSourcePython.itkParametricImageSourceISS2_cast

class itkParametricImageSourceISS3(itk.itkGenerateImageSourcePython.itkGenerateImageSourceISS3):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceISS3_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceISS3_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceISS3_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceISS3
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceISS3_cast)

# Register itkParametricImageSourceISS3 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceISS3_swigregister(itkParametricImageSourceISS3)
itkParametricImageSourceISS3_cast = _itkParametricImageSourcePython.itkParametricImageSourceISS3_cast

class itkParametricImageSourceIUC2(itk.itkGenerateImageSourcePython.itkGenerateImageSourceIUC2):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIUC2_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIUC2_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIUC2_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceIUC2
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceIUC2_cast)

# Register itkParametricImageSourceIUC2 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceIUC2_swigregister(itkParametricImageSourceIUC2)
itkParametricImageSourceIUC2_cast = _itkParametricImageSourcePython.itkParametricImageSourceIUC2_cast

class itkParametricImageSourceIUC3(itk.itkGenerateImageSourcePython.itkGenerateImageSourceIUC3):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIUC3_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIUC3_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIUC3_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceIUC3
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceIUC3_cast)

# Register itkParametricImageSourceIUC3 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceIUC3_swigregister(itkParametricImageSourceIUC3)
itkParametricImageSourceIUC3_cast = _itkParametricImageSourcePython.itkParametricImageSourceIUC3_cast

class itkParametricImageSourceIUS2(itk.itkGenerateImageSourcePython.itkGenerateImageSourceIUS2):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIUS2_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIUS2_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIUS2_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceIUS2
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceIUS2_cast)

# Register itkParametricImageSourceIUS2 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceIUS2_swigregister(itkParametricImageSourceIUS2)
itkParametricImageSourceIUS2_cast = _itkParametricImageSourcePython.itkParametricImageSourceIUS2_cast

class itkParametricImageSourceIUS3(itk.itkGenerateImageSourcePython.itkGenerateImageSourceIUS3):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIUS3_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIUS3_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIUS3_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceIUS3
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceIUS3_cast)

# Register itkParametricImageSourceIUS3 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceIUS3_swigregister(itkParametricImageSourceIUS3)
itkParametricImageSourceIUS3_cast = _itkParametricImageSourcePython.itkParametricImageSourceIUS3_cast

class itkParametricImageSourceIVF22(itk.itkGenerateImageSourcePython.itkGenerateImageSourceIVF22):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIVF22_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIVF22_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIVF22_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceIVF22
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceIVF22_cast)

# Register itkParametricImageSourceIVF22 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceIVF22_swigregister(itkParametricImageSourceIVF22)
itkParametricImageSourceIVF22_cast = _itkParametricImageSourcePython.itkParametricImageSourceIVF22_cast

class itkParametricImageSourceIVF23(itk.itkGenerateImageSourcePython.itkGenerateImageSourceIVF23):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIVF23_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIVF23_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIVF23_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceIVF23
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceIVF23_cast)

# Register itkParametricImageSourceIVF23 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceIVF23_swigregister(itkParametricImageSourceIVF23)
itkParametricImageSourceIVF23_cast = _itkParametricImageSourcePython.itkParametricImageSourceIVF23_cast

class itkParametricImageSourceIVF32(itk.itkGenerateImageSourcePython.itkGenerateImageSourceIVF32):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIVF32_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIVF32_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIVF32_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceIVF32
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceIVF32_cast)

# Register itkParametricImageSourceIVF32 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceIVF32_swigregister(itkParametricImageSourceIVF32)
itkParametricImageSourceIVF32_cast = _itkParametricImageSourcePython.itkParametricImageSourceIVF32_cast

class itkParametricImageSourceIVF33(itk.itkGenerateImageSourcePython.itkGenerateImageSourceIVF33):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIVF33_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIVF33_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIVF33_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceIVF33
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceIVF33_cast)

# Register itkParametricImageSourceIVF33 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceIVF33_swigregister(itkParametricImageSourceIVF33)
itkParametricImageSourceIVF33_cast = _itkParametricImageSourcePython.itkParametricImageSourceIVF33_cast

class itkParametricImageSourceIVF42(itk.itkGenerateImageSourcePython.itkGenerateImageSourceIVF42):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIVF42_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIVF42_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIVF42_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceIVF42
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceIVF42_cast)

# Register itkParametricImageSourceIVF42 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceIVF42_swigregister(itkParametricImageSourceIVF42)
itkParametricImageSourceIVF42_cast = _itkParametricImageSourcePython.itkParametricImageSourceIVF42_cast

class itkParametricImageSourceIVF43(itk.itkGenerateImageSourcePython.itkGenerateImageSourceIVF43):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIVF43_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIVF43_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceIVF43_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceIVF43
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceIVF43_cast)

# Register itkParametricImageSourceIVF43 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceIVF43_swigregister(itkParametricImageSourceIVF43)
itkParametricImageSourceIVF43_cast = _itkParametricImageSourcePython.itkParametricImageSourceIVF43_cast

class itkParametricImageSourceVID2(itk.itkGenerateImageSourcePython.itkGenerateImageSourceVID2):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVID2_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVID2_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVID2_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceVID2
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceVID2_cast)

# Register itkParametricImageSourceVID2 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceVID2_swigregister(itkParametricImageSourceVID2)
itkParametricImageSourceVID2_cast = _itkParametricImageSourcePython.itkParametricImageSourceVID2_cast

class itkParametricImageSourceVID3(itk.itkGenerateImageSourcePython.itkGenerateImageSourceVID3):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVID3_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVID3_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVID3_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceVID3
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceVID3_cast)

# Register itkParametricImageSourceVID3 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceVID3_swigregister(itkParametricImageSourceVID3)
itkParametricImageSourceVID3_cast = _itkParametricImageSourcePython.itkParametricImageSourceVID3_cast

class itkParametricImageSourceVIF2(itk.itkGenerateImageSourcePython.itkGenerateImageSourceVIF2):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVIF2_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVIF2_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVIF2_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceVIF2
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceVIF2_cast)

# Register itkParametricImageSourceVIF2 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceVIF2_swigregister(itkParametricImageSourceVIF2)
itkParametricImageSourceVIF2_cast = _itkParametricImageSourcePython.itkParametricImageSourceVIF2_cast

class itkParametricImageSourceVIF3(itk.itkGenerateImageSourcePython.itkGenerateImageSourceVIF3):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVIF3_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVIF3_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVIF3_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceVIF3
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceVIF3_cast)

# Register itkParametricImageSourceVIF3 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceVIF3_swigregister(itkParametricImageSourceVIF3)
itkParametricImageSourceVIF3_cast = _itkParametricImageSourcePython.itkParametricImageSourceVIF3_cast

class itkParametricImageSourceVISS2(itk.itkGenerateImageSourcePython.itkGenerateImageSourceVISS2):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVISS2_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVISS2_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVISS2_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceVISS2
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceVISS2_cast)

# Register itkParametricImageSourceVISS2 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceVISS2_swigregister(itkParametricImageSourceVISS2)
itkParametricImageSourceVISS2_cast = _itkParametricImageSourcePython.itkParametricImageSourceVISS2_cast

class itkParametricImageSourceVISS3(itk.itkGenerateImageSourcePython.itkGenerateImageSourceVISS3):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVISS3_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVISS3_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVISS3_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceVISS3
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceVISS3_cast)

# Register itkParametricImageSourceVISS3 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceVISS3_swigregister(itkParametricImageSourceVISS3)
itkParametricImageSourceVISS3_cast = _itkParametricImageSourcePython.itkParametricImageSourceVISS3_cast

class itkParametricImageSourceVIUC2(itk.itkGenerateImageSourcePython.itkGenerateImageSourceVIUC2):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVIUC2_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVIUC2_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVIUC2_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceVIUC2
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceVIUC2_cast)

# Register itkParametricImageSourceVIUC2 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceVIUC2_swigregister(itkParametricImageSourceVIUC2)
itkParametricImageSourceVIUC2_cast = _itkParametricImageSourcePython.itkParametricImageSourceVIUC2_cast

class itkParametricImageSourceVIUC3(itk.itkGenerateImageSourcePython.itkGenerateImageSourceVIUC3):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVIUC3_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVIUC3_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVIUC3_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceVIUC3
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceVIUC3_cast)

# Register itkParametricImageSourceVIUC3 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceVIUC3_swigregister(itkParametricImageSourceVIUC3)
itkParametricImageSourceVIUC3_cast = _itkParametricImageSourcePython.itkParametricImageSourceVIUC3_cast

class itkParametricImageSourceVIUS2(itk.itkGenerateImageSourcePython.itkGenerateImageSourceVIUS2):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVIUS2_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVIUS2_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVIUS2_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceVIUS2
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceVIUS2_cast)

# Register itkParametricImageSourceVIUS2 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceVIUS2_swigregister(itkParametricImageSourceVIUS2)
itkParametricImageSourceVIUS2_cast = _itkParametricImageSourcePython.itkParametricImageSourceVIUS2_cast

class itkParametricImageSourceVIUS3(itk.itkGenerateImageSourcePython.itkGenerateImageSourceVIUS3):
    r"""


    Base class for all parametric image sources.

    This abstract class specifies an interface than enables parameters to
    be set through a vector of values using the SetParameters() method.
    This interface makes it easier to include parameterized image sources
    within ITK's optimization/registration framework.

    Concrete subclasses must implement the methods SetParameters(),
    GetParameters() and GetNumberOfParameters(). 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVIUS3_SetParameters)
    GetParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVIUS3_GetParameters)
    GetNumberOfParameters = _swig_new_instance_method(_itkParametricImageSourcePython.itkParametricImageSourceVIUS3_GetNumberOfParameters)
    __swig_destroy__ = _itkParametricImageSourcePython.delete_itkParametricImageSourceVIUS3
    cast = _swig_new_static_method(_itkParametricImageSourcePython.itkParametricImageSourceVIUS3_cast)

# Register itkParametricImageSourceVIUS3 in _itkParametricImageSourcePython:
_itkParametricImageSourcePython.itkParametricImageSourceVIUS3_swigregister(itkParametricImageSourceVIUS3)
itkParametricImageSourceVIUS3_cast = _itkParametricImageSourcePython.itkParametricImageSourceVIUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def parametric_image_source(*args, **kwargs):
    """Procedural interface for ParametricImageSource"""
    import itk
    instance = itk.ParametricImageSource.New(*args, **kwargs)
    return instance.__internal_call__()

def parametric_image_source_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ParametricImageSource, itkTemplate.itkTemplate):
        filter_object = itk.ParametricImageSource.values()[0]
    else:
        filter_object = itk.ParametricImageSource

    parametric_image_source.__doc__ = filter_object.__doc__
    parametric_image_source.__doc__ += "\n Args are Input(s) to the filter.\n"
    parametric_image_source.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ParametricImageSource, itkTemplate.itkTemplate):
        parametric_image_source.__doc__ += itkHelpers.filter_args(filter_object)[0]
        parametric_image_source.__doc__ += "\n"
        parametric_image_source.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        parametric_image_source.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



