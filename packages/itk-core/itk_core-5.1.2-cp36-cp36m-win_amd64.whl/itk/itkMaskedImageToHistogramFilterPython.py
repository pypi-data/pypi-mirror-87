# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKStatisticsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMaskedImageToHistogramFilterPython
else:
    import _itkMaskedImageToHistogramFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkMaskedImageToHistogramFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkMaskedImageToHistogramFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImagePython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkPointPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkRGBAPixelPython
import itk.itkImageToHistogramFilterPython
import itk.itkArrayPython
import itk.itkHistogramPython
import itk.itkSamplePython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkImageSinkPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython

def itkMaskedImageToHistogramFilterICF2ISS2_New():
    return itkMaskedImageToHistogramFilterICF2ISS2.New()

class itkMaskedImageToHistogramFilterICF2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2ISS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2ISS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2ISS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2ISS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2ISS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICF2ISS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICF2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterICF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICF2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2ISS2_swigregister(itkMaskedImageToHistogramFilterICF2ISS2)
itkMaskedImageToHistogramFilterICF2ISS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2ISS2___New_orig__
itkMaskedImageToHistogramFilterICF2ISS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2ISS2_cast


def itkMaskedImageToHistogramFilterICF2IUC2_New():
    return itkMaskedImageToHistogramFilterICF2IUC2.New()

class itkMaskedImageToHistogramFilterICF2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUC2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUC2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUC2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUC2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUC2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICF2IUC2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICF2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterICF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICF2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUC2_swigregister(itkMaskedImageToHistogramFilterICF2IUC2)
itkMaskedImageToHistogramFilterICF2IUC2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUC2___New_orig__
itkMaskedImageToHistogramFilterICF2IUC2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUC2_cast


def itkMaskedImageToHistogramFilterICF2IUS2_New():
    return itkMaskedImageToHistogramFilterICF2IUS2.New()

class itkMaskedImageToHistogramFilterICF2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICF2IUS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICF2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterICF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICF2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUS2_swigregister(itkMaskedImageToHistogramFilterICF2IUS2)
itkMaskedImageToHistogramFilterICF2IUS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUS2___New_orig__
itkMaskedImageToHistogramFilterICF2IUS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUS2_cast


def itkMaskedImageToHistogramFilterICF3ISS3_New():
    return itkMaskedImageToHistogramFilterICF3ISS3.New()

class itkMaskedImageToHistogramFilterICF3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3ISS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3ISS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3ISS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3ISS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3ISS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICF3ISS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICF3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterICF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICF3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3ISS3_swigregister(itkMaskedImageToHistogramFilterICF3ISS3)
itkMaskedImageToHistogramFilterICF3ISS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3ISS3___New_orig__
itkMaskedImageToHistogramFilterICF3ISS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3ISS3_cast


def itkMaskedImageToHistogramFilterICF3IUC3_New():
    return itkMaskedImageToHistogramFilterICF3IUC3.New()

class itkMaskedImageToHistogramFilterICF3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUC3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUC3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUC3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUC3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUC3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICF3IUC3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICF3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterICF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICF3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUC3_swigregister(itkMaskedImageToHistogramFilterICF3IUC3)
itkMaskedImageToHistogramFilterICF3IUC3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUC3___New_orig__
itkMaskedImageToHistogramFilterICF3IUC3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUC3_cast


def itkMaskedImageToHistogramFilterICF3IUS3_New():
    return itkMaskedImageToHistogramFilterICF3IUS3.New()

class itkMaskedImageToHistogramFilterICF3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICF3IUS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICF3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterICF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICF3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUS3_swigregister(itkMaskedImageToHistogramFilterICF3IUS3)
itkMaskedImageToHistogramFilterICF3IUS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUS3___New_orig__
itkMaskedImageToHistogramFilterICF3IUS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUS3_cast


def itkMaskedImageToHistogramFilterICVF22ISS2_New():
    return itkMaskedImageToHistogramFilterICVF22ISS2.New()

class itkMaskedImageToHistogramFilterICVF22ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22ISS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22ISS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22ISS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22ISS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22ISS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF22ISS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF22ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterICVF22ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF22ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF22ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF22ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF22ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22ISS2_swigregister(itkMaskedImageToHistogramFilterICVF22ISS2)
itkMaskedImageToHistogramFilterICVF22ISS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22ISS2___New_orig__
itkMaskedImageToHistogramFilterICVF22ISS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22ISS2_cast


def itkMaskedImageToHistogramFilterICVF22IUC2_New():
    return itkMaskedImageToHistogramFilterICVF22IUC2.New()

class itkMaskedImageToHistogramFilterICVF22IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUC2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUC2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUC2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUC2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUC2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF22IUC2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF22IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterICVF22IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF22IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF22IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF22IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF22IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUC2_swigregister(itkMaskedImageToHistogramFilterICVF22IUC2)
itkMaskedImageToHistogramFilterICVF22IUC2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUC2___New_orig__
itkMaskedImageToHistogramFilterICVF22IUC2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUC2_cast


def itkMaskedImageToHistogramFilterICVF22IUS2_New():
    return itkMaskedImageToHistogramFilterICVF22IUS2.New()

class itkMaskedImageToHistogramFilterICVF22IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF22IUS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF22IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterICVF22IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF22IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF22IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF22IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF22IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUS2_swigregister(itkMaskedImageToHistogramFilterICVF22IUS2)
itkMaskedImageToHistogramFilterICVF22IUS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUS2___New_orig__
itkMaskedImageToHistogramFilterICVF22IUS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUS2_cast


def itkMaskedImageToHistogramFilterICVF23ISS3_New():
    return itkMaskedImageToHistogramFilterICVF23ISS3.New()

class itkMaskedImageToHistogramFilterICVF23ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23ISS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23ISS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23ISS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23ISS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23ISS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF23ISS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF23ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterICVF23ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF23ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF23ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF23ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF23ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23ISS3_swigregister(itkMaskedImageToHistogramFilterICVF23ISS3)
itkMaskedImageToHistogramFilterICVF23ISS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23ISS3___New_orig__
itkMaskedImageToHistogramFilterICVF23ISS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23ISS3_cast


def itkMaskedImageToHistogramFilterICVF23IUC3_New():
    return itkMaskedImageToHistogramFilterICVF23IUC3.New()

class itkMaskedImageToHistogramFilterICVF23IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUC3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUC3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUC3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUC3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUC3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF23IUC3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF23IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterICVF23IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF23IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF23IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF23IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF23IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUC3_swigregister(itkMaskedImageToHistogramFilterICVF23IUC3)
itkMaskedImageToHistogramFilterICVF23IUC3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUC3___New_orig__
itkMaskedImageToHistogramFilterICVF23IUC3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUC3_cast


def itkMaskedImageToHistogramFilterICVF23IUS3_New():
    return itkMaskedImageToHistogramFilterICVF23IUS3.New()

class itkMaskedImageToHistogramFilterICVF23IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF23IUS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF23IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterICVF23IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF23IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF23IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF23IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF23IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUS3_swigregister(itkMaskedImageToHistogramFilterICVF23IUS3)
itkMaskedImageToHistogramFilterICVF23IUS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUS3___New_orig__
itkMaskedImageToHistogramFilterICVF23IUS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUS3_cast


def itkMaskedImageToHistogramFilterICVF32ISS2_New():
    return itkMaskedImageToHistogramFilterICVF32ISS2.New()

class itkMaskedImageToHistogramFilterICVF32ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32ISS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32ISS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32ISS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32ISS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32ISS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF32ISS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF32ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterICVF32ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF32ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF32ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF32ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF32ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32ISS2_swigregister(itkMaskedImageToHistogramFilterICVF32ISS2)
itkMaskedImageToHistogramFilterICVF32ISS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32ISS2___New_orig__
itkMaskedImageToHistogramFilterICVF32ISS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32ISS2_cast


def itkMaskedImageToHistogramFilterICVF32IUC2_New():
    return itkMaskedImageToHistogramFilterICVF32IUC2.New()

class itkMaskedImageToHistogramFilterICVF32IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUC2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUC2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUC2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUC2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUC2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF32IUC2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF32IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterICVF32IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF32IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF32IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF32IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF32IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUC2_swigregister(itkMaskedImageToHistogramFilterICVF32IUC2)
itkMaskedImageToHistogramFilterICVF32IUC2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUC2___New_orig__
itkMaskedImageToHistogramFilterICVF32IUC2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUC2_cast


def itkMaskedImageToHistogramFilterICVF32IUS2_New():
    return itkMaskedImageToHistogramFilterICVF32IUS2.New()

class itkMaskedImageToHistogramFilterICVF32IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF32IUS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF32IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterICVF32IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF32IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF32IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF32IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF32IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUS2_swigregister(itkMaskedImageToHistogramFilterICVF32IUS2)
itkMaskedImageToHistogramFilterICVF32IUS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUS2___New_orig__
itkMaskedImageToHistogramFilterICVF32IUS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUS2_cast


def itkMaskedImageToHistogramFilterICVF33ISS3_New():
    return itkMaskedImageToHistogramFilterICVF33ISS3.New()

class itkMaskedImageToHistogramFilterICVF33ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33ISS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33ISS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33ISS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33ISS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33ISS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF33ISS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF33ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterICVF33ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF33ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF33ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF33ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF33ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33ISS3_swigregister(itkMaskedImageToHistogramFilterICVF33ISS3)
itkMaskedImageToHistogramFilterICVF33ISS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33ISS3___New_orig__
itkMaskedImageToHistogramFilterICVF33ISS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33ISS3_cast


def itkMaskedImageToHistogramFilterICVF33IUC3_New():
    return itkMaskedImageToHistogramFilterICVF33IUC3.New()

class itkMaskedImageToHistogramFilterICVF33IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUC3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUC3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUC3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUC3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUC3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF33IUC3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF33IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterICVF33IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF33IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF33IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF33IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF33IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUC3_swigregister(itkMaskedImageToHistogramFilterICVF33IUC3)
itkMaskedImageToHistogramFilterICVF33IUC3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUC3___New_orig__
itkMaskedImageToHistogramFilterICVF33IUC3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUC3_cast


def itkMaskedImageToHistogramFilterICVF33IUS3_New():
    return itkMaskedImageToHistogramFilterICVF33IUS3.New()

class itkMaskedImageToHistogramFilterICVF33IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF33IUS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF33IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterICVF33IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF33IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF33IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF33IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF33IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUS3_swigregister(itkMaskedImageToHistogramFilterICVF33IUS3)
itkMaskedImageToHistogramFilterICVF33IUS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUS3___New_orig__
itkMaskedImageToHistogramFilterICVF33IUS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUS3_cast


def itkMaskedImageToHistogramFilterICVF42ISS2_New():
    return itkMaskedImageToHistogramFilterICVF42ISS2.New()

class itkMaskedImageToHistogramFilterICVF42ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42ISS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42ISS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42ISS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42ISS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42ISS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF42ISS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF42ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterICVF42ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF42ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF42ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF42ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF42ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42ISS2_swigregister(itkMaskedImageToHistogramFilterICVF42ISS2)
itkMaskedImageToHistogramFilterICVF42ISS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42ISS2___New_orig__
itkMaskedImageToHistogramFilterICVF42ISS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42ISS2_cast


def itkMaskedImageToHistogramFilterICVF42IUC2_New():
    return itkMaskedImageToHistogramFilterICVF42IUC2.New()

class itkMaskedImageToHistogramFilterICVF42IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUC2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUC2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUC2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUC2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUC2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF42IUC2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF42IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterICVF42IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF42IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF42IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF42IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF42IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUC2_swigregister(itkMaskedImageToHistogramFilterICVF42IUC2)
itkMaskedImageToHistogramFilterICVF42IUC2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUC2___New_orig__
itkMaskedImageToHistogramFilterICVF42IUC2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUC2_cast


def itkMaskedImageToHistogramFilterICVF42IUS2_New():
    return itkMaskedImageToHistogramFilterICVF42IUS2.New()

class itkMaskedImageToHistogramFilterICVF42IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF42IUS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF42IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterICVF42IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF42IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF42IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF42IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF42IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUS2_swigregister(itkMaskedImageToHistogramFilterICVF42IUS2)
itkMaskedImageToHistogramFilterICVF42IUS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUS2___New_orig__
itkMaskedImageToHistogramFilterICVF42IUS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUS2_cast


def itkMaskedImageToHistogramFilterICVF43ISS3_New():
    return itkMaskedImageToHistogramFilterICVF43ISS3.New()

class itkMaskedImageToHistogramFilterICVF43ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43ISS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43ISS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43ISS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43ISS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43ISS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF43ISS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF43ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterICVF43ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF43ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF43ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF43ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF43ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43ISS3_swigregister(itkMaskedImageToHistogramFilterICVF43ISS3)
itkMaskedImageToHistogramFilterICVF43ISS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43ISS3___New_orig__
itkMaskedImageToHistogramFilterICVF43ISS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43ISS3_cast


def itkMaskedImageToHistogramFilterICVF43IUC3_New():
    return itkMaskedImageToHistogramFilterICVF43IUC3.New()

class itkMaskedImageToHistogramFilterICVF43IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUC3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUC3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUC3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUC3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUC3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF43IUC3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF43IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterICVF43IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF43IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF43IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF43IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF43IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUC3_swigregister(itkMaskedImageToHistogramFilterICVF43IUC3)
itkMaskedImageToHistogramFilterICVF43IUC3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUC3___New_orig__
itkMaskedImageToHistogramFilterICVF43IUC3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUC3_cast


def itkMaskedImageToHistogramFilterICVF43IUS3_New():
    return itkMaskedImageToHistogramFilterICVF43IUS3.New()

class itkMaskedImageToHistogramFilterICVF43IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF43IUS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF43IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterICVF43IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF43IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF43IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF43IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF43IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUS3_swigregister(itkMaskedImageToHistogramFilterICVF43IUS3)
itkMaskedImageToHistogramFilterICVF43IUS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUS3___New_orig__
itkMaskedImageToHistogramFilterICVF43IUS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUS3_cast


def itkMaskedImageToHistogramFilterID2ISS2_New():
    return itkMaskedImageToHistogramFilterID2ISS2.New()

class itkMaskedImageToHistogramFilterID2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterID2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2ISS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2ISS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2ISS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2ISS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2ISS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterID2ISS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterID2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterID2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2ISS2_swigregister(itkMaskedImageToHistogramFilterID2ISS2)
itkMaskedImageToHistogramFilterID2ISS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2ISS2___New_orig__
itkMaskedImageToHistogramFilterID2ISS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2ISS2_cast


def itkMaskedImageToHistogramFilterID2IUC2_New():
    return itkMaskedImageToHistogramFilterID2IUC2.New()

class itkMaskedImageToHistogramFilterID2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterID2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUC2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUC2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUC2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUC2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUC2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterID2IUC2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterID2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterID2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUC2_swigregister(itkMaskedImageToHistogramFilterID2IUC2)
itkMaskedImageToHistogramFilterID2IUC2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUC2___New_orig__
itkMaskedImageToHistogramFilterID2IUC2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUC2_cast


def itkMaskedImageToHistogramFilterID2IUS2_New():
    return itkMaskedImageToHistogramFilterID2IUS2.New()

class itkMaskedImageToHistogramFilterID2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterID2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterID2IUS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterID2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterID2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUS2_swigregister(itkMaskedImageToHistogramFilterID2IUS2)
itkMaskedImageToHistogramFilterID2IUS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUS2___New_orig__
itkMaskedImageToHistogramFilterID2IUS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUS2_cast


def itkMaskedImageToHistogramFilterID3ISS3_New():
    return itkMaskedImageToHistogramFilterID3ISS3.New()

class itkMaskedImageToHistogramFilterID3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterID3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3ISS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3ISS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3ISS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3ISS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3ISS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterID3ISS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterID3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterID3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3ISS3_swigregister(itkMaskedImageToHistogramFilterID3ISS3)
itkMaskedImageToHistogramFilterID3ISS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3ISS3___New_orig__
itkMaskedImageToHistogramFilterID3ISS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3ISS3_cast


def itkMaskedImageToHistogramFilterID3IUC3_New():
    return itkMaskedImageToHistogramFilterID3IUC3.New()

class itkMaskedImageToHistogramFilterID3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterID3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUC3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUC3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUC3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUC3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUC3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterID3IUC3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterID3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterID3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUC3_swigregister(itkMaskedImageToHistogramFilterID3IUC3)
itkMaskedImageToHistogramFilterID3IUC3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUC3___New_orig__
itkMaskedImageToHistogramFilterID3IUC3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUC3_cast


def itkMaskedImageToHistogramFilterID3IUS3_New():
    return itkMaskedImageToHistogramFilterID3IUS3.New()

class itkMaskedImageToHistogramFilterID3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterID3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterID3IUS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterID3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterID3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUS3_swigregister(itkMaskedImageToHistogramFilterID3IUS3)
itkMaskedImageToHistogramFilterID3IUS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUS3___New_orig__
itkMaskedImageToHistogramFilterID3IUS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUS3_cast


def itkMaskedImageToHistogramFilterIF2ISS2_New():
    return itkMaskedImageToHistogramFilterIF2ISS2.New()

class itkMaskedImageToHistogramFilterIF2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2ISS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2ISS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2ISS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2ISS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2ISS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIF2ISS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIF2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIF2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2ISS2_swigregister(itkMaskedImageToHistogramFilterIF2ISS2)
itkMaskedImageToHistogramFilterIF2ISS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2ISS2___New_orig__
itkMaskedImageToHistogramFilterIF2ISS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2ISS2_cast


def itkMaskedImageToHistogramFilterIF2IUC2_New():
    return itkMaskedImageToHistogramFilterIF2IUC2.New()

class itkMaskedImageToHistogramFilterIF2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUC2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUC2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUC2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUC2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUC2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIF2IUC2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIF2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIF2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUC2_swigregister(itkMaskedImageToHistogramFilterIF2IUC2)
itkMaskedImageToHistogramFilterIF2IUC2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUC2___New_orig__
itkMaskedImageToHistogramFilterIF2IUC2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUC2_cast


def itkMaskedImageToHistogramFilterIF2IUS2_New():
    return itkMaskedImageToHistogramFilterIF2IUS2.New()

class itkMaskedImageToHistogramFilterIF2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIF2IUS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIF2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIF2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUS2_swigregister(itkMaskedImageToHistogramFilterIF2IUS2)
itkMaskedImageToHistogramFilterIF2IUS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUS2___New_orig__
itkMaskedImageToHistogramFilterIF2IUS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUS2_cast


def itkMaskedImageToHistogramFilterIF3ISS3_New():
    return itkMaskedImageToHistogramFilterIF3ISS3.New()

class itkMaskedImageToHistogramFilterIF3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3ISS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3ISS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3ISS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3ISS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3ISS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIF3ISS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIF3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIF3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3ISS3_swigregister(itkMaskedImageToHistogramFilterIF3ISS3)
itkMaskedImageToHistogramFilterIF3ISS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3ISS3___New_orig__
itkMaskedImageToHistogramFilterIF3ISS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3ISS3_cast


def itkMaskedImageToHistogramFilterIF3IUC3_New():
    return itkMaskedImageToHistogramFilterIF3IUC3.New()

class itkMaskedImageToHistogramFilterIF3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUC3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUC3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUC3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUC3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUC3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIF3IUC3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIF3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIF3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUC3_swigregister(itkMaskedImageToHistogramFilterIF3IUC3)
itkMaskedImageToHistogramFilterIF3IUC3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUC3___New_orig__
itkMaskedImageToHistogramFilterIF3IUC3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUC3_cast


def itkMaskedImageToHistogramFilterIF3IUS3_New():
    return itkMaskedImageToHistogramFilterIF3IUS3.New()

class itkMaskedImageToHistogramFilterIF3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIF3IUS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIF3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIF3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUS3_swigregister(itkMaskedImageToHistogramFilterIF3IUS3)
itkMaskedImageToHistogramFilterIF3IUS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUS3___New_orig__
itkMaskedImageToHistogramFilterIF3IUS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUS3_cast


def itkMaskedImageToHistogramFilterIRGBAUC2ISS2_New():
    return itkMaskedImageToHistogramFilterIRGBAUC2ISS2.New()

class itkMaskedImageToHistogramFilterIRGBAUC2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2ISS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2ISS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2ISS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2ISS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2ISS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBAUC2ISS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBAUC2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBAUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBAUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBAUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBAUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBAUC2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2ISS2_swigregister(itkMaskedImageToHistogramFilterIRGBAUC2ISS2)
itkMaskedImageToHistogramFilterIRGBAUC2ISS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2ISS2___New_orig__
itkMaskedImageToHistogramFilterIRGBAUC2ISS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2ISS2_cast


def itkMaskedImageToHistogramFilterIRGBAUC2IUC2_New():
    return itkMaskedImageToHistogramFilterIRGBAUC2IUC2.New()

class itkMaskedImageToHistogramFilterIRGBAUC2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUC2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUC2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUC2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUC2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUC2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBAUC2IUC2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBAUC2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBAUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBAUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBAUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBAUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBAUC2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUC2_swigregister(itkMaskedImageToHistogramFilterIRGBAUC2IUC2)
itkMaskedImageToHistogramFilterIRGBAUC2IUC2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUC2___New_orig__
itkMaskedImageToHistogramFilterIRGBAUC2IUC2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUC2_cast


def itkMaskedImageToHistogramFilterIRGBAUC2IUS2_New():
    return itkMaskedImageToHistogramFilterIRGBAUC2IUS2.New()

class itkMaskedImageToHistogramFilterIRGBAUC2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBAUC2IUS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBAUC2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBAUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBAUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBAUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBAUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBAUC2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUS2_swigregister(itkMaskedImageToHistogramFilterIRGBAUC2IUS2)
itkMaskedImageToHistogramFilterIRGBAUC2IUS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUS2___New_orig__
itkMaskedImageToHistogramFilterIRGBAUC2IUS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUS2_cast


def itkMaskedImageToHistogramFilterIRGBAUC3ISS3_New():
    return itkMaskedImageToHistogramFilterIRGBAUC3ISS3.New()

class itkMaskedImageToHistogramFilterIRGBAUC3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3ISS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3ISS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3ISS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3ISS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3ISS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBAUC3ISS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBAUC3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBAUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBAUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBAUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBAUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBAUC3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3ISS3_swigregister(itkMaskedImageToHistogramFilterIRGBAUC3ISS3)
itkMaskedImageToHistogramFilterIRGBAUC3ISS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3ISS3___New_orig__
itkMaskedImageToHistogramFilterIRGBAUC3ISS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3ISS3_cast


def itkMaskedImageToHistogramFilterIRGBAUC3IUC3_New():
    return itkMaskedImageToHistogramFilterIRGBAUC3IUC3.New()

class itkMaskedImageToHistogramFilterIRGBAUC3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUC3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUC3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUC3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUC3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUC3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBAUC3IUC3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBAUC3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBAUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBAUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBAUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBAUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBAUC3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUC3_swigregister(itkMaskedImageToHistogramFilterIRGBAUC3IUC3)
itkMaskedImageToHistogramFilterIRGBAUC3IUC3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUC3___New_orig__
itkMaskedImageToHistogramFilterIRGBAUC3IUC3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUC3_cast


def itkMaskedImageToHistogramFilterIRGBAUC3IUS3_New():
    return itkMaskedImageToHistogramFilterIRGBAUC3IUS3.New()

class itkMaskedImageToHistogramFilterIRGBAUC3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBAUC3IUS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBAUC3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBAUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBAUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBAUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBAUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBAUC3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUS3_swigregister(itkMaskedImageToHistogramFilterIRGBAUC3IUS3)
itkMaskedImageToHistogramFilterIRGBAUC3IUS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUS3___New_orig__
itkMaskedImageToHistogramFilterIRGBAUC3IUS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUS3_cast


def itkMaskedImageToHistogramFilterIRGBUC2ISS2_New():
    return itkMaskedImageToHistogramFilterIRGBUC2ISS2.New()

class itkMaskedImageToHistogramFilterIRGBUC2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2ISS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2ISS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2ISS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2ISS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2ISS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBUC2ISS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBUC2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBUC2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2ISS2_swigregister(itkMaskedImageToHistogramFilterIRGBUC2ISS2)
itkMaskedImageToHistogramFilterIRGBUC2ISS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2ISS2___New_orig__
itkMaskedImageToHistogramFilterIRGBUC2ISS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2ISS2_cast


def itkMaskedImageToHistogramFilterIRGBUC2IUC2_New():
    return itkMaskedImageToHistogramFilterIRGBUC2IUC2.New()

class itkMaskedImageToHistogramFilterIRGBUC2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUC2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUC2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUC2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUC2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUC2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBUC2IUC2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBUC2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBUC2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUC2_swigregister(itkMaskedImageToHistogramFilterIRGBUC2IUC2)
itkMaskedImageToHistogramFilterIRGBUC2IUC2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUC2___New_orig__
itkMaskedImageToHistogramFilterIRGBUC2IUC2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUC2_cast


def itkMaskedImageToHistogramFilterIRGBUC2IUS2_New():
    return itkMaskedImageToHistogramFilterIRGBUC2IUS2.New()

class itkMaskedImageToHistogramFilterIRGBUC2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBUC2IUS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBUC2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBUC2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUS2_swigregister(itkMaskedImageToHistogramFilterIRGBUC2IUS2)
itkMaskedImageToHistogramFilterIRGBUC2IUS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUS2___New_orig__
itkMaskedImageToHistogramFilterIRGBUC2IUS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUS2_cast


def itkMaskedImageToHistogramFilterIRGBUC3ISS3_New():
    return itkMaskedImageToHistogramFilterIRGBUC3ISS3.New()

class itkMaskedImageToHistogramFilterIRGBUC3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3ISS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3ISS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3ISS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3ISS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3ISS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBUC3ISS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBUC3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBUC3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3ISS3_swigregister(itkMaskedImageToHistogramFilterIRGBUC3ISS3)
itkMaskedImageToHistogramFilterIRGBUC3ISS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3ISS3___New_orig__
itkMaskedImageToHistogramFilterIRGBUC3ISS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3ISS3_cast


def itkMaskedImageToHistogramFilterIRGBUC3IUC3_New():
    return itkMaskedImageToHistogramFilterIRGBUC3IUC3.New()

class itkMaskedImageToHistogramFilterIRGBUC3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUC3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUC3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUC3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUC3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUC3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBUC3IUC3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBUC3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBUC3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUC3_swigregister(itkMaskedImageToHistogramFilterIRGBUC3IUC3)
itkMaskedImageToHistogramFilterIRGBUC3IUC3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUC3___New_orig__
itkMaskedImageToHistogramFilterIRGBUC3IUC3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUC3_cast


def itkMaskedImageToHistogramFilterIRGBUC3IUS3_New():
    return itkMaskedImageToHistogramFilterIRGBUC3IUS3.New()

class itkMaskedImageToHistogramFilterIRGBUC3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBUC3IUS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBUC3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBUC3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUS3_swigregister(itkMaskedImageToHistogramFilterIRGBUC3IUS3)
itkMaskedImageToHistogramFilterIRGBUC3IUS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUS3___New_orig__
itkMaskedImageToHistogramFilterIRGBUC3IUS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUS3_cast


def itkMaskedImageToHistogramFilterISS2ISS2_New():
    return itkMaskedImageToHistogramFilterISS2ISS2.New()

class itkMaskedImageToHistogramFilterISS2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2ISS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2ISS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2ISS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2ISS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2ISS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterISS2ISS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterISS2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterISS2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2ISS2_swigregister(itkMaskedImageToHistogramFilterISS2ISS2)
itkMaskedImageToHistogramFilterISS2ISS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2ISS2___New_orig__
itkMaskedImageToHistogramFilterISS2ISS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2ISS2_cast


def itkMaskedImageToHistogramFilterISS2IUC2_New():
    return itkMaskedImageToHistogramFilterISS2IUC2.New()

class itkMaskedImageToHistogramFilterISS2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUC2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUC2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUC2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUC2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUC2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterISS2IUC2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterISS2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterISS2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUC2_swigregister(itkMaskedImageToHistogramFilterISS2IUC2)
itkMaskedImageToHistogramFilterISS2IUC2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUC2___New_orig__
itkMaskedImageToHistogramFilterISS2IUC2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUC2_cast


def itkMaskedImageToHistogramFilterISS2IUS2_New():
    return itkMaskedImageToHistogramFilterISS2IUS2.New()

class itkMaskedImageToHistogramFilterISS2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterISS2IUS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterISS2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterISS2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUS2_swigregister(itkMaskedImageToHistogramFilterISS2IUS2)
itkMaskedImageToHistogramFilterISS2IUS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUS2___New_orig__
itkMaskedImageToHistogramFilterISS2IUS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUS2_cast


def itkMaskedImageToHistogramFilterISS3ISS3_New():
    return itkMaskedImageToHistogramFilterISS3ISS3.New()

class itkMaskedImageToHistogramFilterISS3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3ISS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3ISS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3ISS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3ISS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3ISS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterISS3ISS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterISS3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterISS3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3ISS3_swigregister(itkMaskedImageToHistogramFilterISS3ISS3)
itkMaskedImageToHistogramFilterISS3ISS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3ISS3___New_orig__
itkMaskedImageToHistogramFilterISS3ISS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3ISS3_cast


def itkMaskedImageToHistogramFilterISS3IUC3_New():
    return itkMaskedImageToHistogramFilterISS3IUC3.New()

class itkMaskedImageToHistogramFilterISS3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUC3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUC3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUC3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUC3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUC3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterISS3IUC3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterISS3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterISS3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUC3_swigregister(itkMaskedImageToHistogramFilterISS3IUC3)
itkMaskedImageToHistogramFilterISS3IUC3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUC3___New_orig__
itkMaskedImageToHistogramFilterISS3IUC3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUC3_cast


def itkMaskedImageToHistogramFilterISS3IUS3_New():
    return itkMaskedImageToHistogramFilterISS3IUS3.New()

class itkMaskedImageToHistogramFilterISS3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterISS3IUS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterISS3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterISS3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUS3_swigregister(itkMaskedImageToHistogramFilterISS3IUS3)
itkMaskedImageToHistogramFilterISS3IUS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUS3___New_orig__
itkMaskedImageToHistogramFilterISS3IUS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUS3_cast


def itkMaskedImageToHistogramFilterIUC2ISS2_New():
    return itkMaskedImageToHistogramFilterIUC2ISS2.New()

class itkMaskedImageToHistogramFilterIUC2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2ISS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2ISS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2ISS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2ISS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2ISS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUC2ISS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUC2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUC2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2ISS2_swigregister(itkMaskedImageToHistogramFilterIUC2ISS2)
itkMaskedImageToHistogramFilterIUC2ISS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2ISS2___New_orig__
itkMaskedImageToHistogramFilterIUC2ISS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2ISS2_cast


def itkMaskedImageToHistogramFilterIUC2IUC2_New():
    return itkMaskedImageToHistogramFilterIUC2IUC2.New()

class itkMaskedImageToHistogramFilterIUC2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUC2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUC2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUC2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUC2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUC2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUC2IUC2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUC2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUC2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUC2_swigregister(itkMaskedImageToHistogramFilterIUC2IUC2)
itkMaskedImageToHistogramFilterIUC2IUC2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUC2___New_orig__
itkMaskedImageToHistogramFilterIUC2IUC2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUC2_cast


def itkMaskedImageToHistogramFilterIUC2IUS2_New():
    return itkMaskedImageToHistogramFilterIUC2IUS2.New()

class itkMaskedImageToHistogramFilterIUC2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUC2IUS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUC2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUC2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUS2_swigregister(itkMaskedImageToHistogramFilterIUC2IUS2)
itkMaskedImageToHistogramFilterIUC2IUS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUS2___New_orig__
itkMaskedImageToHistogramFilterIUC2IUS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUS2_cast


def itkMaskedImageToHistogramFilterIUC3ISS3_New():
    return itkMaskedImageToHistogramFilterIUC3ISS3.New()

class itkMaskedImageToHistogramFilterIUC3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3ISS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3ISS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3ISS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3ISS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3ISS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUC3ISS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUC3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUC3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3ISS3_swigregister(itkMaskedImageToHistogramFilterIUC3ISS3)
itkMaskedImageToHistogramFilterIUC3ISS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3ISS3___New_orig__
itkMaskedImageToHistogramFilterIUC3ISS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3ISS3_cast


def itkMaskedImageToHistogramFilterIUC3IUC3_New():
    return itkMaskedImageToHistogramFilterIUC3IUC3.New()

class itkMaskedImageToHistogramFilterIUC3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUC3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUC3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUC3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUC3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUC3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUC3IUC3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUC3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUC3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUC3_swigregister(itkMaskedImageToHistogramFilterIUC3IUC3)
itkMaskedImageToHistogramFilterIUC3IUC3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUC3___New_orig__
itkMaskedImageToHistogramFilterIUC3IUC3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUC3_cast


def itkMaskedImageToHistogramFilterIUC3IUS3_New():
    return itkMaskedImageToHistogramFilterIUC3IUS3.New()

class itkMaskedImageToHistogramFilterIUC3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUC3IUS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUC3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUC3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUS3_swigregister(itkMaskedImageToHistogramFilterIUC3IUS3)
itkMaskedImageToHistogramFilterIUC3IUS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUS3___New_orig__
itkMaskedImageToHistogramFilterIUC3IUS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUS3_cast


def itkMaskedImageToHistogramFilterIUS2ISS2_New():
    return itkMaskedImageToHistogramFilterIUS2ISS2.New()

class itkMaskedImageToHistogramFilterIUS2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2ISS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2ISS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2ISS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2ISS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2ISS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUS2ISS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUS2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUS2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2ISS2_swigregister(itkMaskedImageToHistogramFilterIUS2ISS2)
itkMaskedImageToHistogramFilterIUS2ISS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2ISS2___New_orig__
itkMaskedImageToHistogramFilterIUS2ISS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2ISS2_cast


def itkMaskedImageToHistogramFilterIUS2IUC2_New():
    return itkMaskedImageToHistogramFilterIUS2IUC2.New()

class itkMaskedImageToHistogramFilterIUS2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUC2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUC2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUC2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUC2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUC2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUS2IUC2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUS2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUS2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUC2_swigregister(itkMaskedImageToHistogramFilterIUS2IUC2)
itkMaskedImageToHistogramFilterIUS2IUC2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUC2___New_orig__
itkMaskedImageToHistogramFilterIUS2IUC2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUC2_cast


def itkMaskedImageToHistogramFilterIUS2IUS2_New():
    return itkMaskedImageToHistogramFilterIUS2IUS2.New()

class itkMaskedImageToHistogramFilterIUS2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUS2IUS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUS2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUS2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUS2_swigregister(itkMaskedImageToHistogramFilterIUS2IUS2)
itkMaskedImageToHistogramFilterIUS2IUS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUS2___New_orig__
itkMaskedImageToHistogramFilterIUS2IUS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUS2_cast


def itkMaskedImageToHistogramFilterIUS3ISS3_New():
    return itkMaskedImageToHistogramFilterIUS3ISS3.New()

class itkMaskedImageToHistogramFilterIUS3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3ISS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3ISS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3ISS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3ISS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3ISS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUS3ISS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUS3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUS3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3ISS3_swigregister(itkMaskedImageToHistogramFilterIUS3ISS3)
itkMaskedImageToHistogramFilterIUS3ISS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3ISS3___New_orig__
itkMaskedImageToHistogramFilterIUS3ISS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3ISS3_cast


def itkMaskedImageToHistogramFilterIUS3IUC3_New():
    return itkMaskedImageToHistogramFilterIUS3IUC3.New()

class itkMaskedImageToHistogramFilterIUS3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUC3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUC3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUC3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUC3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUC3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUS3IUC3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUS3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUS3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUC3_swigregister(itkMaskedImageToHistogramFilterIUS3IUC3)
itkMaskedImageToHistogramFilterIUS3IUC3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUC3___New_orig__
itkMaskedImageToHistogramFilterIUS3IUC3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUC3_cast


def itkMaskedImageToHistogramFilterIUS3IUS3_New():
    return itkMaskedImageToHistogramFilterIUS3IUS3.New()

class itkMaskedImageToHistogramFilterIUS3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUS3IUS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUS3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUS3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUS3_swigregister(itkMaskedImageToHistogramFilterIUS3IUS3)
itkMaskedImageToHistogramFilterIUS3IUS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUS3___New_orig__
itkMaskedImageToHistogramFilterIUS3IUS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUS3_cast


def itkMaskedImageToHistogramFilterIVF22ISS2_New():
    return itkMaskedImageToHistogramFilterIVF22ISS2.New()

class itkMaskedImageToHistogramFilterIVF22ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22ISS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22ISS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22ISS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22ISS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22ISS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF22ISS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF22ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterIVF22ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF22ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF22ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF22ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF22ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22ISS2_swigregister(itkMaskedImageToHistogramFilterIVF22ISS2)
itkMaskedImageToHistogramFilterIVF22ISS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22ISS2___New_orig__
itkMaskedImageToHistogramFilterIVF22ISS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22ISS2_cast


def itkMaskedImageToHistogramFilterIVF22IUC2_New():
    return itkMaskedImageToHistogramFilterIVF22IUC2.New()

class itkMaskedImageToHistogramFilterIVF22IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUC2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUC2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUC2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUC2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUC2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF22IUC2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF22IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterIVF22IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF22IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF22IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF22IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF22IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUC2_swigregister(itkMaskedImageToHistogramFilterIVF22IUC2)
itkMaskedImageToHistogramFilterIVF22IUC2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUC2___New_orig__
itkMaskedImageToHistogramFilterIVF22IUC2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUC2_cast


def itkMaskedImageToHistogramFilterIVF22IUS2_New():
    return itkMaskedImageToHistogramFilterIVF22IUS2.New()

class itkMaskedImageToHistogramFilterIVF22IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF22IUS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF22IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterIVF22IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF22IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF22IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF22IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF22IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUS2_swigregister(itkMaskedImageToHistogramFilterIVF22IUS2)
itkMaskedImageToHistogramFilterIVF22IUS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUS2___New_orig__
itkMaskedImageToHistogramFilterIVF22IUS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUS2_cast


def itkMaskedImageToHistogramFilterIVF23ISS3_New():
    return itkMaskedImageToHistogramFilterIVF23ISS3.New()

class itkMaskedImageToHistogramFilterIVF23ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23ISS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23ISS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23ISS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23ISS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23ISS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF23ISS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF23ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterIVF23ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF23ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF23ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF23ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF23ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23ISS3_swigregister(itkMaskedImageToHistogramFilterIVF23ISS3)
itkMaskedImageToHistogramFilterIVF23ISS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23ISS3___New_orig__
itkMaskedImageToHistogramFilterIVF23ISS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23ISS3_cast


def itkMaskedImageToHistogramFilterIVF23IUC3_New():
    return itkMaskedImageToHistogramFilterIVF23IUC3.New()

class itkMaskedImageToHistogramFilterIVF23IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUC3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUC3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUC3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUC3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUC3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF23IUC3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF23IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterIVF23IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF23IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF23IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF23IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF23IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUC3_swigregister(itkMaskedImageToHistogramFilterIVF23IUC3)
itkMaskedImageToHistogramFilterIVF23IUC3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUC3___New_orig__
itkMaskedImageToHistogramFilterIVF23IUC3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUC3_cast


def itkMaskedImageToHistogramFilterIVF23IUS3_New():
    return itkMaskedImageToHistogramFilterIVF23IUS3.New()

class itkMaskedImageToHistogramFilterIVF23IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF23IUS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF23IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterIVF23IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF23IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF23IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF23IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF23IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUS3_swigregister(itkMaskedImageToHistogramFilterIVF23IUS3)
itkMaskedImageToHistogramFilterIVF23IUS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUS3___New_orig__
itkMaskedImageToHistogramFilterIVF23IUS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUS3_cast


def itkMaskedImageToHistogramFilterIVF32ISS2_New():
    return itkMaskedImageToHistogramFilterIVF32ISS2.New()

class itkMaskedImageToHistogramFilterIVF32ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32ISS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32ISS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32ISS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32ISS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32ISS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF32ISS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF32ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterIVF32ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF32ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF32ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF32ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF32ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32ISS2_swigregister(itkMaskedImageToHistogramFilterIVF32ISS2)
itkMaskedImageToHistogramFilterIVF32ISS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32ISS2___New_orig__
itkMaskedImageToHistogramFilterIVF32ISS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32ISS2_cast


def itkMaskedImageToHistogramFilterIVF32IUC2_New():
    return itkMaskedImageToHistogramFilterIVF32IUC2.New()

class itkMaskedImageToHistogramFilterIVF32IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUC2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUC2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUC2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUC2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUC2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF32IUC2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF32IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterIVF32IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF32IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF32IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF32IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF32IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUC2_swigregister(itkMaskedImageToHistogramFilterIVF32IUC2)
itkMaskedImageToHistogramFilterIVF32IUC2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUC2___New_orig__
itkMaskedImageToHistogramFilterIVF32IUC2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUC2_cast


def itkMaskedImageToHistogramFilterIVF32IUS2_New():
    return itkMaskedImageToHistogramFilterIVF32IUS2.New()

class itkMaskedImageToHistogramFilterIVF32IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF32IUS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF32IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterIVF32IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF32IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF32IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF32IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF32IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUS2_swigregister(itkMaskedImageToHistogramFilterIVF32IUS2)
itkMaskedImageToHistogramFilterIVF32IUS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUS2___New_orig__
itkMaskedImageToHistogramFilterIVF32IUS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUS2_cast


def itkMaskedImageToHistogramFilterIVF33ISS3_New():
    return itkMaskedImageToHistogramFilterIVF33ISS3.New()

class itkMaskedImageToHistogramFilterIVF33ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33ISS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33ISS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33ISS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33ISS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33ISS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF33ISS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF33ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterIVF33ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF33ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF33ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF33ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF33ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33ISS3_swigregister(itkMaskedImageToHistogramFilterIVF33ISS3)
itkMaskedImageToHistogramFilterIVF33ISS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33ISS3___New_orig__
itkMaskedImageToHistogramFilterIVF33ISS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33ISS3_cast


def itkMaskedImageToHistogramFilterIVF33IUC3_New():
    return itkMaskedImageToHistogramFilterIVF33IUC3.New()

class itkMaskedImageToHistogramFilterIVF33IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUC3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUC3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUC3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUC3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUC3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF33IUC3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF33IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterIVF33IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF33IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF33IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF33IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF33IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUC3_swigregister(itkMaskedImageToHistogramFilterIVF33IUC3)
itkMaskedImageToHistogramFilterIVF33IUC3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUC3___New_orig__
itkMaskedImageToHistogramFilterIVF33IUC3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUC3_cast


def itkMaskedImageToHistogramFilterIVF33IUS3_New():
    return itkMaskedImageToHistogramFilterIVF33IUS3.New()

class itkMaskedImageToHistogramFilterIVF33IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF33IUS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF33IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterIVF33IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF33IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF33IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF33IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF33IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUS3_swigregister(itkMaskedImageToHistogramFilterIVF33IUS3)
itkMaskedImageToHistogramFilterIVF33IUS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUS3___New_orig__
itkMaskedImageToHistogramFilterIVF33IUS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUS3_cast


def itkMaskedImageToHistogramFilterIVF42ISS2_New():
    return itkMaskedImageToHistogramFilterIVF42ISS2.New()

class itkMaskedImageToHistogramFilterIVF42ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42ISS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42ISS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42ISS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42ISS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42ISS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF42ISS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF42ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterIVF42ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF42ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF42ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF42ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF42ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42ISS2_swigregister(itkMaskedImageToHistogramFilterIVF42ISS2)
itkMaskedImageToHistogramFilterIVF42ISS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42ISS2___New_orig__
itkMaskedImageToHistogramFilterIVF42ISS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42ISS2_cast


def itkMaskedImageToHistogramFilterIVF42IUC2_New():
    return itkMaskedImageToHistogramFilterIVF42IUC2.New()

class itkMaskedImageToHistogramFilterIVF42IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUC2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUC2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUC2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUC2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUC2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF42IUC2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF42IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterIVF42IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF42IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF42IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF42IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF42IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUC2_swigregister(itkMaskedImageToHistogramFilterIVF42IUC2)
itkMaskedImageToHistogramFilterIVF42IUC2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUC2___New_orig__
itkMaskedImageToHistogramFilterIVF42IUC2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUC2_cast


def itkMaskedImageToHistogramFilterIVF42IUS2_New():
    return itkMaskedImageToHistogramFilterIVF42IUS2.New()

class itkMaskedImageToHistogramFilterIVF42IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF42IUS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF42IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterIVF42IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF42IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF42IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF42IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF42IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUS2_swigregister(itkMaskedImageToHistogramFilterIVF42IUS2)
itkMaskedImageToHistogramFilterIVF42IUS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUS2___New_orig__
itkMaskedImageToHistogramFilterIVF42IUS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUS2_cast


def itkMaskedImageToHistogramFilterIVF43ISS3_New():
    return itkMaskedImageToHistogramFilterIVF43ISS3.New()

class itkMaskedImageToHistogramFilterIVF43ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43ISS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43ISS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43ISS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43ISS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43ISS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF43ISS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF43ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterIVF43ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF43ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF43ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF43ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF43ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43ISS3_swigregister(itkMaskedImageToHistogramFilterIVF43ISS3)
itkMaskedImageToHistogramFilterIVF43ISS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43ISS3___New_orig__
itkMaskedImageToHistogramFilterIVF43ISS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43ISS3_cast


def itkMaskedImageToHistogramFilterIVF43IUC3_New():
    return itkMaskedImageToHistogramFilterIVF43IUC3.New()

class itkMaskedImageToHistogramFilterIVF43IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUC3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUC3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUC3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUC3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUC3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF43IUC3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF43IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterIVF43IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF43IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF43IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF43IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF43IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUC3_swigregister(itkMaskedImageToHistogramFilterIVF43IUC3)
itkMaskedImageToHistogramFilterIVF43IUC3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUC3___New_orig__
itkMaskedImageToHistogramFilterIVF43IUC3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUC3_cast


def itkMaskedImageToHistogramFilterIVF43IUS3_New():
    return itkMaskedImageToHistogramFilterIVF43IUS3.New()

class itkMaskedImageToHistogramFilterIVF43IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF43IUS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF43IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterIVF43IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF43IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF43IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF43IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF43IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUS3_swigregister(itkMaskedImageToHistogramFilterIVF43IUS3)
itkMaskedImageToHistogramFilterIVF43IUS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUS3___New_orig__
itkMaskedImageToHistogramFilterIVF43IUS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUS3_cast


def itkMaskedImageToHistogramFilterVID2ID2_New():
    return itkMaskedImageToHistogramFilterVID2ID2.New()

class itkMaskedImageToHistogramFilterVID2ID2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ID2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ID2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ID2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ID2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ID2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ID2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ID2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVID2ID2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVID2ID2

        Create a new object of the class itkMaskedImageToHistogramFilterVID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVID2ID2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ID2_swigregister(itkMaskedImageToHistogramFilterVID2ID2)
itkMaskedImageToHistogramFilterVID2ID2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ID2___New_orig__
itkMaskedImageToHistogramFilterVID2ID2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ID2_cast


def itkMaskedImageToHistogramFilterVID2IF2_New():
    return itkMaskedImageToHistogramFilterVID2IF2.New()

class itkMaskedImageToHistogramFilterVID2IF2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IF2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IF2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IF2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IF2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IF2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IF2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IF2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVID2IF2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVID2IF2

        Create a new object of the class itkMaskedImageToHistogramFilterVID2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVID2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVID2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVID2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVID2IF2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IF2_swigregister(itkMaskedImageToHistogramFilterVID2IF2)
itkMaskedImageToHistogramFilterVID2IF2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IF2___New_orig__
itkMaskedImageToHistogramFilterVID2IF2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IF2_cast


def itkMaskedImageToHistogramFilterVID2ISS2_New():
    return itkMaskedImageToHistogramFilterVID2ISS2.New()

class itkMaskedImageToHistogramFilterVID2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ISS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ISS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ISS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ISS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ISS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVID2ISS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVID2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterVID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVID2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ISS2_swigregister(itkMaskedImageToHistogramFilterVID2ISS2)
itkMaskedImageToHistogramFilterVID2ISS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ISS2___New_orig__
itkMaskedImageToHistogramFilterVID2ISS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ISS2_cast


def itkMaskedImageToHistogramFilterVID2IUC2_New():
    return itkMaskedImageToHistogramFilterVID2IUC2.New()

class itkMaskedImageToHistogramFilterVID2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUC2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUC2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUC2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUC2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUC2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVID2IUC2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVID2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterVID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVID2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUC2_swigregister(itkMaskedImageToHistogramFilterVID2IUC2)
itkMaskedImageToHistogramFilterVID2IUC2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUC2___New_orig__
itkMaskedImageToHistogramFilterVID2IUC2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUC2_cast


def itkMaskedImageToHistogramFilterVID2IUS2_New():
    return itkMaskedImageToHistogramFilterVID2IUS2.New()

class itkMaskedImageToHistogramFilterVID2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVID2IUS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVID2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterVID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVID2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUS2_swigregister(itkMaskedImageToHistogramFilterVID2IUS2)
itkMaskedImageToHistogramFilterVID2IUS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUS2___New_orig__
itkMaskedImageToHistogramFilterVID2IUS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUS2_cast


def itkMaskedImageToHistogramFilterVID3ID3_New():
    return itkMaskedImageToHistogramFilterVID3ID3.New()

class itkMaskedImageToHistogramFilterVID3ID3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ID3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ID3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ID3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ID3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ID3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ID3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ID3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVID3ID3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVID3ID3

        Create a new object of the class itkMaskedImageToHistogramFilterVID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVID3ID3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ID3_swigregister(itkMaskedImageToHistogramFilterVID3ID3)
itkMaskedImageToHistogramFilterVID3ID3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ID3___New_orig__
itkMaskedImageToHistogramFilterVID3ID3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ID3_cast


def itkMaskedImageToHistogramFilterVID3IF3_New():
    return itkMaskedImageToHistogramFilterVID3IF3.New()

class itkMaskedImageToHistogramFilterVID3IF3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IF3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IF3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IF3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IF3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IF3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IF3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVID3IF3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVID3IF3

        Create a new object of the class itkMaskedImageToHistogramFilterVID3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVID3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVID3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVID3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVID3IF3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IF3_swigregister(itkMaskedImageToHistogramFilterVID3IF3)
itkMaskedImageToHistogramFilterVID3IF3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IF3___New_orig__
itkMaskedImageToHistogramFilterVID3IF3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IF3_cast


def itkMaskedImageToHistogramFilterVID3ISS3_New():
    return itkMaskedImageToHistogramFilterVID3ISS3.New()

class itkMaskedImageToHistogramFilterVID3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ISS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ISS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ISS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ISS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ISS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVID3ISS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVID3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterVID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVID3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ISS3_swigregister(itkMaskedImageToHistogramFilterVID3ISS3)
itkMaskedImageToHistogramFilterVID3ISS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ISS3___New_orig__
itkMaskedImageToHistogramFilterVID3ISS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ISS3_cast


def itkMaskedImageToHistogramFilterVID3IUC3_New():
    return itkMaskedImageToHistogramFilterVID3IUC3.New()

class itkMaskedImageToHistogramFilterVID3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUC3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUC3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUC3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUC3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUC3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVID3IUC3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVID3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterVID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVID3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUC3_swigregister(itkMaskedImageToHistogramFilterVID3IUC3)
itkMaskedImageToHistogramFilterVID3IUC3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUC3___New_orig__
itkMaskedImageToHistogramFilterVID3IUC3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUC3_cast


def itkMaskedImageToHistogramFilterVID3IUS3_New():
    return itkMaskedImageToHistogramFilterVID3IUS3.New()

class itkMaskedImageToHistogramFilterVID3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVID3IUS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVID3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterVID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVID3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUS3_swigregister(itkMaskedImageToHistogramFilterVID3IUS3)
itkMaskedImageToHistogramFilterVID3IUS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUS3___New_orig__
itkMaskedImageToHistogramFilterVID3IUS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUS3_cast


def itkMaskedImageToHistogramFilterVIF2ID2_New():
    return itkMaskedImageToHistogramFilterVIF2ID2.New()

class itkMaskedImageToHistogramFilterVIF2ID2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ID2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ID2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ID2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ID2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ID2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ID2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ID2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIF2ID2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIF2ID2

        Create a new object of the class itkMaskedImageToHistogramFilterVIF2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIF2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIF2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIF2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIF2ID2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ID2_swigregister(itkMaskedImageToHistogramFilterVIF2ID2)
itkMaskedImageToHistogramFilterVIF2ID2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ID2___New_orig__
itkMaskedImageToHistogramFilterVIF2ID2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ID2_cast


def itkMaskedImageToHistogramFilterVIF2IF2_New():
    return itkMaskedImageToHistogramFilterVIF2IF2.New()

class itkMaskedImageToHistogramFilterVIF2IF2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IF2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IF2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IF2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IF2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IF2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IF2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IF2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIF2IF2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIF2IF2

        Create a new object of the class itkMaskedImageToHistogramFilterVIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIF2IF2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IF2_swigregister(itkMaskedImageToHistogramFilterVIF2IF2)
itkMaskedImageToHistogramFilterVIF2IF2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IF2___New_orig__
itkMaskedImageToHistogramFilterVIF2IF2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IF2_cast


def itkMaskedImageToHistogramFilterVIF2ISS2_New():
    return itkMaskedImageToHistogramFilterVIF2ISS2.New()

class itkMaskedImageToHistogramFilterVIF2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ISS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ISS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ISS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ISS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ISS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIF2ISS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIF2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterVIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIF2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ISS2_swigregister(itkMaskedImageToHistogramFilterVIF2ISS2)
itkMaskedImageToHistogramFilterVIF2ISS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ISS2___New_orig__
itkMaskedImageToHistogramFilterVIF2ISS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ISS2_cast


def itkMaskedImageToHistogramFilterVIF2IUC2_New():
    return itkMaskedImageToHistogramFilterVIF2IUC2.New()

class itkMaskedImageToHistogramFilterVIF2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUC2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUC2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUC2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUC2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUC2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIF2IUC2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIF2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterVIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIF2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUC2_swigregister(itkMaskedImageToHistogramFilterVIF2IUC2)
itkMaskedImageToHistogramFilterVIF2IUC2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUC2___New_orig__
itkMaskedImageToHistogramFilterVIF2IUC2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUC2_cast


def itkMaskedImageToHistogramFilterVIF2IUS2_New():
    return itkMaskedImageToHistogramFilterVIF2IUS2.New()

class itkMaskedImageToHistogramFilterVIF2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIF2IUS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIF2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterVIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIF2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUS2_swigregister(itkMaskedImageToHistogramFilterVIF2IUS2)
itkMaskedImageToHistogramFilterVIF2IUS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUS2___New_orig__
itkMaskedImageToHistogramFilterVIF2IUS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUS2_cast


def itkMaskedImageToHistogramFilterVIF3ID3_New():
    return itkMaskedImageToHistogramFilterVIF3ID3.New()

class itkMaskedImageToHistogramFilterVIF3ID3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ID3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ID3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ID3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ID3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ID3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ID3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ID3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIF3ID3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIF3ID3

        Create a new object of the class itkMaskedImageToHistogramFilterVIF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIF3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIF3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIF3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIF3ID3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ID3_swigregister(itkMaskedImageToHistogramFilterVIF3ID3)
itkMaskedImageToHistogramFilterVIF3ID3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ID3___New_orig__
itkMaskedImageToHistogramFilterVIF3ID3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ID3_cast


def itkMaskedImageToHistogramFilterVIF3IF3_New():
    return itkMaskedImageToHistogramFilterVIF3IF3.New()

class itkMaskedImageToHistogramFilterVIF3IF3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IF3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IF3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IF3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IF3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IF3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IF3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIF3IF3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIF3IF3

        Create a new object of the class itkMaskedImageToHistogramFilterVIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIF3IF3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IF3_swigregister(itkMaskedImageToHistogramFilterVIF3IF3)
itkMaskedImageToHistogramFilterVIF3IF3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IF3___New_orig__
itkMaskedImageToHistogramFilterVIF3IF3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IF3_cast


def itkMaskedImageToHistogramFilterVIF3ISS3_New():
    return itkMaskedImageToHistogramFilterVIF3ISS3.New()

class itkMaskedImageToHistogramFilterVIF3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ISS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ISS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ISS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ISS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ISS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIF3ISS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIF3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterVIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIF3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ISS3_swigregister(itkMaskedImageToHistogramFilterVIF3ISS3)
itkMaskedImageToHistogramFilterVIF3ISS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ISS3___New_orig__
itkMaskedImageToHistogramFilterVIF3ISS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ISS3_cast


def itkMaskedImageToHistogramFilterVIF3IUC3_New():
    return itkMaskedImageToHistogramFilterVIF3IUC3.New()

class itkMaskedImageToHistogramFilterVIF3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUC3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUC3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUC3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUC3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUC3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIF3IUC3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIF3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterVIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIF3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUC3_swigregister(itkMaskedImageToHistogramFilterVIF3IUC3)
itkMaskedImageToHistogramFilterVIF3IUC3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUC3___New_orig__
itkMaskedImageToHistogramFilterVIF3IUC3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUC3_cast


def itkMaskedImageToHistogramFilterVIF3IUS3_New():
    return itkMaskedImageToHistogramFilterVIF3IUS3.New()

class itkMaskedImageToHistogramFilterVIF3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIF3IUS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIF3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterVIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIF3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUS3_swigregister(itkMaskedImageToHistogramFilterVIF3IUS3)
itkMaskedImageToHistogramFilterVIF3IUS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUS3___New_orig__
itkMaskedImageToHistogramFilterVIF3IUS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUS3_cast


def itkMaskedImageToHistogramFilterVISS2ID2_New():
    return itkMaskedImageToHistogramFilterVISS2ID2.New()

class itkMaskedImageToHistogramFilterVISS2ID2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ID2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ID2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ID2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ID2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ID2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ID2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ID2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVISS2ID2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVISS2ID2

        Create a new object of the class itkMaskedImageToHistogramFilterVISS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVISS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVISS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVISS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVISS2ID2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ID2_swigregister(itkMaskedImageToHistogramFilterVISS2ID2)
itkMaskedImageToHistogramFilterVISS2ID2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ID2___New_orig__
itkMaskedImageToHistogramFilterVISS2ID2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ID2_cast


def itkMaskedImageToHistogramFilterVISS2IF2_New():
    return itkMaskedImageToHistogramFilterVISS2IF2.New()

class itkMaskedImageToHistogramFilterVISS2IF2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IF2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IF2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IF2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IF2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IF2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IF2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IF2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVISS2IF2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVISS2IF2

        Create a new object of the class itkMaskedImageToHistogramFilterVISS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVISS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVISS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVISS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVISS2IF2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IF2_swigregister(itkMaskedImageToHistogramFilterVISS2IF2)
itkMaskedImageToHistogramFilterVISS2IF2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IF2___New_orig__
itkMaskedImageToHistogramFilterVISS2IF2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IF2_cast


def itkMaskedImageToHistogramFilterVISS2ISS2_New():
    return itkMaskedImageToHistogramFilterVISS2ISS2.New()

class itkMaskedImageToHistogramFilterVISS2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ISS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ISS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ISS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ISS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ISS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVISS2ISS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVISS2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterVISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVISS2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ISS2_swigregister(itkMaskedImageToHistogramFilterVISS2ISS2)
itkMaskedImageToHistogramFilterVISS2ISS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ISS2___New_orig__
itkMaskedImageToHistogramFilterVISS2ISS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ISS2_cast


def itkMaskedImageToHistogramFilterVISS2IUC2_New():
    return itkMaskedImageToHistogramFilterVISS2IUC2.New()

class itkMaskedImageToHistogramFilterVISS2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUC2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUC2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUC2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUC2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUC2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVISS2IUC2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVISS2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterVISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVISS2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUC2_swigregister(itkMaskedImageToHistogramFilterVISS2IUC2)
itkMaskedImageToHistogramFilterVISS2IUC2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUC2___New_orig__
itkMaskedImageToHistogramFilterVISS2IUC2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUC2_cast


def itkMaskedImageToHistogramFilterVISS2IUS2_New():
    return itkMaskedImageToHistogramFilterVISS2IUS2.New()

class itkMaskedImageToHistogramFilterVISS2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVISS2IUS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVISS2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterVISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVISS2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUS2_swigregister(itkMaskedImageToHistogramFilterVISS2IUS2)
itkMaskedImageToHistogramFilterVISS2IUS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUS2___New_orig__
itkMaskedImageToHistogramFilterVISS2IUS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUS2_cast


def itkMaskedImageToHistogramFilterVISS3ID3_New():
    return itkMaskedImageToHistogramFilterVISS3ID3.New()

class itkMaskedImageToHistogramFilterVISS3ID3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ID3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ID3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ID3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ID3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ID3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ID3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ID3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVISS3ID3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVISS3ID3

        Create a new object of the class itkMaskedImageToHistogramFilterVISS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVISS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVISS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVISS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVISS3ID3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ID3_swigregister(itkMaskedImageToHistogramFilterVISS3ID3)
itkMaskedImageToHistogramFilterVISS3ID3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ID3___New_orig__
itkMaskedImageToHistogramFilterVISS3ID3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ID3_cast


def itkMaskedImageToHistogramFilterVISS3IF3_New():
    return itkMaskedImageToHistogramFilterVISS3IF3.New()

class itkMaskedImageToHistogramFilterVISS3IF3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IF3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IF3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IF3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IF3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IF3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IF3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVISS3IF3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVISS3IF3

        Create a new object of the class itkMaskedImageToHistogramFilterVISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVISS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVISS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVISS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVISS3IF3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IF3_swigregister(itkMaskedImageToHistogramFilterVISS3IF3)
itkMaskedImageToHistogramFilterVISS3IF3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IF3___New_orig__
itkMaskedImageToHistogramFilterVISS3IF3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IF3_cast


def itkMaskedImageToHistogramFilterVISS3ISS3_New():
    return itkMaskedImageToHistogramFilterVISS3ISS3.New()

class itkMaskedImageToHistogramFilterVISS3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ISS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ISS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ISS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ISS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ISS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVISS3ISS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVISS3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterVISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVISS3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ISS3_swigregister(itkMaskedImageToHistogramFilterVISS3ISS3)
itkMaskedImageToHistogramFilterVISS3ISS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ISS3___New_orig__
itkMaskedImageToHistogramFilterVISS3ISS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ISS3_cast


def itkMaskedImageToHistogramFilterVISS3IUC3_New():
    return itkMaskedImageToHistogramFilterVISS3IUC3.New()

class itkMaskedImageToHistogramFilterVISS3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUC3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUC3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUC3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUC3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUC3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVISS3IUC3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVISS3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterVISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVISS3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUC3_swigregister(itkMaskedImageToHistogramFilterVISS3IUC3)
itkMaskedImageToHistogramFilterVISS3IUC3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUC3___New_orig__
itkMaskedImageToHistogramFilterVISS3IUC3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUC3_cast


def itkMaskedImageToHistogramFilterVISS3IUS3_New():
    return itkMaskedImageToHistogramFilterVISS3IUS3.New()

class itkMaskedImageToHistogramFilterVISS3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVISS3IUS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVISS3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterVISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVISS3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUS3_swigregister(itkMaskedImageToHistogramFilterVISS3IUS3)
itkMaskedImageToHistogramFilterVISS3IUS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUS3___New_orig__
itkMaskedImageToHistogramFilterVISS3IUS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUS3_cast


def itkMaskedImageToHistogramFilterVIUC2ID2_New():
    return itkMaskedImageToHistogramFilterVIUC2ID2.New()

class itkMaskedImageToHistogramFilterVIUC2ID2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ID2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ID2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ID2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ID2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ID2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ID2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ID2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUC2ID2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUC2ID2

        Create a new object of the class itkMaskedImageToHistogramFilterVIUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUC2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUC2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUC2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUC2ID2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ID2_swigregister(itkMaskedImageToHistogramFilterVIUC2ID2)
itkMaskedImageToHistogramFilterVIUC2ID2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ID2___New_orig__
itkMaskedImageToHistogramFilterVIUC2ID2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ID2_cast


def itkMaskedImageToHistogramFilterVIUC2IF2_New():
    return itkMaskedImageToHistogramFilterVIUC2IF2.New()

class itkMaskedImageToHistogramFilterVIUC2IF2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IF2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IF2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IF2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IF2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IF2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IF2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IF2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUC2IF2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUC2IF2

        Create a new object of the class itkMaskedImageToHistogramFilterVIUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUC2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUC2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUC2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUC2IF2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IF2_swigregister(itkMaskedImageToHistogramFilterVIUC2IF2)
itkMaskedImageToHistogramFilterVIUC2IF2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IF2___New_orig__
itkMaskedImageToHistogramFilterVIUC2IF2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IF2_cast


def itkMaskedImageToHistogramFilterVIUC2ISS2_New():
    return itkMaskedImageToHistogramFilterVIUC2ISS2.New()

class itkMaskedImageToHistogramFilterVIUC2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ISS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ISS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ISS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ISS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ISS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUC2ISS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUC2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterVIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUC2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ISS2_swigregister(itkMaskedImageToHistogramFilterVIUC2ISS2)
itkMaskedImageToHistogramFilterVIUC2ISS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ISS2___New_orig__
itkMaskedImageToHistogramFilterVIUC2ISS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ISS2_cast


def itkMaskedImageToHistogramFilterVIUC2IUC2_New():
    return itkMaskedImageToHistogramFilterVIUC2IUC2.New()

class itkMaskedImageToHistogramFilterVIUC2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUC2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUC2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUC2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUC2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUC2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUC2IUC2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUC2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterVIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUC2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUC2_swigregister(itkMaskedImageToHistogramFilterVIUC2IUC2)
itkMaskedImageToHistogramFilterVIUC2IUC2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUC2___New_orig__
itkMaskedImageToHistogramFilterVIUC2IUC2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUC2_cast


def itkMaskedImageToHistogramFilterVIUC2IUS2_New():
    return itkMaskedImageToHistogramFilterVIUC2IUS2.New()

class itkMaskedImageToHistogramFilterVIUC2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUC2IUS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUC2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterVIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUC2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUS2_swigregister(itkMaskedImageToHistogramFilterVIUC2IUS2)
itkMaskedImageToHistogramFilterVIUC2IUS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUS2___New_orig__
itkMaskedImageToHistogramFilterVIUC2IUS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUS2_cast


def itkMaskedImageToHistogramFilterVIUC3ID3_New():
    return itkMaskedImageToHistogramFilterVIUC3ID3.New()

class itkMaskedImageToHistogramFilterVIUC3ID3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ID3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ID3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ID3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ID3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ID3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ID3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ID3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUC3ID3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUC3ID3

        Create a new object of the class itkMaskedImageToHistogramFilterVIUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUC3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUC3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUC3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUC3ID3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ID3_swigregister(itkMaskedImageToHistogramFilterVIUC3ID3)
itkMaskedImageToHistogramFilterVIUC3ID3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ID3___New_orig__
itkMaskedImageToHistogramFilterVIUC3ID3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ID3_cast


def itkMaskedImageToHistogramFilterVIUC3IF3_New():
    return itkMaskedImageToHistogramFilterVIUC3IF3.New()

class itkMaskedImageToHistogramFilterVIUC3IF3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IF3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IF3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IF3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IF3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IF3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IF3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUC3IF3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUC3IF3

        Create a new object of the class itkMaskedImageToHistogramFilterVIUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUC3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUC3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUC3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUC3IF3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IF3_swigregister(itkMaskedImageToHistogramFilterVIUC3IF3)
itkMaskedImageToHistogramFilterVIUC3IF3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IF3___New_orig__
itkMaskedImageToHistogramFilterVIUC3IF3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IF3_cast


def itkMaskedImageToHistogramFilterVIUC3ISS3_New():
    return itkMaskedImageToHistogramFilterVIUC3ISS3.New()

class itkMaskedImageToHistogramFilterVIUC3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ISS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ISS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ISS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ISS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ISS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUC3ISS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUC3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterVIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUC3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ISS3_swigregister(itkMaskedImageToHistogramFilterVIUC3ISS3)
itkMaskedImageToHistogramFilterVIUC3ISS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ISS3___New_orig__
itkMaskedImageToHistogramFilterVIUC3ISS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ISS3_cast


def itkMaskedImageToHistogramFilterVIUC3IUC3_New():
    return itkMaskedImageToHistogramFilterVIUC3IUC3.New()

class itkMaskedImageToHistogramFilterVIUC3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUC3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUC3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUC3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUC3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUC3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUC3IUC3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUC3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterVIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUC3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUC3_swigregister(itkMaskedImageToHistogramFilterVIUC3IUC3)
itkMaskedImageToHistogramFilterVIUC3IUC3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUC3___New_orig__
itkMaskedImageToHistogramFilterVIUC3IUC3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUC3_cast


def itkMaskedImageToHistogramFilterVIUC3IUS3_New():
    return itkMaskedImageToHistogramFilterVIUC3IUS3.New()

class itkMaskedImageToHistogramFilterVIUC3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUC3IUS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUC3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterVIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUC3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUS3_swigregister(itkMaskedImageToHistogramFilterVIUC3IUS3)
itkMaskedImageToHistogramFilterVIUC3IUS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUS3___New_orig__
itkMaskedImageToHistogramFilterVIUC3IUS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUS3_cast


def itkMaskedImageToHistogramFilterVIUS2ID2_New():
    return itkMaskedImageToHistogramFilterVIUS2ID2.New()

class itkMaskedImageToHistogramFilterVIUS2ID2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ID2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ID2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ID2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ID2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ID2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ID2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ID2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUS2ID2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUS2ID2

        Create a new object of the class itkMaskedImageToHistogramFilterVIUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUS2ID2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ID2_swigregister(itkMaskedImageToHistogramFilterVIUS2ID2)
itkMaskedImageToHistogramFilterVIUS2ID2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ID2___New_orig__
itkMaskedImageToHistogramFilterVIUS2ID2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ID2_cast


def itkMaskedImageToHistogramFilterVIUS2IF2_New():
    return itkMaskedImageToHistogramFilterVIUS2IF2.New()

class itkMaskedImageToHistogramFilterVIUS2IF2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IF2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IF2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IF2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IF2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IF2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IF2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IF2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUS2IF2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUS2IF2

        Create a new object of the class itkMaskedImageToHistogramFilterVIUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUS2IF2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IF2_swigregister(itkMaskedImageToHistogramFilterVIUS2IF2)
itkMaskedImageToHistogramFilterVIUS2IF2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IF2___New_orig__
itkMaskedImageToHistogramFilterVIUS2IF2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IF2_cast


def itkMaskedImageToHistogramFilterVIUS2ISS2_New():
    return itkMaskedImageToHistogramFilterVIUS2ISS2.New()

class itkMaskedImageToHistogramFilterVIUS2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ISS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ISS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ISS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ISS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ISS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUS2ISS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUS2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterVIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUS2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ISS2_swigregister(itkMaskedImageToHistogramFilterVIUS2ISS2)
itkMaskedImageToHistogramFilterVIUS2ISS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ISS2___New_orig__
itkMaskedImageToHistogramFilterVIUS2ISS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ISS2_cast


def itkMaskedImageToHistogramFilterVIUS2IUC2_New():
    return itkMaskedImageToHistogramFilterVIUS2IUC2.New()

class itkMaskedImageToHistogramFilterVIUS2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUC2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUC2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUC2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUC2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUC2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUS2IUC2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUS2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterVIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUS2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUC2_swigregister(itkMaskedImageToHistogramFilterVIUS2IUC2)
itkMaskedImageToHistogramFilterVIUS2IUC2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUC2___New_orig__
itkMaskedImageToHistogramFilterVIUS2IUC2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUC2_cast


def itkMaskedImageToHistogramFilterVIUS2IUS2_New():
    return itkMaskedImageToHistogramFilterVIUS2IUS2.New()

class itkMaskedImageToHistogramFilterVIUS2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUS2_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUS2_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUS2_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUS2_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUS2_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUS2IUS2
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUS2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterVIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUS2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUS2_swigregister(itkMaskedImageToHistogramFilterVIUS2IUS2)
itkMaskedImageToHistogramFilterVIUS2IUS2___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUS2___New_orig__
itkMaskedImageToHistogramFilterVIUS2IUS2_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUS2_cast


def itkMaskedImageToHistogramFilterVIUS3ID3_New():
    return itkMaskedImageToHistogramFilterVIUS3ID3.New()

class itkMaskedImageToHistogramFilterVIUS3ID3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ID3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ID3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ID3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ID3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ID3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ID3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ID3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUS3ID3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUS3ID3

        Create a new object of the class itkMaskedImageToHistogramFilterVIUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUS3ID3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ID3_swigregister(itkMaskedImageToHistogramFilterVIUS3ID3)
itkMaskedImageToHistogramFilterVIUS3ID3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ID3___New_orig__
itkMaskedImageToHistogramFilterVIUS3ID3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ID3_cast


def itkMaskedImageToHistogramFilterVIUS3IF3_New():
    return itkMaskedImageToHistogramFilterVIUS3IF3.New()

class itkMaskedImageToHistogramFilterVIUS3IF3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IF3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IF3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IF3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IF3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IF3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IF3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUS3IF3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUS3IF3

        Create a new object of the class itkMaskedImageToHistogramFilterVIUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUS3IF3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IF3_swigregister(itkMaskedImageToHistogramFilterVIUS3IF3)
itkMaskedImageToHistogramFilterVIUS3IF3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IF3___New_orig__
itkMaskedImageToHistogramFilterVIUS3IF3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IF3_cast


def itkMaskedImageToHistogramFilterVIUS3ISS3_New():
    return itkMaskedImageToHistogramFilterVIUS3ISS3.New()

class itkMaskedImageToHistogramFilterVIUS3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ISS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ISS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ISS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ISS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ISS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUS3ISS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUS3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterVIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUS3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ISS3_swigregister(itkMaskedImageToHistogramFilterVIUS3ISS3)
itkMaskedImageToHistogramFilterVIUS3ISS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ISS3___New_orig__
itkMaskedImageToHistogramFilterVIUS3ISS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ISS3_cast


def itkMaskedImageToHistogramFilterVIUS3IUC3_New():
    return itkMaskedImageToHistogramFilterVIUS3IUC3.New()

class itkMaskedImageToHistogramFilterVIUS3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUC3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUC3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUC3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUC3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUC3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUS3IUC3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUS3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterVIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUS3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUC3_swigregister(itkMaskedImageToHistogramFilterVIUS3IUC3)
itkMaskedImageToHistogramFilterVIUS3IUC3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUC3___New_orig__
itkMaskedImageToHistogramFilterVIUS3IUC3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUC3_cast


def itkMaskedImageToHistogramFilterVIUS3IUS3_New():
    return itkMaskedImageToHistogramFilterVIUS3IUS3.New()

class itkMaskedImageToHistogramFilterVIUS3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3):
    r"""


    Generate a histogram from the masked pixels of an image.

    This class expands the features of the ImageToHistogramFilter by
    adding a required MaskImage input image. Only the pixel in the input
    image where the MaskImage's value is the MaskValue will be added to
    the computed histogram.

    {Numerics/Statistics/ComputeHistogramOfMaskedRegion,Compute Histogram
    Of Masked Region In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUS3_GetMaskImage)
    SetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUS3_SetMaskValueInput)
    SetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUS3_SetMaskValue)
    GetMaskValueInput = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUS3_GetMaskValueInput)
    GetMaskValue = _swig_new_instance_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUS3_GetMaskValue)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUS3IUS3
    cast = _swig_new_static_method(_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUS3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterVIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUS3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUS3_swigregister(itkMaskedImageToHistogramFilterVIUS3IUS3)
itkMaskedImageToHistogramFilterVIUS3IUS3___New_orig__ = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUS3___New_orig__
itkMaskedImageToHistogramFilterVIUS3IUS3_cast = _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def masked_image_to_histogram_filter(*args, **kwargs):
    """Procedural interface for MaskedImageToHistogramFilter"""
    import itk
    instance = itk.MaskedImageToHistogramFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def masked_image_to_histogram_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.MaskedImageToHistogramFilter, itkTemplate.itkTemplate):
        filter_object = itk.MaskedImageToHistogramFilter.values()[0]
    else:
        filter_object = itk.MaskedImageToHistogramFilter

    masked_image_to_histogram_filter.__doc__ = filter_object.__doc__
    masked_image_to_histogram_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    masked_image_to_histogram_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.MaskedImageToHistogramFilter, itkTemplate.itkTemplate):
        masked_image_to_histogram_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        masked_image_to_histogram_filter.__doc__ += "\n"
        masked_image_to_histogram_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        masked_image_to_histogram_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



