# -*- coding: utf-8 -*-

"""
_me_api
~~~~~~~~~~~~~~~~~~~

Autogenerated, do not edit
"""

from .helpers import request


def _acldata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/acldata.json", extra_params=extra_params)


def _aclnamelist(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/aclnamelist.json", extra_params=extra_params)


def _add_ap_group(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/add_ap_group.json", extra_params=extra_params)


def _add_mdns_profile(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/add_mdns_profile.json", extra_params=extra_params)


def _add_mdns_service(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/add_mdns_service.json", extra_params=extra_params)


def _addMeshEthrIntfVlan(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/addMeshEthrIntfVlan.json", extra_params=extra_params)


def _addMeshRadiusAuthentication(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/addMeshRadiusAuthentication.json", extra_params=extra_params)


def _addSubscription(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/addSubscription.json", extra_params=extra_params)


def _adminaccountcreate(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/adminaccountcreate.jsp", extra_params=extra_params)


def _adminaccountdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/adminaccountdata.json", extra_params=extra_params)


def _adminaccountdelete(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/adminaccountdelete.jsp", extra_params=extra_params)


def _adminaccountupdate(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/adminaccountupdate.jsp", extra_params=extra_params)


def _ap_attributes_slot0(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/ap-attributes-slot0.html", extra_params=extra_params)


def _ap_attributes_slot1(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/ap-attributes-slot1.html", extra_params=extra_params)


def _ap_chanwidth_distribution_slot0(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/ap_chanwidth_distribution_slot0.html", extra_params=extra_params)


def _ap_chanwidth_distribution_slot1(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/ap_chanwidth_distribution_slot1.html", extra_params=extra_params)


def _ap_product_id0(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/ap_product_id0.html", extra_params=extra_params)


def _ap_product_id1(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/ap_product_id1.html", extra_params=extra_params)


def _ap_slot0_chanutil_distrib(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/ap_slot0_chanutil_distrib.html", extra_params=extra_params)


def _ap_slot0_confrate_distrib(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/ap_slot0_confrate_distrib.html", extra_params=extra_params)


def _ap_slot1_chanutil_distrib(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/ap_slot1_chanutil_distrib.html", extra_params=extra_params)


def _ap_slot1_confrate_distrib(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/ap_slot1_confrate_distrib.html", extra_params=extra_params)


def _apdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/apdata.json", extra_params=extra_params)


def _apgroupdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/apgroupdata.json", extra_params=extra_params)


def _apJoinStats(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/apJoinStats.json", extra_params=extra_params)


def _applicationdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/applicationdata.json", extra_params=extra_params)


def _appruledata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/appruledata.json", extra_params=extra_params)


def _apps(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/apps.html", extra_params=extra_params)


def _aps(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/aps.html", extra_params=extra_params)


def _avc_profile_status(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/avc_profile_status.html", extra_params=extra_params)


def _avcList(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/avcList.json", extra_params=extra_params)


def _avcProfile(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/avcProfile.json", extra_params=extra_params)


def _avcProfileConf(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/avcProfileConf.json", extra_params=extra_params)


def _caleadataget(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/caleadataget.json", extra_params=extra_params)


def _caleadataset(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/caleadataset.json", extra_params=extra_params)


def _capwappost(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/capwappost.json", extra_params=extra_params)


def _cellularlistget(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/cellularlistget.json", extra_params=extra_params)


def _channelnumber(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/channelnumber.json", extra_params=extra_params)


def _client_conn_debug_data(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/client_conn_debug_data.html", extra_params=extra_params)


def _client_conn_debug_start(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/client_conn_debug_start.html", extra_params=extra_params)


def _client_conn_debug_status(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/client_conn_debug_status.html", extra_params=extra_params)


def _client_conn_debug_stop(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/client_conn_debug_stop.html", extra_params=extra_params)


def _client_connected_protocols(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/client_connected_protocols.html", extra_params=extra_params)


def _client_connection_score(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/client_connection_score.html", extra_params=extra_params)


def _client_connection_speed(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/client_connection_speed.html", extra_params=extra_params)


def _client_mac(me, method: str, _deviceIPv4Address=None, extra_params={}) -> dict:
    parameter1 = {"deviceIPv4Address": _deviceIPv4Address} if _deviceIPv4Address else {}
    return request(me, method, "/data/client_mac.html", parameter1, extra_params=extra_params)


def _client_proto_distribution(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/client_proto_distribution.html", extra_params=extra_params)


def _client_ss_distribution(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/client_ss_distribution.html", extra_params=extra_params)


def _client_table(me, method: str, _columns=None, extra_params={}) -> dict:
    parameter1 = {"columns": _columns} if _columns else {}
    return request(me, method, "/data/client-table.html", parameter1, extra_params=extra_params)


def _clientDetails(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/clientDetails.json", extra_params=extra_params)


def _clients(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/clients.html", extra_params=extra_params)


def _clrCounters(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/clrCounters.json", extra_params=extra_params)


def _cmxdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/cmxdata.json", extra_params=extra_params)


def _configpolldata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/configpolldata.json", extra_params=extra_params)


def _convertcapwap(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/convertcapwap.json", extra_params=extra_params)


def _convertme(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/convertme.json", extra_params=extra_params)


def _crashfiledata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/crashfiledata.json", extra_params=extra_params)


def _crashfilestatus(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/crashfilestatus.json", extra_params=extra_params)


def _createacl(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/createacl.json", extra_params=extra_params)


def _createRadiusAccounting(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/createRadiusAccounting.json", extra_params=extra_params)


def _createRadiusAuthentication(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/createRadiusAuthentication.json", extra_params=extra_params)


def _createTacAccounting(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/createTacAccounting.json", extra_params=extra_params)


def _createTacAuthentication(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/createTacAuthentication.json", extra_params=extra_params)


def _createTacAuthurization(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/createTacAuthurization.json", extra_params=extra_params)


def _createTLSRoute(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/createTLSRoute.json", extra_params=extra_params)


def _createVlanMapData(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/createVlanMapData.json", extra_params=extra_params)


def _createWlanRadiusAcct(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/createWlanRadiusAcct.json", extra_params=extra_params)


def _createWlanRadiusAuth(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/createWlanRadiusAuth.json", extra_params=extra_params)


def _dashboard_view_settings(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/dashboard_view_settings.html", extra_params=extra_params)


def _delete_ap_group(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/delete_ap_group.json", extra_params=extra_params)


def _delete_mdns_profile(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/delete_mdns_profile.json", extra_params=extra_params)


def _delete_mdns_service(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/delete_mdns_service.json", extra_params=extra_params)


def _delete_mdns_service_from_profile(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/delete_mdns_service_from_profile.json", extra_params=extra_params)


def _deleteacl(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/deleteacl.json", extra_params=extra_params)


def _deleteApPskUrl(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/deleteApPskUrl.json", extra_params=extra_params)


def _deleteauthsurviveclients(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/deleteauthsurviveclients.json", extra_params=extra_params)


def _deleteConfigParams(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/deleteConfigParams.json", extra_params=extra_params)


def _deletelogging(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/deletelogging.json", extra_params=extra_params)


def _deleteMeshRadiusAuthentication(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/deleteMeshRadiusAuthentication.json", extra_params=extra_params)


def _deleteopendnsprofile(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/deleteopendnsprofile.json", extra_params=extra_params)


def _deleteRadiusAccounting(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/deleteRadiusAccounting.json", extra_params=extra_params)


def _deleteRadiusAuthentication(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/deleteRadiusAuthentication.json", extra_params=extra_params)


def _deleteSubscription(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/deleteSubscription.json", extra_params=extra_params)


def _deleteTacAccounting(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/deleteTacAccounting.json", extra_params=extra_params)


def _deleteTacAuthentication(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/deleteTacAuthentication.json", extra_params=extra_params)


def _deleteTacAuthurization(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/deleteTacAuthurization.json", extra_params=extra_params)


def _deleteTLSRoute(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/deleteTLSRoute.json", extra_params=extra_params)


def _deleteVlanMapData(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/deleteVlanMapData.json", extra_params=extra_params)


def _delMeshEthrIntfVlan(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/delMeshEthrIntfVlan.json", extra_params=extra_params)


def _dhcpconfigdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/dhcpconfigdata.json", extra_params=extra_params)


def _dhcpcreate(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/dhcpcreate.jsp", extra_params=extra_params)


def _dhcpdelete(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/dhcpdelete.jsp", extra_params=extra_params)


def _dhcpdetails(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/dhcpdetails.json", extra_params=extra_params)


def _dhcpdetailsdelete(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/dhcpdetailsdelete.jsp", extra_params=extra_params)


def _dhcpdetailspost(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/dhcpdetailspost.jsp", extra_params=extra_params)


def _dhcpupdate(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/dhcpupdate.jsp", extra_params=extra_params)


def _dnsserverconfigureurl(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/dnsserverconfigureurl.json", extra_params=extra_params)


def _domainlistget(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/domainlistget.json", extra_params=extra_params)


def _dotllu_list_create(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/dotllu_list_create.json", extra_params=extra_params)


def _edit_ap_group(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/edit_ap_group.json", extra_params=extra_params)


def _export(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/export.json", extra_params=extra_params)


def _exportconfiguration(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/exportconfiguration.json", extra_params=extra_params)


def _exportfilemode(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/exportfilemode.json", extra_params=extra_params)


def _exportstatus(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/exportstatus.json", extra_params=extra_params)


def _fetchacldetails(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/fetchacldetails.json", extra_params=extra_params)


def _fetchglobalAuthdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/fetchglobalAuthdata.json", extra_params=extra_params)


def _fetchglobalparams(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/fetchglobalparams.json", extra_params=extra_params)


def _fetchMeshRadiusAuthenticationdetails(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/fetchMeshRadiusAuthenticationdetails.json", extra_params=extra_params)


def _fetchRadiusAccountingdetails(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/fetchRadiusAccountingdetails.json", extra_params=extra_params)


def _fetchRadiusAuthenticationdetails(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/fetchRadiusAuthenticationdetails.json", extra_params=extra_params)


def _fetchTacAccountingdetails(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/fetchTacAccountingdetails.json", extra_params=extra_params)


def _fetchTacAuthenticationdetails(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/fetchTacAuthenticationdetails.json", extra_params=extra_params)


def _fetchTacAuthorizationdetails(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/fetchTacAuthorizationdetails.json", extra_params=extra_params)


def _fetchUmbrellawlandata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/fetchUmbrellawlandata.json", extra_params=extra_params)


def _fetchVlanMapData(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/fetchVlanMapData.json", extra_params=extra_params)


def _fetchWlanRadiusAcctDetails(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/fetchWlanRadiusAcctDetails.json", extra_params=extra_params)


def _fetchWlanRadiusAuthDetails(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/fetchWlanRadiusAuthDetails.json", extra_params=extra_params)


def _get_ap_group_details(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/get_ap_group_details.json", extra_params=extra_params)


def _get_mdns_global_settings(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/get_mdns_global_settings.json", extra_params=extra_params)


def _get_mdns_profile_details(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/get_mdns_profile_details.json", extra_params=extra_params)


def _get_mdns_profiles_list(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/get_mdns_profiles_list.json", extra_params=extra_params)


def _get_mdns_profiles_summary_list(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/get_mdns_profiles_summary_list.json", extra_params=extra_params)


def _get_mdns_service_details(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/get_mdns_service_details.json", extra_params=extra_params)


def _get_mdns_service_list(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/get_mdns_service_list.json", extra_params=extra_params)


def _get_umbrella_profile(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/get_umbrella_profile.json", extra_params=extra_params)


def _get_wlan_preauth_acl_details(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/get_wlan_preauth_acl_details.json", extra_params=extra_params)


def _getAuthcallMacdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/getAuthcallMacdata.json", extra_params=extra_params)


def _getauthsurviveclientdetails(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/getauthsurviveclientdetails.json", extra_params=extra_params)


def _getauthsurviveclientlist(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/getauthsurviveclientlist.json", extra_params=extra_params)


def _getConfigParams(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/getConfigParams.json", extra_params=extra_params)


def _getdnsserverip(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/getdnsserverip.json", extra_params=extra_params)


def _getFCSubscription(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/getFCSubscription.json", extra_params=extra_params)


def _getmc2ucdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/getmc2ucdata.json", extra_params=extra_params)


def _getmc2ucrrcdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/getmc2ucrrcdata.json", extra_params=extra_params)


def _getMeshEthrInterfaces(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/getMeshEthrInterfaces.json", extra_params=extra_params)


def _getMeshEthrIntfVlan(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/getMeshEthrIntfVlan.json", extra_params=extra_params)


def _getserverpriority(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/getserverpriority.json", extra_params=extra_params)


def _getSubscription(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/getSubscription.json", extra_params=extra_params)


def _getTLSRoute(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/getTLSRoute.json", extra_params=extra_params)


def _getTLSSecureTunnel(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/getTLSSecureTunnel.json", extra_params=extra_params)


def _getumbrella(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/getumbrella.json", extra_params=extra_params)


def _getWebhookSubscription(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/getWebhookSubscription.json", extra_params=extra_params)


def _globalAuthdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/globalAuthdata.json", extra_params=extra_params)


def _globalInterval(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/globalInterval.json", extra_params=extra_params)


def _globalOnChangeMode(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/globalOnChangeMode.json", extra_params=extra_params)


def _guestwlandata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/guestwlandata.json", extra_params=extra_params)


def _httpproxyget(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/httpproxyget.json", extra_params=extra_params)


def _httpproxypost(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/httpproxypost.json", extra_params=extra_params)


def _icapGetApRfSpectrumData(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/icapGetApRfSpectrumData.json", extra_params=extra_params)


def _icapGetApSubList(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/icapGetApSubList.json", extra_params=extra_params)


def _icapGetClientSubList(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/icapGetClientSubList.json", extra_params=extra_params)


def _icapGetGlobalConfig(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/icapGetGlobalConfig.json", extra_params=extra_params)


def _icapGetMacData(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/icapGetMacData.json", extra_params=extra_params)


def _icapGetPtlFilterList(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/icapGetPtlFilterList.json", extra_params=extra_params)


def _icapSetGlobalConfig(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/icapSetGlobalConfig.json", extra_params=extra_params)


def _icapUpdateApSub(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/icapUpdateApSub.json", extra_params=extra_params)


def _icapUpdateClientSub(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/icapUpdateClientSub.json", extra_params=extra_params)


def _importconfiguration(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/importconfiguration.json", extra_params=extra_params)


def _interferer_table_settings(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/interferer_table_settings.html", extra_params=extra_params)


def _interferers(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/interferers.json", extra_params=extra_params)


def _ipv6acldata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/ipv6acldata.json", extra_params=extra_params)


def _loggingdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/loggingdata.json", extra_params=extra_params)


def _macfiltercreate(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/macfiltercreate.json", extra_params=extra_params)


def _macfilterdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/macfilterdata.json", extra_params=extra_params)


def _macfilterdelete(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/macfilterdelete.json", extra_params=extra_params)


def _macfilterexport(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/macfilterexport.json", extra_params=extra_params)


def _macfilterfail(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/macfilterfail.json", extra_params=extra_params)


def _macfilterupdate(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/macfilterupdate.json", extra_params=extra_params)


def _macfilterwlanprofiles(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/macfilterwlanprofiles.json", extra_params=extra_params)


def _makeme(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/makeme.json", extra_params=extra_params)


def _maxratelimit(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/maxratelimit.json", extra_params=extra_params)


def _mc2ucclients(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/mc2ucclients.json", extra_params=extra_params)


def _mc2uccreate(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/mc2uccreate.json", extra_params=extra_params)


def _mc2ucdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/mc2ucdata.json", extra_params=extra_params)


def _mc2ucdelete(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/mc2ucdelete.json", extra_params=extra_params)


def _mc2ucupdate(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/mc2ucupdate.json", extra_params=extra_params)


def _mdnsBrowserAddService(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/mdnsBrowserAddService.json", extra_params=extra_params)


def _mdnsBrowserList(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/mdnsBrowserList.json", extra_params=extra_params)


def _mdnsCreatePolicy(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/mdnsCreatePolicy.json", extra_params=extra_params)


def _mdnsDeletePolicy(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/mdnsDeletePolicy.json", extra_params=extra_params)


def _mdnsDomainNamesList(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/mdnsDomainNamesList.json", extra_params=extra_params)


def _mdnsPolicyList(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/mdnsPolicyList.json", extra_params=extra_params)


def _mdnsPolicyServiceInstanceList(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/mdnsPolicyServiceInstanceList.json", extra_params=extra_params)


def _mdnsServiceArray(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/mdnsServiceArray.json", extra_params=extra_params)


def _mdnsUpdatePolicy(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/mdnsUpdatePolicy.json", extra_params=extra_params)


def _meshConvergence(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/meshConvergence.json", extra_params=extra_params)


def _meshEthrBridging(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/meshEthrBridging.json", extra_params=extra_params)


def _meshGeneral(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/meshGeneral.json", extra_params=extra_params)


def _meshRapBackhaul(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/meshRapBackhaul.json", extra_params=extra_params)


def _meshSecurity(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/meshSecurity.json", extra_params=extra_params)


def _mgmtdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/mgmtdata.json", extra_params=extra_params)


def _ntpdeletedata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/ntpdeletedata.json", extra_params=extra_params)


def _ntpfetchserverdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/ntpfetchserverdata.json", extra_params=extra_params)


def _ntpserverdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/ntpserverdata.json", extra_params=extra_params)


def _operatordataget(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/operatordataget.json", extra_params=extra_params)


def _oss(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/oss.html", extra_params=extra_params)


def _osudataget(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/osudataget.json", extra_params=extra_params)


def _ouilistget(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/ouilistget.json", extra_params=extra_params)


def _pingtest(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/pingtest.json", extra_params=extra_params)


def _portdataget(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/portdataget.json", extra_params=extra_params)


def _postaclselected(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/postaclselected.json", extra_params=extra_params)


def _postumbrella(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/postumbrella.json", extra_params=extra_params)


def _provision_list_delete(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/provision_list_delete.json", extra_params=extra_params)


def _provisioncreate(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/provisioncreate.json", extra_params=extra_params)


def _provisiondataget(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/provisiondataget.json", extra_params=extra_params)


def _provisionlistdel(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/provisionlistdel.json", extra_params=extra_params)


def _provisionupdate(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/provisionupdate.json", extra_params=extra_params)


def _radiusauth(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/radiusauth.json", extra_params=extra_params)


def _radiusdatapost(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/radiusdatapost.json", extra_params=extra_params)


def _radiuspost(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/radiuspost.json", extra_params=extra_params)


def _realmlistget(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/realmlistget.json", extra_params=extra_params)


def _refreshumbrella(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/refreshumbrella.json", extra_params=extra_params)


def _removecrashfiledata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/removecrashfiledata.json", extra_params=extra_params)


def _resetfactorydata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/resetfactorydata.json", extra_params=extra_params)


def _resetSubscriptions(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/resetSubscriptions.json", extra_params=extra_params)


def _rf_ap_perf_settings(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rf_ap_perf_settings.html", extra_params=extra_params)


def _rf_ap_table_settings(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rf_ap_table_settings.html", extra_params=extra_params)


def _rf_client_perf_settings(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rf_client_perf_settings.html", extra_params=extra_params)


def _rf_client_table_settings(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rf_client_table_settings.html", extra_params=extra_params)


def _rf_wireless_db_settings(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rf_wireless_db_settings.html", extra_params=extra_params)


def _rfchannel(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/rfchannel.json", extra_params=extra_params)


def _rfdashboard_apview_clientdist_by_datarate_24ghz(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/apview_clientdist_by_datarate_24ghz.html", extra_params=extra_params)


def _rfdashboard_apview_clientdist_by_datarate_5ghz(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/apview_clientdist_by_datarate_5ghz.html", extra_params=extra_params)


def _rfdashboard_apview_clientsdetails(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/apview_clientsdetails.html", extra_params=extra_params)


def _rfdashboard_apview_general(me, method: str, _deviceMacAddress=None, extra_params={}) -> dict:
    parameter1 = {"deviceMacAddress": _deviceMacAddress} if _deviceMacAddress else {}
    return request(me, method, "/data/rfdashboard/apview_general.html", parameter1, extra_params=extra_params)


def _rfdashboard_apview_interferers_24ghz(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/apview_interferers_24ghz.html", extra_params=extra_params)


def _rfdashboard_apview_interferers_5ghz(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/apview_interferers_5ghz.html", extra_params=extra_params)


def _rfdashboard_apview_neighbors_clients_24ghz(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/apview_neighbors_clients_24ghz.html", extra_params=extra_params)


def _rfdashboard_apview_neighbors_clients_5ghz(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/apview_neighbors_clients_5ghz.html", extra_params=extra_params)


def _rfdashboard_apview_neighbors_rogues_24ghz(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/apview_neighbors_rogues_24ghz.html", extra_params=extra_params)


def _rfdashboard_apview_neighbors_rogues_5ghz(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/apview_neighbors_rogues_5ghz.html", extra_params=extra_params)


def _rfdashboard_apview_performance_list(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/apview_performance_list.html", extra_params=extra_params)


def _rfdashboard_client_deauth_data(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/client_deauth_data.html", extra_params=extra_params)


def _rfdashboard_client_debug_start(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/client_debug_start.html", extra_params=extra_params)


def _rfdashboard_client_debug_status(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/client_debug_status.html", extra_params=extra_params)


def _rfdashboard_client_debug_stop(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/client_debug_stop.html", extra_params=extra_params)


def _rfdashboard_clientperformance_clienttable(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/clientperformance_clienttable.html", extra_params=extra_params)


def _rfdashboard_clientview_802_11_connectivity(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/clientview_802_11_connectivity.html", extra_params=extra_params)


def _rfdashboard_clientview_details(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/clientview_details.html", extra_params=extra_params)


def _rfdashboard_clientview_details_network(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/clientview_details_network.html", extra_params=extra_params)


def _rfdashboard_clientview_details_qos(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/clientview_details_qos.html", extra_params=extra_params)


def _rfdashboard_clientview_details_security(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/clientview_details_security.html", extra_params=extra_params)


def _rfdashboard_clientview_mobility_data(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/clientview_mobility_data.html", extra_params=extra_params)


def _rfdashboard_clientview_pingtest(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/clientview_pingtest.html", extra_params=extra_params)


def _rfdashboard_clientview_topapps(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/clientview_topapps.html", extra_params=extra_params)


def _rfdashboard_eventlog(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/eventlog.html", extra_params=extra_params)


def _rfdashboard_packetcapture_details(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/packetcapture_details.html", extra_params=extra_params)


def _rfdashboard_signalstrength_clientdetails(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/signalstrength_clientdetails.html", extra_params=extra_params)


def _rfdashboard_signalstrength_data(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rfdashboard/signalstrength_data.html", extra_params=extra_params)


def _rfo(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/rfo.json", extra_params=extra_params)


def _rfprofileadd(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/rfprofileadd.json", extra_params=extra_params)


def _rfprofiledelete(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/rfprofiledelete.json", extra_params=extra_params)


def _rfprofilesapdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/rfprofilesapdata.json", extra_params=extra_params)


def _rfprofilesfetch(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/rfprofilesfetch.json", extra_params=extra_params)


def _rfprofileupdate(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/rfprofileupdate.json", extra_params=extra_params)


def _RogApDetect(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/RogApDetect.json", extra_params=extra_params)


def _RogApList(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/RogApList.json", extra_params=extra_params)


def _RogClApDetect(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/RogClApDetect.json", extra_params=extra_params)


def _RogClAsso(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/RogClAsso.json", extra_params=extra_params)


def _RogClList(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/RogClList.json", extra_params=extra_params)


def _rogue_ap_table_settings(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/rogue_ap_table_settings.html", extra_params=extra_params)


def _rogueAp(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/rogueAp.json", extra_params=extra_params)


def _rogueApConf(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/rogueApConf.json", extra_params=extra_params)


def _rogueCl(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/rogueCl.json", extra_params=extra_params)


def _rrm(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/rrm.json", extra_params=extra_params)


def _saveconfig(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/saveconfig.json", extra_params=extra_params)


def _searchresults(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/searchresults.html", extra_params=extra_params)


def _serverpriority(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/serverpriority.json", extra_params=extra_params)


def _set_mdns_global_settings(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/set_mdns_global_settings.json", extra_params=extra_params)


def _set_wlan_preauth_acl_details(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/set_wlan_preauth_acl_details.json", extra_params=extra_params)


def _setConfigParams(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/setConfigParams.json", extra_params=extra_params)


def _setSoftwareUpdate(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/setSoftwareUpdate.json", extra_params=extra_params)


def _snmpdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/snmpdata.json", extra_params=extra_params)


def _snmpdelete(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/snmpdelete.json", extra_params=extra_params)


def _spartan_apImageStatus(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/spartan/apImageStatus.json", extra_params=extra_params)


def _spartan_apTool(me, method: str, extra_params={}, json={}, data={}) -> dict:
    return request(me, method, "/screens/webui/resource/spartan/apTool.json", extra_params=extra_params, json=json, data=data)


def _startServer(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/startServer.json", extra_params=extra_params)


def _supported_country_code(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/supported_country_code.html", extra_params=extra_params)


def _swabortdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/swabortdata.json", extra_params=extra_params)


def _swccochecknow(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/swccochecknow.json", extra_params=extra_params)


def _swccochecknowget(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/swccochecknowget.json", extra_params=extra_params)


def _swccodata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/swccodata.json", extra_params=extra_params)


def _swccopolldata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/swccopolldata.json", extra_params=extra_params)


def _swccosave(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/swccosave.json", extra_params=extra_params)


def _swcreddata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/swcreddata.json", extra_params=extra_params)


def _swgetrestartdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/swgetrestartdata.json", extra_params=extra_params)


def _swrel_laturl(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/swrel_laturl.json", extra_params=extra_params)


def _swrel_recurl(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/swrel_recurl.json", extra_params=extra_params)


def _swrestartdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/swrestartdata.json", extra_params=extra_params)


def _swsavedata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/swsavedata.json", extra_params=extra_params)


def _swtroubldata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/swtroubldata.json", extra_params=extra_params)


def _swupdatedata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/swupdatedata.json", extra_params=extra_params)


def _swupdatestatusdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/swupdatestatusdata.json", extra_params=extra_params)


def _syslogdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/syslogdata.json", extra_params=extra_params)


def _system1(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/system1.html", extra_params=extra_params)


def _system_information(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/system_information.html", extra_params=extra_params)


def _timedata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/timedata.json", extra_params=extra_params)


def _tlstunneldata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/tlstunneldata.json", extra_params=extra_params)


def _tlstunnelpostdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/tlstunnelpostdata.json", extra_params=extra_params)


def _top10_ap_clients(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/top10_ap_clients.html", extra_params=extra_params)


def _top10_ap_slot0_chanutil_overhead(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/top10_ap_slot0_chanutil_overhead.html", extra_params=extra_params)


def _top10_ap_slot0_chd(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/top10_ap_slot0_chd.html", extra_params=extra_params)


def _top10_ap_slot0_interference(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/top10_ap_slot0_interference.html", extra_params=extra_params)


def _top10_ap_slot1_chanutil_overhead(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/top10_ap_slot1_chanutil_overhead.html", extra_params=extra_params)


def _top10_ap_slot1_chd(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/top10_ap_slot1_chd.html", extra_params=extra_params)


def _top10_ap_slot1_interference(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/top10_ap_slot1_interference.html", extra_params=extra_params)


def _trapdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/trapdata.json", extra_params=extra_params)


def _trapdeletedata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/trapdeletedata.json", extra_params=extra_params)


def _trapupdatedata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/trapupdatedata.json", extra_params=extra_params)


def _umbrellawlandata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/umbrellawlandata.json", extra_params=extra_params)


def _updateMeshEthrInterfaces(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/updateMeshEthrInterfaces.json", extra_params=extra_params)


def _updateRadiusAccounting(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/updateRadiusAccounting.json", extra_params=extra_params)


def _updateRadiusAuthentication(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/updateRadiusAuthentication.json", extra_params=extra_params)


def _updatestatusdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/updatestatusdata.json", extra_params=extra_params)


def _updateTacAccounting(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/updateTacAccounting.json", extra_params=extra_params)


def _updateTacAuthentication(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/updateTacAuthentication.json", extra_params=extra_params)


def _updateTacAuthurization(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/updateTacAuthurization.json", extra_params=extra_params)


def _updateVlanMapData(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/updateVlanMapData.json", extra_params=extra_params)


def _uploadfileget(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/uploadfileget.json", extra_params=extra_params)


def _uploadfilePost(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/uploadfilePost.json", extra_params=extra_params)


def _uploadStatus(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/uploadStatus.json", extra_params=extra_params)


def _v3deletedata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/v3deletedata.json", extra_params=extra_params)


def _v3userdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/v3userdata.json", extra_params=extra_params)


def _validationdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/validationdata.json", extra_params=extra_params)


def _venuegriddata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/venuegriddata.json", extra_params=extra_params)


def _venuegriddelete(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/venuegriddelete.json", extra_params=extra_params)


def _vlantagdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/vlantagdata.json", extra_params=extra_params)


def _webhookServer(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/webhookServer.json", extra_params=extra_params)


def _wlancreate(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/wlancreate.jsp", extra_params=extra_params)


def _wlandata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/wlandata.json", extra_params=extra_params)


def _wlandelete(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/wlandelete.jsp", extra_params=extra_params)


def _wlanprofiledata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/wlanprofiledata.json", extra_params=extra_params)


def _wlans(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/data/wlans.html", extra_params=extra_params)


def _wlanuserscreate(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/wlanuserscreate.jsp", extra_params=extra_params)


def _wlanusersdata(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/wlanusersdata.json", extra_params=extra_params)


def _wlanusersdelete(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/wlanusersdelete.jsp", extra_params=extra_params)


def _wlanusersupdate(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/wlanusersupdate.jsp", extra_params=extra_params)


def _wsaCounters(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/wsaCounters.json", extra_params=extra_params)


def _wsaSensor(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/wsaSensor.json", extra_params=extra_params)


def _wsaServer(me, method: str, extra_params={}) -> dict:
    return request(me, method, "/screens/webui/resource/wsaServer.json", extra_params=extra_params)


