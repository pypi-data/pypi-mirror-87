# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKMathematicalMorphologyPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkGrayscaleFunctionErodeImageFilterPython
else:
    import _itkGrayscaleFunctionErodeImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkGrayscaleFunctionErodeImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkGrayscaleFunctionErodeImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkFlatStructuringElementPython
import itk.itkBoxImageFilterPython
import itk.itkSizePython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.stdcomplexPython
import itk.itkImagePython
import itk.itkOffsetPython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkNeighborhoodPython
import itk.itkImageBoundaryConditionPython
class itkGrayscaleFunctionErodeImageFilterID2ID2SE2_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterID2ID2SE2):
    r"""Proxy of C++ itkGrayscaleFunctionErodeImageFilterID2ID2SE2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    OverrideBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID2ID2SE2_Superclass_OverrideBoundaryCondition)
    ResetBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID2ID2SE2_Superclass_ResetBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID2ID2SE2_Superclass_GetBoundaryCondition)
    __swig_destroy__ = _itkGrayscaleFunctionErodeImageFilterPython.delete_itkGrayscaleFunctionErodeImageFilterID2ID2SE2_Superclass
    cast = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID2ID2SE2_Superclass_cast)

# Register itkGrayscaleFunctionErodeImageFilterID2ID2SE2_Superclass in _itkGrayscaleFunctionErodeImageFilterPython:
_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID2ID2SE2_Superclass_swigregister(itkGrayscaleFunctionErodeImageFilterID2ID2SE2_Superclass)
itkGrayscaleFunctionErodeImageFilterID2ID2SE2_Superclass_cast = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID2ID2SE2_Superclass_cast

class itkGrayscaleFunctionErodeImageFilterID3ID3SE3_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterID3ID3SE3):
    r"""Proxy of C++ itkGrayscaleFunctionErodeImageFilterID3ID3SE3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    OverrideBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID3ID3SE3_Superclass_OverrideBoundaryCondition)
    ResetBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID3ID3SE3_Superclass_ResetBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID3ID3SE3_Superclass_GetBoundaryCondition)
    __swig_destroy__ = _itkGrayscaleFunctionErodeImageFilterPython.delete_itkGrayscaleFunctionErodeImageFilterID3ID3SE3_Superclass
    cast = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID3ID3SE3_Superclass_cast)

# Register itkGrayscaleFunctionErodeImageFilterID3ID3SE3_Superclass in _itkGrayscaleFunctionErodeImageFilterPython:
_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID3ID3SE3_Superclass_swigregister(itkGrayscaleFunctionErodeImageFilterID3ID3SE3_Superclass)
itkGrayscaleFunctionErodeImageFilterID3ID3SE3_Superclass_cast = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID3ID3SE3_Superclass_cast

class itkGrayscaleFunctionErodeImageFilterIF2IF2SE2_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF2IF2SE2):
    r"""Proxy of C++ itkGrayscaleFunctionErodeImageFilterIF2IF2SE2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    OverrideBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF2IF2SE2_Superclass_OverrideBoundaryCondition)
    ResetBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF2IF2SE2_Superclass_ResetBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF2IF2SE2_Superclass_GetBoundaryCondition)
    __swig_destroy__ = _itkGrayscaleFunctionErodeImageFilterPython.delete_itkGrayscaleFunctionErodeImageFilterIF2IF2SE2_Superclass
    cast = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF2IF2SE2_Superclass_cast)

# Register itkGrayscaleFunctionErodeImageFilterIF2IF2SE2_Superclass in _itkGrayscaleFunctionErodeImageFilterPython:
_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF2IF2SE2_Superclass_swigregister(itkGrayscaleFunctionErodeImageFilterIF2IF2SE2_Superclass)
itkGrayscaleFunctionErodeImageFilterIF2IF2SE2_Superclass_cast = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF2IF2SE2_Superclass_cast

class itkGrayscaleFunctionErodeImageFilterIF3IF3SE3_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF3IF3SE3):
    r"""Proxy of C++ itkGrayscaleFunctionErodeImageFilterIF3IF3SE3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    OverrideBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF3IF3SE3_Superclass_OverrideBoundaryCondition)
    ResetBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF3IF3SE3_Superclass_ResetBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF3IF3SE3_Superclass_GetBoundaryCondition)
    __swig_destroy__ = _itkGrayscaleFunctionErodeImageFilterPython.delete_itkGrayscaleFunctionErodeImageFilterIF3IF3SE3_Superclass
    cast = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF3IF3SE3_Superclass_cast)

# Register itkGrayscaleFunctionErodeImageFilterIF3IF3SE3_Superclass in _itkGrayscaleFunctionErodeImageFilterPython:
_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF3IF3SE3_Superclass_swigregister(itkGrayscaleFunctionErodeImageFilterIF3IF3SE3_Superclass)
itkGrayscaleFunctionErodeImageFilterIF3IF3SE3_Superclass_cast = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF3IF3SE3_Superclass_cast

class itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS2ISS2SE2):
    r"""Proxy of C++ itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    OverrideBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2_Superclass_OverrideBoundaryCondition)
    ResetBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2_Superclass_ResetBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2_Superclass_GetBoundaryCondition)
    __swig_destroy__ = _itkGrayscaleFunctionErodeImageFilterPython.delete_itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2_Superclass
    cast = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2_Superclass_cast)

# Register itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2_Superclass in _itkGrayscaleFunctionErodeImageFilterPython:
_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2_Superclass_swigregister(itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2_Superclass)
itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2_Superclass_cast = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2_Superclass_cast

class itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS3ISS3SE3):
    r"""Proxy of C++ itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    OverrideBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3_Superclass_OverrideBoundaryCondition)
    ResetBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3_Superclass_ResetBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3_Superclass_GetBoundaryCondition)
    __swig_destroy__ = _itkGrayscaleFunctionErodeImageFilterPython.delete_itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3_Superclass
    cast = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3_Superclass_cast)

# Register itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3_Superclass in _itkGrayscaleFunctionErodeImageFilterPython:
_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3_Superclass_swigregister(itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3_Superclass)
itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3_Superclass_cast = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3_Superclass_cast

class itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC2IUC2SE2):
    r"""Proxy of C++ itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    OverrideBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2_Superclass_OverrideBoundaryCondition)
    ResetBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2_Superclass_ResetBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2_Superclass_GetBoundaryCondition)
    __swig_destroy__ = _itkGrayscaleFunctionErodeImageFilterPython.delete_itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2_Superclass
    cast = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2_Superclass_cast)

# Register itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2_Superclass in _itkGrayscaleFunctionErodeImageFilterPython:
_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2_Superclass_swigregister(itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2_Superclass)
itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2_Superclass_cast = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2_Superclass_cast

class itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC3IUC3SE3):
    r"""Proxy of C++ itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    OverrideBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3_Superclass_OverrideBoundaryCondition)
    ResetBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3_Superclass_ResetBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3_Superclass_GetBoundaryCondition)
    __swig_destroy__ = _itkGrayscaleFunctionErodeImageFilterPython.delete_itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3_Superclass
    cast = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3_Superclass_cast)

# Register itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3_Superclass in _itkGrayscaleFunctionErodeImageFilterPython:
_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3_Superclass_swigregister(itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3_Superclass)
itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3_Superclass_cast = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3_Superclass_cast

class itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS2IUS2SE2):
    r"""Proxy of C++ itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    OverrideBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2_Superclass_OverrideBoundaryCondition)
    ResetBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2_Superclass_ResetBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2_Superclass_GetBoundaryCondition)
    __swig_destroy__ = _itkGrayscaleFunctionErodeImageFilterPython.delete_itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2_Superclass
    cast = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2_Superclass_cast)

# Register itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2_Superclass in _itkGrayscaleFunctionErodeImageFilterPython:
_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2_Superclass_swigregister(itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2_Superclass)
itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2_Superclass_cast = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2_Superclass_cast

class itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS3IUS3SE3):
    r"""Proxy of C++ itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    OverrideBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3_Superclass_OverrideBoundaryCondition)
    ResetBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3_Superclass_ResetBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3_Superclass_GetBoundaryCondition)
    __swig_destroy__ = _itkGrayscaleFunctionErodeImageFilterPython.delete_itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3_Superclass
    cast = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3_Superclass_cast)

# Register itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3_Superclass in _itkGrayscaleFunctionErodeImageFilterPython:
_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3_Superclass_swigregister(itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3_Superclass)
itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3_Superclass_cast = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3_Superclass_cast


def itkGrayscaleFunctionErodeImageFilterID2ID2SE2_New():
    return itkGrayscaleFunctionErodeImageFilterID2ID2SE2.New()

class itkGrayscaleFunctionErodeImageFilterID2ID2SE2(itkGrayscaleFunctionErodeImageFilterID2ID2SE2_Superclass):
    r"""


    gray scale function erosion of an image

    Erode an image using functional grayscale morphology. Function erosion
    takes the minimum of all the pixels identified by the structuring
    element minus the structuring element value.

    The structuring element can be composed of arbitrary nonnegative
    values (not restricted to zero or one). Element values greater than
    zero indicate pixels that will be considered during the dilation. The
    function erosion operation is defined as the minimum over the elements
    of the image value MINUS the structuring element value.

    For the each input image pixel, NeighborhoodIterator gives neighbors
    of the pixel.

    Evaluate() member function returns the minimum value among the image
    neighbors minus the kernel value where the kernel has elements > 0.

    Replace the original value with the min value

    See:  MorphologyImageFilter, GrayscaleFunctionErodeImageFilter,
    BinaryErodeImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID2ID2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID2ID2SE2_Clone)
    SameDimensionCheck1 = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID2ID2SE2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID2ID2SE2_SameDimensionCheck2
    
    InputConvertibleToOutputCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID2ID2SE2_InputConvertibleToOutputCheck
    
    KernelConvertibleToInputCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID2ID2SE2_KernelConvertibleToInputCheck
    
    InputAdditiveOperatorsCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID2ID2SE2_InputAdditiveOperatorsCheck
    
    InputLessThanComparableCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID2ID2SE2_InputLessThanComparableCheck
    
    KernelGreaterThanComparableCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID2ID2SE2_KernelGreaterThanComparableCheck
    
    __swig_destroy__ = _itkGrayscaleFunctionErodeImageFilterPython.delete_itkGrayscaleFunctionErodeImageFilterID2ID2SE2
    cast = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID2ID2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleFunctionErodeImageFilterID2ID2SE2

        Create a new object of the class itkGrayscaleFunctionErodeImageFilterID2ID2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleFunctionErodeImageFilterID2ID2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleFunctionErodeImageFilterID2ID2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleFunctionErodeImageFilterID2ID2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleFunctionErodeImageFilterID2ID2SE2 in _itkGrayscaleFunctionErodeImageFilterPython:
_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID2ID2SE2_swigregister(itkGrayscaleFunctionErodeImageFilterID2ID2SE2)
itkGrayscaleFunctionErodeImageFilterID2ID2SE2___New_orig__ = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID2ID2SE2___New_orig__
itkGrayscaleFunctionErodeImageFilterID2ID2SE2_cast = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID2ID2SE2_cast


def itkGrayscaleFunctionErodeImageFilterID3ID3SE3_New():
    return itkGrayscaleFunctionErodeImageFilterID3ID3SE3.New()

class itkGrayscaleFunctionErodeImageFilterID3ID3SE3(itkGrayscaleFunctionErodeImageFilterID3ID3SE3_Superclass):
    r"""


    gray scale function erosion of an image

    Erode an image using functional grayscale morphology. Function erosion
    takes the minimum of all the pixels identified by the structuring
    element minus the structuring element value.

    The structuring element can be composed of arbitrary nonnegative
    values (not restricted to zero or one). Element values greater than
    zero indicate pixels that will be considered during the dilation. The
    function erosion operation is defined as the minimum over the elements
    of the image value MINUS the structuring element value.

    For the each input image pixel, NeighborhoodIterator gives neighbors
    of the pixel.

    Evaluate() member function returns the minimum value among the image
    neighbors minus the kernel value where the kernel has elements > 0.

    Replace the original value with the min value

    See:  MorphologyImageFilter, GrayscaleFunctionErodeImageFilter,
    BinaryErodeImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID3ID3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID3ID3SE3_Clone)
    SameDimensionCheck1 = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID3ID3SE3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID3ID3SE3_SameDimensionCheck2
    
    InputConvertibleToOutputCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID3ID3SE3_InputConvertibleToOutputCheck
    
    KernelConvertibleToInputCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID3ID3SE3_KernelConvertibleToInputCheck
    
    InputAdditiveOperatorsCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID3ID3SE3_InputAdditiveOperatorsCheck
    
    InputLessThanComparableCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID3ID3SE3_InputLessThanComparableCheck
    
    KernelGreaterThanComparableCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID3ID3SE3_KernelGreaterThanComparableCheck
    
    __swig_destroy__ = _itkGrayscaleFunctionErodeImageFilterPython.delete_itkGrayscaleFunctionErodeImageFilterID3ID3SE3
    cast = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID3ID3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleFunctionErodeImageFilterID3ID3SE3

        Create a new object of the class itkGrayscaleFunctionErodeImageFilterID3ID3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleFunctionErodeImageFilterID3ID3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleFunctionErodeImageFilterID3ID3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleFunctionErodeImageFilterID3ID3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleFunctionErodeImageFilterID3ID3SE3 in _itkGrayscaleFunctionErodeImageFilterPython:
_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID3ID3SE3_swigregister(itkGrayscaleFunctionErodeImageFilterID3ID3SE3)
itkGrayscaleFunctionErodeImageFilterID3ID3SE3___New_orig__ = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID3ID3SE3___New_orig__
itkGrayscaleFunctionErodeImageFilterID3ID3SE3_cast = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterID3ID3SE3_cast


def itkGrayscaleFunctionErodeImageFilterIF2IF2SE2_New():
    return itkGrayscaleFunctionErodeImageFilterIF2IF2SE2.New()

class itkGrayscaleFunctionErodeImageFilterIF2IF2SE2(itkGrayscaleFunctionErodeImageFilterIF2IF2SE2_Superclass):
    r"""


    gray scale function erosion of an image

    Erode an image using functional grayscale morphology. Function erosion
    takes the minimum of all the pixels identified by the structuring
    element minus the structuring element value.

    The structuring element can be composed of arbitrary nonnegative
    values (not restricted to zero or one). Element values greater than
    zero indicate pixels that will be considered during the dilation. The
    function erosion operation is defined as the minimum over the elements
    of the image value MINUS the structuring element value.

    For the each input image pixel, NeighborhoodIterator gives neighbors
    of the pixel.

    Evaluate() member function returns the minimum value among the image
    neighbors minus the kernel value where the kernel has elements > 0.

    Replace the original value with the min value

    See:  MorphologyImageFilter, GrayscaleFunctionErodeImageFilter,
    BinaryErodeImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF2IF2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF2IF2SE2_Clone)
    SameDimensionCheck1 = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF2IF2SE2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF2IF2SE2_SameDimensionCheck2
    
    InputConvertibleToOutputCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF2IF2SE2_InputConvertibleToOutputCheck
    
    KernelConvertibleToInputCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF2IF2SE2_KernelConvertibleToInputCheck
    
    InputAdditiveOperatorsCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF2IF2SE2_InputAdditiveOperatorsCheck
    
    InputLessThanComparableCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF2IF2SE2_InputLessThanComparableCheck
    
    KernelGreaterThanComparableCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF2IF2SE2_KernelGreaterThanComparableCheck
    
    __swig_destroy__ = _itkGrayscaleFunctionErodeImageFilterPython.delete_itkGrayscaleFunctionErodeImageFilterIF2IF2SE2
    cast = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF2IF2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleFunctionErodeImageFilterIF2IF2SE2

        Create a new object of the class itkGrayscaleFunctionErodeImageFilterIF2IF2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleFunctionErodeImageFilterIF2IF2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleFunctionErodeImageFilterIF2IF2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleFunctionErodeImageFilterIF2IF2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleFunctionErodeImageFilterIF2IF2SE2 in _itkGrayscaleFunctionErodeImageFilterPython:
_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF2IF2SE2_swigregister(itkGrayscaleFunctionErodeImageFilterIF2IF2SE2)
itkGrayscaleFunctionErodeImageFilterIF2IF2SE2___New_orig__ = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF2IF2SE2___New_orig__
itkGrayscaleFunctionErodeImageFilterIF2IF2SE2_cast = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF2IF2SE2_cast


def itkGrayscaleFunctionErodeImageFilterIF3IF3SE3_New():
    return itkGrayscaleFunctionErodeImageFilterIF3IF3SE3.New()

class itkGrayscaleFunctionErodeImageFilterIF3IF3SE3(itkGrayscaleFunctionErodeImageFilterIF3IF3SE3_Superclass):
    r"""


    gray scale function erosion of an image

    Erode an image using functional grayscale morphology. Function erosion
    takes the minimum of all the pixels identified by the structuring
    element minus the structuring element value.

    The structuring element can be composed of arbitrary nonnegative
    values (not restricted to zero or one). Element values greater than
    zero indicate pixels that will be considered during the dilation. The
    function erosion operation is defined as the minimum over the elements
    of the image value MINUS the structuring element value.

    For the each input image pixel, NeighborhoodIterator gives neighbors
    of the pixel.

    Evaluate() member function returns the minimum value among the image
    neighbors minus the kernel value where the kernel has elements > 0.

    Replace the original value with the min value

    See:  MorphologyImageFilter, GrayscaleFunctionErodeImageFilter,
    BinaryErodeImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF3IF3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF3IF3SE3_Clone)
    SameDimensionCheck1 = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF3IF3SE3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF3IF3SE3_SameDimensionCheck2
    
    InputConvertibleToOutputCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF3IF3SE3_InputConvertibleToOutputCheck
    
    KernelConvertibleToInputCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF3IF3SE3_KernelConvertibleToInputCheck
    
    InputAdditiveOperatorsCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF3IF3SE3_InputAdditiveOperatorsCheck
    
    InputLessThanComparableCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF3IF3SE3_InputLessThanComparableCheck
    
    KernelGreaterThanComparableCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF3IF3SE3_KernelGreaterThanComparableCheck
    
    __swig_destroy__ = _itkGrayscaleFunctionErodeImageFilterPython.delete_itkGrayscaleFunctionErodeImageFilterIF3IF3SE3
    cast = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF3IF3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleFunctionErodeImageFilterIF3IF3SE3

        Create a new object of the class itkGrayscaleFunctionErodeImageFilterIF3IF3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleFunctionErodeImageFilterIF3IF3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleFunctionErodeImageFilterIF3IF3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleFunctionErodeImageFilterIF3IF3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleFunctionErodeImageFilterIF3IF3SE3 in _itkGrayscaleFunctionErodeImageFilterPython:
_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF3IF3SE3_swigregister(itkGrayscaleFunctionErodeImageFilterIF3IF3SE3)
itkGrayscaleFunctionErodeImageFilterIF3IF3SE3___New_orig__ = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF3IF3SE3___New_orig__
itkGrayscaleFunctionErodeImageFilterIF3IF3SE3_cast = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIF3IF3SE3_cast


def itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2_New():
    return itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2.New()

class itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2(itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2_Superclass):
    r"""


    gray scale function erosion of an image

    Erode an image using functional grayscale morphology. Function erosion
    takes the minimum of all the pixels identified by the structuring
    element minus the structuring element value.

    The structuring element can be composed of arbitrary nonnegative
    values (not restricted to zero or one). Element values greater than
    zero indicate pixels that will be considered during the dilation. The
    function erosion operation is defined as the minimum over the elements
    of the image value MINUS the structuring element value.

    For the each input image pixel, NeighborhoodIterator gives neighbors
    of the pixel.

    Evaluate() member function returns the minimum value among the image
    neighbors minus the kernel value where the kernel has elements > 0.

    Replace the original value with the min value

    See:  MorphologyImageFilter, GrayscaleFunctionErodeImageFilter,
    BinaryErodeImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2_Clone)
    SameDimensionCheck1 = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2_SameDimensionCheck2
    
    InputConvertibleToOutputCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2_InputConvertibleToOutputCheck
    
    KernelConvertibleToInputCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2_KernelConvertibleToInputCheck
    
    InputAdditiveOperatorsCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2_InputAdditiveOperatorsCheck
    
    InputLessThanComparableCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2_InputLessThanComparableCheck
    
    KernelGreaterThanComparableCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2_KernelGreaterThanComparableCheck
    
    __swig_destroy__ = _itkGrayscaleFunctionErodeImageFilterPython.delete_itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2
    cast = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2

        Create a new object of the class itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2 in _itkGrayscaleFunctionErodeImageFilterPython:
_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2_swigregister(itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2)
itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2___New_orig__ = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2___New_orig__
itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2_cast = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS2ISS2SE2_cast


def itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3_New():
    return itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3.New()

class itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3(itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3_Superclass):
    r"""


    gray scale function erosion of an image

    Erode an image using functional grayscale morphology. Function erosion
    takes the minimum of all the pixels identified by the structuring
    element minus the structuring element value.

    The structuring element can be composed of arbitrary nonnegative
    values (not restricted to zero or one). Element values greater than
    zero indicate pixels that will be considered during the dilation. The
    function erosion operation is defined as the minimum over the elements
    of the image value MINUS the structuring element value.

    For the each input image pixel, NeighborhoodIterator gives neighbors
    of the pixel.

    Evaluate() member function returns the minimum value among the image
    neighbors minus the kernel value where the kernel has elements > 0.

    Replace the original value with the min value

    See:  MorphologyImageFilter, GrayscaleFunctionErodeImageFilter,
    BinaryErodeImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3_Clone)
    SameDimensionCheck1 = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3_SameDimensionCheck2
    
    InputConvertibleToOutputCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3_InputConvertibleToOutputCheck
    
    KernelConvertibleToInputCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3_KernelConvertibleToInputCheck
    
    InputAdditiveOperatorsCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3_InputAdditiveOperatorsCheck
    
    InputLessThanComparableCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3_InputLessThanComparableCheck
    
    KernelGreaterThanComparableCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3_KernelGreaterThanComparableCheck
    
    __swig_destroy__ = _itkGrayscaleFunctionErodeImageFilterPython.delete_itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3
    cast = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3

        Create a new object of the class itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3 in _itkGrayscaleFunctionErodeImageFilterPython:
_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3_swigregister(itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3)
itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3___New_orig__ = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3___New_orig__
itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3_cast = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterISS3ISS3SE3_cast


def itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2_New():
    return itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2.New()

class itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2(itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2_Superclass):
    r"""


    gray scale function erosion of an image

    Erode an image using functional grayscale morphology. Function erosion
    takes the minimum of all the pixels identified by the structuring
    element minus the structuring element value.

    The structuring element can be composed of arbitrary nonnegative
    values (not restricted to zero or one). Element values greater than
    zero indicate pixels that will be considered during the dilation. The
    function erosion operation is defined as the minimum over the elements
    of the image value MINUS the structuring element value.

    For the each input image pixel, NeighborhoodIterator gives neighbors
    of the pixel.

    Evaluate() member function returns the minimum value among the image
    neighbors minus the kernel value where the kernel has elements > 0.

    Replace the original value with the min value

    See:  MorphologyImageFilter, GrayscaleFunctionErodeImageFilter,
    BinaryErodeImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2_Clone)
    SameDimensionCheck1 = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2_SameDimensionCheck2
    
    InputConvertibleToOutputCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2_InputConvertibleToOutputCheck
    
    KernelConvertibleToInputCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2_KernelConvertibleToInputCheck
    
    InputAdditiveOperatorsCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2_InputAdditiveOperatorsCheck
    
    InputLessThanComparableCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2_InputLessThanComparableCheck
    
    KernelGreaterThanComparableCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2_KernelGreaterThanComparableCheck
    
    __swig_destroy__ = _itkGrayscaleFunctionErodeImageFilterPython.delete_itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2
    cast = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2

        Create a new object of the class itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2 in _itkGrayscaleFunctionErodeImageFilterPython:
_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2_swigregister(itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2)
itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2___New_orig__ = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2___New_orig__
itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2_cast = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC2IUC2SE2_cast


def itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3_New():
    return itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3.New()

class itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3(itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3_Superclass):
    r"""


    gray scale function erosion of an image

    Erode an image using functional grayscale morphology. Function erosion
    takes the minimum of all the pixels identified by the structuring
    element minus the structuring element value.

    The structuring element can be composed of arbitrary nonnegative
    values (not restricted to zero or one). Element values greater than
    zero indicate pixels that will be considered during the dilation. The
    function erosion operation is defined as the minimum over the elements
    of the image value MINUS the structuring element value.

    For the each input image pixel, NeighborhoodIterator gives neighbors
    of the pixel.

    Evaluate() member function returns the minimum value among the image
    neighbors minus the kernel value where the kernel has elements > 0.

    Replace the original value with the min value

    See:  MorphologyImageFilter, GrayscaleFunctionErodeImageFilter,
    BinaryErodeImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3_Clone)
    SameDimensionCheck1 = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3_SameDimensionCheck2
    
    InputConvertibleToOutputCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3_InputConvertibleToOutputCheck
    
    KernelConvertibleToInputCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3_KernelConvertibleToInputCheck
    
    InputAdditiveOperatorsCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3_InputAdditiveOperatorsCheck
    
    InputLessThanComparableCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3_InputLessThanComparableCheck
    
    KernelGreaterThanComparableCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3_KernelGreaterThanComparableCheck
    
    __swig_destroy__ = _itkGrayscaleFunctionErodeImageFilterPython.delete_itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3
    cast = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3

        Create a new object of the class itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3 in _itkGrayscaleFunctionErodeImageFilterPython:
_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3_swigregister(itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3)
itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3___New_orig__ = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3___New_orig__
itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3_cast = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUC3IUC3SE3_cast


def itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2_New():
    return itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2.New()

class itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2(itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2_Superclass):
    r"""


    gray scale function erosion of an image

    Erode an image using functional grayscale morphology. Function erosion
    takes the minimum of all the pixels identified by the structuring
    element minus the structuring element value.

    The structuring element can be composed of arbitrary nonnegative
    values (not restricted to zero or one). Element values greater than
    zero indicate pixels that will be considered during the dilation. The
    function erosion operation is defined as the minimum over the elements
    of the image value MINUS the structuring element value.

    For the each input image pixel, NeighborhoodIterator gives neighbors
    of the pixel.

    Evaluate() member function returns the minimum value among the image
    neighbors minus the kernel value where the kernel has elements > 0.

    Replace the original value with the min value

    See:  MorphologyImageFilter, GrayscaleFunctionErodeImageFilter,
    BinaryErodeImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2_Clone)
    SameDimensionCheck1 = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2_SameDimensionCheck2
    
    InputConvertibleToOutputCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2_InputConvertibleToOutputCheck
    
    KernelConvertibleToInputCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2_KernelConvertibleToInputCheck
    
    InputAdditiveOperatorsCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2_InputAdditiveOperatorsCheck
    
    InputLessThanComparableCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2_InputLessThanComparableCheck
    
    KernelGreaterThanComparableCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2_KernelGreaterThanComparableCheck
    
    __swig_destroy__ = _itkGrayscaleFunctionErodeImageFilterPython.delete_itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2
    cast = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2

        Create a new object of the class itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2 in _itkGrayscaleFunctionErodeImageFilterPython:
_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2_swigregister(itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2)
itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2___New_orig__ = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2___New_orig__
itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2_cast = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS2IUS2SE2_cast


def itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3_New():
    return itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3.New()

class itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3(itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3_Superclass):
    r"""


    gray scale function erosion of an image

    Erode an image using functional grayscale morphology. Function erosion
    takes the minimum of all the pixels identified by the structuring
    element minus the structuring element value.

    The structuring element can be composed of arbitrary nonnegative
    values (not restricted to zero or one). Element values greater than
    zero indicate pixels that will be considered during the dilation. The
    function erosion operation is defined as the minimum over the elements
    of the image value MINUS the structuring element value.

    For the each input image pixel, NeighborhoodIterator gives neighbors
    of the pixel.

    Evaluate() member function returns the minimum value among the image
    neighbors minus the kernel value where the kernel has elements > 0.

    Replace the original value with the min value

    See:  MorphologyImageFilter, GrayscaleFunctionErodeImageFilter,
    BinaryErodeImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3_Clone)
    SameDimensionCheck1 = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3_SameDimensionCheck2
    
    InputConvertibleToOutputCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3_InputConvertibleToOutputCheck
    
    KernelConvertibleToInputCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3_KernelConvertibleToInputCheck
    
    InputAdditiveOperatorsCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3_InputAdditiveOperatorsCheck
    
    InputLessThanComparableCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3_InputLessThanComparableCheck
    
    KernelGreaterThanComparableCheck = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3_KernelGreaterThanComparableCheck
    
    __swig_destroy__ = _itkGrayscaleFunctionErodeImageFilterPython.delete_itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3
    cast = _swig_new_static_method(_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3

        Create a new object of the class itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3 in _itkGrayscaleFunctionErodeImageFilterPython:
_itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3_swigregister(itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3)
itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3___New_orig__ = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3___New_orig__
itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3_cast = _itkGrayscaleFunctionErodeImageFilterPython.itkGrayscaleFunctionErodeImageFilterIUS3IUS3SE3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def grayscale_function_erode_image_filter(*args, **kwargs):
    """Procedural interface for GrayscaleFunctionErodeImageFilter"""
    import itk
    instance = itk.GrayscaleFunctionErodeImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def grayscale_function_erode_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.GrayscaleFunctionErodeImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.GrayscaleFunctionErodeImageFilter.values()[0]
    else:
        filter_object = itk.GrayscaleFunctionErodeImageFilter

    grayscale_function_erode_image_filter.__doc__ = filter_object.__doc__
    grayscale_function_erode_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    grayscale_function_erode_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.GrayscaleFunctionErodeImageFilter, itkTemplate.itkTemplate):
        grayscale_function_erode_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        grayscale_function_erode_image_filter.__doc__ += "\n"
        grayscale_function_erode_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        grayscale_function_erode_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def morphology_image_filter(*args, **kwargs):
    """Procedural interface for MorphologyImageFilter"""
    import itk
    instance = itk.MorphologyImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def morphology_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.MorphologyImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.MorphologyImageFilter.values()[0]
    else:
        filter_object = itk.MorphologyImageFilter

    morphology_image_filter.__doc__ = filter_object.__doc__
    morphology_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    morphology_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.MorphologyImageFilter, itkTemplate.itkTemplate):
        morphology_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        morphology_image_filter.__doc__ += "\n"
        morphology_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        morphology_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



