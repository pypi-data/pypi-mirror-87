{"version":3,"sources":["app/trainModel/ModelTableHead.js","app/trainModel/ModelTableToolbar.js","app/trainModel/ModelExpandPanel.js","app/trainModel/actions/trainModel.actions.js","app/trainModel/reducers/trainModel.reducer.js","app/trainModel/reducers/index.js","app/trainModel/ModelTableContainer.js","app/trainModel/NluModelList.js"],"names":["headRows","id","numeric","disablePadding","label","disabledPadding","ModelTableHead","props","console","log","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","row","key","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColot","lighten","light","text","primary","backgroundColor","dark","spacer","flex","actions","justifyContent","title","ModelTableToolbar","classes","onRefresh","onActive","onRemove","Toolbar","className","clsx","Typography","variant","Tooltip","IconButton","aria-label","useStyles","width","marginTop","paper","marginBottom","table","minWidth","tableWrapper","overflowX","search","border","btn","position","left","subTitle","ModelExpandPanel","trainModelDialogOpen","ExpansionPanel","ExpansionPanelSummary","aria-controls","expandIcon","ExpansionPanelDetails","Button","button","startIcon","GET_MODEL_LIST_URL","getModelList","project_id","params","queryString","Object","keys","join","axios","get","activeModel","model_nm","put","removeModel","delete","initialState","selectedModel","modelTableApp","state","action","reducer","combineReducers","ProductionCell","withStyles","progress","margin","backdrop","zIndex","drawer","production","desc","a","b","getDateTime","unix_timestamp","date","Date","year","getFullYear","month","getMonth","day","getDate","dateFormat","hours","getHours","minutes","getMinutes","seconds","getSeconds","formattedTime","substr","pageStyles","flexShrink","marginLeft","TablePaginationActions","useTheme","count","page","rowsPerPage","onChangePage","disabled","Math","ceil","max","withReducer","useState","rows","setRows","setLoading","setOrder","setOrderBy","selected","setSelected","rowsLength","setRowsLength","setPage","dense","setDense","setRowsPerPage","limit","offset","setState","React","open","setOpen","responseName","setResponseName","dispatch","useDispatch","useEffect","response","data","fetchData","handleClose","refreshList","e","showLoading","trained_at","handleClick","model","selectedIndex","indexOf","newSelected","concat","slice","length","emptyRows","min","modelTrain","AlertActions","createModel","modelActive","dialogActiveModel","Actions","result","message","anchorOrigin","vertical","horizontal","autoHideDuration","toggleLoadingHandler","post","content","callback","confirmBtn_name","cancelBtn_name","isVisible","loadingPanel","LinearProgress","Backdrop","Paper","Table","aria-labelledby","size","selectedAll","i","push","Number","TableBody","array","cmp","stablizedThis","el","index","sort","stableSort","getSorting","isItemSelected","labelId","tags","animation","duration","delay","hover","role","aria-checked","tabIndex","component","scope","style","height","colSpan","TablePagination","rowsPerPageOptions","value","SelectProps","native","newPage","onChangeRowsPerPage","target","ActionsComponent","labelRowsPerPage","FormControlLabel","control","Switch","NluModelList"],"mappings":"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","file":"static/js/23.97019e97.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  TableHead,\n  TableRow,\n  Checkbox,\n  TableCell,\n  TableSortLabel\n} from \"@material-ui/core\";\n\nconst headRows = [\n  {\n    id: \"model\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Model명\"\n  },\n  {\n    id: \"trained_at\",\n    numeric: true,\n    disabledPadding: true,\n    label: \"Model 학습 일시\"\n  },\n  {\n    id: \"state\",\n    numeric: true,\n    disabledPadding: true,\n    label: \"Model 상태\"\n  }\n];\nconst ModelTableHead = props => {\n  console.log(\"ModelTableHead\", props);\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"모델 전체 선택\" }}\n          />\n        </TableCell>\n        {headRows.map(row => (\n          <TableCell\n            key={row.id}\n            align={row.numeric ? \"center\" : \"right\"}\n            padding={row.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === row.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === row.id}\n              direction={order}\n              onClick={createSortHandler(row.id)}\n            >\n              {row.label}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nexport default ModelTableHead;\n","import React from \"react\";\nimport { makeStyles, lighten } from \"@material-ui/core/styles\";\nimport { Toolbar, Typography, IconButton, Tooltip } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DoubleArrow from \"@material-ui/icons/DoubleArrow\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColot: lighten(theme.palette.secondary.light, 0.85)\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.primary.dark\n        },\n  spacer: {\n    flex: \"1 1 100%\"\n  },\n\n  actions: {\n    flex: \"0 0 auto\",\n    justifyContent: \"flex-end\",\n    color: theme.palette.text.primary\n  },\n  title: {\n    flex: \"0 0 auto\"\n  }\n}));\n\nconst ModelTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected, onRefresh, onActive, onRemove } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color=\"inherit\" variant=\"subtitle1\">\n            {numSelected} 개 모델이 선택되었습니다\n          </Typography>\n        ) : (\n          <Typography variant=\"h6\" id=\"tableTitle\">\n            학습 Model 리스트\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          numSelected === 1 ? (\n            <>\n              <Tooltip title=\"모델 활성화\">\n                <IconButton aria-label=\"Active Model\" onClick={onActive}>\n                  <DoubleArrow />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"모델 삭제\">\n                <IconButton aria-label=\"Delete Model\" onClick={onRemove}>\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n            </>\n          ) : (\n            <>\n              <Tooltip title=\"모델 삭제\">\n                <IconButton aria-label=\"Delete Model\" onClick={onRemove}>\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n            </>\n          )\n        ) : (\n          <>\n            <Tooltip title=\"재조회\">\n              <IconButton aria-label=\"Refresh Model\" onClick={onRefresh}>\n                <RefreshIcon />\n              </IconButton>\n            </Tooltip>\n          </>\n        )}\n      </div>\n    </Toolbar>\n  );\n};\n\nexport default ModelTableToolbar;\n","import React from \"react\";\n// import styled from \"styled-components\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport DirectionsRunIcon from \"@material-ui/icons/DirectionsRun\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  search: {\n    border: \"2px solid #039BE5\"\n  },\n  btn: {\n    position: \"relative\",\n    left: \"92%\"\n  },\n  subTitle: {\n    color: \"#039BE5\"\n  }\n}));\n\nexport default function ModelExpandPanel({ trainModelDialogOpen }) {\n  const classes = useStyles();\n\n  // let offset; // offset\n  // let limit;  // limit\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.search}>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            aria-controls=\"panel1d-content\"\n            id=\"panel1d-header\"\n            expandIcon={<ExpandMoreIcon />}\n          >\n            <Typography variant=\"h6\">모델 학습</Typography>\n            <div className={classes.subTitle}>\n              <Typography variant=\"subtitle1\">\n                {\" \"}\n                &nbsp;&nbsp;&nbsp;&nbsp;클릭시 영역을 펼치기 / 접기 할 수\n                있습니다.\n              </Typography>\n            </div>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <div className={classes.btn}>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                startIcon={<DirectionsRunIcon />}\n                onClick={() => trainModelDialogOpen()}\n              >\n                모델 학습\n              </Button>\n            </div>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </div>\n    </div>\n  );\n}\n","import axios from \"axios\";\n\nexport const GET_MODEL_LIST_URL = \"/api/projects\";\n\nexport const GET_MODEL_LIST = \"[MODEL APP]GET MODEL LIST\";\n\nexport function getModelList(project_id, params) {\n  // debugger;\n  var queryString = Object.keys(params)\n    .map(function(key) {\n      return key + \"=\" + params[key];\n    })\n    .join(\"&\");\n\n  return axios.get(\n    GET_MODEL_LIST_URL + \"/\" + project_id + \"/\" + \"models\" + \"?\" + queryString\n  );\n}\n\nexport function activeModel(project_id, model_nm) {\n  // debugger;\n  return axios.put(\n    GET_MODEL_LIST_URL +\n      \"/\" +\n      project_id +\n      \"/\" +\n      \"models\" +\n      \"/\" +\n      model_nm +\n      \"/tags/\" +\n      \"production\"\n  );\n}\n\nexport function removeModel(project_id, id) {\n  // debugger;\n  return axios.delete(\n    GET_MODEL_LIST_URL +\n      \"/\" +\n      project_id +\n      \"/\" +\n      \"models\" +\n      \"/\" +\n      id\n  );\n}\n\nexport function createModel(project_id) {\n  // debugger;\n\n  // const queryString = {\n  //   \"api_token\": JSON.stringify(token)\n  // }\n\n  return axios.post(\n    GET_MODEL_LIST_URL + \"/\" + project_id + \"/\" +  \"models\" + \"/\" + \"jobs\"\n  );\n}\n","import * as Actions from \"../actions\";\n\nconst initialState = {\n  selectedModel: {}\n};\n\nconst modelTableApp = function(state = initialState, action) {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport default modelTableApp;\n","import { combineReducers } from \"redux\";\nimport modelTableApp from \"./trainModel.reducer\";\n\nconst reducer = combineReducers({\n  modelTableApp\n});\n\nexport default reducer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Typography, LinearProgress } from \"@material-ui/core\";\nimport { useState, useEffect } from \"react\";\nimport ModelTableHead from \"./ModelTableHead\";\nimport ModelTableToolbar from \"./ModelTableToolbar\";\n// expand panel(검색조건)\nimport ModelExpandPanel from \"./ModelExpandPanel\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\n\nimport { useDispatch } from \"react-redux\";\nimport * as Actions from \"./actions\";\nimport * as AlertActions from \"app/store/actions\";\n\nimport {\n  makeStyles,\n  // lighten,\n  withStyles,\n  useTheme\n} from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  Checkbox,\n  TablePagination,\n  Switch,\n  FormControlLabel\n  // Tooltip\n} from \"@material-ui/core\";\n// import DoubleArrow from \"@material-ui/icons/DoubleArrow\";\nimport { getModelList } from \"./actions/trainModel.actions\";\nimport { /*FuseScrollbars,*/ FuseAnimate } from \"@fuse\";\nimport reducer from \"./reducers\";\nimport withReducer from \"app/store/withReducer\";\n\nconst ProductionCell = withStyles((theme) => ({\n  root: {\n    // color: \"#0ef76b\"\n    color: \"#f08c00\"\n  }\n}))(TableCell);\n\nconst useStyles = makeStyles((theme) => ({\n  progress: {\n    width: \"80%\",\n    margin: \"0 12px 0 30px\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2)\n    }\n  },\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\"\n  },\n  production: {\n    backgroundColor: \"#039BE5 !important\"\n  }\n}));\n\n//Table Util Function\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\nfunction stableSort(array, cmp) {\n  const stablizedThis = array.map((el, index) => [el, index]);\n  stablizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stablizedThis.map((el) => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nfunction getDateTime(unix_timestamp) {\n  var date = new Date(unix_timestamp * 1000);\n\n  var year = date.getFullYear(); //yyyy\n  var month = 1 + date.getMonth(); //M\n  month = month >= 10 ? month : \"0\" + month; //month 두자리로 저장\n  var day = date.getDate(); //d\n  day = day >= 10 ? day : \"0\" + day; //day 두자리로 저장\n  var dateFormat = year + \"-\" + month + \"-\" + day;\n  var hours = date.getHours();\n  var minutes = \"0\" + date.getMinutes();\n  var seconds = \"0\" + date.getSeconds();\n\n  // Will display time in 10:30:23 format\n  var formattedTime =\n    hours + \":\" + minutes.substr(-2) + \":\" + seconds.substr(-2);\n  console.log(dateFormat);\n  console.log(formattedTime);\n\n  return dateFormat + \" \" + formattedTime;\n}\n\nconst pageStyles = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5)\n  }\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = pageStyles();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = (event) => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\n\nfunction ModelTableContainer() {\n  const [rows, setRows] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [order, setOrder] = useState(\"asc\");\n  const [orderBy, setOrderBy] = useState(\"model\");\n  const [selected, setSelected] = useState([]);\n  const [rowsLength, setRowsLength] = useState(0.5);\n  const [page, setPage] = useState(0);\n  const [dense, setDense] = useState(true);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const [limit, setLimit] = useState();\n  const [offset, setOffset] = useState(0);\n  const [state, setState] = useState(false);\n  // 화면 disabled\n  const [open, setOpen] = React.useState(false);\n  const [responseName, setResponseName] = useState(\"\");\n  // const theme = useTheme();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await getModelList(\"default\", {\n          limit: limit === \"\" || limit === null ? null : limit,\n          offset: offset === \"\" || offset === null ? null : offset\n        });\n        console.log(response);\n        setRows(response.data);\n      } catch (e) {\n        console.log(e);\n      }\n      setSelected([]);\n      setLoading(false);\n      const isDesc = orderBy === \"trained_at\" && order === \"desc\";\n      setOrder(isDesc ? \"desc\" : \"desc\");\n      setOrderBy(\"trained_at\");\n    };\n    fetchData();\n  }, [page, rowsPerPage]);\n\n  // 화면 disabled\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleToggle = () => {\n    setOpen(!open);\n  };\n\n  const refreshList = async (e) => {\n    setState({\n      showLoading: false\n    });\n\n    console.log(\"refreshList\", e);\n    setLoading(true);\n    try {\n      const response = await getModelList(\"default\", {\n        limit: limit === \"\" || limit === null ? null : limit,\n        offset: offset === \"\" || offset === null ? null : offset\n      });\n      console.log(response);\n      const unix_timestamp = response.data[0].trained_at;\n      getDateTime(unix_timestamp);\n      setRows(response.data);\n    } catch (e) {\n      console.log(e);\n    }\n    setSelected([]);\n    setLoading(false);\n\n    const isDesc = orderBy === \"trained_at\" && order === \"desc\";\n    setOrder(isDesc ? \"desc\" : \"desc\");\n    setOrderBy(\"trained_at\");\n  };\n\n  function handleRequestSort(event, property) {\n    const isDesc = orderBy === property && order === \"desc\";\n    setOrder(isDesc ? \"asc\" : \"desc\");\n    setOrderBy(property);\n  }\n\n  function handleSelectAllClick(event) {\n    if (selected.length !== rowsLength) {\n      // 전체 선택 배열\n      let selectedAll = [];\n      for (let i in rows) {\n        if (page === 0) {\n          if (i < rowsPerPage) {\n            selectedAll.push(rows[Number(i) + Number(page)].model);\n          }\n        } else {\n          if (\n            Number(i) + Number(page) * Number(rowsPerPage) <\n            (Number(page) + Number(1)) * Number(rowsPerPage)\n          ) {\n            if (Number(i) + Number(page) * Number(rowsPerPage) < rows.length) {\n              selectedAll.push(\n                rows[Number(i) + Number(page) * Number(rowsPerPage)].model\n              );\n            } else {\n              setSelected([]);\n            }\n          }\n        }\n      }\n      setSelected(selectedAll);\n      setRowsLength(selectedAll.length);\n      return;\n    }\n    setSelected([]);\n    setRowsLength(0.5);\n    // setSelectedAll([]);\n  }\n\n  function handleClick(event, model) {\n    console.log(\"handleClick\", event, model);\n    const selectedIndex = selected.indexOf(model);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, model);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n  }\n\n  function handleChangeDense(event) {\n    setDense(event.target.checked);\n  }\n\n  const isSelected = (model) => selected.indexOf(model) !== -1;\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  const classes = useStyles();\n\n  // 모델 학습 컨펌창\n  const trainModelDialogOpen = () => {\n    // confirm 생성\n    dispatch(\n      AlertActions.openConfirm({\n        title: \"신규 모델 학습\", // 컨펌창 제목\n        content:\n          \"모델 학습을 진행하시겠습니까? ( 모델 학습이 진행된 후 취소가 불가합니다. )\", // 컨펌창 메시지\n        callback: modelTrain, // 콜백함수 지정\n        confirmBtn_name: \"학습 진행\", // 확인버튼명 (미설정시 기본명 \"확인\")\n        cancelBtn_name: \"닫기\" // 취소버튼명 (미설정시 기본명 \"취소\")\n      })\n    );\n  };\n\n  // 모델학습 callBack\n  const modelTrain = () => {\n    dispatch(AlertActions.closeConfirm()); // confirm 닫기\n    // 모델 생성\n    createModel();\n  };\n\n  // 모델 활성화 컨펌창\n  const activeModelDialogOpen = () => {\n    // confirm 생성\n    dispatch(\n      AlertActions.openConfirm({\n        title: \"모델 학습 완료\", // 컨펌창 제목\n        content:\n          \"새로운 모델이 학습 되었습니다. 새로운 모델로 활성화 하시겠습니까?\", // 컨펌창 메시지\n        callback: modelActive, // 콜백함수 지정\n        // callback_param: {responseName}, // 콜백함수에서 사용 할 파라메터 설정\n        confirmBtn_name: \"활성화\", // 확인버튼명 (미설정시 기본명 \"확인\")\n        cancelBtn_name: \"닫기\" // 취소버튼명 (미설정시 기본명 \"취소\")\n      })\n    );\n  };\n\n  // 모델 활성화 callBack\n  const modelActive = () => {\n    dispatch(AlertActions.closeConfirm()); // confirm 닫기\n\n    // 모델 활성화\n    dialogActiveModel();\n  };\n\n  const dialogActiveModel = async () => {\n    const result = await Actions.activeModel(\"default\", responseName);\n    console.log(result);\n\n    refreshList(null);\n    // toast 생성\n    dispatch(\n      AlertActions.showMessage({\n        message: \"신규 모델이 활성화 되었습니다.\",\n        variant: \"success\",\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"right\"\n        },\n        autoHideDuration: 3000\n      })\n    );\n  };\n\n  const activeModel = async () => {\n    console.log(\"active model process\");\n    console.log(\"selected model\", selected);\n    if (selected.length > 0) {\n      if (selected.length > 1) {\n        // toast 생성\n        dispatch(\n          AlertActions.showMessage({\n            message: \"하나의 모델을 선택해 주세요. (복수 불가)\",\n            variant: \"error\",\n            anchorOrigin: {\n              vertical: \"top\",\n              horizontal: \"right\"\n            },\n            autoHideDuration: 3000\n          })\n        );\n        refreshList(null);\n      } else {\n        const response = await Actions.activeModel(\"default\", selected[0]);\n        console.log(response);\n\n        // toast 생성\n        dispatch(\n          AlertActions.showMessage({\n            message: \"선택한 모델이 활성화 되었습니다.\",\n            variant: \"success\",\n            anchorOrigin: {\n              vertical: \"top\",\n              horizontal: \"right\"\n            },\n            autoHideDuration: 3000\n          })\n        );\n        refreshList(null);\n      }\n    }\n  };\n\n  // 삭제 confrim창\n  const deleteAction = () => {\n    // confirm 생성\n    dispatch(\n      AlertActions.openConfirm({\n        title: \"알림\", // 컨펌창 제목\n        content: \"선택한 모델을 삭제 하시겠습니까?\", // 컨펌창 메시지\n        callback: removeModel // 콜백함수 지정\n      })\n    );\n  };\n\n  // 삭제 callBack\n  const removeModel = async () => {\n    dispatch(AlertActions.closeConfirm()); // confirm 닫기\n    if (selected.length > 0) {\n      const response = await selected.map((id) => {\n        Actions.removeModel(\"default\", id);\n      });\n      setSelected([]);\n      refreshList(null);\n      // toast 생성\n      dispatch(\n        AlertActions.showMessage({\n          message: \"선택한 모델이 삭제 되었습니다.\",\n          variant: \"success\",\n          anchorOrigin: {\n            vertical: \"top\",\n            horizontal: \"right\"\n          },\n          autoHideDuration: 3000\n        })\n      );\n    }\n  };\n\n  const createModel = async () => {\n    handleToggle();\n    setLoading(true);\n    try {\n      toggleLoadingHandler();\n      const response = await Actions.createModel(\"default\");\n      console.log(response);\n      setResponseName(response.data.model);\n      activeModelDialogOpen();\n      handleClose();\n      setLoading(false);\n      refreshList(null);\n    } catch (e) {\n      console.log(e);\n      // toast 생성\n      dispatch(\n        AlertActions.showMessage({\n          message: \"모델 학습중 오류가 발생되었습니다. 관리자에게 문의 하세요.\",\n          variant: \"error\",\n          anchorOrigin: {\n            vertical: \"top\",\n            horizontal: \"right\"\n          },\n          autoHideDuration: 3000\n        })\n      );\n      handleClose();\n      setLoading(false);\n      refreshList(null);\n      return false;\n    }\n  };\n\n  const toggleLoadingHandler = () => {\n    const isVisible = state.showLoading;\n    setState({\n      showLoading: !isVisible\n    });\n  };\n\n  let loadingPanel = null;\n\n  if (state.showLoading) {\n    loadingPanel = (\n      <div className=\"flex flex-1 flex-col items-center justify-center\">\n        <Typography className=\"text-20 mb-16\" color=\"textSecondary\">\n          모델 학습 진행 중...\n        </Typography>\n        <LinearProgress className=\"w-xs\" color=\"secondary\" />\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"kt-section__expandPanel\">\n        <ModelExpandPanel trainModelDialogOpen={trainModelDialogOpen} />\n      </div>\n\n      {/* 로딩바 */}\n      <Backdrop className={classes.backdrop} open={open}>\n        <div>{loadingPanel}</div>\n      </Backdrop>\n\n      <div className=\"kt-section__content\">\n        <Paper className={classes.root}>\n          <ModelTableToolbar\n            numSelected={selected.length}\n            onRefresh={refreshList}\n            onActive={activeModel}\n            onRemove={deleteAction}\n          />\n          <div className={classes.tableWrapper}>\n            <Table\n              className={classes.table}\n              aria-labelledby=\"tableTitle\"\n              size={dense ? \"small\" : \"medium\"}\n            >\n              <ModelTableHead\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                onSelectAllClick={handleSelectAllClick}\n                onRequestSort={handleRequestSort}\n                rowCount={rows.length}\n              />\n              <TableBody>\n                {stableSort(rows, getSorting(order, orderBy))\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row, index) => {\n                    const isItemSelected = isSelected(row.model);\n                    const labelId = `mnodel-table-checkbox-${index}`;\n\n                    if (row.tags[0] === \"production\") {\n                      return (\n                        <FuseAnimate\n                          animation=\"transition.fadeIn\"\n                          duration={400}\n                          delay={100}\n                          key={row.model}\n                        >\n                          <TableRow\n                            hover\n                            onClick={(event) => handleClick(event, row.model)}\n                            role=\"checkbox\"\n                            aria-checked={isItemSelected}\n                            tabIndex={-1}\n                            key={row.model}\n                            selected={isItemSelected}\n                          >\n                            <ProductionCell padding=\"checkbox\">\n                              <Checkbox\n                                checked={isItemSelected}\n                                inputProps={{\n                                  \"aria-labelledby\": labelId\n                                }}\n                              />\n                            </ProductionCell>\n                            <ProductionCell\n                              align=\"center\"\n                              component=\"th\"\n                              id={labelId}\n                              scope=\"row\"\n                              padding=\"none\"\n                            >\n                              {row.model}\n                            </ProductionCell>\n                            <ProductionCell align=\"center\">\n                              {getDateTime(row.trained_at)}\n                            </ProductionCell>\n                            <ProductionCell align=\"center\">\n                              {row.tags}\n                            </ProductionCell>\n                          </TableRow>\n                        </FuseAnimate>\n                      );\n                    }\n\n                    return (\n                      <FuseAnimate\n                        animation=\"transition.fadeIn\"\n                        duration={400}\n                        delay={100}\n                        key={row.model}\n                      >\n                        <TableRow\n                          hover\n                          onClick={(event) => handleClick(event, row.model)}\n                          role=\"checkbox\"\n                          aria-checked={isItemSelected}\n                          tabIndex={-1}\n                          key={row.model}\n                          selected={isItemSelected}\n                        >\n                          <TableCell padding=\"checkbox\">\n                            <Checkbox\n                              checked={isItemSelected}\n                              inputProps={{\n                                \"aria-labelledby\": labelId\n                              }}\n                            />\n                          </TableCell>\n                          <TableCell\n                            align=\"center\"\n                            component=\"th\"\n                            id={labelId}\n                            scope=\"row\"\n                            padding=\"none\"\n                          >\n                            {row.model}\n                          </TableCell>\n                          <TableCell align=\"center\">\n                            {getDateTime(row.trained_at)}\n                          </TableCell>\n                          <TableCell align=\"center\">{row.tags}</TableCell>\n                        </TableRow>\n                      </FuseAnimate>\n                    );\n                  })}\n                {emptyRows > 0 && (\n                  <TableRow style={{ height: 49 * emptyRows }}>\n                    <TableCell colSpan={4} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </div>\n          <TablePagination\n            rowsPerPageOptions={[10, 50, 100, { label: \"All\", value: -1 }]}\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            SelectProps={{\n              inputProps: { \"aria-label\": \"rows per page\" },\n              native: true\n            }}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            ActionsComponent={TablePaginationActions}\n            labelRowsPerPage=\"표시건수: \"\n          />\n        </Paper>\n        <FormControlLabel\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\n          label=\"간격 줄이기\"\n          className=\"ml-8\"\n        />\n      </div>\n    </>\n  );\n}\n\nexport default withReducer(\"ModelTableApp\", reducer)(ModelTableContainer);\n","import React from \"react\";\nimport ModelTableContainer from \"./ModelTableContainer\";\n\nfunction NluModelList() {\n  return <ModelTableContainer />;\n}\n\nexport default NluModelList;\n"],"sourceRoot":""}