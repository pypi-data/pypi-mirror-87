# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageIntensityPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkShiftScaleImageFilterPython
else:
    import _itkShiftScaleImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkShiftScaleImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkShiftScaleImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageToImageFilterAPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkImageSourcePython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.stdcomplexPython
import itk.itkRGBAPixelPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython

def itkShiftScaleImageFilterID2ID2_New():
    return itkShiftScaleImageFilterID2ID2.New()

class itkShiftScaleImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""


    Shift and scale the pixels in an image.

    ShiftScaleImageFilter shifts the input pixel by Shift (default 0.0)
    and then scales the pixel by Scale (default 1.0). All computations are
    performed in the precision of the input pixel's RealType. Before
    assigning the computed value to the output pixel, the value is clamped
    at the NonpositiveMin and max of the pixel type. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_Clone)
    SetShift = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_SetShift)
    GetShift = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_GetShift)
    SetScale = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_SetScale)
    GetScale = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_GetScale)
    GetUnderflowCount = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_GetUnderflowCount)
    GetOverflowCount = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_GetOverflowCount)
    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_OutputHasNumericTraitsCheck
    
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_InputPlusRealTypeCheck
    
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_RealTypeMultiplyOperatorCheck
    
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterID2ID2
    cast = _swig_new_static_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterID2ID2

        Create a new object of the class itkShiftScaleImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShiftScaleImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShiftScaleImageFilterID2ID2 in _itkShiftScaleImageFilterPython:
_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_swigregister(itkShiftScaleImageFilterID2ID2)
itkShiftScaleImageFilterID2ID2___New_orig__ = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2___New_orig__
itkShiftScaleImageFilterID2ID2_cast = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_cast


def itkShiftScaleImageFilterID3ID3_New():
    return itkShiftScaleImageFilterID3ID3.New()

class itkShiftScaleImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""


    Shift and scale the pixels in an image.

    ShiftScaleImageFilter shifts the input pixel by Shift (default 0.0)
    and then scales the pixel by Scale (default 1.0). All computations are
    performed in the precision of the input pixel's RealType. Before
    assigning the computed value to the output pixel, the value is clamped
    at the NonpositiveMin and max of the pixel type. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_Clone)
    SetShift = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_SetShift)
    GetShift = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_GetShift)
    SetScale = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_SetScale)
    GetScale = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_GetScale)
    GetUnderflowCount = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_GetUnderflowCount)
    GetOverflowCount = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_GetOverflowCount)
    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_OutputHasNumericTraitsCheck
    
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_InputPlusRealTypeCheck
    
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_RealTypeMultiplyOperatorCheck
    
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterID3ID3
    cast = _swig_new_static_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterID3ID3

        Create a new object of the class itkShiftScaleImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShiftScaleImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShiftScaleImageFilterID3ID3 in _itkShiftScaleImageFilterPython:
_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_swigregister(itkShiftScaleImageFilterID3ID3)
itkShiftScaleImageFilterID3ID3___New_orig__ = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3___New_orig__
itkShiftScaleImageFilterID3ID3_cast = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_cast


def itkShiftScaleImageFilterIF2IF2_New():
    return itkShiftScaleImageFilterIF2IF2.New()

class itkShiftScaleImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""


    Shift and scale the pixels in an image.

    ShiftScaleImageFilter shifts the input pixel by Shift (default 0.0)
    and then scales the pixel by Scale (default 1.0). All computations are
    performed in the precision of the input pixel's RealType. Before
    assigning the computed value to the output pixel, the value is clamped
    at the NonpositiveMin and max of the pixel type. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_Clone)
    SetShift = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_SetShift)
    GetShift = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_GetShift)
    SetScale = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_SetScale)
    GetScale = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_GetScale)
    GetUnderflowCount = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_GetUnderflowCount)
    GetOverflowCount = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_GetOverflowCount)
    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_OutputHasNumericTraitsCheck
    
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_InputPlusRealTypeCheck
    
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_RealTypeMultiplyOperatorCheck
    
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterIF2IF2
    cast = _swig_new_static_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterIF2IF2

        Create a new object of the class itkShiftScaleImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShiftScaleImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShiftScaleImageFilterIF2IF2 in _itkShiftScaleImageFilterPython:
_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_swigregister(itkShiftScaleImageFilterIF2IF2)
itkShiftScaleImageFilterIF2IF2___New_orig__ = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2___New_orig__
itkShiftScaleImageFilterIF2IF2_cast = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_cast


def itkShiftScaleImageFilterIF3IF3_New():
    return itkShiftScaleImageFilterIF3IF3.New()

class itkShiftScaleImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""


    Shift and scale the pixels in an image.

    ShiftScaleImageFilter shifts the input pixel by Shift (default 0.0)
    and then scales the pixel by Scale (default 1.0). All computations are
    performed in the precision of the input pixel's RealType. Before
    assigning the computed value to the output pixel, the value is clamped
    at the NonpositiveMin and max of the pixel type. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_Clone)
    SetShift = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_SetShift)
    GetShift = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_GetShift)
    SetScale = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_SetScale)
    GetScale = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_GetScale)
    GetUnderflowCount = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_GetUnderflowCount)
    GetOverflowCount = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_GetOverflowCount)
    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_OutputHasNumericTraitsCheck
    
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_InputPlusRealTypeCheck
    
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_RealTypeMultiplyOperatorCheck
    
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterIF3IF3
    cast = _swig_new_static_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterIF3IF3

        Create a new object of the class itkShiftScaleImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShiftScaleImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShiftScaleImageFilterIF3IF3 in _itkShiftScaleImageFilterPython:
_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_swigregister(itkShiftScaleImageFilterIF3IF3)
itkShiftScaleImageFilterIF3IF3___New_orig__ = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3___New_orig__
itkShiftScaleImageFilterIF3IF3_cast = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_cast


def itkShiftScaleImageFilterISS2ISS2_New():
    return itkShiftScaleImageFilterISS2ISS2.New()

class itkShiftScaleImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""


    Shift and scale the pixels in an image.

    ShiftScaleImageFilter shifts the input pixel by Shift (default 0.0)
    and then scales the pixel by Scale (default 1.0). All computations are
    performed in the precision of the input pixel's RealType. Before
    assigning the computed value to the output pixel, the value is clamped
    at the NonpositiveMin and max of the pixel type. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_Clone)
    SetShift = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_SetShift)
    GetShift = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_GetShift)
    SetScale = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_SetScale)
    GetScale = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_GetScale)
    GetUnderflowCount = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_GetUnderflowCount)
    GetOverflowCount = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_GetOverflowCount)
    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_OutputHasNumericTraitsCheck
    
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_InputPlusRealTypeCheck
    
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_RealTypeMultiplyOperatorCheck
    
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterISS2ISS2

        Create a new object of the class itkShiftScaleImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShiftScaleImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShiftScaleImageFilterISS2ISS2 in _itkShiftScaleImageFilterPython:
_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_swigregister(itkShiftScaleImageFilterISS2ISS2)
itkShiftScaleImageFilterISS2ISS2___New_orig__ = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2___New_orig__
itkShiftScaleImageFilterISS2ISS2_cast = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_cast


def itkShiftScaleImageFilterISS3ISS3_New():
    return itkShiftScaleImageFilterISS3ISS3.New()

class itkShiftScaleImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""


    Shift and scale the pixels in an image.

    ShiftScaleImageFilter shifts the input pixel by Shift (default 0.0)
    and then scales the pixel by Scale (default 1.0). All computations are
    performed in the precision of the input pixel's RealType. Before
    assigning the computed value to the output pixel, the value is clamped
    at the NonpositiveMin and max of the pixel type. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_Clone)
    SetShift = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_SetShift)
    GetShift = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_GetShift)
    SetScale = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_SetScale)
    GetScale = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_GetScale)
    GetUnderflowCount = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_GetUnderflowCount)
    GetOverflowCount = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_GetOverflowCount)
    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_OutputHasNumericTraitsCheck
    
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_InputPlusRealTypeCheck
    
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_RealTypeMultiplyOperatorCheck
    
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterISS3ISS3

        Create a new object of the class itkShiftScaleImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShiftScaleImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShiftScaleImageFilterISS3ISS3 in _itkShiftScaleImageFilterPython:
_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_swigregister(itkShiftScaleImageFilterISS3ISS3)
itkShiftScaleImageFilterISS3ISS3___New_orig__ = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3___New_orig__
itkShiftScaleImageFilterISS3ISS3_cast = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_cast


def itkShiftScaleImageFilterIUC2IUC2_New():
    return itkShiftScaleImageFilterIUC2IUC2.New()

class itkShiftScaleImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""


    Shift and scale the pixels in an image.

    ShiftScaleImageFilter shifts the input pixel by Shift (default 0.0)
    and then scales the pixel by Scale (default 1.0). All computations are
    performed in the precision of the input pixel's RealType. Before
    assigning the computed value to the output pixel, the value is clamped
    at the NonpositiveMin and max of the pixel type. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_Clone)
    SetShift = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_SetShift)
    GetShift = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_GetShift)
    SetScale = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_SetScale)
    GetScale = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_GetScale)
    GetUnderflowCount = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_GetUnderflowCount)
    GetOverflowCount = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_GetOverflowCount)
    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_OutputHasNumericTraitsCheck
    
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_InputPlusRealTypeCheck
    
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_RealTypeMultiplyOperatorCheck
    
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterIUC2IUC2

        Create a new object of the class itkShiftScaleImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShiftScaleImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShiftScaleImageFilterIUC2IUC2 in _itkShiftScaleImageFilterPython:
_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_swigregister(itkShiftScaleImageFilterIUC2IUC2)
itkShiftScaleImageFilterIUC2IUC2___New_orig__ = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2___New_orig__
itkShiftScaleImageFilterIUC2IUC2_cast = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_cast


def itkShiftScaleImageFilterIUC3IUC3_New():
    return itkShiftScaleImageFilterIUC3IUC3.New()

class itkShiftScaleImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""


    Shift and scale the pixels in an image.

    ShiftScaleImageFilter shifts the input pixel by Shift (default 0.0)
    and then scales the pixel by Scale (default 1.0). All computations are
    performed in the precision of the input pixel's RealType. Before
    assigning the computed value to the output pixel, the value is clamped
    at the NonpositiveMin and max of the pixel type. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_Clone)
    SetShift = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_SetShift)
    GetShift = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_GetShift)
    SetScale = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_SetScale)
    GetScale = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_GetScale)
    GetUnderflowCount = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_GetUnderflowCount)
    GetOverflowCount = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_GetOverflowCount)
    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_OutputHasNumericTraitsCheck
    
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_InputPlusRealTypeCheck
    
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_RealTypeMultiplyOperatorCheck
    
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterIUC3IUC3

        Create a new object of the class itkShiftScaleImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShiftScaleImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShiftScaleImageFilterIUC3IUC3 in _itkShiftScaleImageFilterPython:
_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_swigregister(itkShiftScaleImageFilterIUC3IUC3)
itkShiftScaleImageFilterIUC3IUC3___New_orig__ = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3___New_orig__
itkShiftScaleImageFilterIUC3IUC3_cast = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_cast


def itkShiftScaleImageFilterIUS2IUS2_New():
    return itkShiftScaleImageFilterIUS2IUS2.New()

class itkShiftScaleImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""


    Shift and scale the pixels in an image.

    ShiftScaleImageFilter shifts the input pixel by Shift (default 0.0)
    and then scales the pixel by Scale (default 1.0). All computations are
    performed in the precision of the input pixel's RealType. Before
    assigning the computed value to the output pixel, the value is clamped
    at the NonpositiveMin and max of the pixel type. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_Clone)
    SetShift = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_SetShift)
    GetShift = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_GetShift)
    SetScale = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_SetScale)
    GetScale = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_GetScale)
    GetUnderflowCount = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_GetUnderflowCount)
    GetOverflowCount = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_GetOverflowCount)
    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_OutputHasNumericTraitsCheck
    
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_InputPlusRealTypeCheck
    
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_RealTypeMultiplyOperatorCheck
    
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterIUS2IUS2

        Create a new object of the class itkShiftScaleImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShiftScaleImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShiftScaleImageFilterIUS2IUS2 in _itkShiftScaleImageFilterPython:
_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_swigregister(itkShiftScaleImageFilterIUS2IUS2)
itkShiftScaleImageFilterIUS2IUS2___New_orig__ = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2___New_orig__
itkShiftScaleImageFilterIUS2IUS2_cast = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_cast


def itkShiftScaleImageFilterIUS3IUS3_New():
    return itkShiftScaleImageFilterIUS3IUS3.New()

class itkShiftScaleImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""


    Shift and scale the pixels in an image.

    ShiftScaleImageFilter shifts the input pixel by Shift (default 0.0)
    and then scales the pixel by Scale (default 1.0). All computations are
    performed in the precision of the input pixel's RealType. Before
    assigning the computed value to the output pixel, the value is clamped
    at the NonpositiveMin and max of the pixel type. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_Clone)
    SetShift = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_SetShift)
    GetShift = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_GetShift)
    SetScale = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_SetScale)
    GetScale = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_GetScale)
    GetUnderflowCount = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_GetUnderflowCount)
    GetOverflowCount = _swig_new_instance_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_GetOverflowCount)
    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_OutputHasNumericTraitsCheck
    
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_InputPlusRealTypeCheck
    
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_RealTypeMultiplyOperatorCheck
    
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterIUS3IUS3

        Create a new object of the class itkShiftScaleImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShiftScaleImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShiftScaleImageFilterIUS3IUS3 in _itkShiftScaleImageFilterPython:
_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_swigregister(itkShiftScaleImageFilterIUS3IUS3)
itkShiftScaleImageFilterIUS3IUS3___New_orig__ = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3___New_orig__
itkShiftScaleImageFilterIUS3IUS3_cast = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def shift_scale_image_filter(*args, **kwargs):
    """Procedural interface for ShiftScaleImageFilter"""
    import itk
    instance = itk.ShiftScaleImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def shift_scale_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ShiftScaleImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ShiftScaleImageFilter.values()[0]
    else:
        filter_object = itk.ShiftScaleImageFilter

    shift_scale_image_filter.__doc__ = filter_object.__doc__
    shift_scale_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    shift_scale_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ShiftScaleImageFilter, itkTemplate.itkTemplate):
        shift_scale_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        shift_scale_image_filter.__doc__ += "\n"
        shift_scale_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        shift_scale_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



