# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKSpatialObjectsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSpatialObjectToImageFilterPython
else:
    import _itkSpatialObjectToImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkSpatialObjectToImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkSpatialObjectToImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkSizePython
import itk.itkSpatialObjectBasePython
import itk.itkSpatialObjectPropertyPython
import itk.itkRGBAPixelPython
import itk.ITKCommonBasePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkPointPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkVariableLengthVectorPython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkTransformBasePython
import itk.itkArray2DPython
import itk.itkImageSourcePython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkImageSourceCommonPython

def itkSpatialObjectToImageFilterSO2ID2_New():
    return itkSpatialObjectToImageFilterSO2ID2.New()

class itkSpatialObjectToImageFilterSO2ID2(itk.itkImageSourcePython.itkImageSourceID2):
    r"""


    Base class for filters that take a SpatialObject as input and produce
    an image as output. By default, if the user does not specify the size
    of the output image, the maximum size of the object's bounding box is
    used. The spacing of the image is given by the spacing of the input
    Spatial object.

    . 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_Clone)
    SetInput = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetInput)
    GetInput = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetInput)
    SetSpacing = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetSpacing)
    SetDirection = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetDirection)
    GetDirection = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetDirection)
    SetInsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetInsideValue)
    SetOutsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetOutsideValue)
    SetOrigin = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetOrigin)
    SetChildrenDepth = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetChildrenDepth)
    GetChildrenDepth = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetChildrenDepth)
    SetSize = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetSize)
    GetSize = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetSize)
    SetUseObjectValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_SetUseObjectValue)
    GetUseObjectValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_GetUseObjectValue)
    __swig_destroy__ = _itkSpatialObjectToImageFilterPython.delete_itkSpatialObjectToImageFilterSO2ID2
    cast = _swig_new_static_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectToImageFilterSO2ID2

        Create a new object of the class itkSpatialObjectToImageFilterSO2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectToImageFilterSO2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpatialObjectToImageFilterSO2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpatialObjectToImageFilterSO2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpatialObjectToImageFilterSO2ID2 in _itkSpatialObjectToImageFilterPython:
_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_swigregister(itkSpatialObjectToImageFilterSO2ID2)
itkSpatialObjectToImageFilterSO2ID2___New_orig__ = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2___New_orig__
itkSpatialObjectToImageFilterSO2ID2_cast = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ID2_cast


def itkSpatialObjectToImageFilterSO2IF2_New():
    return itkSpatialObjectToImageFilterSO2IF2.New()

class itkSpatialObjectToImageFilterSO2IF2(itk.itkImageSourcePython.itkImageSourceIF2):
    r"""


    Base class for filters that take a SpatialObject as input and produce
    an image as output. By default, if the user does not specify the size
    of the output image, the maximum size of the object's bounding box is
    used. The spacing of the image is given by the spacing of the input
    Spatial object.

    . 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_Clone)
    SetInput = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetInput)
    GetInput = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetInput)
    SetSpacing = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetSpacing)
    SetDirection = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetDirection)
    GetDirection = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetDirection)
    SetInsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetInsideValue)
    SetOutsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetOutsideValue)
    SetOrigin = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetOrigin)
    SetChildrenDepth = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetChildrenDepth)
    GetChildrenDepth = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetChildrenDepth)
    SetSize = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetSize)
    GetSize = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetSize)
    SetUseObjectValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_SetUseObjectValue)
    GetUseObjectValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_GetUseObjectValue)
    __swig_destroy__ = _itkSpatialObjectToImageFilterPython.delete_itkSpatialObjectToImageFilterSO2IF2
    cast = _swig_new_static_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectToImageFilterSO2IF2

        Create a new object of the class itkSpatialObjectToImageFilterSO2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectToImageFilterSO2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpatialObjectToImageFilterSO2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpatialObjectToImageFilterSO2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpatialObjectToImageFilterSO2IF2 in _itkSpatialObjectToImageFilterPython:
_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_swigregister(itkSpatialObjectToImageFilterSO2IF2)
itkSpatialObjectToImageFilterSO2IF2___New_orig__ = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2___New_orig__
itkSpatialObjectToImageFilterSO2IF2_cast = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IF2_cast


def itkSpatialObjectToImageFilterSO2ISS2_New():
    return itkSpatialObjectToImageFilterSO2ISS2.New()

class itkSpatialObjectToImageFilterSO2ISS2(itk.itkImageSourcePython.itkImageSourceISS2):
    r"""


    Base class for filters that take a SpatialObject as input and produce
    an image as output. By default, if the user does not specify the size
    of the output image, the maximum size of the object's bounding box is
    used. The spacing of the image is given by the spacing of the input
    Spatial object.

    . 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_Clone)
    SetInput = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetInput)
    GetInput = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetInput)
    SetSpacing = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetSpacing)
    SetDirection = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetDirection)
    GetDirection = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetDirection)
    SetInsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetInsideValue)
    SetOutsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetOutsideValue)
    SetOrigin = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetOrigin)
    SetChildrenDepth = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetChildrenDepth)
    GetChildrenDepth = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetChildrenDepth)
    SetSize = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetSize)
    GetSize = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetSize)
    SetUseObjectValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_SetUseObjectValue)
    GetUseObjectValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_GetUseObjectValue)
    __swig_destroy__ = _itkSpatialObjectToImageFilterPython.delete_itkSpatialObjectToImageFilterSO2ISS2
    cast = _swig_new_static_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectToImageFilterSO2ISS2

        Create a new object of the class itkSpatialObjectToImageFilterSO2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectToImageFilterSO2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpatialObjectToImageFilterSO2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpatialObjectToImageFilterSO2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpatialObjectToImageFilterSO2ISS2 in _itkSpatialObjectToImageFilterPython:
_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_swigregister(itkSpatialObjectToImageFilterSO2ISS2)
itkSpatialObjectToImageFilterSO2ISS2___New_orig__ = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2___New_orig__
itkSpatialObjectToImageFilterSO2ISS2_cast = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2ISS2_cast


def itkSpatialObjectToImageFilterSO2IUC2_New():
    return itkSpatialObjectToImageFilterSO2IUC2.New()

class itkSpatialObjectToImageFilterSO2IUC2(itk.itkImageSourcePython.itkImageSourceIUC2):
    r"""


    Base class for filters that take a SpatialObject as input and produce
    an image as output. By default, if the user does not specify the size
    of the output image, the maximum size of the object's bounding box is
    used. The spacing of the image is given by the spacing of the input
    Spatial object.

    . 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_Clone)
    SetInput = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetInput)
    SetSpacing = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetSpacing)
    SetDirection = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetDirection)
    GetDirection = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetDirection)
    SetInsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetInsideValue)
    SetOutsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetOutsideValue)
    SetOrigin = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetOrigin)
    SetChildrenDepth = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetChildrenDepth)
    GetChildrenDepth = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetChildrenDepth)
    SetSize = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetSize)
    GetSize = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetSize)
    SetUseObjectValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_SetUseObjectValue)
    GetUseObjectValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_GetUseObjectValue)
    __swig_destroy__ = _itkSpatialObjectToImageFilterPython.delete_itkSpatialObjectToImageFilterSO2IUC2
    cast = _swig_new_static_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectToImageFilterSO2IUC2

        Create a new object of the class itkSpatialObjectToImageFilterSO2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectToImageFilterSO2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpatialObjectToImageFilterSO2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpatialObjectToImageFilterSO2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpatialObjectToImageFilterSO2IUC2 in _itkSpatialObjectToImageFilterPython:
_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_swigregister(itkSpatialObjectToImageFilterSO2IUC2)
itkSpatialObjectToImageFilterSO2IUC2___New_orig__ = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2___New_orig__
itkSpatialObjectToImageFilterSO2IUC2_cast = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUC2_cast


def itkSpatialObjectToImageFilterSO2IUS2_New():
    return itkSpatialObjectToImageFilterSO2IUS2.New()

class itkSpatialObjectToImageFilterSO2IUS2(itk.itkImageSourcePython.itkImageSourceIUS2):
    r"""


    Base class for filters that take a SpatialObject as input and produce
    an image as output. By default, if the user does not specify the size
    of the output image, the maximum size of the object's bounding box is
    used. The spacing of the image is given by the spacing of the input
    Spatial object.

    . 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_Clone)
    SetInput = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetInput)
    GetInput = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetInput)
    SetSpacing = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetSpacing)
    SetDirection = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetDirection)
    GetDirection = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetDirection)
    SetInsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetInsideValue)
    SetOutsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetOutsideValue)
    SetOrigin = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetOrigin)
    SetChildrenDepth = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetChildrenDepth)
    GetChildrenDepth = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetChildrenDepth)
    SetSize = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetSize)
    GetSize = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetSize)
    SetUseObjectValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_SetUseObjectValue)
    GetUseObjectValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_GetUseObjectValue)
    __swig_destroy__ = _itkSpatialObjectToImageFilterPython.delete_itkSpatialObjectToImageFilterSO2IUS2
    cast = _swig_new_static_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectToImageFilterSO2IUS2

        Create a new object of the class itkSpatialObjectToImageFilterSO2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectToImageFilterSO2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpatialObjectToImageFilterSO2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpatialObjectToImageFilterSO2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpatialObjectToImageFilterSO2IUS2 in _itkSpatialObjectToImageFilterPython:
_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_swigregister(itkSpatialObjectToImageFilterSO2IUS2)
itkSpatialObjectToImageFilterSO2IUS2___New_orig__ = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2___New_orig__
itkSpatialObjectToImageFilterSO2IUS2_cast = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO2IUS2_cast


def itkSpatialObjectToImageFilterSO3ID3_New():
    return itkSpatialObjectToImageFilterSO3ID3.New()

class itkSpatialObjectToImageFilterSO3ID3(itk.itkImageSourcePython.itkImageSourceID3):
    r"""


    Base class for filters that take a SpatialObject as input and produce
    an image as output. By default, if the user does not specify the size
    of the output image, the maximum size of the object's bounding box is
    used. The spacing of the image is given by the spacing of the input
    Spatial object.

    . 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_Clone)
    SetInput = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetInput)
    GetInput = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetInput)
    SetSpacing = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetSpacing)
    SetDirection = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetDirection)
    GetDirection = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetDirection)
    SetInsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetInsideValue)
    SetOutsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetOutsideValue)
    SetOrigin = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetOrigin)
    SetChildrenDepth = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetChildrenDepth)
    GetChildrenDepth = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetChildrenDepth)
    SetSize = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetSize)
    GetSize = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetSize)
    SetUseObjectValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_SetUseObjectValue)
    GetUseObjectValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_GetUseObjectValue)
    __swig_destroy__ = _itkSpatialObjectToImageFilterPython.delete_itkSpatialObjectToImageFilterSO3ID3
    cast = _swig_new_static_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectToImageFilterSO3ID3

        Create a new object of the class itkSpatialObjectToImageFilterSO3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectToImageFilterSO3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpatialObjectToImageFilterSO3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpatialObjectToImageFilterSO3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpatialObjectToImageFilterSO3ID3 in _itkSpatialObjectToImageFilterPython:
_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_swigregister(itkSpatialObjectToImageFilterSO3ID3)
itkSpatialObjectToImageFilterSO3ID3___New_orig__ = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3___New_orig__
itkSpatialObjectToImageFilterSO3ID3_cast = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ID3_cast


def itkSpatialObjectToImageFilterSO3IF3_New():
    return itkSpatialObjectToImageFilterSO3IF3.New()

class itkSpatialObjectToImageFilterSO3IF3(itk.itkImageSourcePython.itkImageSourceIF3):
    r"""


    Base class for filters that take a SpatialObject as input and produce
    an image as output. By default, if the user does not specify the size
    of the output image, the maximum size of the object's bounding box is
    used. The spacing of the image is given by the spacing of the input
    Spatial object.

    . 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_Clone)
    SetInput = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetInput)
    GetInput = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetInput)
    SetSpacing = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetSpacing)
    SetDirection = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetDirection)
    GetDirection = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetDirection)
    SetInsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetInsideValue)
    SetOutsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetOutsideValue)
    SetOrigin = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetOrigin)
    SetChildrenDepth = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetChildrenDepth)
    GetChildrenDepth = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetChildrenDepth)
    SetSize = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetSize)
    GetSize = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetSize)
    SetUseObjectValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_SetUseObjectValue)
    GetUseObjectValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_GetUseObjectValue)
    __swig_destroy__ = _itkSpatialObjectToImageFilterPython.delete_itkSpatialObjectToImageFilterSO3IF3
    cast = _swig_new_static_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectToImageFilterSO3IF3

        Create a new object of the class itkSpatialObjectToImageFilterSO3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectToImageFilterSO3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpatialObjectToImageFilterSO3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpatialObjectToImageFilterSO3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpatialObjectToImageFilterSO3IF3 in _itkSpatialObjectToImageFilterPython:
_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_swigregister(itkSpatialObjectToImageFilterSO3IF3)
itkSpatialObjectToImageFilterSO3IF3___New_orig__ = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3___New_orig__
itkSpatialObjectToImageFilterSO3IF3_cast = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IF3_cast


def itkSpatialObjectToImageFilterSO3ISS3_New():
    return itkSpatialObjectToImageFilterSO3ISS3.New()

class itkSpatialObjectToImageFilterSO3ISS3(itk.itkImageSourcePython.itkImageSourceISS3):
    r"""


    Base class for filters that take a SpatialObject as input and produce
    an image as output. By default, if the user does not specify the size
    of the output image, the maximum size of the object's bounding box is
    used. The spacing of the image is given by the spacing of the input
    Spatial object.

    . 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_Clone)
    SetInput = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetInput)
    GetInput = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetInput)
    SetSpacing = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetSpacing)
    SetDirection = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetDirection)
    GetDirection = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetDirection)
    SetInsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetInsideValue)
    SetOutsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetOutsideValue)
    SetOrigin = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetOrigin)
    SetChildrenDepth = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetChildrenDepth)
    GetChildrenDepth = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetChildrenDepth)
    SetSize = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetSize)
    GetSize = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetSize)
    SetUseObjectValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_SetUseObjectValue)
    GetUseObjectValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_GetUseObjectValue)
    __swig_destroy__ = _itkSpatialObjectToImageFilterPython.delete_itkSpatialObjectToImageFilterSO3ISS3
    cast = _swig_new_static_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectToImageFilterSO3ISS3

        Create a new object of the class itkSpatialObjectToImageFilterSO3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectToImageFilterSO3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpatialObjectToImageFilterSO3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpatialObjectToImageFilterSO3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpatialObjectToImageFilterSO3ISS3 in _itkSpatialObjectToImageFilterPython:
_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_swigregister(itkSpatialObjectToImageFilterSO3ISS3)
itkSpatialObjectToImageFilterSO3ISS3___New_orig__ = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3___New_orig__
itkSpatialObjectToImageFilterSO3ISS3_cast = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3ISS3_cast


def itkSpatialObjectToImageFilterSO3IUC3_New():
    return itkSpatialObjectToImageFilterSO3IUC3.New()

class itkSpatialObjectToImageFilterSO3IUC3(itk.itkImageSourcePython.itkImageSourceIUC3):
    r"""


    Base class for filters that take a SpatialObject as input and produce
    an image as output. By default, if the user does not specify the size
    of the output image, the maximum size of the object's bounding box is
    used. The spacing of the image is given by the spacing of the input
    Spatial object.

    . 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_Clone)
    SetInput = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetInput)
    SetSpacing = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetSpacing)
    SetDirection = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetDirection)
    GetDirection = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetDirection)
    SetInsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetInsideValue)
    SetOutsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetOutsideValue)
    SetOrigin = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetOrigin)
    SetChildrenDepth = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetChildrenDepth)
    GetChildrenDepth = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetChildrenDepth)
    SetSize = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetSize)
    GetSize = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetSize)
    SetUseObjectValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_SetUseObjectValue)
    GetUseObjectValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_GetUseObjectValue)
    __swig_destroy__ = _itkSpatialObjectToImageFilterPython.delete_itkSpatialObjectToImageFilterSO3IUC3
    cast = _swig_new_static_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectToImageFilterSO3IUC3

        Create a new object of the class itkSpatialObjectToImageFilterSO3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectToImageFilterSO3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpatialObjectToImageFilterSO3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpatialObjectToImageFilterSO3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpatialObjectToImageFilterSO3IUC3 in _itkSpatialObjectToImageFilterPython:
_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_swigregister(itkSpatialObjectToImageFilterSO3IUC3)
itkSpatialObjectToImageFilterSO3IUC3___New_orig__ = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3___New_orig__
itkSpatialObjectToImageFilterSO3IUC3_cast = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUC3_cast


def itkSpatialObjectToImageFilterSO3IUS3_New():
    return itkSpatialObjectToImageFilterSO3IUS3.New()

class itkSpatialObjectToImageFilterSO3IUS3(itk.itkImageSourcePython.itkImageSourceIUS3):
    r"""


    Base class for filters that take a SpatialObject as input and produce
    an image as output. By default, if the user does not specify the size
    of the output image, the maximum size of the object's bounding box is
    used. The spacing of the image is given by the spacing of the input
    Spatial object.

    . 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_Clone)
    SetInput = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetInput)
    GetInput = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetInput)
    SetSpacing = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetSpacing)
    SetDirection = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetDirection)
    GetDirection = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetDirection)
    SetInsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetInsideValue)
    SetOutsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetOutsideValue)
    SetOrigin = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetOrigin)
    SetChildrenDepth = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetChildrenDepth)
    GetChildrenDepth = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetChildrenDepth)
    SetSize = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetSize)
    GetSize = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetSize)
    SetUseObjectValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_SetUseObjectValue)
    GetUseObjectValue = _swig_new_instance_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_GetUseObjectValue)
    __swig_destroy__ = _itkSpatialObjectToImageFilterPython.delete_itkSpatialObjectToImageFilterSO3IUS3
    cast = _swig_new_static_method(_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectToImageFilterSO3IUS3

        Create a new object of the class itkSpatialObjectToImageFilterSO3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectToImageFilterSO3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpatialObjectToImageFilterSO3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpatialObjectToImageFilterSO3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpatialObjectToImageFilterSO3IUS3 in _itkSpatialObjectToImageFilterPython:
_itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_swigregister(itkSpatialObjectToImageFilterSO3IUS3)
itkSpatialObjectToImageFilterSO3IUS3___New_orig__ = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3___New_orig__
itkSpatialObjectToImageFilterSO3IUS3_cast = _itkSpatialObjectToImageFilterPython.itkSpatialObjectToImageFilterSO3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def spatial_object_to_image_filter(*args, **kwargs):
    """Procedural interface for SpatialObjectToImageFilter"""
    import itk
    instance = itk.SpatialObjectToImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def spatial_object_to_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.SpatialObjectToImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.SpatialObjectToImageFilter.values()[0]
    else:
        filter_object = itk.SpatialObjectToImageFilter

    spatial_object_to_image_filter.__doc__ = filter_object.__doc__
    spatial_object_to_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    spatial_object_to_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.SpatialObjectToImageFilter, itkTemplate.itkTemplate):
        spatial_object_to_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        spatial_object_to_image_filter.__doc__ += "\n"
        spatial_object_to_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        spatial_object_to_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



