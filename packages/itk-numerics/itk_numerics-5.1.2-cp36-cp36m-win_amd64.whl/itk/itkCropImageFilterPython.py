# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageGridPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkCropImageFilterPython
else:
    import _itkCropImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkCropImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkCropImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkExtractImageFilterPython
import itk.itkInPlaceImageFilterBPython
import itk.itkImageToImageFilterBPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.stdcomplexPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkPointPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkRGBAPixelPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython

def itkCropImageFilterICF2ICF2_New():
    return itkCropImageFilterICF2ICF2.New()

class itkCropImageFilterICF2ICF2(itk.itkExtractImageFilterPython.itkExtractImageFilterICF2ICF2):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterICF2ICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICF2ICF2_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICF2ICF2_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICF2ICF2_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICF2ICF2_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICF2ICF2_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICF2ICF2_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterICF2ICF2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterICF2ICF2_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterICF2ICF2
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterICF2ICF2_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterICF2ICF2

        Create a new object of the class itkCropImageFilterICF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterICF2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterICF2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterICF2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterICF2ICF2 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterICF2ICF2_swigregister(itkCropImageFilterICF2ICF2)
itkCropImageFilterICF2ICF2___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterICF2ICF2___New_orig__
itkCropImageFilterICF2ICF2_cast = _itkCropImageFilterPython.itkCropImageFilterICF2ICF2_cast


def itkCropImageFilterICF3ICF3_New():
    return itkCropImageFilterICF3ICF3.New()

class itkCropImageFilterICF3ICF3(itk.itkExtractImageFilterPython.itkExtractImageFilterICF3ICF3):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterICF3ICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICF3ICF3_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICF3ICF3_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICF3ICF3_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICF3ICF3_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICF3ICF3_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICF3ICF3_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterICF3ICF3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterICF3ICF3_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterICF3ICF3
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterICF3ICF3_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterICF3ICF3

        Create a new object of the class itkCropImageFilterICF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterICF3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterICF3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterICF3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterICF3ICF3 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterICF3ICF3_swigregister(itkCropImageFilterICF3ICF3)
itkCropImageFilterICF3ICF3___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterICF3ICF3___New_orig__
itkCropImageFilterICF3ICF3_cast = _itkCropImageFilterPython.itkCropImageFilterICF3ICF3_cast


def itkCropImageFilterICVF22ICVF22_New():
    return itkCropImageFilterICVF22ICVF22.New()

class itkCropImageFilterICVF22ICVF22(itk.itkExtractImageFilterPython.itkExtractImageFilterICVF22ICVF22):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterICVF22ICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF22ICVF22_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF22ICVF22_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF22ICVF22_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF22ICVF22_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF22ICVF22_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF22ICVF22_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterICVF22ICVF22_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterICVF22ICVF22_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterICVF22ICVF22
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterICVF22ICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterICVF22ICVF22

        Create a new object of the class itkCropImageFilterICVF22ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterICVF22ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterICVF22ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterICVF22ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterICVF22ICVF22 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterICVF22ICVF22_swigregister(itkCropImageFilterICVF22ICVF22)
itkCropImageFilterICVF22ICVF22___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterICVF22ICVF22___New_orig__
itkCropImageFilterICVF22ICVF22_cast = _itkCropImageFilterPython.itkCropImageFilterICVF22ICVF22_cast


def itkCropImageFilterICVF23ICVF23_New():
    return itkCropImageFilterICVF23ICVF23.New()

class itkCropImageFilterICVF23ICVF23(itk.itkExtractImageFilterPython.itkExtractImageFilterICVF23ICVF23):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterICVF23ICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF23ICVF23_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF23ICVF23_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF23ICVF23_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF23ICVF23_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF23ICVF23_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF23ICVF23_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterICVF23ICVF23_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterICVF23ICVF23_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterICVF23ICVF23
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterICVF23ICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterICVF23ICVF23

        Create a new object of the class itkCropImageFilterICVF23ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterICVF23ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterICVF23ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterICVF23ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterICVF23ICVF23 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterICVF23ICVF23_swigregister(itkCropImageFilterICVF23ICVF23)
itkCropImageFilterICVF23ICVF23___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterICVF23ICVF23___New_orig__
itkCropImageFilterICVF23ICVF23_cast = _itkCropImageFilterPython.itkCropImageFilterICVF23ICVF23_cast


def itkCropImageFilterICVF32ICVF32_New():
    return itkCropImageFilterICVF32ICVF32.New()

class itkCropImageFilterICVF32ICVF32(itk.itkExtractImageFilterPython.itkExtractImageFilterICVF32ICVF32):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterICVF32ICVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF32ICVF32_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF32ICVF32_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF32ICVF32_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF32ICVF32_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF32ICVF32_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF32ICVF32_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterICVF32ICVF32_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterICVF32ICVF32_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterICVF32ICVF32
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterICVF32ICVF32_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterICVF32ICVF32

        Create a new object of the class itkCropImageFilterICVF32ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterICVF32ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterICVF32ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterICVF32ICVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterICVF32ICVF32 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterICVF32ICVF32_swigregister(itkCropImageFilterICVF32ICVF32)
itkCropImageFilterICVF32ICVF32___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterICVF32ICVF32___New_orig__
itkCropImageFilterICVF32ICVF32_cast = _itkCropImageFilterPython.itkCropImageFilterICVF32ICVF32_cast


def itkCropImageFilterICVF33ICVF33_New():
    return itkCropImageFilterICVF33ICVF33.New()

class itkCropImageFilterICVF33ICVF33(itk.itkExtractImageFilterPython.itkExtractImageFilterICVF33ICVF33):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterICVF33ICVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF33ICVF33_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF33ICVF33_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF33ICVF33_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF33ICVF33_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF33ICVF33_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF33ICVF33_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterICVF33ICVF33_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterICVF33ICVF33_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterICVF33ICVF33
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterICVF33ICVF33_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterICVF33ICVF33

        Create a new object of the class itkCropImageFilterICVF33ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterICVF33ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterICVF33ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterICVF33ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterICVF33ICVF33 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterICVF33ICVF33_swigregister(itkCropImageFilterICVF33ICVF33)
itkCropImageFilterICVF33ICVF33___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterICVF33ICVF33___New_orig__
itkCropImageFilterICVF33ICVF33_cast = _itkCropImageFilterPython.itkCropImageFilterICVF33ICVF33_cast


def itkCropImageFilterICVF42ICVF42_New():
    return itkCropImageFilterICVF42ICVF42.New()

class itkCropImageFilterICVF42ICVF42(itk.itkExtractImageFilterPython.itkExtractImageFilterICVF42ICVF42):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterICVF42ICVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF42ICVF42_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF42ICVF42_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF42ICVF42_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF42ICVF42_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF42ICVF42_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF42ICVF42_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterICVF42ICVF42_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterICVF42ICVF42_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterICVF42ICVF42
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterICVF42ICVF42_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterICVF42ICVF42

        Create a new object of the class itkCropImageFilterICVF42ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterICVF42ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterICVF42ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterICVF42ICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterICVF42ICVF42 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterICVF42ICVF42_swigregister(itkCropImageFilterICVF42ICVF42)
itkCropImageFilterICVF42ICVF42___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterICVF42ICVF42___New_orig__
itkCropImageFilterICVF42ICVF42_cast = _itkCropImageFilterPython.itkCropImageFilterICVF42ICVF42_cast


def itkCropImageFilterICVF43ICVF43_New():
    return itkCropImageFilterICVF43ICVF43.New()

class itkCropImageFilterICVF43ICVF43(itk.itkExtractImageFilterPython.itkExtractImageFilterICVF43ICVF43):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterICVF43ICVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF43ICVF43_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF43ICVF43_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF43ICVF43_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF43ICVF43_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF43ICVF43_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterICVF43ICVF43_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterICVF43ICVF43_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterICVF43ICVF43_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterICVF43ICVF43
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterICVF43ICVF43_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterICVF43ICVF43

        Create a new object of the class itkCropImageFilterICVF43ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterICVF43ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterICVF43ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterICVF43ICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterICVF43ICVF43 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterICVF43ICVF43_swigregister(itkCropImageFilterICVF43ICVF43)
itkCropImageFilterICVF43ICVF43___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterICVF43ICVF43___New_orig__
itkCropImageFilterICVF43ICVF43_cast = _itkCropImageFilterPython.itkCropImageFilterICVF43ICVF43_cast


def itkCropImageFilterID2ID2_New():
    return itkCropImageFilterID2ID2.New()

class itkCropImageFilterID2ID2(itk.itkExtractImageFilterPython.itkExtractImageFilterID2ID2):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterID2ID2_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterID2ID2_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterID2ID2_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterID2ID2_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterID2ID2_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterID2ID2_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterID2ID2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterID2ID2_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterID2ID2
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterID2ID2

        Create a new object of the class itkCropImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterID2ID2 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterID2ID2_swigregister(itkCropImageFilterID2ID2)
itkCropImageFilterID2ID2___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterID2ID2___New_orig__
itkCropImageFilterID2ID2_cast = _itkCropImageFilterPython.itkCropImageFilterID2ID2_cast


def itkCropImageFilterID3ID3_New():
    return itkCropImageFilterID3ID3.New()

class itkCropImageFilterID3ID3(itk.itkExtractImageFilterPython.itkExtractImageFilterID3ID3):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterID3ID3_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterID3ID3_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterID3ID3_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterID3ID3_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterID3ID3_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterID3ID3_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterID3ID3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterID3ID3_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterID3ID3
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterID3ID3

        Create a new object of the class itkCropImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterID3ID3 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterID3ID3_swigregister(itkCropImageFilterID3ID3)
itkCropImageFilterID3ID3___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterID3ID3___New_orig__
itkCropImageFilterID3ID3_cast = _itkCropImageFilterPython.itkCropImageFilterID3ID3_cast


def itkCropImageFilterIF2IF2_New():
    return itkCropImageFilterIF2IF2.New()

class itkCropImageFilterIF2IF2(itk.itkExtractImageFilterPython.itkExtractImageFilterIF2IF2):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIF2IF2_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIF2IF2_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIF2IF2_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIF2IF2_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIF2IF2_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIF2IF2_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIF2IF2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIF2IF2_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIF2IF2
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIF2IF2

        Create a new object of the class itkCropImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIF2IF2 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIF2IF2_swigregister(itkCropImageFilterIF2IF2)
itkCropImageFilterIF2IF2___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterIF2IF2___New_orig__
itkCropImageFilterIF2IF2_cast = _itkCropImageFilterPython.itkCropImageFilterIF2IF2_cast


def itkCropImageFilterIF3IF3_New():
    return itkCropImageFilterIF3IF3.New()

class itkCropImageFilterIF3IF3(itk.itkExtractImageFilterPython.itkExtractImageFilterIF3IF3):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIF3IF3_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIF3IF3_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIF3IF3_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIF3IF3_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIF3IF3_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIF3IF3_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIF3IF3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIF3IF3_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIF3IF3
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIF3IF3

        Create a new object of the class itkCropImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIF3IF3 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIF3IF3_swigregister(itkCropImageFilterIF3IF3)
itkCropImageFilterIF3IF3___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterIF3IF3___New_orig__
itkCropImageFilterIF3IF3_cast = _itkCropImageFilterPython.itkCropImageFilterIF3IF3_cast


def itkCropImageFilterIRGBAUC2IRGBAUC2_New():
    return itkCropImageFilterIRGBAUC2IRGBAUC2.New()

class itkCropImageFilterIRGBAUC2IRGBAUC2(itk.itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC2IRGBAUC2):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIRGBAUC2IRGBAUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIRGBAUC2IRGBAUC2_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIRGBAUC2IRGBAUC2_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIRGBAUC2IRGBAUC2_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIRGBAUC2IRGBAUC2_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIRGBAUC2IRGBAUC2_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIRGBAUC2IRGBAUC2_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIRGBAUC2IRGBAUC2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIRGBAUC2IRGBAUC2_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIRGBAUC2IRGBAUC2
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIRGBAUC2IRGBAUC2_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIRGBAUC2IRGBAUC2

        Create a new object of the class itkCropImageFilterIRGBAUC2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIRGBAUC2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIRGBAUC2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIRGBAUC2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIRGBAUC2IRGBAUC2 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIRGBAUC2IRGBAUC2_swigregister(itkCropImageFilterIRGBAUC2IRGBAUC2)
itkCropImageFilterIRGBAUC2IRGBAUC2___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterIRGBAUC2IRGBAUC2___New_orig__
itkCropImageFilterIRGBAUC2IRGBAUC2_cast = _itkCropImageFilterPython.itkCropImageFilterIRGBAUC2IRGBAUC2_cast


def itkCropImageFilterIRGBAUC3IRGBAUC3_New():
    return itkCropImageFilterIRGBAUC3IRGBAUC3.New()

class itkCropImageFilterIRGBAUC3IRGBAUC3(itk.itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC3IRGBAUC3):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIRGBAUC3IRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIRGBAUC3IRGBAUC3_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIRGBAUC3IRGBAUC3_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIRGBAUC3IRGBAUC3_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIRGBAUC3IRGBAUC3_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIRGBAUC3IRGBAUC3_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIRGBAUC3IRGBAUC3_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIRGBAUC3IRGBAUC3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIRGBAUC3IRGBAUC3_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIRGBAUC3IRGBAUC3
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIRGBAUC3IRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIRGBAUC3IRGBAUC3

        Create a new object of the class itkCropImageFilterIRGBAUC3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIRGBAUC3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIRGBAUC3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIRGBAUC3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIRGBAUC3IRGBAUC3 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIRGBAUC3IRGBAUC3_swigregister(itkCropImageFilterIRGBAUC3IRGBAUC3)
itkCropImageFilterIRGBAUC3IRGBAUC3___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterIRGBAUC3IRGBAUC3___New_orig__
itkCropImageFilterIRGBAUC3IRGBAUC3_cast = _itkCropImageFilterPython.itkCropImageFilterIRGBAUC3IRGBAUC3_cast


def itkCropImageFilterIRGBUC2IRGBUC2_New():
    return itkCropImageFilterIRGBUC2IRGBUC2.New()

class itkCropImageFilterIRGBUC2IRGBUC2(itk.itkExtractImageFilterPython.itkExtractImageFilterIRGBUC2IRGBUC2):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIRGBUC2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIRGBUC2IRGBUC2_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIRGBUC2IRGBUC2_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIRGBUC2IRGBUC2_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIRGBUC2IRGBUC2_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIRGBUC2IRGBUC2_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIRGBUC2IRGBUC2_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIRGBUC2IRGBUC2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIRGBUC2IRGBUC2_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIRGBUC2IRGBUC2
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIRGBUC2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIRGBUC2IRGBUC2

        Create a new object of the class itkCropImageFilterIRGBUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIRGBUC2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIRGBUC2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIRGBUC2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIRGBUC2IRGBUC2 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIRGBUC2IRGBUC2_swigregister(itkCropImageFilterIRGBUC2IRGBUC2)
itkCropImageFilterIRGBUC2IRGBUC2___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterIRGBUC2IRGBUC2___New_orig__
itkCropImageFilterIRGBUC2IRGBUC2_cast = _itkCropImageFilterPython.itkCropImageFilterIRGBUC2IRGBUC2_cast


def itkCropImageFilterIRGBUC3IRGBUC3_New():
    return itkCropImageFilterIRGBUC3IRGBUC3.New()

class itkCropImageFilterIRGBUC3IRGBUC3(itk.itkExtractImageFilterPython.itkExtractImageFilterIRGBUC3IRGBUC3):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIRGBUC3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIRGBUC3IRGBUC3_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIRGBUC3IRGBUC3_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIRGBUC3IRGBUC3_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIRGBUC3IRGBUC3_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIRGBUC3IRGBUC3_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIRGBUC3IRGBUC3_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIRGBUC3IRGBUC3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIRGBUC3IRGBUC3_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIRGBUC3IRGBUC3
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIRGBUC3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIRGBUC3IRGBUC3

        Create a new object of the class itkCropImageFilterIRGBUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIRGBUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIRGBUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIRGBUC3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIRGBUC3IRGBUC3 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIRGBUC3IRGBUC3_swigregister(itkCropImageFilterIRGBUC3IRGBUC3)
itkCropImageFilterIRGBUC3IRGBUC3___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterIRGBUC3IRGBUC3___New_orig__
itkCropImageFilterIRGBUC3IRGBUC3_cast = _itkCropImageFilterPython.itkCropImageFilterIRGBUC3IRGBUC3_cast


def itkCropImageFilterISS2ISS2_New():
    return itkCropImageFilterISS2ISS2.New()

class itkCropImageFilterISS2ISS2(itk.itkExtractImageFilterPython.itkExtractImageFilterISS2ISS2):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterISS2ISS2_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterISS2ISS2_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterISS2ISS2_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterISS2ISS2_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterISS2ISS2_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterISS2ISS2_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterISS2ISS2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterISS2ISS2_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterISS2ISS2

        Create a new object of the class itkCropImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterISS2ISS2 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterISS2ISS2_swigregister(itkCropImageFilterISS2ISS2)
itkCropImageFilterISS2ISS2___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterISS2ISS2___New_orig__
itkCropImageFilterISS2ISS2_cast = _itkCropImageFilterPython.itkCropImageFilterISS2ISS2_cast


def itkCropImageFilterISS3ISS3_New():
    return itkCropImageFilterISS3ISS3.New()

class itkCropImageFilterISS3ISS3(itk.itkExtractImageFilterPython.itkExtractImageFilterISS3ISS3):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterISS3ISS3_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterISS3ISS3_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterISS3ISS3_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterISS3ISS3_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterISS3ISS3_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterISS3ISS3_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterISS3ISS3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterISS3ISS3_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterISS3ISS3

        Create a new object of the class itkCropImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterISS3ISS3 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterISS3ISS3_swigregister(itkCropImageFilterISS3ISS3)
itkCropImageFilterISS3ISS3___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterISS3ISS3___New_orig__
itkCropImageFilterISS3ISS3_cast = _itkCropImageFilterPython.itkCropImageFilterISS3ISS3_cast


def itkCropImageFilterIUC2IUC2_New():
    return itkCropImageFilterIUC2IUC2.New()

class itkCropImageFilterIUC2IUC2(itk.itkExtractImageFilterPython.itkExtractImageFilterIUC2IUC2):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIUC2IUC2_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIUC2IUC2_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIUC2IUC2_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIUC2IUC2_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIUC2IUC2_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIUC2IUC2_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIUC2IUC2_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIUC2IUC2

        Create a new object of the class itkCropImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIUC2IUC2 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIUC2IUC2_swigregister(itkCropImageFilterIUC2IUC2)
itkCropImageFilterIUC2IUC2___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterIUC2IUC2___New_orig__
itkCropImageFilterIUC2IUC2_cast = _itkCropImageFilterPython.itkCropImageFilterIUC2IUC2_cast


def itkCropImageFilterIUC3IUC3_New():
    return itkCropImageFilterIUC3IUC3.New()

class itkCropImageFilterIUC3IUC3(itk.itkExtractImageFilterPython.itkExtractImageFilterIUC3IUC3):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIUC3IUC3_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIUC3IUC3_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIUC3IUC3_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIUC3IUC3_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIUC3IUC3_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIUC3IUC3_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIUC3IUC3_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIUC3IUC3

        Create a new object of the class itkCropImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIUC3IUC3 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIUC3IUC3_swigregister(itkCropImageFilterIUC3IUC3)
itkCropImageFilterIUC3IUC3___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterIUC3IUC3___New_orig__
itkCropImageFilterIUC3IUC3_cast = _itkCropImageFilterPython.itkCropImageFilterIUC3IUC3_cast


def itkCropImageFilterIUS2IUS2_New():
    return itkCropImageFilterIUS2IUS2.New()

class itkCropImageFilterIUS2IUS2(itk.itkExtractImageFilterPython.itkExtractImageFilterIUS2IUS2):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIUS2IUS2_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIUS2IUS2_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIUS2IUS2_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIUS2IUS2_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIUS2IUS2_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIUS2IUS2_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIUS2IUS2_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIUS2IUS2

        Create a new object of the class itkCropImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIUS2IUS2 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIUS2IUS2_swigregister(itkCropImageFilterIUS2IUS2)
itkCropImageFilterIUS2IUS2___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterIUS2IUS2___New_orig__
itkCropImageFilterIUS2IUS2_cast = _itkCropImageFilterPython.itkCropImageFilterIUS2IUS2_cast


def itkCropImageFilterIUS3IUS3_New():
    return itkCropImageFilterIUS3IUS3.New()

class itkCropImageFilterIUS3IUS3(itk.itkExtractImageFilterPython.itkExtractImageFilterIUS3IUS3):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIUS3IUS3_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIUS3IUS3_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIUS3IUS3_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIUS3IUS3_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIUS3IUS3_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIUS3IUS3_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIUS3IUS3_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIUS3IUS3

        Create a new object of the class itkCropImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIUS3IUS3 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIUS3IUS3_swigregister(itkCropImageFilterIUS3IUS3)
itkCropImageFilterIUS3IUS3___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterIUS3IUS3___New_orig__
itkCropImageFilterIUS3IUS3_cast = _itkCropImageFilterPython.itkCropImageFilterIUS3IUS3_cast


def itkCropImageFilterIVF22IVF22_New():
    return itkCropImageFilterIVF22IVF22.New()

class itkCropImageFilterIVF22IVF22(itk.itkExtractImageFilterPython.itkExtractImageFilterIVF22IVF22):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIVF22IVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF22IVF22_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF22IVF22_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF22IVF22_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF22IVF22_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF22IVF22_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF22IVF22_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIVF22IVF22_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIVF22IVF22_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIVF22IVF22
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIVF22IVF22_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIVF22IVF22

        Create a new object of the class itkCropImageFilterIVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIVF22IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIVF22IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIVF22IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIVF22IVF22 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIVF22IVF22_swigregister(itkCropImageFilterIVF22IVF22)
itkCropImageFilterIVF22IVF22___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterIVF22IVF22___New_orig__
itkCropImageFilterIVF22IVF22_cast = _itkCropImageFilterPython.itkCropImageFilterIVF22IVF22_cast


def itkCropImageFilterIVF23IVF23_New():
    return itkCropImageFilterIVF23IVF23.New()

class itkCropImageFilterIVF23IVF23(itk.itkExtractImageFilterPython.itkExtractImageFilterIVF23IVF23):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIVF23IVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF23IVF23_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF23IVF23_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF23IVF23_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF23IVF23_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF23IVF23_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF23IVF23_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIVF23IVF23_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIVF23IVF23_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIVF23IVF23
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIVF23IVF23_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIVF23IVF23

        Create a new object of the class itkCropImageFilterIVF23IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIVF23IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIVF23IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIVF23IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIVF23IVF23 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIVF23IVF23_swigregister(itkCropImageFilterIVF23IVF23)
itkCropImageFilterIVF23IVF23___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterIVF23IVF23___New_orig__
itkCropImageFilterIVF23IVF23_cast = _itkCropImageFilterPython.itkCropImageFilterIVF23IVF23_cast


def itkCropImageFilterIVF32IVF32_New():
    return itkCropImageFilterIVF32IVF32.New()

class itkCropImageFilterIVF32IVF32(itk.itkExtractImageFilterPython.itkExtractImageFilterIVF32IVF32):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIVF32IVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF32IVF32_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF32IVF32_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF32IVF32_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF32IVF32_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF32IVF32_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF32IVF32_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIVF32IVF32_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIVF32IVF32_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIVF32IVF32
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIVF32IVF32_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIVF32IVF32

        Create a new object of the class itkCropImageFilterIVF32IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIVF32IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIVF32IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIVF32IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIVF32IVF32 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIVF32IVF32_swigregister(itkCropImageFilterIVF32IVF32)
itkCropImageFilterIVF32IVF32___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterIVF32IVF32___New_orig__
itkCropImageFilterIVF32IVF32_cast = _itkCropImageFilterPython.itkCropImageFilterIVF32IVF32_cast


def itkCropImageFilterIVF33IVF33_New():
    return itkCropImageFilterIVF33IVF33.New()

class itkCropImageFilterIVF33IVF33(itk.itkExtractImageFilterPython.itkExtractImageFilterIVF33IVF33):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIVF33IVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF33IVF33_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF33IVF33_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF33IVF33_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF33IVF33_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF33IVF33_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF33IVF33_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIVF33IVF33_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIVF33IVF33_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIVF33IVF33
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIVF33IVF33_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIVF33IVF33

        Create a new object of the class itkCropImageFilterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIVF33IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIVF33IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIVF33IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIVF33IVF33 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIVF33IVF33_swigregister(itkCropImageFilterIVF33IVF33)
itkCropImageFilterIVF33IVF33___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterIVF33IVF33___New_orig__
itkCropImageFilterIVF33IVF33_cast = _itkCropImageFilterPython.itkCropImageFilterIVF33IVF33_cast


def itkCropImageFilterIVF42IVF42_New():
    return itkCropImageFilterIVF42IVF42.New()

class itkCropImageFilterIVF42IVF42(itk.itkExtractImageFilterPython.itkExtractImageFilterIVF42IVF42):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIVF42IVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF42IVF42_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF42IVF42_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF42IVF42_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF42IVF42_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF42IVF42_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF42IVF42_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIVF42IVF42_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIVF42IVF42_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIVF42IVF42
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIVF42IVF42_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIVF42IVF42

        Create a new object of the class itkCropImageFilterIVF42IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIVF42IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIVF42IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIVF42IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIVF42IVF42 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIVF42IVF42_swigregister(itkCropImageFilterIVF42IVF42)
itkCropImageFilterIVF42IVF42___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterIVF42IVF42___New_orig__
itkCropImageFilterIVF42IVF42_cast = _itkCropImageFilterPython.itkCropImageFilterIVF42IVF42_cast


def itkCropImageFilterIVF43IVF43_New():
    return itkCropImageFilterIVF43IVF43.New()

class itkCropImageFilterIVF43IVF43(itk.itkExtractImageFilterPython.itkExtractImageFilterIVF43IVF43):
    r"""


    Decrease the image size by cropping the image by an itk::Size at both
    the upper and lower bounds of the largest possible region.

    CropImageFilter changes the image boundary of an image by removing
    pixels outside the target region. The target region is not specified
    in advance, but calculated in BeforeThreadedGenerateData().

    This filter uses ExtractImageFilter to perform the cropping.

    {Filtering/ImageGrid/CropImageBySpecifyingRegion2,Crop Image By
    Specifying Region} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIVF43IVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF43IVF43_Clone)
    SetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF43IVF43_SetUpperBoundaryCropSize)
    GetUpperBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF43IVF43_GetUpperBoundaryCropSize)
    SetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF43IVF43_SetLowerBoundaryCropSize)
    GetLowerBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF43IVF43_GetLowerBoundaryCropSize)
    SetBoundaryCropSize = _swig_new_instance_method(_itkCropImageFilterPython.itkCropImageFilterIVF43IVF43_SetBoundaryCropSize)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIVF43IVF43_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIVF43IVF43_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIVF43IVF43
    cast = _swig_new_static_method(_itkCropImageFilterPython.itkCropImageFilterIVF43IVF43_cast)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIVF43IVF43

        Create a new object of the class itkCropImageFilterIVF43IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIVF43IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIVF43IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIVF43IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIVF43IVF43 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIVF43IVF43_swigregister(itkCropImageFilterIVF43IVF43)
itkCropImageFilterIVF43IVF43___New_orig__ = _itkCropImageFilterPython.itkCropImageFilterIVF43IVF43___New_orig__
itkCropImageFilterIVF43IVF43_cast = _itkCropImageFilterPython.itkCropImageFilterIVF43IVF43_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def crop_image_filter(*args, **kwargs):
    """Procedural interface for CropImageFilter"""
    import itk
    instance = itk.CropImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def crop_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.CropImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.CropImageFilter.values()[0]
    else:
        filter_object = itk.CropImageFilter

    crop_image_filter.__doc__ = filter_object.__doc__
    crop_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    crop_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.CropImageFilter, itkTemplate.itkTemplate):
        crop_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        crop_image_filter.__doc__ += "\n"
        crop_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        crop_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



