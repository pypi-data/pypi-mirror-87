# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import ansys.grpc.dpf.base_pb2 as base__pb2
import ansys.grpc.dpf.field_pb2 as field__pb2
import ansys.grpc.dpf.support_pb2 as support__pb2


class FieldServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Create = channel.unary_unary(
        '/ansys.api.dpf.field.v0.FieldService/Create',
        request_serializer=field__pb2.FieldRequest.SerializeToString,
        response_deserializer=field__pb2.Field.FromString,
        )
    self.UpdateData = channel.unary_unary(
        '/ansys.api.dpf.field.v0.FieldService/UpdateData',
        request_serializer=field__pb2.UpdateDataRequest.SerializeToString,
        response_deserializer=base__pb2.Empty.FromString,
        )
    self.UpdateScoping = channel.unary_unary(
        '/ansys.api.dpf.field.v0.FieldService/UpdateScoping',
        request_serializer=field__pb2.UpdateScopingRequest.SerializeToString,
        response_deserializer=base__pb2.Empty.FromString,
        )
    self.UpdateSize = channel.unary_unary(
        '/ansys.api.dpf.field.v0.FieldService/UpdateSize',
        request_serializer=field__pb2.UpdateSizeRequest.SerializeToString,
        response_deserializer=base__pb2.Empty.FromString,
        )
    self.List = channel.unary_stream(
        '/ansys.api.dpf.field.v0.FieldService/List',
        request_serializer=field__pb2.ListRequest.SerializeToString,
        response_deserializer=field__pb2.ListResponse.FromString,
        )
    self.GetScoping = channel.unary_unary(
        '/ansys.api.dpf.field.v0.FieldService/GetScoping',
        request_serializer=field__pb2.GetRequest.SerializeToString,
        response_deserializer=field__pb2.GetScopingResponse.FromString,
        )
    self.GetSupport = channel.unary_unary(
        '/ansys.api.dpf.field.v0.FieldService/GetSupport',
        request_serializer=field__pb2.SupportRequest.SerializeToString,
        response_deserializer=support__pb2.Support.FromString,
        )
    self.GetFieldDefinition = channel.unary_unary(
        '/ansys.api.dpf.field.v0.FieldService/GetFieldDefinition',
        request_serializer=field__pb2.GetRequest.SerializeToString,
        response_deserializer=field__pb2.GetFieldDefinitionResponse.FromString,
        )
    self.GetElementaryData = channel.unary_unary(
        '/ansys.api.dpf.field.v0.FieldService/GetElementaryData',
        request_serializer=field__pb2.GetElementaryDataRequest.SerializeToString,
        response_deserializer=field__pb2.GetElementaryDataResponse.FromString,
        )
    self.Count = channel.unary_unary(
        '/ansys.api.dpf.field.v0.FieldService/Count',
        request_serializer=field__pb2.CountRequest.SerializeToString,
        response_deserializer=base__pb2.CountResponse.FromString,
        )
    self.Delete = channel.unary_unary(
        '/ansys.api.dpf.field.v0.FieldService/Delete',
        request_serializer=field__pb2.Field.SerializeToString,
        response_deserializer=base__pb2.Empty.FromString,
        )


class FieldServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Create(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateData(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateScoping(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateSize(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def List(self, request, context):
    """sends streamed data, to choose the size set metadata with "num_float" or "num_int"
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetScoping(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetSupport(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetFieldDefinition(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetElementaryData(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Count(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Delete(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FieldServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Create': grpc.unary_unary_rpc_method_handler(
          servicer.Create,
          request_deserializer=field__pb2.FieldRequest.FromString,
          response_serializer=field__pb2.Field.SerializeToString,
      ),
      'UpdateData': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateData,
          request_deserializer=field__pb2.UpdateDataRequest.FromString,
          response_serializer=base__pb2.Empty.SerializeToString,
      ),
      'UpdateScoping': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateScoping,
          request_deserializer=field__pb2.UpdateScopingRequest.FromString,
          response_serializer=base__pb2.Empty.SerializeToString,
      ),
      'UpdateSize': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateSize,
          request_deserializer=field__pb2.UpdateSizeRequest.FromString,
          response_serializer=base__pb2.Empty.SerializeToString,
      ),
      'List': grpc.unary_stream_rpc_method_handler(
          servicer.List,
          request_deserializer=field__pb2.ListRequest.FromString,
          response_serializer=field__pb2.ListResponse.SerializeToString,
      ),
      'GetScoping': grpc.unary_unary_rpc_method_handler(
          servicer.GetScoping,
          request_deserializer=field__pb2.GetRequest.FromString,
          response_serializer=field__pb2.GetScopingResponse.SerializeToString,
      ),
      'GetSupport': grpc.unary_unary_rpc_method_handler(
          servicer.GetSupport,
          request_deserializer=field__pb2.SupportRequest.FromString,
          response_serializer=support__pb2.Support.SerializeToString,
      ),
      'GetFieldDefinition': grpc.unary_unary_rpc_method_handler(
          servicer.GetFieldDefinition,
          request_deserializer=field__pb2.GetRequest.FromString,
          response_serializer=field__pb2.GetFieldDefinitionResponse.SerializeToString,
      ),
      'GetElementaryData': grpc.unary_unary_rpc_method_handler(
          servicer.GetElementaryData,
          request_deserializer=field__pb2.GetElementaryDataRequest.FromString,
          response_serializer=field__pb2.GetElementaryDataResponse.SerializeToString,
      ),
      'Count': grpc.unary_unary_rpc_method_handler(
          servicer.Count,
          request_deserializer=field__pb2.CountRequest.FromString,
          response_serializer=base__pb2.CountResponse.SerializeToString,
      ),
      'Delete': grpc.unary_unary_rpc_method_handler(
          servicer.Delete,
          request_deserializer=field__pb2.Field.FromString,
          response_serializer=base__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ansys.api.dpf.field.v0.FieldService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
