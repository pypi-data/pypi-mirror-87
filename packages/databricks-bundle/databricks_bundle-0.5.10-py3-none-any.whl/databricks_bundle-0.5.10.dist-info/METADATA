Metadata-Version: 2.1
Name: databricks-bundle
Version: 0.5.10
Summary: Databricks bundle for the Pyfony framework
Home-page: https://github.com/bricksflow/databricks-bundle
License: MIT
Author: Jiri Koutny
Author-email: jiri.koutny@datasentics.com
Requires-Python: >=3.7.3,<3.8.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Requires-Dist: injecta (>=0.8.9,<0.9.0)
Requires-Dist: logger-bundle (>=0.5.0,<0.6.0)
Requires-Dist: pyfony-bundles (>=0.2.0,<0.3.0)
Project-URL: Repository, https://github.com/bricksflow/databricks-bundle
Description-Content-Type: text/markdown

# Databricks bundle

This bundle allows you to create simple functional Databricks pipelines, which can be easily auto-documented and unit-tested. It is part of the [Bricksflow framework](https://github.com/bricksflow/bricksflow).

![alt text](docs/functional_pipeline.png "Databricks functional pipeline example")

## Installation

Install the bundle via Poetry:

```
$ poetry add databricks-bundle && poetry add databricks-connect --dev && poetry add py4j --dev
```

Add the `DatabricksBundle.autodetect()` to your application's **Kernel.py** to activate it:

```python
from pyfony.kernel.BaseKernel import BaseKernel
from databricksbundle.DatabricksBundle import DatabricksBundle

class Kernel(BaseKernel):
    
    def _registerBundles(self):
        return [
            # ...
            DatabricksBundle.autodetect(),
            # ...
        ]
```

## Usage

1. [Writing functional pipelines](docs/pipelines.md)
1. [Recommended pipelines structure](docs/structure.md)
1. [Configuring pipelines](docs/configuration.md)
1. [Using dependencies](docs/dependencies.md)
1. [Databricks Connect setup](docs/databricks-connect.md)

