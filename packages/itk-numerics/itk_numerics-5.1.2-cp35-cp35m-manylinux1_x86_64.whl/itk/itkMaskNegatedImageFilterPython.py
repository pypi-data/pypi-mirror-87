# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageIntensityPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMaskNegatedImageFilterPython
else:
    import _itkMaskNegatedImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkMaskNegatedImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkMaskNegatedImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vector_refPython
import itk.itkBinaryGeneratorImageFilterPython
import itk.itkRGBAPixelPython
import itk.ITKCommonBasePython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkRGBPixelPython
import itk.itkArrayPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkInPlaceImageFilterBPython
import itk.itkImageToImageFilterBPython
import itk.itkImageSourcePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython

def itkMaskNegatedImageFilterICF2ISS2ICF2_New():
    return itkMaskNegatedImageFilterICF2ISS2ICF2.New()

class itkMaskNegatedImageFilterICF2ISS2ICF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ISS2ICF2):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2ISS2ICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2ISS2ICF2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2ISS2ICF2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2ISS2ICF2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2ISS2ICF2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2ISS2ICF2_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2ISS2ICF2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2ISS2ICF2_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2ISS2ICF2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2ISS2ICF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICF2ISS2ICF2
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2ISS2ICF2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICF2ISS2ICF2

        Create a new object of the class itkMaskNegatedImageFilterICF2ISS2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICF2ISS2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICF2ISS2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICF2ISS2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICF2ISS2ICF2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2ISS2ICF2_swigregister(itkMaskNegatedImageFilterICF2ISS2ICF2)
itkMaskNegatedImageFilterICF2ISS2ICF2___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2ISS2ICF2___New_orig__
itkMaskNegatedImageFilterICF2ISS2ICF2_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2ISS2ICF2_cast


def itkMaskNegatedImageFilterICF2IUC2ICF2_New():
    return itkMaskNegatedImageFilterICF2IUC2ICF2.New()

class itkMaskNegatedImageFilterICF2IUC2ICF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUC2ICF2):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUC2ICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUC2ICF2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUC2ICF2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUC2ICF2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUC2ICF2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUC2ICF2_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUC2ICF2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUC2ICF2_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUC2ICF2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUC2ICF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICF2IUC2ICF2
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUC2ICF2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICF2IUC2ICF2

        Create a new object of the class itkMaskNegatedImageFilterICF2IUC2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICF2IUC2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICF2IUC2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICF2IUC2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICF2IUC2ICF2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUC2ICF2_swigregister(itkMaskNegatedImageFilterICF2IUC2ICF2)
itkMaskNegatedImageFilterICF2IUC2ICF2___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUC2ICF2___New_orig__
itkMaskNegatedImageFilterICF2IUC2ICF2_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUC2ICF2_cast


def itkMaskNegatedImageFilterICF2IUS2ICF2_New():
    return itkMaskNegatedImageFilterICF2IUS2ICF2.New()

class itkMaskNegatedImageFilterICF2IUS2ICF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUS2ICF2):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUS2ICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUS2ICF2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUS2ICF2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUS2ICF2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUS2ICF2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUS2ICF2_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUS2ICF2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUS2ICF2_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUS2ICF2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUS2ICF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICF2IUS2ICF2
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUS2ICF2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICF2IUS2ICF2

        Create a new object of the class itkMaskNegatedImageFilterICF2IUS2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICF2IUS2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICF2IUS2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICF2IUS2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICF2IUS2ICF2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUS2ICF2_swigregister(itkMaskNegatedImageFilterICF2IUS2ICF2)
itkMaskNegatedImageFilterICF2IUS2ICF2___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUS2ICF2___New_orig__
itkMaskNegatedImageFilterICF2IUS2ICF2_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUS2ICF2_cast


def itkMaskNegatedImageFilterICF3ISS3ICF3_New():
    return itkMaskNegatedImageFilterICF3ISS3ICF3.New()

class itkMaskNegatedImageFilterICF3ISS3ICF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ISS3ICF3):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3ISS3ICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3ISS3ICF3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3ISS3ICF3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3ISS3ICF3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3ISS3ICF3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3ISS3ICF3_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3ISS3ICF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3ISS3ICF3_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3ISS3ICF3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3ISS3ICF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICF3ISS3ICF3
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3ISS3ICF3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICF3ISS3ICF3

        Create a new object of the class itkMaskNegatedImageFilterICF3ISS3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICF3ISS3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICF3ISS3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICF3ISS3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICF3ISS3ICF3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3ISS3ICF3_swigregister(itkMaskNegatedImageFilterICF3ISS3ICF3)
itkMaskNegatedImageFilterICF3ISS3ICF3___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3ISS3ICF3___New_orig__
itkMaskNegatedImageFilterICF3ISS3ICF3_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3ISS3ICF3_cast


def itkMaskNegatedImageFilterICF3IUC3ICF3_New():
    return itkMaskNegatedImageFilterICF3IUC3ICF3.New()

class itkMaskNegatedImageFilterICF3IUC3ICF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUC3ICF3):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUC3ICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUC3ICF3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUC3ICF3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUC3ICF3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUC3ICF3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUC3ICF3_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUC3ICF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUC3ICF3_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUC3ICF3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUC3ICF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICF3IUC3ICF3
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUC3ICF3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICF3IUC3ICF3

        Create a new object of the class itkMaskNegatedImageFilterICF3IUC3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICF3IUC3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICF3IUC3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICF3IUC3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICF3IUC3ICF3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUC3ICF3_swigregister(itkMaskNegatedImageFilterICF3IUC3ICF3)
itkMaskNegatedImageFilterICF3IUC3ICF3___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUC3ICF3___New_orig__
itkMaskNegatedImageFilterICF3IUC3ICF3_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUC3ICF3_cast


def itkMaskNegatedImageFilterICF3IUS3ICF3_New():
    return itkMaskNegatedImageFilterICF3IUS3ICF3.New()

class itkMaskNegatedImageFilterICF3IUS3ICF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUS3ICF3):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUS3ICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUS3ICF3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUS3ICF3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUS3ICF3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUS3ICF3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUS3ICF3_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUS3ICF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUS3ICF3_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUS3ICF3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUS3ICF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICF3IUS3ICF3
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUS3ICF3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICF3IUS3ICF3

        Create a new object of the class itkMaskNegatedImageFilterICF3IUS3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICF3IUS3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICF3IUS3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICF3IUS3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICF3IUS3ICF3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUS3ICF3_swigregister(itkMaskNegatedImageFilterICF3IUS3ICF3)
itkMaskNegatedImageFilterICF3IUS3ICF3___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUS3ICF3___New_orig__
itkMaskNegatedImageFilterICF3IUS3ICF3_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUS3ICF3_cast


def itkMaskNegatedImageFilterICVF22ISS2ICVF22_New():
    return itkMaskNegatedImageFilterICVF22ISS2ICVF22.New()

class itkMaskNegatedImageFilterICVF22ISS2ICVF22(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22ISS2ICVF22):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22ISS2ICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22ISS2ICVF22_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22ISS2ICVF22_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22ISS2ICVF22_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22ISS2ICVF22_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22ISS2ICVF22_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22ISS2ICVF22_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22ISS2ICVF22_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22ISS2ICVF22_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22ISS2ICVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF22ISS2ICVF22
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22ISS2ICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF22ISS2ICVF22

        Create a new object of the class itkMaskNegatedImageFilterICVF22ISS2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF22ISS2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF22ISS2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF22ISS2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF22ISS2ICVF22 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22ISS2ICVF22_swigregister(itkMaskNegatedImageFilterICVF22ISS2ICVF22)
itkMaskNegatedImageFilterICVF22ISS2ICVF22___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22ISS2ICVF22___New_orig__
itkMaskNegatedImageFilterICVF22ISS2ICVF22_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22ISS2ICVF22_cast


def itkMaskNegatedImageFilterICVF22IUC2ICVF22_New():
    return itkMaskNegatedImageFilterICVF22IUC2ICVF22.New()

class itkMaskNegatedImageFilterICVF22IUC2ICVF22(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUC2ICVF22):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUC2ICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUC2ICVF22_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUC2ICVF22_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUC2ICVF22_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUC2ICVF22_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUC2ICVF22_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUC2ICVF22_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUC2ICVF22_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUC2ICVF22_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUC2ICVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF22IUC2ICVF22
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUC2ICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF22IUC2ICVF22

        Create a new object of the class itkMaskNegatedImageFilterICVF22IUC2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF22IUC2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF22IUC2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF22IUC2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF22IUC2ICVF22 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUC2ICVF22_swigregister(itkMaskNegatedImageFilterICVF22IUC2ICVF22)
itkMaskNegatedImageFilterICVF22IUC2ICVF22___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUC2ICVF22___New_orig__
itkMaskNegatedImageFilterICVF22IUC2ICVF22_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUC2ICVF22_cast


def itkMaskNegatedImageFilterICVF22IUS2ICVF22_New():
    return itkMaskNegatedImageFilterICVF22IUS2ICVF22.New()

class itkMaskNegatedImageFilterICVF22IUS2ICVF22(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUS2ICVF22):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUS2ICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUS2ICVF22_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUS2ICVF22_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUS2ICVF22_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUS2ICVF22_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUS2ICVF22_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUS2ICVF22_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUS2ICVF22_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUS2ICVF22_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUS2ICVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF22IUS2ICVF22
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUS2ICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF22IUS2ICVF22

        Create a new object of the class itkMaskNegatedImageFilterICVF22IUS2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF22IUS2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF22IUS2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF22IUS2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF22IUS2ICVF22 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUS2ICVF22_swigregister(itkMaskNegatedImageFilterICVF22IUS2ICVF22)
itkMaskNegatedImageFilterICVF22IUS2ICVF22___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUS2ICVF22___New_orig__
itkMaskNegatedImageFilterICVF22IUS2ICVF22_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUS2ICVF22_cast


def itkMaskNegatedImageFilterICVF23ISS3ICVF23_New():
    return itkMaskNegatedImageFilterICVF23ISS3ICVF23.New()

class itkMaskNegatedImageFilterICVF23ISS3ICVF23(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23ISS3ICVF23):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23ISS3ICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23ISS3ICVF23_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23ISS3ICVF23_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23ISS3ICVF23_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23ISS3ICVF23_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23ISS3ICVF23_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23ISS3ICVF23_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23ISS3ICVF23_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23ISS3ICVF23_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23ISS3ICVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF23ISS3ICVF23
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23ISS3ICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF23ISS3ICVF23

        Create a new object of the class itkMaskNegatedImageFilterICVF23ISS3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF23ISS3ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF23ISS3ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF23ISS3ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF23ISS3ICVF23 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23ISS3ICVF23_swigregister(itkMaskNegatedImageFilterICVF23ISS3ICVF23)
itkMaskNegatedImageFilterICVF23ISS3ICVF23___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23ISS3ICVF23___New_orig__
itkMaskNegatedImageFilterICVF23ISS3ICVF23_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23ISS3ICVF23_cast


def itkMaskNegatedImageFilterICVF23IUC3ICVF23_New():
    return itkMaskNegatedImageFilterICVF23IUC3ICVF23.New()

class itkMaskNegatedImageFilterICVF23IUC3ICVF23(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUC3ICVF23):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUC3ICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUC3ICVF23_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUC3ICVF23_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUC3ICVF23_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUC3ICVF23_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUC3ICVF23_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUC3ICVF23_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUC3ICVF23_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUC3ICVF23_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUC3ICVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF23IUC3ICVF23
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUC3ICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF23IUC3ICVF23

        Create a new object of the class itkMaskNegatedImageFilterICVF23IUC3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF23IUC3ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF23IUC3ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF23IUC3ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF23IUC3ICVF23 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUC3ICVF23_swigregister(itkMaskNegatedImageFilterICVF23IUC3ICVF23)
itkMaskNegatedImageFilterICVF23IUC3ICVF23___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUC3ICVF23___New_orig__
itkMaskNegatedImageFilterICVF23IUC3ICVF23_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUC3ICVF23_cast


def itkMaskNegatedImageFilterICVF23IUS3ICVF23_New():
    return itkMaskNegatedImageFilterICVF23IUS3ICVF23.New()

class itkMaskNegatedImageFilterICVF23IUS3ICVF23(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUS3ICVF23):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUS3ICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUS3ICVF23_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUS3ICVF23_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUS3ICVF23_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUS3ICVF23_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUS3ICVF23_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUS3ICVF23_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUS3ICVF23_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUS3ICVF23_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUS3ICVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF23IUS3ICVF23
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUS3ICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF23IUS3ICVF23

        Create a new object of the class itkMaskNegatedImageFilterICVF23IUS3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF23IUS3ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF23IUS3ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF23IUS3ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF23IUS3ICVF23 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUS3ICVF23_swigregister(itkMaskNegatedImageFilterICVF23IUS3ICVF23)
itkMaskNegatedImageFilterICVF23IUS3ICVF23___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUS3ICVF23___New_orig__
itkMaskNegatedImageFilterICVF23IUS3ICVF23_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUS3ICVF23_cast


def itkMaskNegatedImageFilterICVF32ISS2ICVF32_New():
    return itkMaskNegatedImageFilterICVF32ISS2ICVF32.New()

class itkMaskNegatedImageFilterICVF32ISS2ICVF32(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32ISS2ICVF32):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32ISS2ICVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32ISS2ICVF32_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32ISS2ICVF32_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32ISS2ICVF32_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32ISS2ICVF32_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32ISS2ICVF32_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32ISS2ICVF32_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32ISS2ICVF32_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32ISS2ICVF32_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32ISS2ICVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF32ISS2ICVF32
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32ISS2ICVF32_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF32ISS2ICVF32

        Create a new object of the class itkMaskNegatedImageFilterICVF32ISS2ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF32ISS2ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF32ISS2ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF32ISS2ICVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF32ISS2ICVF32 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32ISS2ICVF32_swigregister(itkMaskNegatedImageFilterICVF32ISS2ICVF32)
itkMaskNegatedImageFilterICVF32ISS2ICVF32___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32ISS2ICVF32___New_orig__
itkMaskNegatedImageFilterICVF32ISS2ICVF32_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32ISS2ICVF32_cast


def itkMaskNegatedImageFilterICVF32IUC2ICVF32_New():
    return itkMaskNegatedImageFilterICVF32IUC2ICVF32.New()

class itkMaskNegatedImageFilterICVF32IUC2ICVF32(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUC2ICVF32):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUC2ICVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUC2ICVF32_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUC2ICVF32_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUC2ICVF32_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUC2ICVF32_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUC2ICVF32_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUC2ICVF32_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUC2ICVF32_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUC2ICVF32_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUC2ICVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF32IUC2ICVF32
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUC2ICVF32_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF32IUC2ICVF32

        Create a new object of the class itkMaskNegatedImageFilterICVF32IUC2ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF32IUC2ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF32IUC2ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF32IUC2ICVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF32IUC2ICVF32 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUC2ICVF32_swigregister(itkMaskNegatedImageFilterICVF32IUC2ICVF32)
itkMaskNegatedImageFilterICVF32IUC2ICVF32___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUC2ICVF32___New_orig__
itkMaskNegatedImageFilterICVF32IUC2ICVF32_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUC2ICVF32_cast


def itkMaskNegatedImageFilterICVF32IUS2ICVF32_New():
    return itkMaskNegatedImageFilterICVF32IUS2ICVF32.New()

class itkMaskNegatedImageFilterICVF32IUS2ICVF32(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUS2ICVF32):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUS2ICVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUS2ICVF32_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUS2ICVF32_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUS2ICVF32_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUS2ICVF32_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUS2ICVF32_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUS2ICVF32_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUS2ICVF32_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUS2ICVF32_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUS2ICVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF32IUS2ICVF32
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUS2ICVF32_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF32IUS2ICVF32

        Create a new object of the class itkMaskNegatedImageFilterICVF32IUS2ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF32IUS2ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF32IUS2ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF32IUS2ICVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF32IUS2ICVF32 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUS2ICVF32_swigregister(itkMaskNegatedImageFilterICVF32IUS2ICVF32)
itkMaskNegatedImageFilterICVF32IUS2ICVF32___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUS2ICVF32___New_orig__
itkMaskNegatedImageFilterICVF32IUS2ICVF32_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUS2ICVF32_cast


def itkMaskNegatedImageFilterICVF33ISS3ICVF33_New():
    return itkMaskNegatedImageFilterICVF33ISS3ICVF33.New()

class itkMaskNegatedImageFilterICVF33ISS3ICVF33(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33ISS3ICVF33):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33ISS3ICVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33ISS3ICVF33_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33ISS3ICVF33_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33ISS3ICVF33_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33ISS3ICVF33_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33ISS3ICVF33_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33ISS3ICVF33_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33ISS3ICVF33_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33ISS3ICVF33_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33ISS3ICVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF33ISS3ICVF33
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33ISS3ICVF33_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF33ISS3ICVF33

        Create a new object of the class itkMaskNegatedImageFilterICVF33ISS3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF33ISS3ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF33ISS3ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF33ISS3ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF33ISS3ICVF33 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33ISS3ICVF33_swigregister(itkMaskNegatedImageFilterICVF33ISS3ICVF33)
itkMaskNegatedImageFilterICVF33ISS3ICVF33___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33ISS3ICVF33___New_orig__
itkMaskNegatedImageFilterICVF33ISS3ICVF33_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33ISS3ICVF33_cast


def itkMaskNegatedImageFilterICVF33IUC3ICVF33_New():
    return itkMaskNegatedImageFilterICVF33IUC3ICVF33.New()

class itkMaskNegatedImageFilterICVF33IUC3ICVF33(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUC3ICVF33):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUC3ICVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUC3ICVF33_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUC3ICVF33_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUC3ICVF33_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUC3ICVF33_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUC3ICVF33_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUC3ICVF33_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUC3ICVF33_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUC3ICVF33_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUC3ICVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF33IUC3ICVF33
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUC3ICVF33_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF33IUC3ICVF33

        Create a new object of the class itkMaskNegatedImageFilterICVF33IUC3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF33IUC3ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF33IUC3ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF33IUC3ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF33IUC3ICVF33 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUC3ICVF33_swigregister(itkMaskNegatedImageFilterICVF33IUC3ICVF33)
itkMaskNegatedImageFilterICVF33IUC3ICVF33___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUC3ICVF33___New_orig__
itkMaskNegatedImageFilterICVF33IUC3ICVF33_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUC3ICVF33_cast


def itkMaskNegatedImageFilterICVF33IUS3ICVF33_New():
    return itkMaskNegatedImageFilterICVF33IUS3ICVF33.New()

class itkMaskNegatedImageFilterICVF33IUS3ICVF33(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUS3ICVF33):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUS3ICVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUS3ICVF33_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUS3ICVF33_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUS3ICVF33_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUS3ICVF33_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUS3ICVF33_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUS3ICVF33_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUS3ICVF33_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUS3ICVF33_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUS3ICVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF33IUS3ICVF33
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUS3ICVF33_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF33IUS3ICVF33

        Create a new object of the class itkMaskNegatedImageFilterICVF33IUS3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF33IUS3ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF33IUS3ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF33IUS3ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF33IUS3ICVF33 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUS3ICVF33_swigregister(itkMaskNegatedImageFilterICVF33IUS3ICVF33)
itkMaskNegatedImageFilterICVF33IUS3ICVF33___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUS3ICVF33___New_orig__
itkMaskNegatedImageFilterICVF33IUS3ICVF33_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUS3ICVF33_cast


def itkMaskNegatedImageFilterICVF42ISS2ICVF42_New():
    return itkMaskNegatedImageFilterICVF42ISS2ICVF42.New()

class itkMaskNegatedImageFilterICVF42ISS2ICVF42(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42ISS2ICVF42):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42ISS2ICVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42ISS2ICVF42_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42ISS2ICVF42_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42ISS2ICVF42_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42ISS2ICVF42_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42ISS2ICVF42_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42ISS2ICVF42_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42ISS2ICVF42_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42ISS2ICVF42_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42ISS2ICVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF42ISS2ICVF42
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42ISS2ICVF42_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF42ISS2ICVF42

        Create a new object of the class itkMaskNegatedImageFilterICVF42ISS2ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF42ISS2ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF42ISS2ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF42ISS2ICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF42ISS2ICVF42 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42ISS2ICVF42_swigregister(itkMaskNegatedImageFilterICVF42ISS2ICVF42)
itkMaskNegatedImageFilterICVF42ISS2ICVF42___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42ISS2ICVF42___New_orig__
itkMaskNegatedImageFilterICVF42ISS2ICVF42_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42ISS2ICVF42_cast


def itkMaskNegatedImageFilterICVF42IUC2ICVF42_New():
    return itkMaskNegatedImageFilterICVF42IUC2ICVF42.New()

class itkMaskNegatedImageFilterICVF42IUC2ICVF42(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUC2ICVF42):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUC2ICVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUC2ICVF42_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUC2ICVF42_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUC2ICVF42_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUC2ICVF42_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUC2ICVF42_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUC2ICVF42_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUC2ICVF42_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUC2ICVF42_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUC2ICVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF42IUC2ICVF42
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUC2ICVF42_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF42IUC2ICVF42

        Create a new object of the class itkMaskNegatedImageFilterICVF42IUC2ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF42IUC2ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF42IUC2ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF42IUC2ICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF42IUC2ICVF42 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUC2ICVF42_swigregister(itkMaskNegatedImageFilterICVF42IUC2ICVF42)
itkMaskNegatedImageFilterICVF42IUC2ICVF42___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUC2ICVF42___New_orig__
itkMaskNegatedImageFilterICVF42IUC2ICVF42_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUC2ICVF42_cast


def itkMaskNegatedImageFilterICVF42IUS2ICVF42_New():
    return itkMaskNegatedImageFilterICVF42IUS2ICVF42.New()

class itkMaskNegatedImageFilterICVF42IUS2ICVF42(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUS2ICVF42):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUS2ICVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUS2ICVF42_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUS2ICVF42_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUS2ICVF42_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUS2ICVF42_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUS2ICVF42_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUS2ICVF42_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUS2ICVF42_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUS2ICVF42_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUS2ICVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF42IUS2ICVF42
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUS2ICVF42_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF42IUS2ICVF42

        Create a new object of the class itkMaskNegatedImageFilterICVF42IUS2ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF42IUS2ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF42IUS2ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF42IUS2ICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF42IUS2ICVF42 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUS2ICVF42_swigregister(itkMaskNegatedImageFilterICVF42IUS2ICVF42)
itkMaskNegatedImageFilterICVF42IUS2ICVF42___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUS2ICVF42___New_orig__
itkMaskNegatedImageFilterICVF42IUS2ICVF42_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUS2ICVF42_cast


def itkMaskNegatedImageFilterICVF43ISS3ICVF43_New():
    return itkMaskNegatedImageFilterICVF43ISS3ICVF43.New()

class itkMaskNegatedImageFilterICVF43ISS3ICVF43(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43ISS3ICVF43):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43ISS3ICVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43ISS3ICVF43_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43ISS3ICVF43_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43ISS3ICVF43_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43ISS3ICVF43_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43ISS3ICVF43_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43ISS3ICVF43_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43ISS3ICVF43_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43ISS3ICVF43_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43ISS3ICVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF43ISS3ICVF43
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43ISS3ICVF43_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF43ISS3ICVF43

        Create a new object of the class itkMaskNegatedImageFilterICVF43ISS3ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF43ISS3ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF43ISS3ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF43ISS3ICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF43ISS3ICVF43 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43ISS3ICVF43_swigregister(itkMaskNegatedImageFilterICVF43ISS3ICVF43)
itkMaskNegatedImageFilterICVF43ISS3ICVF43___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43ISS3ICVF43___New_orig__
itkMaskNegatedImageFilterICVF43ISS3ICVF43_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43ISS3ICVF43_cast


def itkMaskNegatedImageFilterICVF43IUC3ICVF43_New():
    return itkMaskNegatedImageFilterICVF43IUC3ICVF43.New()

class itkMaskNegatedImageFilterICVF43IUC3ICVF43(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUC3ICVF43):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUC3ICVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUC3ICVF43_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUC3ICVF43_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUC3ICVF43_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUC3ICVF43_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUC3ICVF43_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUC3ICVF43_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUC3ICVF43_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUC3ICVF43_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUC3ICVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF43IUC3ICVF43
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUC3ICVF43_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF43IUC3ICVF43

        Create a new object of the class itkMaskNegatedImageFilterICVF43IUC3ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF43IUC3ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF43IUC3ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF43IUC3ICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF43IUC3ICVF43 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUC3ICVF43_swigregister(itkMaskNegatedImageFilterICVF43IUC3ICVF43)
itkMaskNegatedImageFilterICVF43IUC3ICVF43___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUC3ICVF43___New_orig__
itkMaskNegatedImageFilterICVF43IUC3ICVF43_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUC3ICVF43_cast


def itkMaskNegatedImageFilterICVF43IUS3ICVF43_New():
    return itkMaskNegatedImageFilterICVF43IUS3ICVF43.New()

class itkMaskNegatedImageFilterICVF43IUS3ICVF43(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUS3ICVF43):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUS3ICVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUS3ICVF43_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUS3ICVF43_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUS3ICVF43_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUS3ICVF43_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUS3ICVF43_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUS3ICVF43_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUS3ICVF43_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUS3ICVF43_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUS3ICVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF43IUS3ICVF43
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUS3ICVF43_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF43IUS3ICVF43

        Create a new object of the class itkMaskNegatedImageFilterICVF43IUS3ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF43IUS3ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF43IUS3ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF43IUS3ICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF43IUS3ICVF43 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUS3ICVF43_swigregister(itkMaskNegatedImageFilterICVF43IUS3ICVF43)
itkMaskNegatedImageFilterICVF43IUS3ICVF43___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUS3ICVF43___New_orig__
itkMaskNegatedImageFilterICVF43IUS3ICVF43_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUS3ICVF43_cast


def itkMaskNegatedImageFilterID2ISS2ID2_New():
    return itkMaskNegatedImageFilterID2ISS2ID2.New()

class itkMaskNegatedImageFilterID2ISS2ID2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ID2):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2ISS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2ISS2ID2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2ISS2ID2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2ISS2ID2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2ISS2ID2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2ISS2ID2_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2ISS2ID2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2ISS2ID2_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2ISS2ID2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2ISS2ID2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterID2ISS2ID2
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2ISS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterID2ISS2ID2

        Create a new object of the class itkMaskNegatedImageFilterID2ISS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterID2ISS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterID2ISS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterID2ISS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterID2ISS2ID2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2ISS2ID2_swigregister(itkMaskNegatedImageFilterID2ISS2ID2)
itkMaskNegatedImageFilterID2ISS2ID2___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2ISS2ID2___New_orig__
itkMaskNegatedImageFilterID2ISS2ID2_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2ISS2ID2_cast


def itkMaskNegatedImageFilterID2IUC2ID2_New():
    return itkMaskNegatedImageFilterID2IUC2ID2.New()

class itkMaskNegatedImageFilterID2IUC2ID2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ID2):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUC2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUC2ID2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUC2ID2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUC2ID2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUC2ID2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUC2ID2_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUC2ID2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUC2ID2_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUC2ID2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUC2ID2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterID2IUC2ID2
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUC2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterID2IUC2ID2

        Create a new object of the class itkMaskNegatedImageFilterID2IUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterID2IUC2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterID2IUC2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterID2IUC2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterID2IUC2ID2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUC2ID2_swigregister(itkMaskNegatedImageFilterID2IUC2ID2)
itkMaskNegatedImageFilterID2IUC2ID2___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUC2ID2___New_orig__
itkMaskNegatedImageFilterID2IUC2ID2_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUC2ID2_cast


def itkMaskNegatedImageFilterID2IUS2ID2_New():
    return itkMaskNegatedImageFilterID2IUS2ID2.New()

class itkMaskNegatedImageFilterID2IUS2ID2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ID2):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUS2ID2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUS2ID2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUS2ID2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUS2ID2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUS2ID2_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUS2ID2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUS2ID2_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUS2ID2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUS2ID2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterID2IUS2ID2
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterID2IUS2ID2

        Create a new object of the class itkMaskNegatedImageFilterID2IUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterID2IUS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterID2IUS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterID2IUS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterID2IUS2ID2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUS2ID2_swigregister(itkMaskNegatedImageFilterID2IUS2ID2)
itkMaskNegatedImageFilterID2IUS2ID2___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUS2ID2___New_orig__
itkMaskNegatedImageFilterID2IUS2ID2_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUS2ID2_cast


def itkMaskNegatedImageFilterID3ISS3ID3_New():
    return itkMaskNegatedImageFilterID3ISS3ID3.New()

class itkMaskNegatedImageFilterID3ISS3ID3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ID3):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3ISS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3ISS3ID3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3ISS3ID3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3ISS3ID3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3ISS3ID3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3ISS3ID3_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3ISS3ID3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3ISS3ID3_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3ISS3ID3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3ISS3ID3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterID3ISS3ID3
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3ISS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterID3ISS3ID3

        Create a new object of the class itkMaskNegatedImageFilterID3ISS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterID3ISS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterID3ISS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterID3ISS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterID3ISS3ID3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3ISS3ID3_swigregister(itkMaskNegatedImageFilterID3ISS3ID3)
itkMaskNegatedImageFilterID3ISS3ID3___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3ISS3ID3___New_orig__
itkMaskNegatedImageFilterID3ISS3ID3_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3ISS3ID3_cast


def itkMaskNegatedImageFilterID3IUC3ID3_New():
    return itkMaskNegatedImageFilterID3IUC3ID3.New()

class itkMaskNegatedImageFilterID3IUC3ID3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ID3):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUC3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUC3ID3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUC3ID3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUC3ID3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUC3ID3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUC3ID3_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUC3ID3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUC3ID3_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUC3ID3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUC3ID3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterID3IUC3ID3
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUC3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterID3IUC3ID3

        Create a new object of the class itkMaskNegatedImageFilterID3IUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterID3IUC3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterID3IUC3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterID3IUC3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterID3IUC3ID3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUC3ID3_swigregister(itkMaskNegatedImageFilterID3IUC3ID3)
itkMaskNegatedImageFilterID3IUC3ID3___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUC3ID3___New_orig__
itkMaskNegatedImageFilterID3IUC3ID3_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUC3ID3_cast


def itkMaskNegatedImageFilterID3IUS3ID3_New():
    return itkMaskNegatedImageFilterID3IUS3ID3.New()

class itkMaskNegatedImageFilterID3IUS3ID3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ID3):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUS3ID3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUS3ID3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUS3ID3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUS3ID3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUS3ID3_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUS3ID3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUS3ID3_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUS3ID3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUS3ID3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterID3IUS3ID3
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterID3IUS3ID3

        Create a new object of the class itkMaskNegatedImageFilterID3IUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterID3IUS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterID3IUS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterID3IUS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterID3IUS3ID3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUS3ID3_swigregister(itkMaskNegatedImageFilterID3IUS3ID3)
itkMaskNegatedImageFilterID3IUS3ID3___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUS3ID3___New_orig__
itkMaskNegatedImageFilterID3IUS3ID3_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUS3ID3_cast


def itkMaskNegatedImageFilterIF2ISS2IF2_New():
    return itkMaskNegatedImageFilterIF2ISS2IF2.New()

class itkMaskNegatedImageFilterIF2ISS2IF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IF2):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2ISS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2ISS2IF2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2ISS2IF2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2ISS2IF2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2ISS2IF2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2ISS2IF2_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2ISS2IF2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2ISS2IF2_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2ISS2IF2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2ISS2IF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIF2ISS2IF2
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2ISS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIF2ISS2IF2

        Create a new object of the class itkMaskNegatedImageFilterIF2ISS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIF2ISS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIF2ISS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIF2ISS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIF2ISS2IF2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2ISS2IF2_swigregister(itkMaskNegatedImageFilterIF2ISS2IF2)
itkMaskNegatedImageFilterIF2ISS2IF2___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2ISS2IF2___New_orig__
itkMaskNegatedImageFilterIF2ISS2IF2_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2ISS2IF2_cast


def itkMaskNegatedImageFilterIF2IUC2IF2_New():
    return itkMaskNegatedImageFilterIF2IUC2IF2.New()

class itkMaskNegatedImageFilterIF2IUC2IF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IF2):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUC2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUC2IF2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUC2IF2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUC2IF2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUC2IF2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUC2IF2_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUC2IF2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUC2IF2_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUC2IF2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUC2IF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIF2IUC2IF2
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUC2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIF2IUC2IF2

        Create a new object of the class itkMaskNegatedImageFilterIF2IUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIF2IUC2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIF2IUC2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIF2IUC2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIF2IUC2IF2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUC2IF2_swigregister(itkMaskNegatedImageFilterIF2IUC2IF2)
itkMaskNegatedImageFilterIF2IUC2IF2___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUC2IF2___New_orig__
itkMaskNegatedImageFilterIF2IUC2IF2_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUC2IF2_cast


def itkMaskNegatedImageFilterIF2IUS2IF2_New():
    return itkMaskNegatedImageFilterIF2IUS2IF2.New()

class itkMaskNegatedImageFilterIF2IUS2IF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IF2):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUS2IF2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUS2IF2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUS2IF2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUS2IF2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUS2IF2_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUS2IF2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUS2IF2_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUS2IF2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUS2IF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIF2IUS2IF2
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIF2IUS2IF2

        Create a new object of the class itkMaskNegatedImageFilterIF2IUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIF2IUS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIF2IUS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIF2IUS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIF2IUS2IF2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUS2IF2_swigregister(itkMaskNegatedImageFilterIF2IUS2IF2)
itkMaskNegatedImageFilterIF2IUS2IF2___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUS2IF2___New_orig__
itkMaskNegatedImageFilterIF2IUS2IF2_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUS2IF2_cast


def itkMaskNegatedImageFilterIF3ISS3IF3_New():
    return itkMaskNegatedImageFilterIF3ISS3IF3.New()

class itkMaskNegatedImageFilterIF3ISS3IF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IF3):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3ISS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3ISS3IF3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3ISS3IF3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3ISS3IF3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3ISS3IF3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3ISS3IF3_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3ISS3IF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3ISS3IF3_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3ISS3IF3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3ISS3IF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIF3ISS3IF3
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3ISS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIF3ISS3IF3

        Create a new object of the class itkMaskNegatedImageFilterIF3ISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIF3ISS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIF3ISS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIF3ISS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIF3ISS3IF3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3ISS3IF3_swigregister(itkMaskNegatedImageFilterIF3ISS3IF3)
itkMaskNegatedImageFilterIF3ISS3IF3___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3ISS3IF3___New_orig__
itkMaskNegatedImageFilterIF3ISS3IF3_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3ISS3IF3_cast


def itkMaskNegatedImageFilterIF3IUC3IF3_New():
    return itkMaskNegatedImageFilterIF3IUC3IF3.New()

class itkMaskNegatedImageFilterIF3IUC3IF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IF3):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUC3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUC3IF3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUC3IF3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUC3IF3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUC3IF3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUC3IF3_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUC3IF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUC3IF3_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUC3IF3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUC3IF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIF3IUC3IF3
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUC3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIF3IUC3IF3

        Create a new object of the class itkMaskNegatedImageFilterIF3IUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIF3IUC3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIF3IUC3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIF3IUC3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIF3IUC3IF3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUC3IF3_swigregister(itkMaskNegatedImageFilterIF3IUC3IF3)
itkMaskNegatedImageFilterIF3IUC3IF3___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUC3IF3___New_orig__
itkMaskNegatedImageFilterIF3IUC3IF3_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUC3IF3_cast


def itkMaskNegatedImageFilterIF3IUS3IF3_New():
    return itkMaskNegatedImageFilterIF3IUS3IF3.New()

class itkMaskNegatedImageFilterIF3IUS3IF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IF3):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUS3IF3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUS3IF3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUS3IF3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUS3IF3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUS3IF3_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUS3IF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUS3IF3_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUS3IF3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUS3IF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIF3IUS3IF3
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIF3IUS3IF3

        Create a new object of the class itkMaskNegatedImageFilterIF3IUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIF3IUS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIF3IUS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIF3IUS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIF3IUS3IF3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUS3IF3_swigregister(itkMaskNegatedImageFilterIF3IUS3IF3)
itkMaskNegatedImageFilterIF3IUS3IF3___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUS3IF3___New_orig__
itkMaskNegatedImageFilterIF3IUS3IF3_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUS3IF3_cast


def itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_New():
    return itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2.New()

class itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2

        Create a new object of the class itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_swigregister(itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2)
itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2___New_orig__
itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_cast


def itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_New():
    return itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2.New()

class itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2

        Create a new object of the class itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_swigregister(itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2)
itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2___New_orig__
itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_cast


def itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_New():
    return itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2.New()

class itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2

        Create a new object of the class itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_swigregister(itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2)
itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2___New_orig__
itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_cast


def itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_New():
    return itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3.New()

class itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3

        Create a new object of the class itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_swigregister(itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3)
itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3___New_orig__
itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_cast


def itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_New():
    return itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3.New()

class itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3

        Create a new object of the class itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_swigregister(itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3)
itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3___New_orig__
itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_cast


def itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_New():
    return itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3.New()

class itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3

        Create a new object of the class itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_swigregister(itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3)
itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3___New_orig__
itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_cast


def itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_New():
    return itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2.New()

class itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2

        Create a new object of the class itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_swigregister(itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2)
itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2___New_orig__
itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_cast


def itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_New():
    return itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2.New()

class itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2

        Create a new object of the class itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_swigregister(itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2)
itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2___New_orig__
itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_cast


def itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_New():
    return itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2.New()

class itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2

        Create a new object of the class itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_swigregister(itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2)
itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2___New_orig__
itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_cast


def itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_New():
    return itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3.New()

class itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3

        Create a new object of the class itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_swigregister(itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3)
itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3___New_orig__
itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_cast


def itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_New():
    return itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3.New()

class itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3

        Create a new object of the class itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_swigregister(itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3)
itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3___New_orig__
itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_cast


def itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_New():
    return itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3.New()

class itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3

        Create a new object of the class itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_swigregister(itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3)
itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3___New_orig__
itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_cast


def itkMaskNegatedImageFilterISS2ISS2ISS2_New():
    return itkMaskNegatedImageFilterISS2ISS2ISS2.New()

class itkMaskNegatedImageFilterISS2ISS2ISS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2ISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2ISS2ISS2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2ISS2ISS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2ISS2ISS2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2ISS2ISS2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2ISS2ISS2_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2ISS2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2ISS2ISS2_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2ISS2ISS2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2ISS2ISS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterISS2ISS2ISS2
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2ISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterISS2ISS2ISS2

        Create a new object of the class itkMaskNegatedImageFilterISS2ISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterISS2ISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterISS2ISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterISS2ISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterISS2ISS2ISS2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2ISS2ISS2_swigregister(itkMaskNegatedImageFilterISS2ISS2ISS2)
itkMaskNegatedImageFilterISS2ISS2ISS2___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2ISS2ISS2___New_orig__
itkMaskNegatedImageFilterISS2ISS2ISS2_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2ISS2ISS2_cast


def itkMaskNegatedImageFilterISS2IUC2ISS2_New():
    return itkMaskNegatedImageFilterISS2IUC2ISS2.New()

class itkMaskNegatedImageFilterISS2IUC2ISS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ISS2):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUC2ISS2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUC2ISS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUC2ISS2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUC2ISS2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUC2ISS2_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUC2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUC2ISS2_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUC2ISS2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUC2ISS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterISS2IUC2ISS2
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterISS2IUC2ISS2

        Create a new object of the class itkMaskNegatedImageFilterISS2IUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterISS2IUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterISS2IUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterISS2IUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterISS2IUC2ISS2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUC2ISS2_swigregister(itkMaskNegatedImageFilterISS2IUC2ISS2)
itkMaskNegatedImageFilterISS2IUC2ISS2___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUC2ISS2___New_orig__
itkMaskNegatedImageFilterISS2IUC2ISS2_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUC2ISS2_cast


def itkMaskNegatedImageFilterISS2IUS2ISS2_New():
    return itkMaskNegatedImageFilterISS2IUS2ISS2.New()

class itkMaskNegatedImageFilterISS2IUS2ISS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ISS2):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUS2ISS2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUS2ISS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUS2ISS2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUS2ISS2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUS2ISS2_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUS2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUS2ISS2_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUS2ISS2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUS2ISS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterISS2IUS2ISS2
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterISS2IUS2ISS2

        Create a new object of the class itkMaskNegatedImageFilterISS2IUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterISS2IUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterISS2IUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterISS2IUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterISS2IUS2ISS2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUS2ISS2_swigregister(itkMaskNegatedImageFilterISS2IUS2ISS2)
itkMaskNegatedImageFilterISS2IUS2ISS2___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUS2ISS2___New_orig__
itkMaskNegatedImageFilterISS2IUS2ISS2_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUS2ISS2_cast


def itkMaskNegatedImageFilterISS3ISS3ISS3_New():
    return itkMaskNegatedImageFilterISS3ISS3ISS3.New()

class itkMaskNegatedImageFilterISS3ISS3ISS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3ISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3ISS3ISS3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3ISS3ISS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3ISS3ISS3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3ISS3ISS3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3ISS3ISS3_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3ISS3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3ISS3ISS3_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3ISS3ISS3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3ISS3ISS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterISS3ISS3ISS3
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3ISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterISS3ISS3ISS3

        Create a new object of the class itkMaskNegatedImageFilterISS3ISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterISS3ISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterISS3ISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterISS3ISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterISS3ISS3ISS3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3ISS3ISS3_swigregister(itkMaskNegatedImageFilterISS3ISS3ISS3)
itkMaskNegatedImageFilterISS3ISS3ISS3___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3ISS3ISS3___New_orig__
itkMaskNegatedImageFilterISS3ISS3ISS3_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3ISS3ISS3_cast


def itkMaskNegatedImageFilterISS3IUC3ISS3_New():
    return itkMaskNegatedImageFilterISS3IUC3ISS3.New()

class itkMaskNegatedImageFilterISS3IUC3ISS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ISS3):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUC3ISS3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUC3ISS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUC3ISS3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUC3ISS3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUC3ISS3_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUC3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUC3ISS3_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUC3ISS3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUC3ISS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterISS3IUC3ISS3
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterISS3IUC3ISS3

        Create a new object of the class itkMaskNegatedImageFilterISS3IUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterISS3IUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterISS3IUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterISS3IUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterISS3IUC3ISS3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUC3ISS3_swigregister(itkMaskNegatedImageFilterISS3IUC3ISS3)
itkMaskNegatedImageFilterISS3IUC3ISS3___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUC3ISS3___New_orig__
itkMaskNegatedImageFilterISS3IUC3ISS3_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUC3ISS3_cast


def itkMaskNegatedImageFilterISS3IUS3ISS3_New():
    return itkMaskNegatedImageFilterISS3IUS3ISS3.New()

class itkMaskNegatedImageFilterISS3IUS3ISS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ISS3):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUS3ISS3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUS3ISS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUS3ISS3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUS3ISS3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUS3ISS3_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUS3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUS3ISS3_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUS3ISS3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUS3ISS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterISS3IUS3ISS3
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterISS3IUS3ISS3

        Create a new object of the class itkMaskNegatedImageFilterISS3IUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterISS3IUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterISS3IUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterISS3IUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterISS3IUS3ISS3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUS3ISS3_swigregister(itkMaskNegatedImageFilterISS3IUS3ISS3)
itkMaskNegatedImageFilterISS3IUS3ISS3___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUS3ISS3___New_orig__
itkMaskNegatedImageFilterISS3IUS3ISS3_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUS3ISS3_cast


def itkMaskNegatedImageFilterIUC2ISS2IUC2_New():
    return itkMaskNegatedImageFilterIUC2ISS2IUC2.New()

class itkMaskNegatedImageFilterIUC2ISS2IUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUC2):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2ISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2ISS2IUC2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2ISS2IUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2ISS2IUC2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2ISS2IUC2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2ISS2IUC2_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2ISS2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2ISS2IUC2_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2ISS2IUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2ISS2IUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUC2ISS2IUC2
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2ISS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUC2ISS2IUC2

        Create a new object of the class itkMaskNegatedImageFilterIUC2ISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUC2ISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUC2ISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUC2ISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUC2ISS2IUC2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2ISS2IUC2_swigregister(itkMaskNegatedImageFilterIUC2ISS2IUC2)
itkMaskNegatedImageFilterIUC2ISS2IUC2___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2ISS2IUC2___New_orig__
itkMaskNegatedImageFilterIUC2ISS2IUC2_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2ISS2IUC2_cast


def itkMaskNegatedImageFilterIUC2IUC2IUC2_New():
    return itkMaskNegatedImageFilterIUC2IUC2IUC2.New()

class itkMaskNegatedImageFilterIUC2IUC2IUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUC2IUC2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUC2IUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUC2IUC2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUC2IUC2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUC2IUC2_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUC2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUC2IUC2_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUC2IUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUC2IUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUC2IUC2IUC2
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUC2IUC2IUC2

        Create a new object of the class itkMaskNegatedImageFilterIUC2IUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUC2IUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUC2IUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUC2IUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUC2IUC2IUC2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUC2IUC2_swigregister(itkMaskNegatedImageFilterIUC2IUC2IUC2)
itkMaskNegatedImageFilterIUC2IUC2IUC2___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUC2IUC2___New_orig__
itkMaskNegatedImageFilterIUC2IUC2IUC2_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUC2IUC2_cast


def itkMaskNegatedImageFilterIUC2IUS2IUC2_New():
    return itkMaskNegatedImageFilterIUC2IUS2IUC2.New()

class itkMaskNegatedImageFilterIUC2IUS2IUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUC2):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUS2IUC2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUS2IUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUS2IUC2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUS2IUC2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUS2IUC2_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUS2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUS2IUC2_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUS2IUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUS2IUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUC2IUS2IUC2
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUC2IUS2IUC2

        Create a new object of the class itkMaskNegatedImageFilterIUC2IUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUC2IUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUC2IUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUC2IUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUC2IUS2IUC2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUS2IUC2_swigregister(itkMaskNegatedImageFilterIUC2IUS2IUC2)
itkMaskNegatedImageFilterIUC2IUS2IUC2___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUS2IUC2___New_orig__
itkMaskNegatedImageFilterIUC2IUS2IUC2_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUS2IUC2_cast


def itkMaskNegatedImageFilterIUC3ISS3IUC3_New():
    return itkMaskNegatedImageFilterIUC3ISS3IUC3.New()

class itkMaskNegatedImageFilterIUC3ISS3IUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUC3):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3ISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3ISS3IUC3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3ISS3IUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3ISS3IUC3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3ISS3IUC3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3ISS3IUC3_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3ISS3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3ISS3IUC3_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3ISS3IUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3ISS3IUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUC3ISS3IUC3
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3ISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUC3ISS3IUC3

        Create a new object of the class itkMaskNegatedImageFilterIUC3ISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUC3ISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUC3ISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUC3ISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUC3ISS3IUC3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3ISS3IUC3_swigregister(itkMaskNegatedImageFilterIUC3ISS3IUC3)
itkMaskNegatedImageFilterIUC3ISS3IUC3___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3ISS3IUC3___New_orig__
itkMaskNegatedImageFilterIUC3ISS3IUC3_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3ISS3IUC3_cast


def itkMaskNegatedImageFilterIUC3IUC3IUC3_New():
    return itkMaskNegatedImageFilterIUC3IUC3IUC3.New()

class itkMaskNegatedImageFilterIUC3IUC3IUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUC3IUC3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUC3IUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUC3IUC3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUC3IUC3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUC3IUC3_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUC3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUC3IUC3_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUC3IUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUC3IUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUC3IUC3IUC3
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUC3IUC3IUC3

        Create a new object of the class itkMaskNegatedImageFilterIUC3IUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUC3IUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUC3IUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUC3IUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUC3IUC3IUC3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUC3IUC3_swigregister(itkMaskNegatedImageFilterIUC3IUC3IUC3)
itkMaskNegatedImageFilterIUC3IUC3IUC3___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUC3IUC3___New_orig__
itkMaskNegatedImageFilterIUC3IUC3IUC3_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUC3IUC3_cast


def itkMaskNegatedImageFilterIUC3IUS3IUC3_New():
    return itkMaskNegatedImageFilterIUC3IUS3IUC3.New()

class itkMaskNegatedImageFilterIUC3IUS3IUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUC3):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUS3IUC3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUS3IUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUS3IUC3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUS3IUC3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUS3IUC3_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUS3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUS3IUC3_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUS3IUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUS3IUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUC3IUS3IUC3
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUC3IUS3IUC3

        Create a new object of the class itkMaskNegatedImageFilterIUC3IUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUC3IUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUC3IUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUC3IUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUC3IUS3IUC3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUS3IUC3_swigregister(itkMaskNegatedImageFilterIUC3IUS3IUC3)
itkMaskNegatedImageFilterIUC3IUS3IUC3___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUS3IUC3___New_orig__
itkMaskNegatedImageFilterIUC3IUS3IUC3_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUS3IUC3_cast


def itkMaskNegatedImageFilterIUS2ISS2IUS2_New():
    return itkMaskNegatedImageFilterIUS2ISS2IUS2.New()

class itkMaskNegatedImageFilterIUS2ISS2IUS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUS2):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2ISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2ISS2IUS2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2ISS2IUS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2ISS2IUS2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2ISS2IUS2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2ISS2IUS2_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2ISS2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2ISS2IUS2_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2ISS2IUS2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2ISS2IUS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUS2ISS2IUS2
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2ISS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUS2ISS2IUS2

        Create a new object of the class itkMaskNegatedImageFilterIUS2ISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUS2ISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUS2ISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUS2ISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUS2ISS2IUS2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2ISS2IUS2_swigregister(itkMaskNegatedImageFilterIUS2ISS2IUS2)
itkMaskNegatedImageFilterIUS2ISS2IUS2___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2ISS2IUS2___New_orig__
itkMaskNegatedImageFilterIUS2ISS2IUS2_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2ISS2IUS2_cast


def itkMaskNegatedImageFilterIUS2IUC2IUS2_New():
    return itkMaskNegatedImageFilterIUS2IUC2IUS2.New()

class itkMaskNegatedImageFilterIUS2IUC2IUS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUS2):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUC2IUS2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUC2IUS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUC2IUS2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUC2IUS2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUC2IUS2_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUC2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUC2IUS2_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUC2IUS2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUC2IUS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUS2IUC2IUS2
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUS2IUC2IUS2

        Create a new object of the class itkMaskNegatedImageFilterIUS2IUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUS2IUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUS2IUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUS2IUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUS2IUC2IUS2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUC2IUS2_swigregister(itkMaskNegatedImageFilterIUS2IUC2IUS2)
itkMaskNegatedImageFilterIUS2IUC2IUS2___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUC2IUS2___New_orig__
itkMaskNegatedImageFilterIUS2IUC2IUS2_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUC2IUS2_cast


def itkMaskNegatedImageFilterIUS2IUS2IUS2_New():
    return itkMaskNegatedImageFilterIUS2IUS2IUS2.New()

class itkMaskNegatedImageFilterIUS2IUS2IUS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUS2IUS2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUS2IUS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUS2IUS2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUS2IUS2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUS2IUS2_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUS2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUS2IUS2_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUS2IUS2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUS2IUS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUS2IUS2IUS2
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUS2IUS2IUS2

        Create a new object of the class itkMaskNegatedImageFilterIUS2IUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUS2IUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUS2IUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUS2IUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUS2IUS2IUS2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUS2IUS2_swigregister(itkMaskNegatedImageFilterIUS2IUS2IUS2)
itkMaskNegatedImageFilterIUS2IUS2IUS2___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUS2IUS2___New_orig__
itkMaskNegatedImageFilterIUS2IUS2IUS2_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUS2IUS2_cast


def itkMaskNegatedImageFilterIUS3ISS3IUS3_New():
    return itkMaskNegatedImageFilterIUS3ISS3IUS3.New()

class itkMaskNegatedImageFilterIUS3ISS3IUS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUS3):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3ISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3ISS3IUS3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3ISS3IUS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3ISS3IUS3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3ISS3IUS3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3ISS3IUS3_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3ISS3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3ISS3IUS3_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3ISS3IUS3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3ISS3IUS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUS3ISS3IUS3
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3ISS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUS3ISS3IUS3

        Create a new object of the class itkMaskNegatedImageFilterIUS3ISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUS3ISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUS3ISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUS3ISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUS3ISS3IUS3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3ISS3IUS3_swigregister(itkMaskNegatedImageFilterIUS3ISS3IUS3)
itkMaskNegatedImageFilterIUS3ISS3IUS3___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3ISS3IUS3___New_orig__
itkMaskNegatedImageFilterIUS3ISS3IUS3_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3ISS3IUS3_cast


def itkMaskNegatedImageFilterIUS3IUC3IUS3_New():
    return itkMaskNegatedImageFilterIUS3IUC3IUS3.New()

class itkMaskNegatedImageFilterIUS3IUC3IUS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUS3):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUC3IUS3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUC3IUS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUC3IUS3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUC3IUS3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUC3IUS3_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUC3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUC3IUS3_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUC3IUS3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUC3IUS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUS3IUC3IUS3
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUS3IUC3IUS3

        Create a new object of the class itkMaskNegatedImageFilterIUS3IUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUS3IUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUS3IUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUS3IUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUS3IUC3IUS3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUC3IUS3_swigregister(itkMaskNegatedImageFilterIUS3IUC3IUS3)
itkMaskNegatedImageFilterIUS3IUC3IUS3___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUC3IUS3___New_orig__
itkMaskNegatedImageFilterIUS3IUC3IUS3_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUC3IUS3_cast


def itkMaskNegatedImageFilterIUS3IUS3IUS3_New():
    return itkMaskNegatedImageFilterIUS3IUS3IUS3.New()

class itkMaskNegatedImageFilterIUS3IUS3IUS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUS3IUS3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUS3IUS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUS3IUS3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUS3IUS3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUS3IUS3_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUS3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUS3IUS3_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUS3IUS3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUS3IUS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUS3IUS3IUS3
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUS3IUS3IUS3

        Create a new object of the class itkMaskNegatedImageFilterIUS3IUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUS3IUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUS3IUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUS3IUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUS3IUS3IUS3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUS3IUS3_swigregister(itkMaskNegatedImageFilterIUS3IUS3IUS3)
itkMaskNegatedImageFilterIUS3IUS3IUS3___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUS3IUS3___New_orig__
itkMaskNegatedImageFilterIUS3IUS3IUS3_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUS3IUS3_cast


def itkMaskNegatedImageFilterIVF22ISS2IVF22_New():
    return itkMaskNegatedImageFilterIVF22ISS2IVF22.New()

class itkMaskNegatedImageFilterIVF22ISS2IVF22(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22ISS2IVF22):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22ISS2IVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22ISS2IVF22_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22ISS2IVF22_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22ISS2IVF22_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22ISS2IVF22_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22ISS2IVF22_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22ISS2IVF22_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22ISS2IVF22_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22ISS2IVF22_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22ISS2IVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF22ISS2IVF22
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22ISS2IVF22_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF22ISS2IVF22

        Create a new object of the class itkMaskNegatedImageFilterIVF22ISS2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF22ISS2IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF22ISS2IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF22ISS2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF22ISS2IVF22 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22ISS2IVF22_swigregister(itkMaskNegatedImageFilterIVF22ISS2IVF22)
itkMaskNegatedImageFilterIVF22ISS2IVF22___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22ISS2IVF22___New_orig__
itkMaskNegatedImageFilterIVF22ISS2IVF22_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22ISS2IVF22_cast


def itkMaskNegatedImageFilterIVF22IUC2IVF22_New():
    return itkMaskNegatedImageFilterIVF22IUC2IVF22.New()

class itkMaskNegatedImageFilterIVF22IUC2IVF22(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUC2IVF22):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUC2IVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUC2IVF22_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUC2IVF22_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUC2IVF22_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUC2IVF22_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUC2IVF22_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUC2IVF22_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUC2IVF22_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUC2IVF22_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUC2IVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF22IUC2IVF22
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUC2IVF22_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF22IUC2IVF22

        Create a new object of the class itkMaskNegatedImageFilterIVF22IUC2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF22IUC2IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF22IUC2IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF22IUC2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF22IUC2IVF22 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUC2IVF22_swigregister(itkMaskNegatedImageFilterIVF22IUC2IVF22)
itkMaskNegatedImageFilterIVF22IUC2IVF22___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUC2IVF22___New_orig__
itkMaskNegatedImageFilterIVF22IUC2IVF22_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUC2IVF22_cast


def itkMaskNegatedImageFilterIVF22IUS2IVF22_New():
    return itkMaskNegatedImageFilterIVF22IUS2IVF22.New()

class itkMaskNegatedImageFilterIVF22IUS2IVF22(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUS2IVF22):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUS2IVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUS2IVF22_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUS2IVF22_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUS2IVF22_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUS2IVF22_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUS2IVF22_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUS2IVF22_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUS2IVF22_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUS2IVF22_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUS2IVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF22IUS2IVF22
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUS2IVF22_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF22IUS2IVF22

        Create a new object of the class itkMaskNegatedImageFilterIVF22IUS2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF22IUS2IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF22IUS2IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF22IUS2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF22IUS2IVF22 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUS2IVF22_swigregister(itkMaskNegatedImageFilterIVF22IUS2IVF22)
itkMaskNegatedImageFilterIVF22IUS2IVF22___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUS2IVF22___New_orig__
itkMaskNegatedImageFilterIVF22IUS2IVF22_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUS2IVF22_cast


def itkMaskNegatedImageFilterIVF23ISS3IVF23_New():
    return itkMaskNegatedImageFilterIVF23ISS3IVF23.New()

class itkMaskNegatedImageFilterIVF23ISS3IVF23(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23ISS3IVF23):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23ISS3IVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23ISS3IVF23_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23ISS3IVF23_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23ISS3IVF23_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23ISS3IVF23_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23ISS3IVF23_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23ISS3IVF23_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23ISS3IVF23_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23ISS3IVF23_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23ISS3IVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF23ISS3IVF23
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23ISS3IVF23_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF23ISS3IVF23

        Create a new object of the class itkMaskNegatedImageFilterIVF23ISS3IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF23ISS3IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF23ISS3IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF23ISS3IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF23ISS3IVF23 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23ISS3IVF23_swigregister(itkMaskNegatedImageFilterIVF23ISS3IVF23)
itkMaskNegatedImageFilterIVF23ISS3IVF23___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23ISS3IVF23___New_orig__
itkMaskNegatedImageFilterIVF23ISS3IVF23_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23ISS3IVF23_cast


def itkMaskNegatedImageFilterIVF23IUC3IVF23_New():
    return itkMaskNegatedImageFilterIVF23IUC3IVF23.New()

class itkMaskNegatedImageFilterIVF23IUC3IVF23(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUC3IVF23):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUC3IVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUC3IVF23_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUC3IVF23_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUC3IVF23_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUC3IVF23_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUC3IVF23_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUC3IVF23_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUC3IVF23_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUC3IVF23_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUC3IVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF23IUC3IVF23
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUC3IVF23_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF23IUC3IVF23

        Create a new object of the class itkMaskNegatedImageFilterIVF23IUC3IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF23IUC3IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF23IUC3IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF23IUC3IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF23IUC3IVF23 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUC3IVF23_swigregister(itkMaskNegatedImageFilterIVF23IUC3IVF23)
itkMaskNegatedImageFilterIVF23IUC3IVF23___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUC3IVF23___New_orig__
itkMaskNegatedImageFilterIVF23IUC3IVF23_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUC3IVF23_cast


def itkMaskNegatedImageFilterIVF23IUS3IVF23_New():
    return itkMaskNegatedImageFilterIVF23IUS3IVF23.New()

class itkMaskNegatedImageFilterIVF23IUS3IVF23(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUS3IVF23):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUS3IVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUS3IVF23_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUS3IVF23_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUS3IVF23_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUS3IVF23_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUS3IVF23_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUS3IVF23_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUS3IVF23_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUS3IVF23_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUS3IVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF23IUS3IVF23
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUS3IVF23_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF23IUS3IVF23

        Create a new object of the class itkMaskNegatedImageFilterIVF23IUS3IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF23IUS3IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF23IUS3IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF23IUS3IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF23IUS3IVF23 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUS3IVF23_swigregister(itkMaskNegatedImageFilterIVF23IUS3IVF23)
itkMaskNegatedImageFilterIVF23IUS3IVF23___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUS3IVF23___New_orig__
itkMaskNegatedImageFilterIVF23IUS3IVF23_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUS3IVF23_cast


def itkMaskNegatedImageFilterIVF32ISS2IVF32_New():
    return itkMaskNegatedImageFilterIVF32ISS2IVF32.New()

class itkMaskNegatedImageFilterIVF32ISS2IVF32(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32ISS2IVF32):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32ISS2IVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32ISS2IVF32_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32ISS2IVF32_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32ISS2IVF32_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32ISS2IVF32_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32ISS2IVF32_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32ISS2IVF32_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32ISS2IVF32_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32ISS2IVF32_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32ISS2IVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF32ISS2IVF32
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32ISS2IVF32_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF32ISS2IVF32

        Create a new object of the class itkMaskNegatedImageFilterIVF32ISS2IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF32ISS2IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF32ISS2IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF32ISS2IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF32ISS2IVF32 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32ISS2IVF32_swigregister(itkMaskNegatedImageFilterIVF32ISS2IVF32)
itkMaskNegatedImageFilterIVF32ISS2IVF32___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32ISS2IVF32___New_orig__
itkMaskNegatedImageFilterIVF32ISS2IVF32_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32ISS2IVF32_cast


def itkMaskNegatedImageFilterIVF32IUC2IVF32_New():
    return itkMaskNegatedImageFilterIVF32IUC2IVF32.New()

class itkMaskNegatedImageFilterIVF32IUC2IVF32(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUC2IVF32):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUC2IVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUC2IVF32_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUC2IVF32_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUC2IVF32_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUC2IVF32_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUC2IVF32_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUC2IVF32_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUC2IVF32_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUC2IVF32_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUC2IVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF32IUC2IVF32
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUC2IVF32_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF32IUC2IVF32

        Create a new object of the class itkMaskNegatedImageFilterIVF32IUC2IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF32IUC2IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF32IUC2IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF32IUC2IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF32IUC2IVF32 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUC2IVF32_swigregister(itkMaskNegatedImageFilterIVF32IUC2IVF32)
itkMaskNegatedImageFilterIVF32IUC2IVF32___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUC2IVF32___New_orig__
itkMaskNegatedImageFilterIVF32IUC2IVF32_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUC2IVF32_cast


def itkMaskNegatedImageFilterIVF32IUS2IVF32_New():
    return itkMaskNegatedImageFilterIVF32IUS2IVF32.New()

class itkMaskNegatedImageFilterIVF32IUS2IVF32(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUS2IVF32):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUS2IVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUS2IVF32_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUS2IVF32_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUS2IVF32_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUS2IVF32_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUS2IVF32_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUS2IVF32_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUS2IVF32_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUS2IVF32_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUS2IVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF32IUS2IVF32
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUS2IVF32_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF32IUS2IVF32

        Create a new object of the class itkMaskNegatedImageFilterIVF32IUS2IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF32IUS2IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF32IUS2IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF32IUS2IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF32IUS2IVF32 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUS2IVF32_swigregister(itkMaskNegatedImageFilterIVF32IUS2IVF32)
itkMaskNegatedImageFilterIVF32IUS2IVF32___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUS2IVF32___New_orig__
itkMaskNegatedImageFilterIVF32IUS2IVF32_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUS2IVF32_cast


def itkMaskNegatedImageFilterIVF33ISS3IVF33_New():
    return itkMaskNegatedImageFilterIVF33ISS3IVF33.New()

class itkMaskNegatedImageFilterIVF33ISS3IVF33(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33ISS3IVF33):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33ISS3IVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33ISS3IVF33_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33ISS3IVF33_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33ISS3IVF33_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33ISS3IVF33_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33ISS3IVF33_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33ISS3IVF33_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33ISS3IVF33_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33ISS3IVF33_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33ISS3IVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF33ISS3IVF33
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33ISS3IVF33_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF33ISS3IVF33

        Create a new object of the class itkMaskNegatedImageFilterIVF33ISS3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF33ISS3IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF33ISS3IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF33ISS3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF33ISS3IVF33 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33ISS3IVF33_swigregister(itkMaskNegatedImageFilterIVF33ISS3IVF33)
itkMaskNegatedImageFilterIVF33ISS3IVF33___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33ISS3IVF33___New_orig__
itkMaskNegatedImageFilterIVF33ISS3IVF33_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33ISS3IVF33_cast


def itkMaskNegatedImageFilterIVF33IUC3IVF33_New():
    return itkMaskNegatedImageFilterIVF33IUC3IVF33.New()

class itkMaskNegatedImageFilterIVF33IUC3IVF33(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUC3IVF33):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUC3IVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUC3IVF33_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUC3IVF33_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUC3IVF33_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUC3IVF33_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUC3IVF33_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUC3IVF33_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUC3IVF33_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUC3IVF33_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUC3IVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF33IUC3IVF33
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUC3IVF33_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF33IUC3IVF33

        Create a new object of the class itkMaskNegatedImageFilterIVF33IUC3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF33IUC3IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF33IUC3IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF33IUC3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF33IUC3IVF33 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUC3IVF33_swigregister(itkMaskNegatedImageFilterIVF33IUC3IVF33)
itkMaskNegatedImageFilterIVF33IUC3IVF33___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUC3IVF33___New_orig__
itkMaskNegatedImageFilterIVF33IUC3IVF33_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUC3IVF33_cast


def itkMaskNegatedImageFilterIVF33IUS3IVF33_New():
    return itkMaskNegatedImageFilterIVF33IUS3IVF33.New()

class itkMaskNegatedImageFilterIVF33IUS3IVF33(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUS3IVF33):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUS3IVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUS3IVF33_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUS3IVF33_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUS3IVF33_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUS3IVF33_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUS3IVF33_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUS3IVF33_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUS3IVF33_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUS3IVF33_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUS3IVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF33IUS3IVF33
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUS3IVF33_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF33IUS3IVF33

        Create a new object of the class itkMaskNegatedImageFilterIVF33IUS3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF33IUS3IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF33IUS3IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF33IUS3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF33IUS3IVF33 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUS3IVF33_swigregister(itkMaskNegatedImageFilterIVF33IUS3IVF33)
itkMaskNegatedImageFilterIVF33IUS3IVF33___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUS3IVF33___New_orig__
itkMaskNegatedImageFilterIVF33IUS3IVF33_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUS3IVF33_cast


def itkMaskNegatedImageFilterIVF42ISS2IVF42_New():
    return itkMaskNegatedImageFilterIVF42ISS2IVF42.New()

class itkMaskNegatedImageFilterIVF42ISS2IVF42(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42ISS2IVF42):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42ISS2IVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42ISS2IVF42_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42ISS2IVF42_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42ISS2IVF42_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42ISS2IVF42_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42ISS2IVF42_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42ISS2IVF42_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42ISS2IVF42_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42ISS2IVF42_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42ISS2IVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF42ISS2IVF42
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42ISS2IVF42_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF42ISS2IVF42

        Create a new object of the class itkMaskNegatedImageFilterIVF42ISS2IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF42ISS2IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF42ISS2IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF42ISS2IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF42ISS2IVF42 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42ISS2IVF42_swigregister(itkMaskNegatedImageFilterIVF42ISS2IVF42)
itkMaskNegatedImageFilterIVF42ISS2IVF42___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42ISS2IVF42___New_orig__
itkMaskNegatedImageFilterIVF42ISS2IVF42_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42ISS2IVF42_cast


def itkMaskNegatedImageFilterIVF42IUC2IVF42_New():
    return itkMaskNegatedImageFilterIVF42IUC2IVF42.New()

class itkMaskNegatedImageFilterIVF42IUC2IVF42(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUC2IVF42):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUC2IVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUC2IVF42_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUC2IVF42_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUC2IVF42_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUC2IVF42_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUC2IVF42_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUC2IVF42_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUC2IVF42_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUC2IVF42_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUC2IVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF42IUC2IVF42
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUC2IVF42_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF42IUC2IVF42

        Create a new object of the class itkMaskNegatedImageFilterIVF42IUC2IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF42IUC2IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF42IUC2IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF42IUC2IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF42IUC2IVF42 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUC2IVF42_swigregister(itkMaskNegatedImageFilterIVF42IUC2IVF42)
itkMaskNegatedImageFilterIVF42IUC2IVF42___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUC2IVF42___New_orig__
itkMaskNegatedImageFilterIVF42IUC2IVF42_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUC2IVF42_cast


def itkMaskNegatedImageFilterIVF42IUS2IVF42_New():
    return itkMaskNegatedImageFilterIVF42IUS2IVF42.New()

class itkMaskNegatedImageFilterIVF42IUS2IVF42(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUS2IVF42):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUS2IVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUS2IVF42_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUS2IVF42_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUS2IVF42_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUS2IVF42_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUS2IVF42_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUS2IVF42_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUS2IVF42_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUS2IVF42_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUS2IVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF42IUS2IVF42
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUS2IVF42_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF42IUS2IVF42

        Create a new object of the class itkMaskNegatedImageFilterIVF42IUS2IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF42IUS2IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF42IUS2IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF42IUS2IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF42IUS2IVF42 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUS2IVF42_swigregister(itkMaskNegatedImageFilterIVF42IUS2IVF42)
itkMaskNegatedImageFilterIVF42IUS2IVF42___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUS2IVF42___New_orig__
itkMaskNegatedImageFilterIVF42IUS2IVF42_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUS2IVF42_cast


def itkMaskNegatedImageFilterIVF43ISS3IVF43_New():
    return itkMaskNegatedImageFilterIVF43ISS3IVF43.New()

class itkMaskNegatedImageFilterIVF43ISS3IVF43(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43ISS3IVF43):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43ISS3IVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43ISS3IVF43_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43ISS3IVF43_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43ISS3IVF43_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43ISS3IVF43_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43ISS3IVF43_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43ISS3IVF43_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43ISS3IVF43_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43ISS3IVF43_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43ISS3IVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF43ISS3IVF43
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43ISS3IVF43_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF43ISS3IVF43

        Create a new object of the class itkMaskNegatedImageFilterIVF43ISS3IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF43ISS3IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF43ISS3IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF43ISS3IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF43ISS3IVF43 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43ISS3IVF43_swigregister(itkMaskNegatedImageFilterIVF43ISS3IVF43)
itkMaskNegatedImageFilterIVF43ISS3IVF43___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43ISS3IVF43___New_orig__
itkMaskNegatedImageFilterIVF43ISS3IVF43_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43ISS3IVF43_cast


def itkMaskNegatedImageFilterIVF43IUC3IVF43_New():
    return itkMaskNegatedImageFilterIVF43IUC3IVF43.New()

class itkMaskNegatedImageFilterIVF43IUC3IVF43(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUC3IVF43):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUC3IVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUC3IVF43_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUC3IVF43_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUC3IVF43_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUC3IVF43_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUC3IVF43_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUC3IVF43_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUC3IVF43_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUC3IVF43_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUC3IVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF43IUC3IVF43
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUC3IVF43_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF43IUC3IVF43

        Create a new object of the class itkMaskNegatedImageFilterIVF43IUC3IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF43IUC3IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF43IUC3IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF43IUC3IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF43IUC3IVF43 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUC3IVF43_swigregister(itkMaskNegatedImageFilterIVF43IUC3IVF43)
itkMaskNegatedImageFilterIVF43IUC3IVF43___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUC3IVF43___New_orig__
itkMaskNegatedImageFilterIVF43IUC3IVF43_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUC3IVF43_cast


def itkMaskNegatedImageFilterIVF43IUS3IVF43_New():
    return itkMaskNegatedImageFilterIVF43IUS3IVF43.New()

class itkMaskNegatedImageFilterIVF43IUS3IVF43(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUS3IVF43):
    r"""


    Mask an image with the negation (or logical compliment) of a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator!=. This condition is required because internally this
    filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Only pixel value with mask_value ( defaults to 0 ) will be
    preserved.

    See:   MaskImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUS3IVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUS3IVF43_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUS3IVF43_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUS3IVF43_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUS3IVF43_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUS3IVF43_GetMaskingValue)
    SetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUS3IVF43_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUS3IVF43_GetMaskImage)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUS3IVF43_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUS3IVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF43IUS3IVF43
    cast = _swig_new_static_method(_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUS3IVF43_cast)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF43IUS3IVF43

        Create a new object of the class itkMaskNegatedImageFilterIVF43IUS3IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF43IUS3IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF43IUS3IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF43IUS3IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF43IUS3IVF43 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUS3IVF43_swigregister(itkMaskNegatedImageFilterIVF43IUS3IVF43)
itkMaskNegatedImageFilterIVF43IUS3IVF43___New_orig__ = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUS3IVF43___New_orig__
itkMaskNegatedImageFilterIVF43IUS3IVF43_cast = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUS3IVF43_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def mask_negated_image_filter(*args, **kwargs):
    """Procedural interface for MaskNegatedImageFilter"""
    import itk
    instance = itk.MaskNegatedImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def mask_negated_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.MaskNegatedImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.MaskNegatedImageFilter.values()[0]
    else:
        filter_object = itk.MaskNegatedImageFilter

    mask_negated_image_filter.__doc__ = filter_object.__doc__
    mask_negated_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    mask_negated_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.MaskNegatedImageFilter, itkTemplate.itkTemplate):
        mask_negated_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        mask_negated_image_filter.__doc__ += "\n"
        mask_negated_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        mask_negated_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



