# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: scoping.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import ansys.grpc.dpf.base_pb2 as base__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='scoping.proto',
  package='ansys.api.dpf.scoping.v0',
  syntax='proto3',
  serialized_options=_b('\252\002\030Ansys.Api.Dpf.Scoping.V0'),
  serialized_pb=_b('\n\rscoping.proto\x12\x18\x61nsys.api.dpf.scoping.v0\x1a\nbase.proto\"\x15\n\x07Scoping\x12\n\n\x02id\x18\x01 \x01(\x05\"\xec\x01\n\rUpdateRequest\x12\x32\n\x07scoping\x18\x01 \x01(\x0b\x32!.ansys.api.dpf.scoping.v0.Scoping\x12)\n\x03ids\x18\x02 \x01(\x0b\x32\x1a.ansys.api.dpf.base.v0.IdsH\x00\x12\x33\n\x08location\x18\x03 \x01(\x0b\x32\x1f.ansys.api.dpf.base.v0.LocationH\x00\x12\x35\n\x08index_id\x18\x04 \x01(\x0b\x32!.ansys.api.dpf.scoping.v0.IndexIdH\x00\x42\x10\n\x0eupdate_request\"$\n\x07IndexId\x12\n\n\x02id\x18\x01 \x01(\x05\x12\r\n\x05index\x18\x02 \x01(\x05\"v\n\x0c\x43ountRequest\x12\x32\n\x07scoping\x18\x01 \x01(\x0b\x32!.ansys.api.dpf.scoping.v0.Scoping\x12\x32\n\x06\x65ntity\x18\x02 \x01(\x0e\x32\".ansys.api.dpf.base.v0.CountEntity\"C\n\x13GetLocationResponse\x12,\n\x03loc\x18\x01 \x01(\x0b\x32\x1f.ansys.api.dpf.base.v0.Location\"o\n\nGetRequest\x12\x32\n\x07scoping\x18\x01 \x01(\x0b\x32!.ansys.api.dpf.scoping.v0.Scoping\x12\x0c\n\x02id\x18\x02 \x01(\x05H\x00\x12\x0f\n\x05index\x18\x03 \x01(\x05H\x00\x42\x0e\n\x0ctype_request\"<\n\x0bGetResponse\x12\x0c\n\x02id\x18\x01 \x01(\x05H\x00\x12\x0f\n\x05index\x18\x02 \x01(\x05H\x00\x42\x0e\n\x0ctype_request2\xcc\x04\n\x0eScopingService\x12I\n\x06\x43reate\x12\x1c.ansys.api.dpf.base.v0.Empty\x1a!.ansys.api.dpf.scoping.v0.Scoping\x12O\n\x06Update\x12\'.ansys.api.dpf.scoping.v0.UpdateRequest\x1a\x1c.ansys.api.dpf.base.v0.Empty\x12G\n\x04List\x12!.ansys.api.dpf.scoping.v0.Scoping\x1a\x1a.ansys.api.dpf.base.v0.Ids0\x01\x12U\n\x05\x43ount\x12&.ansys.api.dpf.scoping.v0.CountRequest\x1a$.ansys.api.dpf.base.v0.CountResponse\x12_\n\x0bGetLocation\x12!.ansys.api.dpf.scoping.v0.Scoping\x1a-.ansys.api.dpf.scoping.v0.GetLocationResponse\x12R\n\x03Get\x12$.ansys.api.dpf.scoping.v0.GetRequest\x1a%.ansys.api.dpf.scoping.v0.GetResponse\x12I\n\x06\x44\x65lete\x12!.ansys.api.dpf.scoping.v0.Scoping\x1a\x1c.ansys.api.dpf.base.v0.EmptyB\x1b\xaa\x02\x18\x41nsys.Api.Dpf.Scoping.V0b\x06proto3')
  ,
  dependencies=[base__pb2.DESCRIPTOR,])




_SCOPING = _descriptor.Descriptor(
  name='Scoping',
  full_name='ansys.api.dpf.scoping.v0.Scoping',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ansys.api.dpf.scoping.v0.Scoping.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=55,
  serialized_end=76,
)


_UPDATEREQUEST = _descriptor.Descriptor(
  name='UpdateRequest',
  full_name='ansys.api.dpf.scoping.v0.UpdateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scoping', full_name='ansys.api.dpf.scoping.v0.UpdateRequest.scoping', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ids', full_name='ansys.api.dpf.scoping.v0.UpdateRequest.ids', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='location', full_name='ansys.api.dpf.scoping.v0.UpdateRequest.location', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='index_id', full_name='ansys.api.dpf.scoping.v0.UpdateRequest.index_id', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='update_request', full_name='ansys.api.dpf.scoping.v0.UpdateRequest.update_request',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=79,
  serialized_end=315,
)


_INDEXID = _descriptor.Descriptor(
  name='IndexId',
  full_name='ansys.api.dpf.scoping.v0.IndexId',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ansys.api.dpf.scoping.v0.IndexId.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='index', full_name='ansys.api.dpf.scoping.v0.IndexId.index', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=317,
  serialized_end=353,
)


_COUNTREQUEST = _descriptor.Descriptor(
  name='CountRequest',
  full_name='ansys.api.dpf.scoping.v0.CountRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scoping', full_name='ansys.api.dpf.scoping.v0.CountRequest.scoping', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='entity', full_name='ansys.api.dpf.scoping.v0.CountRequest.entity', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=355,
  serialized_end=473,
)


_GETLOCATIONRESPONSE = _descriptor.Descriptor(
  name='GetLocationResponse',
  full_name='ansys.api.dpf.scoping.v0.GetLocationResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='loc', full_name='ansys.api.dpf.scoping.v0.GetLocationResponse.loc', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=475,
  serialized_end=542,
)


_GETREQUEST = _descriptor.Descriptor(
  name='GetRequest',
  full_name='ansys.api.dpf.scoping.v0.GetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scoping', full_name='ansys.api.dpf.scoping.v0.GetRequest.scoping', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='id', full_name='ansys.api.dpf.scoping.v0.GetRequest.id', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='index', full_name='ansys.api.dpf.scoping.v0.GetRequest.index', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='type_request', full_name='ansys.api.dpf.scoping.v0.GetRequest.type_request',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=544,
  serialized_end=655,
)


_GETRESPONSE = _descriptor.Descriptor(
  name='GetResponse',
  full_name='ansys.api.dpf.scoping.v0.GetResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ansys.api.dpf.scoping.v0.GetResponse.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='index', full_name='ansys.api.dpf.scoping.v0.GetResponse.index', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='type_request', full_name='ansys.api.dpf.scoping.v0.GetResponse.type_request',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=657,
  serialized_end=717,
)

_UPDATEREQUEST.fields_by_name['scoping'].message_type = _SCOPING
_UPDATEREQUEST.fields_by_name['ids'].message_type = base__pb2._IDS
_UPDATEREQUEST.fields_by_name['location'].message_type = base__pb2._LOCATION
_UPDATEREQUEST.fields_by_name['index_id'].message_type = _INDEXID
_UPDATEREQUEST.oneofs_by_name['update_request'].fields.append(
  _UPDATEREQUEST.fields_by_name['ids'])
_UPDATEREQUEST.fields_by_name['ids'].containing_oneof = _UPDATEREQUEST.oneofs_by_name['update_request']
_UPDATEREQUEST.oneofs_by_name['update_request'].fields.append(
  _UPDATEREQUEST.fields_by_name['location'])
_UPDATEREQUEST.fields_by_name['location'].containing_oneof = _UPDATEREQUEST.oneofs_by_name['update_request']
_UPDATEREQUEST.oneofs_by_name['update_request'].fields.append(
  _UPDATEREQUEST.fields_by_name['index_id'])
_UPDATEREQUEST.fields_by_name['index_id'].containing_oneof = _UPDATEREQUEST.oneofs_by_name['update_request']
_COUNTREQUEST.fields_by_name['scoping'].message_type = _SCOPING
_COUNTREQUEST.fields_by_name['entity'].enum_type = base__pb2._COUNTENTITY
_GETLOCATIONRESPONSE.fields_by_name['loc'].message_type = base__pb2._LOCATION
_GETREQUEST.fields_by_name['scoping'].message_type = _SCOPING
_GETREQUEST.oneofs_by_name['type_request'].fields.append(
  _GETREQUEST.fields_by_name['id'])
_GETREQUEST.fields_by_name['id'].containing_oneof = _GETREQUEST.oneofs_by_name['type_request']
_GETREQUEST.oneofs_by_name['type_request'].fields.append(
  _GETREQUEST.fields_by_name['index'])
_GETREQUEST.fields_by_name['index'].containing_oneof = _GETREQUEST.oneofs_by_name['type_request']
_GETRESPONSE.oneofs_by_name['type_request'].fields.append(
  _GETRESPONSE.fields_by_name['id'])
_GETRESPONSE.fields_by_name['id'].containing_oneof = _GETRESPONSE.oneofs_by_name['type_request']
_GETRESPONSE.oneofs_by_name['type_request'].fields.append(
  _GETRESPONSE.fields_by_name['index'])
_GETRESPONSE.fields_by_name['index'].containing_oneof = _GETRESPONSE.oneofs_by_name['type_request']
DESCRIPTOR.message_types_by_name['Scoping'] = _SCOPING
DESCRIPTOR.message_types_by_name['UpdateRequest'] = _UPDATEREQUEST
DESCRIPTOR.message_types_by_name['IndexId'] = _INDEXID
DESCRIPTOR.message_types_by_name['CountRequest'] = _COUNTREQUEST
DESCRIPTOR.message_types_by_name['GetLocationResponse'] = _GETLOCATIONRESPONSE
DESCRIPTOR.message_types_by_name['GetRequest'] = _GETREQUEST
DESCRIPTOR.message_types_by_name['GetResponse'] = _GETRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Scoping = _reflection.GeneratedProtocolMessageType('Scoping', (_message.Message,), {
  'DESCRIPTOR' : _SCOPING,
  '__module__' : 'scoping_pb2'
  # @@protoc_insertion_point(class_scope:ansys.api.dpf.scoping.v0.Scoping)
  })
_sym_db.RegisterMessage(Scoping)

UpdateRequest = _reflection.GeneratedProtocolMessageType('UpdateRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEREQUEST,
  '__module__' : 'scoping_pb2'
  # @@protoc_insertion_point(class_scope:ansys.api.dpf.scoping.v0.UpdateRequest)
  })
_sym_db.RegisterMessage(UpdateRequest)

IndexId = _reflection.GeneratedProtocolMessageType('IndexId', (_message.Message,), {
  'DESCRIPTOR' : _INDEXID,
  '__module__' : 'scoping_pb2'
  # @@protoc_insertion_point(class_scope:ansys.api.dpf.scoping.v0.IndexId)
  })
_sym_db.RegisterMessage(IndexId)

CountRequest = _reflection.GeneratedProtocolMessageType('CountRequest', (_message.Message,), {
  'DESCRIPTOR' : _COUNTREQUEST,
  '__module__' : 'scoping_pb2'
  # @@protoc_insertion_point(class_scope:ansys.api.dpf.scoping.v0.CountRequest)
  })
_sym_db.RegisterMessage(CountRequest)

GetLocationResponse = _reflection.GeneratedProtocolMessageType('GetLocationResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETLOCATIONRESPONSE,
  '__module__' : 'scoping_pb2'
  # @@protoc_insertion_point(class_scope:ansys.api.dpf.scoping.v0.GetLocationResponse)
  })
_sym_db.RegisterMessage(GetLocationResponse)

GetRequest = _reflection.GeneratedProtocolMessageType('GetRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETREQUEST,
  '__module__' : 'scoping_pb2'
  # @@protoc_insertion_point(class_scope:ansys.api.dpf.scoping.v0.GetRequest)
  })
_sym_db.RegisterMessage(GetRequest)

GetResponse = _reflection.GeneratedProtocolMessageType('GetResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETRESPONSE,
  '__module__' : 'scoping_pb2'
  # @@protoc_insertion_point(class_scope:ansys.api.dpf.scoping.v0.GetResponse)
  })
_sym_db.RegisterMessage(GetResponse)


DESCRIPTOR._options = None

_SCOPINGSERVICE = _descriptor.ServiceDescriptor(
  name='ScopingService',
  full_name='ansys.api.dpf.scoping.v0.ScopingService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=720,
  serialized_end=1308,
  methods=[
  _descriptor.MethodDescriptor(
    name='Create',
    full_name='ansys.api.dpf.scoping.v0.ScopingService.Create',
    index=0,
    containing_service=None,
    input_type=base__pb2._EMPTY,
    output_type=_SCOPING,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Update',
    full_name='ansys.api.dpf.scoping.v0.ScopingService.Update',
    index=1,
    containing_service=None,
    input_type=_UPDATEREQUEST,
    output_type=base__pb2._EMPTY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='List',
    full_name='ansys.api.dpf.scoping.v0.ScopingService.List',
    index=2,
    containing_service=None,
    input_type=_SCOPING,
    output_type=base__pb2._IDS,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Count',
    full_name='ansys.api.dpf.scoping.v0.ScopingService.Count',
    index=3,
    containing_service=None,
    input_type=_COUNTREQUEST,
    output_type=base__pb2._COUNTRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLocation',
    full_name='ansys.api.dpf.scoping.v0.ScopingService.GetLocation',
    index=4,
    containing_service=None,
    input_type=_SCOPING,
    output_type=_GETLOCATIONRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Get',
    full_name='ansys.api.dpf.scoping.v0.ScopingService.Get',
    index=5,
    containing_service=None,
    input_type=_GETREQUEST,
    output_type=_GETRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Delete',
    full_name='ansys.api.dpf.scoping.v0.ScopingService.Delete',
    index=6,
    containing_service=None,
    input_type=_SCOPING,
    output_type=base__pb2._EMPTY,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_SCOPINGSERVICE)

DESCRIPTOR.services_by_name['ScopingService'] = _SCOPINGSERVICE

# @@protoc_insertion_point(module_scope)
