# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageGridPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkShrinkImageFilterPython
else:
    import _itkShrinkImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkShrinkImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkShrinkImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkFixedArrayPython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.stdcomplexPython
import itk.itkRGBAPixelPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython

def itkShrinkImageFilterID2ID2_New():
    return itkShrinkImageFilterID2ID2.New()

class itkShrinkImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""


    Reduce the size of an image by an integer factor in each dimension.

    ShrinkImageFilter reduces the size of an image by an integer factor in
    each dimension. The algorithm implemented is a simple subsample. The
    output image size in each dimension is given by:

    outputSize[j] = max( std::floor(inputSize[j]/shrinkFactor[j]), 1 );

    NOTE: The physical centers of the input and output will be the same.
    Because of this, the Origin of the output may not be the same as the
    Origin of the input. Since this filter produces an image which is a
    different resolution, origin and with different pixel spacing than its
    input image, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_Clone)
    SetShrinkFactors = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_SetShrinkFactor)
    GetShrinkFactors = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_GetShrinkFactors)
    GenerateOutputInformation = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_GenerateInputRequestedRegion)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterID2ID2
    cast = _swig_new_static_method(_itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterID2ID2

        Create a new object of the class itkShrinkImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterID2ID2 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_swigregister(itkShrinkImageFilterID2ID2)
itkShrinkImageFilterID2ID2___New_orig__ = _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2___New_orig__
itkShrinkImageFilterID2ID2_cast = _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_cast


def itkShrinkImageFilterID3ID3_New():
    return itkShrinkImageFilterID3ID3.New()

class itkShrinkImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""


    Reduce the size of an image by an integer factor in each dimension.

    ShrinkImageFilter reduces the size of an image by an integer factor in
    each dimension. The algorithm implemented is a simple subsample. The
    output image size in each dimension is given by:

    outputSize[j] = max( std::floor(inputSize[j]/shrinkFactor[j]), 1 );

    NOTE: The physical centers of the input and output will be the same.
    Because of this, the Origin of the output may not be the same as the
    Origin of the input. Since this filter produces an image which is a
    different resolution, origin and with different pixel spacing than its
    input image, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_Clone)
    SetShrinkFactors = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_SetShrinkFactor)
    GetShrinkFactors = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_GetShrinkFactors)
    GenerateOutputInformation = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_GenerateInputRequestedRegion)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterID3ID3
    cast = _swig_new_static_method(_itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterID3ID3

        Create a new object of the class itkShrinkImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterID3ID3 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_swigregister(itkShrinkImageFilterID3ID3)
itkShrinkImageFilterID3ID3___New_orig__ = _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3___New_orig__
itkShrinkImageFilterID3ID3_cast = _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_cast


def itkShrinkImageFilterIF2IF2_New():
    return itkShrinkImageFilterIF2IF2.New()

class itkShrinkImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""


    Reduce the size of an image by an integer factor in each dimension.

    ShrinkImageFilter reduces the size of an image by an integer factor in
    each dimension. The algorithm implemented is a simple subsample. The
    output image size in each dimension is given by:

    outputSize[j] = max( std::floor(inputSize[j]/shrinkFactor[j]), 1 );

    NOTE: The physical centers of the input and output will be the same.
    Because of this, the Origin of the output may not be the same as the
    Origin of the input. Since this filter produces an image which is a
    different resolution, origin and with different pixel spacing than its
    input image, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_Clone)
    SetShrinkFactors = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_SetShrinkFactor)
    GetShrinkFactors = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_GetShrinkFactors)
    GenerateOutputInformation = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_GenerateInputRequestedRegion)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIF2IF2
    cast = _swig_new_static_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIF2IF2

        Create a new object of the class itkShrinkImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIF2IF2 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_swigregister(itkShrinkImageFilterIF2IF2)
itkShrinkImageFilterIF2IF2___New_orig__ = _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2___New_orig__
itkShrinkImageFilterIF2IF2_cast = _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_cast


def itkShrinkImageFilterIF3IF3_New():
    return itkShrinkImageFilterIF3IF3.New()

class itkShrinkImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""


    Reduce the size of an image by an integer factor in each dimension.

    ShrinkImageFilter reduces the size of an image by an integer factor in
    each dimension. The algorithm implemented is a simple subsample. The
    output image size in each dimension is given by:

    outputSize[j] = max( std::floor(inputSize[j]/shrinkFactor[j]), 1 );

    NOTE: The physical centers of the input and output will be the same.
    Because of this, the Origin of the output may not be the same as the
    Origin of the input. Since this filter produces an image which is a
    different resolution, origin and with different pixel spacing than its
    input image, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_Clone)
    SetShrinkFactors = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_SetShrinkFactor)
    GetShrinkFactors = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_GetShrinkFactors)
    GenerateOutputInformation = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_GenerateInputRequestedRegion)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIF3IF3
    cast = _swig_new_static_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIF3IF3

        Create a new object of the class itkShrinkImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIF3IF3 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_swigregister(itkShrinkImageFilterIF3IF3)
itkShrinkImageFilterIF3IF3___New_orig__ = _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3___New_orig__
itkShrinkImageFilterIF3IF3_cast = _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_cast


def itkShrinkImageFilterISS2ISS2_New():
    return itkShrinkImageFilterISS2ISS2.New()

class itkShrinkImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""


    Reduce the size of an image by an integer factor in each dimension.

    ShrinkImageFilter reduces the size of an image by an integer factor in
    each dimension. The algorithm implemented is a simple subsample. The
    output image size in each dimension is given by:

    outputSize[j] = max( std::floor(inputSize[j]/shrinkFactor[j]), 1 );

    NOTE: The physical centers of the input and output will be the same.
    Because of this, the Origin of the output may not be the same as the
    Origin of the input. Since this filter produces an image which is a
    different resolution, origin and with different pixel spacing than its
    input image, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_Clone)
    SetShrinkFactors = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_SetShrinkFactor)
    GetShrinkFactors = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_GetShrinkFactors)
    GenerateOutputInformation = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_GenerateInputRequestedRegion)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterISS2ISS2

        Create a new object of the class itkShrinkImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterISS2ISS2 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_swigregister(itkShrinkImageFilterISS2ISS2)
itkShrinkImageFilterISS2ISS2___New_orig__ = _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2___New_orig__
itkShrinkImageFilterISS2ISS2_cast = _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_cast


def itkShrinkImageFilterISS3ISS3_New():
    return itkShrinkImageFilterISS3ISS3.New()

class itkShrinkImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""


    Reduce the size of an image by an integer factor in each dimension.

    ShrinkImageFilter reduces the size of an image by an integer factor in
    each dimension. The algorithm implemented is a simple subsample. The
    output image size in each dimension is given by:

    outputSize[j] = max( std::floor(inputSize[j]/shrinkFactor[j]), 1 );

    NOTE: The physical centers of the input and output will be the same.
    Because of this, the Origin of the output may not be the same as the
    Origin of the input. Since this filter produces an image which is a
    different resolution, origin and with different pixel spacing than its
    input image, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_Clone)
    SetShrinkFactors = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_SetShrinkFactor)
    GetShrinkFactors = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_GetShrinkFactors)
    GenerateOutputInformation = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_GenerateInputRequestedRegion)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterISS3ISS3

        Create a new object of the class itkShrinkImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterISS3ISS3 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_swigregister(itkShrinkImageFilterISS3ISS3)
itkShrinkImageFilterISS3ISS3___New_orig__ = _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3___New_orig__
itkShrinkImageFilterISS3ISS3_cast = _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_cast


def itkShrinkImageFilterIUC2IUC2_New():
    return itkShrinkImageFilterIUC2IUC2.New()

class itkShrinkImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""


    Reduce the size of an image by an integer factor in each dimension.

    ShrinkImageFilter reduces the size of an image by an integer factor in
    each dimension. The algorithm implemented is a simple subsample. The
    output image size in each dimension is given by:

    outputSize[j] = max( std::floor(inputSize[j]/shrinkFactor[j]), 1 );

    NOTE: The physical centers of the input and output will be the same.
    Because of this, the Origin of the output may not be the same as the
    Origin of the input. Since this filter produces an image which is a
    different resolution, origin and with different pixel spacing than its
    input image, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_Clone)
    SetShrinkFactors = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_SetShrinkFactor)
    GetShrinkFactors = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_GetShrinkFactors)
    GenerateOutputInformation = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_GenerateInputRequestedRegion)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIUC2IUC2

        Create a new object of the class itkShrinkImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIUC2IUC2 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_swigregister(itkShrinkImageFilterIUC2IUC2)
itkShrinkImageFilterIUC2IUC2___New_orig__ = _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2___New_orig__
itkShrinkImageFilterIUC2IUC2_cast = _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_cast


def itkShrinkImageFilterIUC3IUC3_New():
    return itkShrinkImageFilterIUC3IUC3.New()

class itkShrinkImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""


    Reduce the size of an image by an integer factor in each dimension.

    ShrinkImageFilter reduces the size of an image by an integer factor in
    each dimension. The algorithm implemented is a simple subsample. The
    output image size in each dimension is given by:

    outputSize[j] = max( std::floor(inputSize[j]/shrinkFactor[j]), 1 );

    NOTE: The physical centers of the input and output will be the same.
    Because of this, the Origin of the output may not be the same as the
    Origin of the input. Since this filter produces an image which is a
    different resolution, origin and with different pixel spacing than its
    input image, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_Clone)
    SetShrinkFactors = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_SetShrinkFactor)
    GetShrinkFactors = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_GetShrinkFactors)
    GenerateOutputInformation = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_GenerateInputRequestedRegion)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIUC3IUC3

        Create a new object of the class itkShrinkImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIUC3IUC3 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_swigregister(itkShrinkImageFilterIUC3IUC3)
itkShrinkImageFilterIUC3IUC3___New_orig__ = _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3___New_orig__
itkShrinkImageFilterIUC3IUC3_cast = _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_cast


def itkShrinkImageFilterIUS2IUS2_New():
    return itkShrinkImageFilterIUS2IUS2.New()

class itkShrinkImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""


    Reduce the size of an image by an integer factor in each dimension.

    ShrinkImageFilter reduces the size of an image by an integer factor in
    each dimension. The algorithm implemented is a simple subsample. The
    output image size in each dimension is given by:

    outputSize[j] = max( std::floor(inputSize[j]/shrinkFactor[j]), 1 );

    NOTE: The physical centers of the input and output will be the same.
    Because of this, the Origin of the output may not be the same as the
    Origin of the input. Since this filter produces an image which is a
    different resolution, origin and with different pixel spacing than its
    input image, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_Clone)
    SetShrinkFactors = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_SetShrinkFactor)
    GetShrinkFactors = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_GetShrinkFactors)
    GenerateOutputInformation = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_GenerateInputRequestedRegion)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIUS2IUS2

        Create a new object of the class itkShrinkImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIUS2IUS2 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_swigregister(itkShrinkImageFilterIUS2IUS2)
itkShrinkImageFilterIUS2IUS2___New_orig__ = _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2___New_orig__
itkShrinkImageFilterIUS2IUS2_cast = _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_cast


def itkShrinkImageFilterIUS3IUS3_New():
    return itkShrinkImageFilterIUS3IUS3.New()

class itkShrinkImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""


    Reduce the size of an image by an integer factor in each dimension.

    ShrinkImageFilter reduces the size of an image by an integer factor in
    each dimension. The algorithm implemented is a simple subsample. The
    output image size in each dimension is given by:

    outputSize[j] = max( std::floor(inputSize[j]/shrinkFactor[j]), 1 );

    NOTE: The physical centers of the input and output will be the same.
    Because of this, the Origin of the output may not be the same as the
    Origin of the input. Since this filter produces an image which is a
    different resolution, origin and with different pixel spacing than its
    input image, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_Clone)
    SetShrinkFactors = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_SetShrinkFactor)
    GetShrinkFactors = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_GetShrinkFactors)
    GenerateOutputInformation = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_GenerateInputRequestedRegion)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIUS3IUS3

        Create a new object of the class itkShrinkImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIUS3IUS3 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_swigregister(itkShrinkImageFilterIUS3IUS3)
itkShrinkImageFilterIUS3IUS3___New_orig__ = _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3___New_orig__
itkShrinkImageFilterIUS3IUS3_cast = _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def shrink_image_filter(*args, **kwargs):
    """Procedural interface for ShrinkImageFilter"""
    import itk
    instance = itk.ShrinkImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def shrink_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ShrinkImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ShrinkImageFilter.values()[0]
    else:
        filter_object = itk.ShrinkImageFilter

    shrink_image_filter.__doc__ = filter_object.__doc__
    shrink_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    shrink_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ShrinkImageFilter, itkTemplate.itkTemplate):
        shrink_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        shrink_image_filter.__doc__ += "\n"
        shrink_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        shrink_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



