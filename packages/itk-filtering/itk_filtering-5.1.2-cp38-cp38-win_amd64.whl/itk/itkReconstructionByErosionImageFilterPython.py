# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKMathematicalMorphologyPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkReconstructionByErosionImageFilterPython
else:
    import _itkReconstructionByErosionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkReconstructionByErosionImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkReconstructionByErosionImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkVectorImagePython
import itk.stdcomplexPython
import itk.itkVariableLengthVectorPython
import itk.itkImagePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython

def itkReconstructionByErosionImageFilterID2ID2_Superclass_New():
    return itkReconstructionByErosionImageFilterID2ID2_Superclass.New()

class itkReconstructionByErosionImageFilterID2ID2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_Clone)
    SetMarkerImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_SetMarkerImage)
    GetMarkerImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_GetMarkerImage)
    SetMaskImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_GetMaskImage)
    SetFullyConnected = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_FullyConnectedOff)
    SetUseInternalCopy = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_SetUseInternalCopy)
    GetUseInternalCopy = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_GetUseInternalCopy)
    UseInternalCopyOn = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_UseInternalCopyOn)
    UseInternalCopyOff = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_UseInternalCopyOff)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterID2ID2_Superclass
    cast = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterID2ID2_Superclass

        Create a new object of the class itkReconstructionByErosionImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterID2ID2_Superclass in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_swigregister(itkReconstructionByErosionImageFilterID2ID2_Superclass)
itkReconstructionByErosionImageFilterID2ID2_Superclass___New_orig__ = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass___New_orig__
itkReconstructionByErosionImageFilterID2ID2_Superclass_cast = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_cast


def itkReconstructionByErosionImageFilterID3ID3_Superclass_New():
    return itkReconstructionByErosionImageFilterID3ID3_Superclass.New()

class itkReconstructionByErosionImageFilterID3ID3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_Clone)
    SetMarkerImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_SetMarkerImage)
    GetMarkerImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_GetMarkerImage)
    SetMaskImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_GetMaskImage)
    SetFullyConnected = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_FullyConnectedOff)
    SetUseInternalCopy = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_SetUseInternalCopy)
    GetUseInternalCopy = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_GetUseInternalCopy)
    UseInternalCopyOn = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_UseInternalCopyOn)
    UseInternalCopyOff = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_UseInternalCopyOff)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterID3ID3_Superclass
    cast = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterID3ID3_Superclass

        Create a new object of the class itkReconstructionByErosionImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterID3ID3_Superclass in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_swigregister(itkReconstructionByErosionImageFilterID3ID3_Superclass)
itkReconstructionByErosionImageFilterID3ID3_Superclass___New_orig__ = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass___New_orig__
itkReconstructionByErosionImageFilterID3ID3_Superclass_cast = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_cast


def itkReconstructionByErosionImageFilterIF2IF2_Superclass_New():
    return itkReconstructionByErosionImageFilterIF2IF2_Superclass.New()

class itkReconstructionByErosionImageFilterIF2IF2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_Clone)
    SetMarkerImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_SetMarkerImage)
    GetMarkerImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_GetMarkerImage)
    SetMaskImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_GetMaskImage)
    SetFullyConnected = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_FullyConnectedOff)
    SetUseInternalCopy = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_SetUseInternalCopy)
    GetUseInternalCopy = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_GetUseInternalCopy)
    UseInternalCopyOn = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_UseInternalCopyOn)
    UseInternalCopyOff = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_UseInternalCopyOff)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIF2IF2_Superclass
    cast = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIF2IF2_Superclass

        Create a new object of the class itkReconstructionByErosionImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIF2IF2_Superclass in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_swigregister(itkReconstructionByErosionImageFilterIF2IF2_Superclass)
itkReconstructionByErosionImageFilterIF2IF2_Superclass___New_orig__ = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass___New_orig__
itkReconstructionByErosionImageFilterIF2IF2_Superclass_cast = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_cast


def itkReconstructionByErosionImageFilterIF3IF3_Superclass_New():
    return itkReconstructionByErosionImageFilterIF3IF3_Superclass.New()

class itkReconstructionByErosionImageFilterIF3IF3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_Clone)
    SetMarkerImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_SetMarkerImage)
    GetMarkerImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_GetMarkerImage)
    SetMaskImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_GetMaskImage)
    SetFullyConnected = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_FullyConnectedOff)
    SetUseInternalCopy = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_SetUseInternalCopy)
    GetUseInternalCopy = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_GetUseInternalCopy)
    UseInternalCopyOn = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_UseInternalCopyOn)
    UseInternalCopyOff = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_UseInternalCopyOff)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIF3IF3_Superclass
    cast = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIF3IF3_Superclass

        Create a new object of the class itkReconstructionByErosionImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIF3IF3_Superclass in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_swigregister(itkReconstructionByErosionImageFilterIF3IF3_Superclass)
itkReconstructionByErosionImageFilterIF3IF3_Superclass___New_orig__ = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass___New_orig__
itkReconstructionByErosionImageFilterIF3IF3_Superclass_cast = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_cast


def itkReconstructionByErosionImageFilterISS2ISS2_Superclass_New():
    return itkReconstructionByErosionImageFilterISS2ISS2_Superclass.New()

class itkReconstructionByErosionImageFilterISS2ISS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_Clone)
    SetMarkerImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_SetMarkerImage)
    GetMarkerImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_GetMarkerImage)
    SetMaskImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_GetMaskImage)
    SetFullyConnected = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_FullyConnectedOff)
    SetUseInternalCopy = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_SetUseInternalCopy)
    GetUseInternalCopy = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_GetUseInternalCopy)
    UseInternalCopyOn = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_UseInternalCopyOn)
    UseInternalCopyOff = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_UseInternalCopyOff)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterISS2ISS2_Superclass
    cast = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterISS2ISS2_Superclass

        Create a new object of the class itkReconstructionByErosionImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterISS2ISS2_Superclass in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_swigregister(itkReconstructionByErosionImageFilterISS2ISS2_Superclass)
itkReconstructionByErosionImageFilterISS2ISS2_Superclass___New_orig__ = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass___New_orig__
itkReconstructionByErosionImageFilterISS2ISS2_Superclass_cast = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_cast


def itkReconstructionByErosionImageFilterISS3ISS3_Superclass_New():
    return itkReconstructionByErosionImageFilterISS3ISS3_Superclass.New()

class itkReconstructionByErosionImageFilterISS3ISS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_Clone)
    SetMarkerImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_SetMarkerImage)
    GetMarkerImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_GetMarkerImage)
    SetMaskImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_GetMaskImage)
    SetFullyConnected = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_FullyConnectedOff)
    SetUseInternalCopy = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_SetUseInternalCopy)
    GetUseInternalCopy = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_GetUseInternalCopy)
    UseInternalCopyOn = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_UseInternalCopyOn)
    UseInternalCopyOff = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_UseInternalCopyOff)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterISS3ISS3_Superclass
    cast = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterISS3ISS3_Superclass

        Create a new object of the class itkReconstructionByErosionImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterISS3ISS3_Superclass in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_swigregister(itkReconstructionByErosionImageFilterISS3ISS3_Superclass)
itkReconstructionByErosionImageFilterISS3ISS3_Superclass___New_orig__ = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass___New_orig__
itkReconstructionByErosionImageFilterISS3ISS3_Superclass_cast = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_cast


def itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_New():
    return itkReconstructionByErosionImageFilterIUC2IUC2_Superclass.New()

class itkReconstructionByErosionImageFilterIUC2IUC2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_Clone)
    SetMarkerImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_SetMarkerImage)
    GetMarkerImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_GetMarkerImage)
    SetMaskImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_GetMaskImage)
    SetFullyConnected = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_FullyConnectedOff)
    SetUseInternalCopy = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_SetUseInternalCopy)
    GetUseInternalCopy = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_GetUseInternalCopy)
    UseInternalCopyOn = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_UseInternalCopyOn)
    UseInternalCopyOff = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_UseInternalCopyOff)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIUC2IUC2_Superclass
    cast = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkReconstructionByErosionImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIUC2IUC2_Superclass in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_swigregister(itkReconstructionByErosionImageFilterIUC2IUC2_Superclass)
itkReconstructionByErosionImageFilterIUC2IUC2_Superclass___New_orig__ = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass___New_orig__
itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_cast = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_cast


def itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_New():
    return itkReconstructionByErosionImageFilterIUC3IUC3_Superclass.New()

class itkReconstructionByErosionImageFilterIUC3IUC3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_Clone)
    SetMarkerImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_SetMarkerImage)
    GetMarkerImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_GetMarkerImage)
    SetMaskImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_GetMaskImage)
    SetFullyConnected = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_FullyConnectedOff)
    SetUseInternalCopy = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_SetUseInternalCopy)
    GetUseInternalCopy = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_GetUseInternalCopy)
    UseInternalCopyOn = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_UseInternalCopyOn)
    UseInternalCopyOff = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_UseInternalCopyOff)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIUC3IUC3_Superclass
    cast = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkReconstructionByErosionImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIUC3IUC3_Superclass in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_swigregister(itkReconstructionByErosionImageFilterIUC3IUC3_Superclass)
itkReconstructionByErosionImageFilterIUC3IUC3_Superclass___New_orig__ = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass___New_orig__
itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_cast = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_cast


def itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_New():
    return itkReconstructionByErosionImageFilterIUS2IUS2_Superclass.New()

class itkReconstructionByErosionImageFilterIUS2IUS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_Clone)
    SetMarkerImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_SetMarkerImage)
    GetMarkerImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_GetMarkerImage)
    SetMaskImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_GetMaskImage)
    SetFullyConnected = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_FullyConnectedOff)
    SetUseInternalCopy = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_SetUseInternalCopy)
    GetUseInternalCopy = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_GetUseInternalCopy)
    UseInternalCopyOn = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_UseInternalCopyOn)
    UseInternalCopyOff = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_UseInternalCopyOff)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIUS2IUS2_Superclass
    cast = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkReconstructionByErosionImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIUS2IUS2_Superclass in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_swigregister(itkReconstructionByErosionImageFilterIUS2IUS2_Superclass)
itkReconstructionByErosionImageFilterIUS2IUS2_Superclass___New_orig__ = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass___New_orig__
itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_cast = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_cast


def itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_New():
    return itkReconstructionByErosionImageFilterIUS3IUS3_Superclass.New()

class itkReconstructionByErosionImageFilterIUS3IUS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_Clone)
    SetMarkerImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_SetMarkerImage)
    GetMarkerImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_GetMarkerImage)
    SetMaskImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_GetMaskImage)
    SetFullyConnected = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_FullyConnectedOff)
    SetUseInternalCopy = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_SetUseInternalCopy)
    GetUseInternalCopy = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_GetUseInternalCopy)
    UseInternalCopyOn = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_UseInternalCopyOn)
    UseInternalCopyOff = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_UseInternalCopyOff)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIUS3IUS3_Superclass
    cast = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkReconstructionByErosionImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIUS3IUS3_Superclass in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_swigregister(itkReconstructionByErosionImageFilterIUS3IUS3_Superclass)
itkReconstructionByErosionImageFilterIUS3IUS3_Superclass___New_orig__ = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass___New_orig__
itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_cast = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_cast


def itkReconstructionByErosionImageFilterID2ID2_New():
    return itkReconstructionByErosionImageFilterID2ID2.New()

class itkReconstructionByErosionImageFilterID2ID2(itkReconstructionByErosionImageFilterID2ID2_Superclass):
    r"""


    grayscale reconstruction by erosion of an image

    Reconstruction by erosion operates on a "marker" image and a
    "mask" image, and is defined as the erosion of the marker image with
    respect to the mask image iterated until stability.

    The marker image must be less than or equal to the mask image (on a
    pixel by pixel basis).

    Geodesic morphology is described in Chapter 6.2 of Pierre Soille's
    book "Morphological Image Analysis: Principles and Applications",
    Second Edition, Springer, 2003.

    Algorithm implemented in this filter is based on algorithm described
    by Kevin Robinson and Paul F. Whelan in "Efficient Morphological
    Reconstruction: A Downhill Filter", Pattern Recognition Letters,
    Volume 25, Issue 15, November 2004, Pages 1759-1767.

    The algorithm, a description of the transform and some applications
    can be found in "Morphological Grayscale Reconstruction in Image
    Analysis:    Applications and Efficient Algorithms", Luc Vincent,
    IEEE Transactions on image processing, Vol. 2, April 1993.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter,
    ReconstructionByErosionImageFilter,
    OpeningByReconstructionImageFilter,
    ClosingByReconstructionImageFilter, ReconstructionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Clone)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterID2ID2
    cast = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterID2ID2

        Create a new object of the class itkReconstructionByErosionImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterID2ID2 in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_swigregister(itkReconstructionByErosionImageFilterID2ID2)
itkReconstructionByErosionImageFilterID2ID2___New_orig__ = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2___New_orig__
itkReconstructionByErosionImageFilterID2ID2_cast = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_cast


def itkReconstructionByErosionImageFilterID3ID3_New():
    return itkReconstructionByErosionImageFilterID3ID3.New()

class itkReconstructionByErosionImageFilterID3ID3(itkReconstructionByErosionImageFilterID3ID3_Superclass):
    r"""


    grayscale reconstruction by erosion of an image

    Reconstruction by erosion operates on a "marker" image and a
    "mask" image, and is defined as the erosion of the marker image with
    respect to the mask image iterated until stability.

    The marker image must be less than or equal to the mask image (on a
    pixel by pixel basis).

    Geodesic morphology is described in Chapter 6.2 of Pierre Soille's
    book "Morphological Image Analysis: Principles and Applications",
    Second Edition, Springer, 2003.

    Algorithm implemented in this filter is based on algorithm described
    by Kevin Robinson and Paul F. Whelan in "Efficient Morphological
    Reconstruction: A Downhill Filter", Pattern Recognition Letters,
    Volume 25, Issue 15, November 2004, Pages 1759-1767.

    The algorithm, a description of the transform and some applications
    can be found in "Morphological Grayscale Reconstruction in Image
    Analysis:    Applications and Efficient Algorithms", Luc Vincent,
    IEEE Transactions on image processing, Vol. 2, April 1993.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter,
    ReconstructionByErosionImageFilter,
    OpeningByReconstructionImageFilter,
    ClosingByReconstructionImageFilter, ReconstructionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Clone)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterID3ID3
    cast = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterID3ID3

        Create a new object of the class itkReconstructionByErosionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterID3ID3 in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_swigregister(itkReconstructionByErosionImageFilterID3ID3)
itkReconstructionByErosionImageFilterID3ID3___New_orig__ = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3___New_orig__
itkReconstructionByErosionImageFilterID3ID3_cast = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_cast


def itkReconstructionByErosionImageFilterIF2IF2_New():
    return itkReconstructionByErosionImageFilterIF2IF2.New()

class itkReconstructionByErosionImageFilterIF2IF2(itkReconstructionByErosionImageFilterIF2IF2_Superclass):
    r"""


    grayscale reconstruction by erosion of an image

    Reconstruction by erosion operates on a "marker" image and a
    "mask" image, and is defined as the erosion of the marker image with
    respect to the mask image iterated until stability.

    The marker image must be less than or equal to the mask image (on a
    pixel by pixel basis).

    Geodesic morphology is described in Chapter 6.2 of Pierre Soille's
    book "Morphological Image Analysis: Principles and Applications",
    Second Edition, Springer, 2003.

    Algorithm implemented in this filter is based on algorithm described
    by Kevin Robinson and Paul F. Whelan in "Efficient Morphological
    Reconstruction: A Downhill Filter", Pattern Recognition Letters,
    Volume 25, Issue 15, November 2004, Pages 1759-1767.

    The algorithm, a description of the transform and some applications
    can be found in "Morphological Grayscale Reconstruction in Image
    Analysis:    Applications and Efficient Algorithms", Luc Vincent,
    IEEE Transactions on image processing, Vol. 2, April 1993.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter,
    ReconstructionByErosionImageFilter,
    OpeningByReconstructionImageFilter,
    ClosingByReconstructionImageFilter, ReconstructionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Clone)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIF2IF2
    cast = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIF2IF2

        Create a new object of the class itkReconstructionByErosionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIF2IF2 in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_swigregister(itkReconstructionByErosionImageFilterIF2IF2)
itkReconstructionByErosionImageFilterIF2IF2___New_orig__ = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2___New_orig__
itkReconstructionByErosionImageFilterIF2IF2_cast = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_cast


def itkReconstructionByErosionImageFilterIF3IF3_New():
    return itkReconstructionByErosionImageFilterIF3IF3.New()

class itkReconstructionByErosionImageFilterIF3IF3(itkReconstructionByErosionImageFilterIF3IF3_Superclass):
    r"""


    grayscale reconstruction by erosion of an image

    Reconstruction by erosion operates on a "marker" image and a
    "mask" image, and is defined as the erosion of the marker image with
    respect to the mask image iterated until stability.

    The marker image must be less than or equal to the mask image (on a
    pixel by pixel basis).

    Geodesic morphology is described in Chapter 6.2 of Pierre Soille's
    book "Morphological Image Analysis: Principles and Applications",
    Second Edition, Springer, 2003.

    Algorithm implemented in this filter is based on algorithm described
    by Kevin Robinson and Paul F. Whelan in "Efficient Morphological
    Reconstruction: A Downhill Filter", Pattern Recognition Letters,
    Volume 25, Issue 15, November 2004, Pages 1759-1767.

    The algorithm, a description of the transform and some applications
    can be found in "Morphological Grayscale Reconstruction in Image
    Analysis:    Applications and Efficient Algorithms", Luc Vincent,
    IEEE Transactions on image processing, Vol. 2, April 1993.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter,
    ReconstructionByErosionImageFilter,
    OpeningByReconstructionImageFilter,
    ClosingByReconstructionImageFilter, ReconstructionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Clone)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIF3IF3
    cast = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIF3IF3

        Create a new object of the class itkReconstructionByErosionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIF3IF3 in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_swigregister(itkReconstructionByErosionImageFilterIF3IF3)
itkReconstructionByErosionImageFilterIF3IF3___New_orig__ = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3___New_orig__
itkReconstructionByErosionImageFilterIF3IF3_cast = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_cast


def itkReconstructionByErosionImageFilterISS2ISS2_New():
    return itkReconstructionByErosionImageFilterISS2ISS2.New()

class itkReconstructionByErosionImageFilterISS2ISS2(itkReconstructionByErosionImageFilterISS2ISS2_Superclass):
    r"""


    grayscale reconstruction by erosion of an image

    Reconstruction by erosion operates on a "marker" image and a
    "mask" image, and is defined as the erosion of the marker image with
    respect to the mask image iterated until stability.

    The marker image must be less than or equal to the mask image (on a
    pixel by pixel basis).

    Geodesic morphology is described in Chapter 6.2 of Pierre Soille's
    book "Morphological Image Analysis: Principles and Applications",
    Second Edition, Springer, 2003.

    Algorithm implemented in this filter is based on algorithm described
    by Kevin Robinson and Paul F. Whelan in "Efficient Morphological
    Reconstruction: A Downhill Filter", Pattern Recognition Letters,
    Volume 25, Issue 15, November 2004, Pages 1759-1767.

    The algorithm, a description of the transform and some applications
    can be found in "Morphological Grayscale Reconstruction in Image
    Analysis:    Applications and Efficient Algorithms", Luc Vincent,
    IEEE Transactions on image processing, Vol. 2, April 1993.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter,
    ReconstructionByErosionImageFilter,
    OpeningByReconstructionImageFilter,
    ClosingByReconstructionImageFilter, ReconstructionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Clone)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterISS2ISS2

        Create a new object of the class itkReconstructionByErosionImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterISS2ISS2 in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_swigregister(itkReconstructionByErosionImageFilterISS2ISS2)
itkReconstructionByErosionImageFilterISS2ISS2___New_orig__ = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2___New_orig__
itkReconstructionByErosionImageFilterISS2ISS2_cast = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_cast


def itkReconstructionByErosionImageFilterISS3ISS3_New():
    return itkReconstructionByErosionImageFilterISS3ISS3.New()

class itkReconstructionByErosionImageFilterISS3ISS3(itkReconstructionByErosionImageFilterISS3ISS3_Superclass):
    r"""


    grayscale reconstruction by erosion of an image

    Reconstruction by erosion operates on a "marker" image and a
    "mask" image, and is defined as the erosion of the marker image with
    respect to the mask image iterated until stability.

    The marker image must be less than or equal to the mask image (on a
    pixel by pixel basis).

    Geodesic morphology is described in Chapter 6.2 of Pierre Soille's
    book "Morphological Image Analysis: Principles and Applications",
    Second Edition, Springer, 2003.

    Algorithm implemented in this filter is based on algorithm described
    by Kevin Robinson and Paul F. Whelan in "Efficient Morphological
    Reconstruction: A Downhill Filter", Pattern Recognition Letters,
    Volume 25, Issue 15, November 2004, Pages 1759-1767.

    The algorithm, a description of the transform and some applications
    can be found in "Morphological Grayscale Reconstruction in Image
    Analysis:    Applications and Efficient Algorithms", Luc Vincent,
    IEEE Transactions on image processing, Vol. 2, April 1993.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter,
    ReconstructionByErosionImageFilter,
    OpeningByReconstructionImageFilter,
    ClosingByReconstructionImageFilter, ReconstructionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Clone)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterISS3ISS3

        Create a new object of the class itkReconstructionByErosionImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterISS3ISS3 in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_swigregister(itkReconstructionByErosionImageFilterISS3ISS3)
itkReconstructionByErosionImageFilterISS3ISS3___New_orig__ = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3___New_orig__
itkReconstructionByErosionImageFilterISS3ISS3_cast = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_cast


def itkReconstructionByErosionImageFilterIUC2IUC2_New():
    return itkReconstructionByErosionImageFilterIUC2IUC2.New()

class itkReconstructionByErosionImageFilterIUC2IUC2(itkReconstructionByErosionImageFilterIUC2IUC2_Superclass):
    r"""


    grayscale reconstruction by erosion of an image

    Reconstruction by erosion operates on a "marker" image and a
    "mask" image, and is defined as the erosion of the marker image with
    respect to the mask image iterated until stability.

    The marker image must be less than or equal to the mask image (on a
    pixel by pixel basis).

    Geodesic morphology is described in Chapter 6.2 of Pierre Soille's
    book "Morphological Image Analysis: Principles and Applications",
    Second Edition, Springer, 2003.

    Algorithm implemented in this filter is based on algorithm described
    by Kevin Robinson and Paul F. Whelan in "Efficient Morphological
    Reconstruction: A Downhill Filter", Pattern Recognition Letters,
    Volume 25, Issue 15, November 2004, Pages 1759-1767.

    The algorithm, a description of the transform and some applications
    can be found in "Morphological Grayscale Reconstruction in Image
    Analysis:    Applications and Efficient Algorithms", Luc Vincent,
    IEEE Transactions on image processing, Vol. 2, April 1993.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter,
    ReconstructionByErosionImageFilter,
    OpeningByReconstructionImageFilter,
    ClosingByReconstructionImageFilter, ReconstructionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Clone)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIUC2IUC2

        Create a new object of the class itkReconstructionByErosionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIUC2IUC2 in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_swigregister(itkReconstructionByErosionImageFilterIUC2IUC2)
itkReconstructionByErosionImageFilterIUC2IUC2___New_orig__ = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2___New_orig__
itkReconstructionByErosionImageFilterIUC2IUC2_cast = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_cast


def itkReconstructionByErosionImageFilterIUC3IUC3_New():
    return itkReconstructionByErosionImageFilterIUC3IUC3.New()

class itkReconstructionByErosionImageFilterIUC3IUC3(itkReconstructionByErosionImageFilterIUC3IUC3_Superclass):
    r"""


    grayscale reconstruction by erosion of an image

    Reconstruction by erosion operates on a "marker" image and a
    "mask" image, and is defined as the erosion of the marker image with
    respect to the mask image iterated until stability.

    The marker image must be less than or equal to the mask image (on a
    pixel by pixel basis).

    Geodesic morphology is described in Chapter 6.2 of Pierre Soille's
    book "Morphological Image Analysis: Principles and Applications",
    Second Edition, Springer, 2003.

    Algorithm implemented in this filter is based on algorithm described
    by Kevin Robinson and Paul F. Whelan in "Efficient Morphological
    Reconstruction: A Downhill Filter", Pattern Recognition Letters,
    Volume 25, Issue 15, November 2004, Pages 1759-1767.

    The algorithm, a description of the transform and some applications
    can be found in "Morphological Grayscale Reconstruction in Image
    Analysis:    Applications and Efficient Algorithms", Luc Vincent,
    IEEE Transactions on image processing, Vol. 2, April 1993.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter,
    ReconstructionByErosionImageFilter,
    OpeningByReconstructionImageFilter,
    ClosingByReconstructionImageFilter, ReconstructionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Clone)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIUC3IUC3

        Create a new object of the class itkReconstructionByErosionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIUC3IUC3 in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_swigregister(itkReconstructionByErosionImageFilterIUC3IUC3)
itkReconstructionByErosionImageFilterIUC3IUC3___New_orig__ = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3___New_orig__
itkReconstructionByErosionImageFilterIUC3IUC3_cast = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_cast


def itkReconstructionByErosionImageFilterIUS2IUS2_New():
    return itkReconstructionByErosionImageFilterIUS2IUS2.New()

class itkReconstructionByErosionImageFilterIUS2IUS2(itkReconstructionByErosionImageFilterIUS2IUS2_Superclass):
    r"""


    grayscale reconstruction by erosion of an image

    Reconstruction by erosion operates on a "marker" image and a
    "mask" image, and is defined as the erosion of the marker image with
    respect to the mask image iterated until stability.

    The marker image must be less than or equal to the mask image (on a
    pixel by pixel basis).

    Geodesic morphology is described in Chapter 6.2 of Pierre Soille's
    book "Morphological Image Analysis: Principles and Applications",
    Second Edition, Springer, 2003.

    Algorithm implemented in this filter is based on algorithm described
    by Kevin Robinson and Paul F. Whelan in "Efficient Morphological
    Reconstruction: A Downhill Filter", Pattern Recognition Letters,
    Volume 25, Issue 15, November 2004, Pages 1759-1767.

    The algorithm, a description of the transform and some applications
    can be found in "Morphological Grayscale Reconstruction in Image
    Analysis:    Applications and Efficient Algorithms", Luc Vincent,
    IEEE Transactions on image processing, Vol. 2, April 1993.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter,
    ReconstructionByErosionImageFilter,
    OpeningByReconstructionImageFilter,
    ClosingByReconstructionImageFilter, ReconstructionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Clone)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIUS2IUS2

        Create a new object of the class itkReconstructionByErosionImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIUS2IUS2 in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_swigregister(itkReconstructionByErosionImageFilterIUS2IUS2)
itkReconstructionByErosionImageFilterIUS2IUS2___New_orig__ = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2___New_orig__
itkReconstructionByErosionImageFilterIUS2IUS2_cast = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_cast


def itkReconstructionByErosionImageFilterIUS3IUS3_New():
    return itkReconstructionByErosionImageFilterIUS3IUS3.New()

class itkReconstructionByErosionImageFilterIUS3IUS3(itkReconstructionByErosionImageFilterIUS3IUS3_Superclass):
    r"""


    grayscale reconstruction by erosion of an image

    Reconstruction by erosion operates on a "marker" image and a
    "mask" image, and is defined as the erosion of the marker image with
    respect to the mask image iterated until stability.

    The marker image must be less than or equal to the mask image (on a
    pixel by pixel basis).

    Geodesic morphology is described in Chapter 6.2 of Pierre Soille's
    book "Morphological Image Analysis: Principles and Applications",
    Second Edition, Springer, 2003.

    Algorithm implemented in this filter is based on algorithm described
    by Kevin Robinson and Paul F. Whelan in "Efficient Morphological
    Reconstruction: A Downhill Filter", Pattern Recognition Letters,
    Volume 25, Issue 15, November 2004, Pages 1759-1767.

    The algorithm, a description of the transform and some applications
    can be found in "Morphological Grayscale Reconstruction in Image
    Analysis:    Applications and Efficient Algorithms", Luc Vincent,
    IEEE Transactions on image processing, Vol. 2, April 1993.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter,
    ReconstructionByErosionImageFilter,
    OpeningByReconstructionImageFilter,
    ClosingByReconstructionImageFilter, ReconstructionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Clone)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIUS3IUS3

        Create a new object of the class itkReconstructionByErosionImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIUS3IUS3 in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_swigregister(itkReconstructionByErosionImageFilterIUS3IUS3)
itkReconstructionByErosionImageFilterIUS3IUS3___New_orig__ = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3___New_orig__
itkReconstructionByErosionImageFilterIUS3IUS3_cast = _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def reconstruction_image_filter(*args, **kwargs):
    """Procedural interface for ReconstructionImageFilter"""
    import itk
    instance = itk.ReconstructionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def reconstruction_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ReconstructionImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ReconstructionImageFilter.values()[0]
    else:
        filter_object = itk.ReconstructionImageFilter

    reconstruction_image_filter.__doc__ = filter_object.__doc__
    reconstruction_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    reconstruction_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ReconstructionImageFilter, itkTemplate.itkTemplate):
        reconstruction_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        reconstruction_image_filter.__doc__ += "\n"
        reconstruction_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        reconstruction_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def reconstruction_by_erosion_image_filter(*args, **kwargs):
    """Procedural interface for ReconstructionByErosionImageFilter"""
    import itk
    instance = itk.ReconstructionByErosionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def reconstruction_by_erosion_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ReconstructionByErosionImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ReconstructionByErosionImageFilter.values()[0]
    else:
        filter_object = itk.ReconstructionByErosionImageFilter

    reconstruction_by_erosion_image_filter.__doc__ = filter_object.__doc__
    reconstruction_by_erosion_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    reconstruction_by_erosion_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ReconstructionByErosionImageFilter, itkTemplate.itkTemplate):
        reconstruction_by_erosion_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        reconstruction_by_erosion_image_filter.__doc__ += "\n"
        reconstruction_by_erosion_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        reconstruction_by_erosion_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



