# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageStatisticsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMinimumProjectionImageFilterPython
else:
    import _itkMinimumProjectionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkMinimumProjectionImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkMinimumProjectionImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkImageToImageFilterBPython
import itk.itkImageSourcePython
import itk.itkVectorImagePython
import itk.stdcomplexPython
import itk.itkVariableLengthVectorPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkFixedArrayPython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterAPython

def itkMinimumProjectionImageFilterID2ID2_Superclass_New():
    return itkMinimumProjectionImageFilterID2ID2_Superclass.New()

class itkMinimumProjectionImageFilterID2ID2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkMinimumProjectionImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass_Clone)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterID2ID2_Superclass
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterID2ID2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterID2ID2_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass_swigregister(itkMinimumProjectionImageFilterID2ID2_Superclass)
itkMinimumProjectionImageFilterID2ID2_Superclass___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass___New_orig__
itkMinimumProjectionImageFilterID2ID2_Superclass_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass_cast


def itkMinimumProjectionImageFilterID3ID2_Superclass_New():
    return itkMinimumProjectionImageFilterID3ID2_Superclass.New()

class itkMinimumProjectionImageFilterID3ID2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterID3ID2):
    r"""Proxy of C++ itkMinimumProjectionImageFilterID3ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass_Clone)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterID3ID2_Superclass
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterID3ID2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterID3ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterID3ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterID3ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterID3ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterID3ID2_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass_swigregister(itkMinimumProjectionImageFilterID3ID2_Superclass)
itkMinimumProjectionImageFilterID3ID2_Superclass___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass___New_orig__
itkMinimumProjectionImageFilterID3ID2_Superclass_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass_cast


def itkMinimumProjectionImageFilterID3ID3_Superclass_New():
    return itkMinimumProjectionImageFilterID3ID3_Superclass.New()

class itkMinimumProjectionImageFilterID3ID3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkMinimumProjectionImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass_Clone)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterID3ID3_Superclass
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterID3ID3_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterID3ID3_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass_swigregister(itkMinimumProjectionImageFilterID3ID3_Superclass)
itkMinimumProjectionImageFilterID3ID3_Superclass___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass___New_orig__
itkMinimumProjectionImageFilterID3ID3_Superclass_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass_cast


def itkMinimumProjectionImageFilterIF2IF2_Superclass_New():
    return itkMinimumProjectionImageFilterIF2IF2_Superclass.New()

class itkMinimumProjectionImageFilterIF2IF2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_Clone)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF2IF2_Superclass
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF2IF2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIF2IF2_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_swigregister(itkMinimumProjectionImageFilterIF2IF2_Superclass)
itkMinimumProjectionImageFilterIF2IF2_Superclass___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass___New_orig__
itkMinimumProjectionImageFilterIF2IF2_Superclass_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_cast


def itkMinimumProjectionImageFilterIF3IF2_Superclass_New():
    return itkMinimumProjectionImageFilterIF3IF2_Superclass.New()

class itkMinimumProjectionImageFilterIF3IF2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIF3IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_Clone)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF3IF2_Superclass
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF3IF2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIF3IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIF3IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIF3IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIF3IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIF3IF2_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_swigregister(itkMinimumProjectionImageFilterIF3IF2_Superclass)
itkMinimumProjectionImageFilterIF3IF2_Superclass___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass___New_orig__
itkMinimumProjectionImageFilterIF3IF2_Superclass_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_cast


def itkMinimumProjectionImageFilterIF3IF3_Superclass_New():
    return itkMinimumProjectionImageFilterIF3IF3_Superclass.New()

class itkMinimumProjectionImageFilterIF3IF3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_Clone)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF3IF3_Superclass
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF3IF3_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIF3IF3_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_swigregister(itkMinimumProjectionImageFilterIF3IF3_Superclass)
itkMinimumProjectionImageFilterIF3IF3_Superclass___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass___New_orig__
itkMinimumProjectionImageFilterIF3IF3_Superclass_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_cast


def itkMinimumProjectionImageFilterISS2ISS2_Superclass_New():
    return itkMinimumProjectionImageFilterISS2ISS2_Superclass.New()

class itkMinimumProjectionImageFilterISS2ISS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkMinimumProjectionImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass_Clone)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterISS2ISS2_Superclass
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterISS2ISS2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterISS2ISS2_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass_swigregister(itkMinimumProjectionImageFilterISS2ISS2_Superclass)
itkMinimumProjectionImageFilterISS2ISS2_Superclass___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass___New_orig__
itkMinimumProjectionImageFilterISS2ISS2_Superclass_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass_cast


def itkMinimumProjectionImageFilterISS3ISS2_Superclass_New():
    return itkMinimumProjectionImageFilterISS3ISS2_Superclass.New()

class itkMinimumProjectionImageFilterISS3ISS2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS3ISS2):
    r"""Proxy of C++ itkMinimumProjectionImageFilterISS3ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass_Clone)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterISS3ISS2_Superclass
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterISS3ISS2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterISS3ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterISS3ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterISS3ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterISS3ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterISS3ISS2_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass_swigregister(itkMinimumProjectionImageFilterISS3ISS2_Superclass)
itkMinimumProjectionImageFilterISS3ISS2_Superclass___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass___New_orig__
itkMinimumProjectionImageFilterISS3ISS2_Superclass_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass_cast


def itkMinimumProjectionImageFilterISS3ISS3_Superclass_New():
    return itkMinimumProjectionImageFilterISS3ISS3_Superclass.New()

class itkMinimumProjectionImageFilterISS3ISS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkMinimumProjectionImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass_Clone)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterISS3ISS3_Superclass
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterISS3ISS3_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterISS3ISS3_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass_swigregister(itkMinimumProjectionImageFilterISS3ISS3_Superclass)
itkMinimumProjectionImageFilterISS3ISS3_Superclass___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass___New_orig__
itkMinimumProjectionImageFilterISS3ISS3_Superclass_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass_cast


def itkMinimumProjectionImageFilterIUC2IUC2_Superclass_New():
    return itkMinimumProjectionImageFilterIUC2IUC2_Superclass.New()

class itkMinimumProjectionImageFilterIUC2IUC2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_Clone)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC2IUC2_Superclass
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUC2IUC2_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_swigregister(itkMinimumProjectionImageFilterIUC2IUC2_Superclass)
itkMinimumProjectionImageFilterIUC2IUC2_Superclass___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass___New_orig__
itkMinimumProjectionImageFilterIUC2IUC2_Superclass_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_cast


def itkMinimumProjectionImageFilterIUC3IUC2_Superclass_New():
    return itkMinimumProjectionImageFilterIUC3IUC2_Superclass.New()

class itkMinimumProjectionImageFilterIUC3IUC2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIUC3IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_Clone)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC3IUC2_Superclass
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC3IUC2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIUC3IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUC3IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUC3IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUC3IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUC3IUC2_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_swigregister(itkMinimumProjectionImageFilterIUC3IUC2_Superclass)
itkMinimumProjectionImageFilterIUC3IUC2_Superclass___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass___New_orig__
itkMinimumProjectionImageFilterIUC3IUC2_Superclass_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_cast


def itkMinimumProjectionImageFilterIUC3IUC3_Superclass_New():
    return itkMinimumProjectionImageFilterIUC3IUC3_Superclass.New()

class itkMinimumProjectionImageFilterIUC3IUC3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_Clone)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC3IUC3_Superclass
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUC3IUC3_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_swigregister(itkMinimumProjectionImageFilterIUC3IUC3_Superclass)
itkMinimumProjectionImageFilterIUC3IUC3_Superclass___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass___New_orig__
itkMinimumProjectionImageFilterIUC3IUC3_Superclass_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_cast


def itkMinimumProjectionImageFilterIUS2IUS2_Superclass_New():
    return itkMinimumProjectionImageFilterIUS2IUS2_Superclass.New()

class itkMinimumProjectionImageFilterIUS2IUS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_Clone)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS2IUS2_Superclass
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUS2IUS2_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_swigregister(itkMinimumProjectionImageFilterIUS2IUS2_Superclass)
itkMinimumProjectionImageFilterIUS2IUS2_Superclass___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass___New_orig__
itkMinimumProjectionImageFilterIUS2IUS2_Superclass_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_cast


def itkMinimumProjectionImageFilterIUS3IUS2_Superclass_New():
    return itkMinimumProjectionImageFilterIUS3IUS2_Superclass.New()

class itkMinimumProjectionImageFilterIUS3IUS2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIUS3IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_Clone)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS3IUS2_Superclass
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS3IUS2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIUS3IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUS3IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUS3IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUS3IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUS3IUS2_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_swigregister(itkMinimumProjectionImageFilterIUS3IUS2_Superclass)
itkMinimumProjectionImageFilterIUS3IUS2_Superclass___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass___New_orig__
itkMinimumProjectionImageFilterIUS3IUS2_Superclass_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_cast


def itkMinimumProjectionImageFilterIUS3IUS3_Superclass_New():
    return itkMinimumProjectionImageFilterIUS3IUS3_Superclass.New()

class itkMinimumProjectionImageFilterIUS3IUS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_Clone)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS3IUS3_Superclass
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUS3IUS3_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_swigregister(itkMinimumProjectionImageFilterIUS3IUS3_Superclass)
itkMinimumProjectionImageFilterIUS3IUS3_Superclass___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass___New_orig__
itkMinimumProjectionImageFilterIUS3IUS3_Superclass_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_cast


def itkMinimumProjectionImageFilterID2ID2_New():
    return itkMinimumProjectionImageFilterID2ID2.New()

class itkMinimumProjectionImageFilterID2ID2(itkMinimumProjectionImageFilterID2ID2_Superclass):
    r"""


    Minimum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MeanProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Clone)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterID2ID2
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterID2ID2

        Create a new object of the class itkMinimumProjectionImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterID2ID2 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_swigregister(itkMinimumProjectionImageFilterID2ID2)
itkMinimumProjectionImageFilterID2ID2___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2___New_orig__
itkMinimumProjectionImageFilterID2ID2_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_cast


def itkMinimumProjectionImageFilterID3ID2_New():
    return itkMinimumProjectionImageFilterID3ID2.New()

class itkMinimumProjectionImageFilterID3ID2(itkMinimumProjectionImageFilterID3ID2_Superclass):
    r"""


    Minimum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MeanProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Clone)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterID3ID2
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterID3ID2

        Create a new object of the class itkMinimumProjectionImageFilterID3ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterID3ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterID3ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterID3ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterID3ID2 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_swigregister(itkMinimumProjectionImageFilterID3ID2)
itkMinimumProjectionImageFilterID3ID2___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2___New_orig__
itkMinimumProjectionImageFilterID3ID2_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_cast


def itkMinimumProjectionImageFilterID3ID3_New():
    return itkMinimumProjectionImageFilterID3ID3.New()

class itkMinimumProjectionImageFilterID3ID3(itkMinimumProjectionImageFilterID3ID3_Superclass):
    r"""


    Minimum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MeanProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Clone)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterID3ID3
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterID3ID3

        Create a new object of the class itkMinimumProjectionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterID3ID3 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_swigregister(itkMinimumProjectionImageFilterID3ID3)
itkMinimumProjectionImageFilterID3ID3___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3___New_orig__
itkMinimumProjectionImageFilterID3ID3_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_cast


def itkMinimumProjectionImageFilterIF2IF2_New():
    return itkMinimumProjectionImageFilterIF2IF2.New()

class itkMinimumProjectionImageFilterIF2IF2(itkMinimumProjectionImageFilterIF2IF2_Superclass):
    r"""


    Minimum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MeanProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Clone)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF2IF2
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF2IF2

        Create a new object of the class itkMinimumProjectionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIF2IF2 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_swigregister(itkMinimumProjectionImageFilterIF2IF2)
itkMinimumProjectionImageFilterIF2IF2___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2___New_orig__
itkMinimumProjectionImageFilterIF2IF2_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_cast


def itkMinimumProjectionImageFilterIF3IF2_New():
    return itkMinimumProjectionImageFilterIF3IF2.New()

class itkMinimumProjectionImageFilterIF3IF2(itkMinimumProjectionImageFilterIF3IF2_Superclass):
    r"""


    Minimum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MeanProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Clone)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF3IF2
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF3IF2

        Create a new object of the class itkMinimumProjectionImageFilterIF3IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIF3IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIF3IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIF3IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIF3IF2 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_swigregister(itkMinimumProjectionImageFilterIF3IF2)
itkMinimumProjectionImageFilterIF3IF2___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2___New_orig__
itkMinimumProjectionImageFilterIF3IF2_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_cast


def itkMinimumProjectionImageFilterIF3IF3_New():
    return itkMinimumProjectionImageFilterIF3IF3.New()

class itkMinimumProjectionImageFilterIF3IF3(itkMinimumProjectionImageFilterIF3IF3_Superclass):
    r"""


    Minimum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MeanProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Clone)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF3IF3
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF3IF3

        Create a new object of the class itkMinimumProjectionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIF3IF3 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_swigregister(itkMinimumProjectionImageFilterIF3IF3)
itkMinimumProjectionImageFilterIF3IF3___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3___New_orig__
itkMinimumProjectionImageFilterIF3IF3_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_cast


def itkMinimumProjectionImageFilterISS2ISS2_New():
    return itkMinimumProjectionImageFilterISS2ISS2.New()

class itkMinimumProjectionImageFilterISS2ISS2(itkMinimumProjectionImageFilterISS2ISS2_Superclass):
    r"""


    Minimum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MeanProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Clone)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterISS2ISS2

        Create a new object of the class itkMinimumProjectionImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterISS2ISS2 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_swigregister(itkMinimumProjectionImageFilterISS2ISS2)
itkMinimumProjectionImageFilterISS2ISS2___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2___New_orig__
itkMinimumProjectionImageFilterISS2ISS2_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_cast


def itkMinimumProjectionImageFilterISS3ISS2_New():
    return itkMinimumProjectionImageFilterISS3ISS2.New()

class itkMinimumProjectionImageFilterISS3ISS2(itkMinimumProjectionImageFilterISS3ISS2_Superclass):
    r"""


    Minimum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MeanProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Clone)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterISS3ISS2
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterISS3ISS2

        Create a new object of the class itkMinimumProjectionImageFilterISS3ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterISS3ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterISS3ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterISS3ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterISS3ISS2 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_swigregister(itkMinimumProjectionImageFilterISS3ISS2)
itkMinimumProjectionImageFilterISS3ISS2___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2___New_orig__
itkMinimumProjectionImageFilterISS3ISS2_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_cast


def itkMinimumProjectionImageFilterISS3ISS3_New():
    return itkMinimumProjectionImageFilterISS3ISS3.New()

class itkMinimumProjectionImageFilterISS3ISS3(itkMinimumProjectionImageFilterISS3ISS3_Superclass):
    r"""


    Minimum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MeanProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Clone)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterISS3ISS3

        Create a new object of the class itkMinimumProjectionImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterISS3ISS3 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_swigregister(itkMinimumProjectionImageFilterISS3ISS3)
itkMinimumProjectionImageFilterISS3ISS3___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3___New_orig__
itkMinimumProjectionImageFilterISS3ISS3_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_cast


def itkMinimumProjectionImageFilterIUC2IUC2_New():
    return itkMinimumProjectionImageFilterIUC2IUC2.New()

class itkMinimumProjectionImageFilterIUC2IUC2(itkMinimumProjectionImageFilterIUC2IUC2_Superclass):
    r"""


    Minimum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MeanProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Clone)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC2IUC2

        Create a new object of the class itkMinimumProjectionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUC2IUC2 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_swigregister(itkMinimumProjectionImageFilterIUC2IUC2)
itkMinimumProjectionImageFilterIUC2IUC2___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2___New_orig__
itkMinimumProjectionImageFilterIUC2IUC2_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_cast


def itkMinimumProjectionImageFilterIUC3IUC2_New():
    return itkMinimumProjectionImageFilterIUC3IUC2.New()

class itkMinimumProjectionImageFilterIUC3IUC2(itkMinimumProjectionImageFilterIUC3IUC2_Superclass):
    r"""


    Minimum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MeanProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Clone)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC3IUC2
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC3IUC2

        Create a new object of the class itkMinimumProjectionImageFilterIUC3IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUC3IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUC3IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUC3IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUC3IUC2 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_swigregister(itkMinimumProjectionImageFilterIUC3IUC2)
itkMinimumProjectionImageFilterIUC3IUC2___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2___New_orig__
itkMinimumProjectionImageFilterIUC3IUC2_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_cast


def itkMinimumProjectionImageFilterIUC3IUC3_New():
    return itkMinimumProjectionImageFilterIUC3IUC3.New()

class itkMinimumProjectionImageFilterIUC3IUC3(itkMinimumProjectionImageFilterIUC3IUC3_Superclass):
    r"""


    Minimum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MeanProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Clone)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC3IUC3

        Create a new object of the class itkMinimumProjectionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUC3IUC3 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_swigregister(itkMinimumProjectionImageFilterIUC3IUC3)
itkMinimumProjectionImageFilterIUC3IUC3___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3___New_orig__
itkMinimumProjectionImageFilterIUC3IUC3_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_cast


def itkMinimumProjectionImageFilterIUS2IUS2_New():
    return itkMinimumProjectionImageFilterIUS2IUS2.New()

class itkMinimumProjectionImageFilterIUS2IUS2(itkMinimumProjectionImageFilterIUS2IUS2_Superclass):
    r"""


    Minimum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MeanProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Clone)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS2IUS2

        Create a new object of the class itkMinimumProjectionImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUS2IUS2 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_swigregister(itkMinimumProjectionImageFilterIUS2IUS2)
itkMinimumProjectionImageFilterIUS2IUS2___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2___New_orig__
itkMinimumProjectionImageFilterIUS2IUS2_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_cast


def itkMinimumProjectionImageFilterIUS3IUS2_New():
    return itkMinimumProjectionImageFilterIUS3IUS2.New()

class itkMinimumProjectionImageFilterIUS3IUS2(itkMinimumProjectionImageFilterIUS3IUS2_Superclass):
    r"""


    Minimum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MeanProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Clone)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS3IUS2
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS3IUS2

        Create a new object of the class itkMinimumProjectionImageFilterIUS3IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUS3IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUS3IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUS3IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUS3IUS2 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_swigregister(itkMinimumProjectionImageFilterIUS3IUS2)
itkMinimumProjectionImageFilterIUS3IUS2___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2___New_orig__
itkMinimumProjectionImageFilterIUS3IUS2_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_cast


def itkMinimumProjectionImageFilterIUS3IUS3_New():
    return itkMinimumProjectionImageFilterIUS3IUS3.New()

class itkMinimumProjectionImageFilterIUS3IUS3(itkMinimumProjectionImageFilterIUS3IUS3_Superclass):
    r"""


    Minimum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MeanProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Clone)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS3IUS3

        Create a new object of the class itkMinimumProjectionImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUS3IUS3 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_swigregister(itkMinimumProjectionImageFilterIUS3IUS3)
itkMinimumProjectionImageFilterIUS3IUS3___New_orig__ = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3___New_orig__
itkMinimumProjectionImageFilterIUS3IUS3_cast = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def minimum_projection_image_filter(*args, **kwargs):
    """Procedural interface for MinimumProjectionImageFilter"""
    import itk
    instance = itk.MinimumProjectionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def minimum_projection_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.MinimumProjectionImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.MinimumProjectionImageFilter.values()[0]
    else:
        filter_object = itk.MinimumProjectionImageFilter

    minimum_projection_image_filter.__doc__ = filter_object.__doc__
    minimum_projection_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    minimum_projection_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.MinimumProjectionImageFilter, itkTemplate.itkTemplate):
        minimum_projection_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        minimum_projection_image_filter.__doc__ += "\n"
        minimum_projection_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        minimum_projection_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def projection_image_filter(*args, **kwargs):
    """Procedural interface for ProjectionImageFilter"""
    import itk
    instance = itk.ProjectionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def projection_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ProjectionImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ProjectionImageFilter.values()[0]
    else:
        filter_object = itk.ProjectionImageFilter

    projection_image_filter.__doc__ = filter_object.__doc__
    projection_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    projection_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ProjectionImageFilter, itkTemplate.itkTemplate):
        projection_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        projection_image_filter.__doc__ += "\n"
        projection_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        projection_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



