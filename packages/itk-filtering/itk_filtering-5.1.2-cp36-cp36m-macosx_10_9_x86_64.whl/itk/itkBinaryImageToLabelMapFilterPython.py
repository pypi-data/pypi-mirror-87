# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKLabelMapPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBinaryImageToLabelMapFilterPython
else:
    import _itkBinaryImageToLabelMapFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkBinaryImageToLabelMapFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkBinaryImageToLabelMapFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkLabelImageToLabelMapFilterPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.ITKLabelMapBasePython
import itk.itkStatisticsLabelObjectPython
import itk.itkShapeLabelObjectPython
import itk.itkAffineTransformPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkFixedArrayPython
import itk.itkTransformBasePython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.itkVariableLengthVectorPython
import itk.itkArrayPython
import itk.itkArray2DPython
import itk.itkOptimizerParametersPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkLabelObjectPython
import itk.itkLabelObjectLinePython
import itk.itkHistogramPython
import itk.itkSamplePython
import itk.itkImageSourceCommonPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkImageSourcePython
import itk.itkVectorImagePython
import itk.itkImageToImageFilterCommonPython

def itkBinaryImageToLabelMapFilterIUC2LM2_New():
    return itkBinaryImageToLabelMapFilterIUC2LM2.New()

class itkBinaryImageToLabelMapFilterIUC2LM2(itk.ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2):
    r"""


    Label the connected components in a binary image and produce a
    collection of label objects.

    BinaryImageToLabelMapFilter labels the objects in a binary image. Each
    distinct object is assigned a unique label. The final object labels
    start with 1 and are consecutive. Objects that are reached earlier by
    a raster order scan have a lower label.

    The GetOutput() function of this class returns an itk::LabelMap.

    This implementation was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/584 orhttp://www.insight-
    journal.org/browse/publication/176

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ConnectedComponentImageFilter, LabelImageToLabelMapFilter,
    LabelMap, LabelObject
    example{Filtering/LabelMap/LabelBinaryRegionsInImage,Label Binary
    Regions In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2_FullyConnectedOff)
    GetNumberOfObjects = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2_GetNumberOfObjects)
    SetOutputBackgroundValue = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2_SetOutputBackgroundValue)
    GetOutputBackgroundValue = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2_GetOutputBackgroundValue)
    SetInputForegroundValue = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2_SetInputForegroundValue)
    GetInputForegroundValue = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2_GetInputForegroundValue)
    __swig_destroy__ = _itkBinaryImageToLabelMapFilterPython.delete_itkBinaryImageToLabelMapFilterIUC2LM2
    cast = _swig_new_static_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryImageToLabelMapFilterIUC2LM2

        Create a new object of the class itkBinaryImageToLabelMapFilterIUC2LM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryImageToLabelMapFilterIUC2LM2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryImageToLabelMapFilterIUC2LM2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryImageToLabelMapFilterIUC2LM2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryImageToLabelMapFilterIUC2LM2 in _itkBinaryImageToLabelMapFilterPython:
_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2_swigregister(itkBinaryImageToLabelMapFilterIUC2LM2)
itkBinaryImageToLabelMapFilterIUC2LM2___New_orig__ = _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2___New_orig__
itkBinaryImageToLabelMapFilterIUC2LM2_cast = _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2_cast


def itkBinaryImageToLabelMapFilterIUC3LM3_New():
    return itkBinaryImageToLabelMapFilterIUC3LM3.New()

class itkBinaryImageToLabelMapFilterIUC3LM3(itk.ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3):
    r"""


    Label the connected components in a binary image and produce a
    collection of label objects.

    BinaryImageToLabelMapFilter labels the objects in a binary image. Each
    distinct object is assigned a unique label. The final object labels
    start with 1 and are consecutive. Objects that are reached earlier by
    a raster order scan have a lower label.

    The GetOutput() function of this class returns an itk::LabelMap.

    This implementation was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/584 orhttp://www.insight-
    journal.org/browse/publication/176

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ConnectedComponentImageFilter, LabelImageToLabelMapFilter,
    LabelMap, LabelObject
    example{Filtering/LabelMap/LabelBinaryRegionsInImage,Label Binary
    Regions In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3_FullyConnectedOff)
    GetNumberOfObjects = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3_GetNumberOfObjects)
    SetOutputBackgroundValue = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3_SetOutputBackgroundValue)
    GetOutputBackgroundValue = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3_GetOutputBackgroundValue)
    SetInputForegroundValue = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3_SetInputForegroundValue)
    GetInputForegroundValue = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3_GetInputForegroundValue)
    __swig_destroy__ = _itkBinaryImageToLabelMapFilterPython.delete_itkBinaryImageToLabelMapFilterIUC3LM3
    cast = _swig_new_static_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryImageToLabelMapFilterIUC3LM3

        Create a new object of the class itkBinaryImageToLabelMapFilterIUC3LM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryImageToLabelMapFilterIUC3LM3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryImageToLabelMapFilterIUC3LM3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryImageToLabelMapFilterIUC3LM3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryImageToLabelMapFilterIUC3LM3 in _itkBinaryImageToLabelMapFilterPython:
_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3_swigregister(itkBinaryImageToLabelMapFilterIUC3LM3)
itkBinaryImageToLabelMapFilterIUC3LM3___New_orig__ = _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3___New_orig__
itkBinaryImageToLabelMapFilterIUC3LM3_cast = _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3_cast


def itkBinaryImageToLabelMapFilterIUS2LM2_New():
    return itkBinaryImageToLabelMapFilterIUS2LM2.New()

class itkBinaryImageToLabelMapFilterIUS2LM2(itk.ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2):
    r"""


    Label the connected components in a binary image and produce a
    collection of label objects.

    BinaryImageToLabelMapFilter labels the objects in a binary image. Each
    distinct object is assigned a unique label. The final object labels
    start with 1 and are consecutive. Objects that are reached earlier by
    a raster order scan have a lower label.

    The GetOutput() function of this class returns an itk::LabelMap.

    This implementation was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/584 orhttp://www.insight-
    journal.org/browse/publication/176

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ConnectedComponentImageFilter, LabelImageToLabelMapFilter,
    LabelMap, LabelObject
    example{Filtering/LabelMap/LabelBinaryRegionsInImage,Label Binary
    Regions In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2_FullyConnectedOff)
    GetNumberOfObjects = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2_GetNumberOfObjects)
    SetOutputBackgroundValue = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2_SetOutputBackgroundValue)
    GetOutputBackgroundValue = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2_GetOutputBackgroundValue)
    SetInputForegroundValue = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2_SetInputForegroundValue)
    GetInputForegroundValue = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2_GetInputForegroundValue)
    __swig_destroy__ = _itkBinaryImageToLabelMapFilterPython.delete_itkBinaryImageToLabelMapFilterIUS2LM2
    cast = _swig_new_static_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryImageToLabelMapFilterIUS2LM2

        Create a new object of the class itkBinaryImageToLabelMapFilterIUS2LM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryImageToLabelMapFilterIUS2LM2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryImageToLabelMapFilterIUS2LM2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryImageToLabelMapFilterIUS2LM2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryImageToLabelMapFilterIUS2LM2 in _itkBinaryImageToLabelMapFilterPython:
_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2_swigregister(itkBinaryImageToLabelMapFilterIUS2LM2)
itkBinaryImageToLabelMapFilterIUS2LM2___New_orig__ = _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2___New_orig__
itkBinaryImageToLabelMapFilterIUS2LM2_cast = _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2_cast


def itkBinaryImageToLabelMapFilterIUS3LM3_New():
    return itkBinaryImageToLabelMapFilterIUS3LM3.New()

class itkBinaryImageToLabelMapFilterIUS3LM3(itk.ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3):
    r"""


    Label the connected components in a binary image and produce a
    collection of label objects.

    BinaryImageToLabelMapFilter labels the objects in a binary image. Each
    distinct object is assigned a unique label. The final object labels
    start with 1 and are consecutive. Objects that are reached earlier by
    a raster order scan have a lower label.

    The GetOutput() function of this class returns an itk::LabelMap.

    This implementation was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/584 orhttp://www.insight-
    journal.org/browse/publication/176

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ConnectedComponentImageFilter, LabelImageToLabelMapFilter,
    LabelMap, LabelObject
    example{Filtering/LabelMap/LabelBinaryRegionsInImage,Label Binary
    Regions In Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3_FullyConnectedOff)
    GetNumberOfObjects = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3_GetNumberOfObjects)
    SetOutputBackgroundValue = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3_SetOutputBackgroundValue)
    GetOutputBackgroundValue = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3_GetOutputBackgroundValue)
    SetInputForegroundValue = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3_SetInputForegroundValue)
    GetInputForegroundValue = _swig_new_instance_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3_GetInputForegroundValue)
    __swig_destroy__ = _itkBinaryImageToLabelMapFilterPython.delete_itkBinaryImageToLabelMapFilterIUS3LM3
    cast = _swig_new_static_method(_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryImageToLabelMapFilterIUS3LM3

        Create a new object of the class itkBinaryImageToLabelMapFilterIUS3LM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryImageToLabelMapFilterIUS3LM3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryImageToLabelMapFilterIUS3LM3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryImageToLabelMapFilterIUS3LM3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryImageToLabelMapFilterIUS3LM3 in _itkBinaryImageToLabelMapFilterPython:
_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3_swigregister(itkBinaryImageToLabelMapFilterIUS3LM3)
itkBinaryImageToLabelMapFilterIUS3LM3___New_orig__ = _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3___New_orig__
itkBinaryImageToLabelMapFilterIUS3LM3_cast = _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def binary_image_to_label_map_filter(*args, **kwargs):
    """Procedural interface for BinaryImageToLabelMapFilter"""
    import itk
    instance = itk.BinaryImageToLabelMapFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def binary_image_to_label_map_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.BinaryImageToLabelMapFilter, itkTemplate.itkTemplate):
        filter_object = itk.BinaryImageToLabelMapFilter.values()[0]
    else:
        filter_object = itk.BinaryImageToLabelMapFilter

    binary_image_to_label_map_filter.__doc__ = filter_object.__doc__
    binary_image_to_label_map_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    binary_image_to_label_map_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.BinaryImageToLabelMapFilter, itkTemplate.itkTemplate):
        binary_image_to_label_map_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        binary_image_to_label_map_filter.__doc__ += "\n"
        binary_image_to_label_map_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        binary_image_to_label_map_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



