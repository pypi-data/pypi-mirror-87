Metadata-Version: 2.1
Name: torch-tools
Version: 0.1.5
Summary: A library of helpers to train, evaluate and visualize deep nets with PyTorch.
Home-page: https://github.com/mgharbi/ttools
Author: Michaël Gharbi
Author-email: mgharbi@adobe.com
License: MIT
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: POSIX
Requires-Dist: torch
Requires-Dist: tqdm
Requires-Dist: numpy
Requires-Dist: torchvision
Requires-Dist: coloredlogs
Requires-Dist: visdom
Requires-Dist: pyaml
Requires-Dist: imageio
Requires-Dist: imageio-ffmpeg
Requires-Dist: jinja2
Requires-Dist: seaborn
Requires-Dist: sqlalchemy
Provides-Extra: dev
Requires-Dist: sphinx ; extra == 'dev'
Requires-Dist: pytest ; extra == 'dev'
Provides-Extra: docs
Requires-Dist: sphinx ; extra == 'docs'
Provides-Extra: tests
Requires-Dist: pytest ; extra == 'tests'

Readme
======

A library of helpers for PyTorch.

Michaël Gharbi <mgharbi@adobe.com>


Installation
------------

From pip:
``pip install torch-tools``

From source:
``python setup.py install``

Quickstart
==========

To quickly get up and running, use our repo initialization script. In your command line, simple run:

``ttools.new``

This will prompt you to give a name to your new project, and create the
necessary files and folders for you.



Documentation
=============

The documentation webpage can be found `here https://torch-tools.readthedocs.io/en/latest/`


Demo
----

For a simple demo, look at the MNIST example in `examples/train_mnist.py`:

``python examples/train_mnist.py data out``


Contributors
------------

Dima Smirnov implemented the tensorboard hooks and callbacks.


