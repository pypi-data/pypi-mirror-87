name: Upload Python Package
##############################################
# Create A Release to trigger a build       ##
# make sure your tag is Maj.Min.Build form  ##
# (eg  1.2.3   or v3.4.5  or v3.6.1a55)     ##
##############################################
on:
  release:
    types: # This configuration does not affect the page_build event above
      - created

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.release.target_commitish }}
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        echo Tag Version: ${GITHUB_REF##*/}
        python -m pip install --upgrade pip
        pip install setuptools wheel twine {EXE}

    - name: Update Version
      run: |
        TAG=${GITHUB_REF##*/}
        echo Tag Version: $TAG
        # set the version and current hash
        {EXE} setver -ver $TAG --sha1
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        {EXE} publish
    - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            dist
    - name: Cleanup
      # run any cleanup needed
      run: |
        echo "All Done..."
    - name: Commit Version File
      run: |
        # this will push the change back up to git
        git config user.name "Auto Deploy Script"
        git config user.email "<no@email.com>"
        git add {PKG}/version.py
        git commit -m "Updated Verion to ${{ github.event.release.tag_name }} And Released build to PyPi"
        git push origin master
