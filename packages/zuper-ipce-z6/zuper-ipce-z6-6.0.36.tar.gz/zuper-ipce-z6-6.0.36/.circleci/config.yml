version: 2
workflows:
  version: 2
  test:
    jobs:
      - test-3.8:
          context: pip-staging
      - test-3.7:
          context: pip-staging
      - test-3.6:
          context: pip-staging
      - test-3.7.6:
          context: pip-staging
      - test-3.7.5:
          context: pip-staging
      - test-3.8.0:
          context: pip-staging
      - test-3.8.1:
          context: pip-staging
      - test-3.8.2:
          context: pip-staging
jobs:
  test-3.6: &test-template
    environment:
      COLUMNS: 160
      CODECOV_TOKEN: 2239dd52-3730-4849-883f-a9e1780b16b3
      # default is /usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      PATH: /root/.local/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    docker:
      - image: python:3.6
    working_directory: ~/repo
    steps: &steps
      - checkout
      - run:
          name: Install deps
          command: |
            echo PATH=$PATH
            pip install -q --user --upgrade -r requirements.txt
            pip install -q --user --upgrade -r requirements-own.txt
      - run:
          name: Build stats
          command: |
            echo TERM = $TERM
            mkdir -p  build-stats
            pipdeptree | tee  build-stats/pipdeptree.txt
            pip list | tee  build-stats/pip-list.txt
            pip freeze | tee  build-stats/pip-freeze.txt
            env | tee  build-stats/env.txt
      - store_artifacts:
          path: build-stats
          destination:  build-stats
      - run:
          name: List deps
          command: |
            mkdir -p artifacts
            pip list | tee artifacts/pip-list.txt
            pipdeptree | tee artifacts/pipdeptree.txt

      - run:
          name: setup.py develop
          command: |
            python setup.py develop --prefix ~/.local --no-deps

      - run:
          name: Check out the test objects
          command: |
            git clone --branch z6 --depth=1 git@github.com:zupermind/zuper-test-objs.git test_objects

      - run:
          name: Run tests
          command: |
            mkdir test-results
            make test-parallel-circle

      - store_test_results:
          path: test-results


      - store_artifacts:
          path: cover
          destination: coverage

      - store_artifacts:
          path: notebooks
          destination: notebooks

      - run:
          name: CodeCov
          command: |
            bash <(curl -s https://codecov.io/bash)



  test-3.7.5:
    <<: *test-template
    docker:
    - image: python:3.7.5

  test-3.7.6:
    <<: *test-template
    docker:
    - image: python:3.7.6

  test-3.8.0:
    <<: *test-template
    docker:
    - image: python:3.8.0

  test-3.8.1:
    <<: *test-template
    docker:
    - image: python:3.8.1

  test-3.8.2:
    <<: *test-template
    docker:
    - image: python:3.8.2

  test-3.8:
    <<: *test-template
    docker:
    - image: python:3.8

  test-3.7:
    <<: *test-template
    docker:
    - image: python:3.7
