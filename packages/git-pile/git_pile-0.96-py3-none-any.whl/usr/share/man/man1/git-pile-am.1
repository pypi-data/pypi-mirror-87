.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.14.
.TH GIT-PILE "1" "December 2020" "git-pile 0.96" "User Commands"
.SH NAME
git-pile \- git pile am
.SH DESCRIPTION
usage: git\-pile am [\-h] [\-g] [\-s {top,pile\-commit}] [\-\-debug] [\-v]
.IP
[mbox_cover]
.SS "positional arguments:"
.TP
mbox_cover
Mbox/patch file containing the coverletter generated
by git\-pile. If more than one patch is contained in
the mbox, the first one is assumed to be the cover. If
no arguments are passed, the mbox is read from stdin
.SS "optional arguments:"
.TP
\fB\-h\fR, \fB\-\-help\fR
show this help message and exit
.TP
\fB\-g\fR, \fB\-\-genbranch\fR
When patch is correctly applied, also force\-generate
the RESULT_BRANCH \- this is the equivalent of calling
"git pile genbranch \fB\-f\fR" after the command returns.
.TP
\fB\-s\fR {top,pile\-commit}, \fB\-\-strategy\fR {top,pile\-commit}
Select the strategy used to apply the patch. "top",
the default, tries to apply the patch on top of
PILE_BRANCH. "pile\-commit" first reset the pile branch
to the commit saved in the cover letter before
proceeding \- this allows to replicate the exact same
tree as the one that generated the cover. However the
PILE_BRANCH will have diverged.
.TP
\fB\-\-debug\fR
Turn on debugging output
.TP
\fB\-v\fR, \fB\-\-version\fR
show program's version number and exit
