# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageStatisticsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkLabelStatisticsImageFilterPython
else:
    import _itkLabelStatisticsImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkLabelStatisticsImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkLabelStatisticsImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageSinkPython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.stdcomplexPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkVariableLengthVectorPython
import itk.itkHistogramPython
import itk.itkSamplePython
import itk.itkArrayPython

def itkLabelStatisticsImageFilterID2ISS2_New():
    return itkLabelStatisticsImageFilterID2ISS2.New()

class itkLabelStatisticsImageFilterID2ISS2(itk.itkImageSinkPython.itkImageSinkID2):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterID2ISS2
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterID2ISS2

        Create a new object of the class itkLabelStatisticsImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterID2ISS2 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_swigregister(itkLabelStatisticsImageFilterID2ISS2)
itkLabelStatisticsImageFilterID2ISS2___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2___New_orig__
itkLabelStatisticsImageFilterID2ISS2_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2ISS2_cast


def itkLabelStatisticsImageFilterID2IUC2_New():
    return itkLabelStatisticsImageFilterID2IUC2.New()

class itkLabelStatisticsImageFilterID2IUC2(itk.itkImageSinkPython.itkImageSinkID2):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterID2IUC2
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterID2IUC2

        Create a new object of the class itkLabelStatisticsImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterID2IUC2 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_swigregister(itkLabelStatisticsImageFilterID2IUC2)
itkLabelStatisticsImageFilterID2IUC2___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2___New_orig__
itkLabelStatisticsImageFilterID2IUC2_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUC2_cast


def itkLabelStatisticsImageFilterID2IUS2_New():
    return itkLabelStatisticsImageFilterID2IUS2.New()

class itkLabelStatisticsImageFilterID2IUS2(itk.itkImageSinkPython.itkImageSinkID2):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterID2IUS2
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterID2IUS2

        Create a new object of the class itkLabelStatisticsImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterID2IUS2 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_swigregister(itkLabelStatisticsImageFilterID2IUS2)
itkLabelStatisticsImageFilterID2IUS2___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2___New_orig__
itkLabelStatisticsImageFilterID2IUS2_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID2IUS2_cast


def itkLabelStatisticsImageFilterID3ISS3_New():
    return itkLabelStatisticsImageFilterID3ISS3.New()

class itkLabelStatisticsImageFilterID3ISS3(itk.itkImageSinkPython.itkImageSinkID3):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterID3ISS3
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterID3ISS3

        Create a new object of the class itkLabelStatisticsImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterID3ISS3 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_swigregister(itkLabelStatisticsImageFilterID3ISS3)
itkLabelStatisticsImageFilterID3ISS3___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3___New_orig__
itkLabelStatisticsImageFilterID3ISS3_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3ISS3_cast


def itkLabelStatisticsImageFilterID3IUC3_New():
    return itkLabelStatisticsImageFilterID3IUC3.New()

class itkLabelStatisticsImageFilterID3IUC3(itk.itkImageSinkPython.itkImageSinkID3):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterID3IUC3
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterID3IUC3

        Create a new object of the class itkLabelStatisticsImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterID3IUC3 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_swigregister(itkLabelStatisticsImageFilterID3IUC3)
itkLabelStatisticsImageFilterID3IUC3___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3___New_orig__
itkLabelStatisticsImageFilterID3IUC3_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUC3_cast


def itkLabelStatisticsImageFilterID3IUS3_New():
    return itkLabelStatisticsImageFilterID3IUS3.New()

class itkLabelStatisticsImageFilterID3IUS3(itk.itkImageSinkPython.itkImageSinkID3):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterID3IUS3
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterID3IUS3

        Create a new object of the class itkLabelStatisticsImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterID3IUS3 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_swigregister(itkLabelStatisticsImageFilterID3IUS3)
itkLabelStatisticsImageFilterID3IUS3___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3___New_orig__
itkLabelStatisticsImageFilterID3IUS3_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterID3IUS3_cast


def itkLabelStatisticsImageFilterIF2ISS2_New():
    return itkLabelStatisticsImageFilterIF2ISS2.New()

class itkLabelStatisticsImageFilterIF2ISS2(itk.itkImageSinkPython.itkImageSinkIF2):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterIF2ISS2
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterIF2ISS2

        Create a new object of the class itkLabelStatisticsImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterIF2ISS2 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_swigregister(itkLabelStatisticsImageFilterIF2ISS2)
itkLabelStatisticsImageFilterIF2ISS2___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2___New_orig__
itkLabelStatisticsImageFilterIF2ISS2_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2ISS2_cast


def itkLabelStatisticsImageFilterIF2IUC2_New():
    return itkLabelStatisticsImageFilterIF2IUC2.New()

class itkLabelStatisticsImageFilterIF2IUC2(itk.itkImageSinkPython.itkImageSinkIF2):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterIF2IUC2
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterIF2IUC2

        Create a new object of the class itkLabelStatisticsImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterIF2IUC2 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_swigregister(itkLabelStatisticsImageFilterIF2IUC2)
itkLabelStatisticsImageFilterIF2IUC2___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2___New_orig__
itkLabelStatisticsImageFilterIF2IUC2_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUC2_cast


def itkLabelStatisticsImageFilterIF2IUS2_New():
    return itkLabelStatisticsImageFilterIF2IUS2.New()

class itkLabelStatisticsImageFilterIF2IUS2(itk.itkImageSinkPython.itkImageSinkIF2):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterIF2IUS2
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterIF2IUS2

        Create a new object of the class itkLabelStatisticsImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterIF2IUS2 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_swigregister(itkLabelStatisticsImageFilterIF2IUS2)
itkLabelStatisticsImageFilterIF2IUS2___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2___New_orig__
itkLabelStatisticsImageFilterIF2IUS2_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF2IUS2_cast


def itkLabelStatisticsImageFilterIF3ISS3_New():
    return itkLabelStatisticsImageFilterIF3ISS3.New()

class itkLabelStatisticsImageFilterIF3ISS3(itk.itkImageSinkPython.itkImageSinkIF3):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterIF3ISS3
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterIF3ISS3

        Create a new object of the class itkLabelStatisticsImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterIF3ISS3 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_swigregister(itkLabelStatisticsImageFilterIF3ISS3)
itkLabelStatisticsImageFilterIF3ISS3___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3___New_orig__
itkLabelStatisticsImageFilterIF3ISS3_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3ISS3_cast


def itkLabelStatisticsImageFilterIF3IUC3_New():
    return itkLabelStatisticsImageFilterIF3IUC3.New()

class itkLabelStatisticsImageFilterIF3IUC3(itk.itkImageSinkPython.itkImageSinkIF3):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterIF3IUC3
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterIF3IUC3

        Create a new object of the class itkLabelStatisticsImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterIF3IUC3 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_swigregister(itkLabelStatisticsImageFilterIF3IUC3)
itkLabelStatisticsImageFilterIF3IUC3___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3___New_orig__
itkLabelStatisticsImageFilterIF3IUC3_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUC3_cast


def itkLabelStatisticsImageFilterIF3IUS3_New():
    return itkLabelStatisticsImageFilterIF3IUS3.New()

class itkLabelStatisticsImageFilterIF3IUS3(itk.itkImageSinkPython.itkImageSinkIF3):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterIF3IUS3
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterIF3IUS3

        Create a new object of the class itkLabelStatisticsImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterIF3IUS3 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_swigregister(itkLabelStatisticsImageFilterIF3IUS3)
itkLabelStatisticsImageFilterIF3IUS3___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3___New_orig__
itkLabelStatisticsImageFilterIF3IUS3_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIF3IUS3_cast


def itkLabelStatisticsImageFilterISS2ISS2_New():
    return itkLabelStatisticsImageFilterISS2ISS2.New()

class itkLabelStatisticsImageFilterISS2ISS2(itk.itkImageSinkPython.itkImageSinkISS2):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterISS2ISS2

        Create a new object of the class itkLabelStatisticsImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterISS2ISS2 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_swigregister(itkLabelStatisticsImageFilterISS2ISS2)
itkLabelStatisticsImageFilterISS2ISS2___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2___New_orig__
itkLabelStatisticsImageFilterISS2ISS2_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2ISS2_cast


def itkLabelStatisticsImageFilterISS2IUC2_New():
    return itkLabelStatisticsImageFilterISS2IUC2.New()

class itkLabelStatisticsImageFilterISS2IUC2(itk.itkImageSinkPython.itkImageSinkISS2):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterISS2IUC2
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterISS2IUC2

        Create a new object of the class itkLabelStatisticsImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterISS2IUC2 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_swigregister(itkLabelStatisticsImageFilterISS2IUC2)
itkLabelStatisticsImageFilterISS2IUC2___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2___New_orig__
itkLabelStatisticsImageFilterISS2IUC2_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUC2_cast


def itkLabelStatisticsImageFilterISS2IUS2_New():
    return itkLabelStatisticsImageFilterISS2IUS2.New()

class itkLabelStatisticsImageFilterISS2IUS2(itk.itkImageSinkPython.itkImageSinkISS2):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterISS2IUS2
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterISS2IUS2

        Create a new object of the class itkLabelStatisticsImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterISS2IUS2 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_swigregister(itkLabelStatisticsImageFilterISS2IUS2)
itkLabelStatisticsImageFilterISS2IUS2___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2___New_orig__
itkLabelStatisticsImageFilterISS2IUS2_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS2IUS2_cast


def itkLabelStatisticsImageFilterISS3ISS3_New():
    return itkLabelStatisticsImageFilterISS3ISS3.New()

class itkLabelStatisticsImageFilterISS3ISS3(itk.itkImageSinkPython.itkImageSinkISS3):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterISS3ISS3

        Create a new object of the class itkLabelStatisticsImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterISS3ISS3 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_swigregister(itkLabelStatisticsImageFilterISS3ISS3)
itkLabelStatisticsImageFilterISS3ISS3___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3___New_orig__
itkLabelStatisticsImageFilterISS3ISS3_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3ISS3_cast


def itkLabelStatisticsImageFilterISS3IUC3_New():
    return itkLabelStatisticsImageFilterISS3IUC3.New()

class itkLabelStatisticsImageFilterISS3IUC3(itk.itkImageSinkPython.itkImageSinkISS3):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterISS3IUC3
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterISS3IUC3

        Create a new object of the class itkLabelStatisticsImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterISS3IUC3 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_swigregister(itkLabelStatisticsImageFilterISS3IUC3)
itkLabelStatisticsImageFilterISS3IUC3___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3___New_orig__
itkLabelStatisticsImageFilterISS3IUC3_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUC3_cast


def itkLabelStatisticsImageFilterISS3IUS3_New():
    return itkLabelStatisticsImageFilterISS3IUS3.New()

class itkLabelStatisticsImageFilterISS3IUS3(itk.itkImageSinkPython.itkImageSinkISS3):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterISS3IUS3
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterISS3IUS3

        Create a new object of the class itkLabelStatisticsImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterISS3IUS3 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_swigregister(itkLabelStatisticsImageFilterISS3IUS3)
itkLabelStatisticsImageFilterISS3IUS3___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3___New_orig__
itkLabelStatisticsImageFilterISS3IUS3_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterISS3IUS3_cast


def itkLabelStatisticsImageFilterIUC2ISS2_New():
    return itkLabelStatisticsImageFilterIUC2ISS2.New()

class itkLabelStatisticsImageFilterIUC2ISS2(itk.itkImageSinkPython.itkImageSinkIUC2):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterIUC2ISS2
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterIUC2ISS2

        Create a new object of the class itkLabelStatisticsImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterIUC2ISS2 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_swigregister(itkLabelStatisticsImageFilterIUC2ISS2)
itkLabelStatisticsImageFilterIUC2ISS2___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2___New_orig__
itkLabelStatisticsImageFilterIUC2ISS2_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2ISS2_cast


def itkLabelStatisticsImageFilterIUC2IUC2_New():
    return itkLabelStatisticsImageFilterIUC2IUC2.New()

class itkLabelStatisticsImageFilterIUC2IUC2(itk.itkImageSinkPython.itkImageSinkIUC2):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterIUC2IUC2

        Create a new object of the class itkLabelStatisticsImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterIUC2IUC2 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_swigregister(itkLabelStatisticsImageFilterIUC2IUC2)
itkLabelStatisticsImageFilterIUC2IUC2___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2___New_orig__
itkLabelStatisticsImageFilterIUC2IUC2_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUC2_cast


def itkLabelStatisticsImageFilterIUC2IUS2_New():
    return itkLabelStatisticsImageFilterIUC2IUS2.New()

class itkLabelStatisticsImageFilterIUC2IUS2(itk.itkImageSinkPython.itkImageSinkIUC2):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterIUC2IUS2
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterIUC2IUS2

        Create a new object of the class itkLabelStatisticsImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterIUC2IUS2 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_swigregister(itkLabelStatisticsImageFilterIUC2IUS2)
itkLabelStatisticsImageFilterIUC2IUS2___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2___New_orig__
itkLabelStatisticsImageFilterIUC2IUS2_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC2IUS2_cast


def itkLabelStatisticsImageFilterIUC3ISS3_New():
    return itkLabelStatisticsImageFilterIUC3ISS3.New()

class itkLabelStatisticsImageFilterIUC3ISS3(itk.itkImageSinkPython.itkImageSinkIUC3):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterIUC3ISS3
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterIUC3ISS3

        Create a new object of the class itkLabelStatisticsImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterIUC3ISS3 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_swigregister(itkLabelStatisticsImageFilterIUC3ISS3)
itkLabelStatisticsImageFilterIUC3ISS3___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3___New_orig__
itkLabelStatisticsImageFilterIUC3ISS3_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3ISS3_cast


def itkLabelStatisticsImageFilterIUC3IUC3_New():
    return itkLabelStatisticsImageFilterIUC3IUC3.New()

class itkLabelStatisticsImageFilterIUC3IUC3(itk.itkImageSinkPython.itkImageSinkIUC3):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterIUC3IUC3

        Create a new object of the class itkLabelStatisticsImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterIUC3IUC3 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_swigregister(itkLabelStatisticsImageFilterIUC3IUC3)
itkLabelStatisticsImageFilterIUC3IUC3___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3___New_orig__
itkLabelStatisticsImageFilterIUC3IUC3_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUC3_cast


def itkLabelStatisticsImageFilterIUC3IUS3_New():
    return itkLabelStatisticsImageFilterIUC3IUS3.New()

class itkLabelStatisticsImageFilterIUC3IUS3(itk.itkImageSinkPython.itkImageSinkIUC3):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterIUC3IUS3
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterIUC3IUS3

        Create a new object of the class itkLabelStatisticsImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterIUC3IUS3 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_swigregister(itkLabelStatisticsImageFilterIUC3IUS3)
itkLabelStatisticsImageFilterIUC3IUS3___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3___New_orig__
itkLabelStatisticsImageFilterIUC3IUS3_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUC3IUS3_cast


def itkLabelStatisticsImageFilterIUS2ISS2_New():
    return itkLabelStatisticsImageFilterIUS2ISS2.New()

class itkLabelStatisticsImageFilterIUS2ISS2(itk.itkImageSinkPython.itkImageSinkIUS2):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterIUS2ISS2
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterIUS2ISS2

        Create a new object of the class itkLabelStatisticsImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterIUS2ISS2 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_swigregister(itkLabelStatisticsImageFilterIUS2ISS2)
itkLabelStatisticsImageFilterIUS2ISS2___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2___New_orig__
itkLabelStatisticsImageFilterIUS2ISS2_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2ISS2_cast


def itkLabelStatisticsImageFilterIUS2IUC2_New():
    return itkLabelStatisticsImageFilterIUS2IUC2.New()

class itkLabelStatisticsImageFilterIUS2IUC2(itk.itkImageSinkPython.itkImageSinkIUS2):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterIUS2IUC2
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterIUS2IUC2

        Create a new object of the class itkLabelStatisticsImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterIUS2IUC2 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_swigregister(itkLabelStatisticsImageFilterIUS2IUC2)
itkLabelStatisticsImageFilterIUS2IUC2___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2___New_orig__
itkLabelStatisticsImageFilterIUS2IUC2_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUC2_cast


def itkLabelStatisticsImageFilterIUS2IUS2_New():
    return itkLabelStatisticsImageFilterIUS2IUS2.New()

class itkLabelStatisticsImageFilterIUS2IUS2(itk.itkImageSinkPython.itkImageSinkIUS2):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterIUS2IUS2

        Create a new object of the class itkLabelStatisticsImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterIUS2IUS2 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_swigregister(itkLabelStatisticsImageFilterIUS2IUS2)
itkLabelStatisticsImageFilterIUS2IUS2___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2___New_orig__
itkLabelStatisticsImageFilterIUS2IUS2_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS2IUS2_cast


def itkLabelStatisticsImageFilterIUS3ISS3_New():
    return itkLabelStatisticsImageFilterIUS3ISS3.New()

class itkLabelStatisticsImageFilterIUS3ISS3(itk.itkImageSinkPython.itkImageSinkIUS3):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterIUS3ISS3
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterIUS3ISS3

        Create a new object of the class itkLabelStatisticsImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterIUS3ISS3 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_swigregister(itkLabelStatisticsImageFilterIUS3ISS3)
itkLabelStatisticsImageFilterIUS3ISS3___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3___New_orig__
itkLabelStatisticsImageFilterIUS3ISS3_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3ISS3_cast


def itkLabelStatisticsImageFilterIUS3IUC3_New():
    return itkLabelStatisticsImageFilterIUS3IUC3.New()

class itkLabelStatisticsImageFilterIUS3IUC3(itk.itkImageSinkPython.itkImageSinkIUS3):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterIUS3IUC3
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterIUS3IUC3

        Create a new object of the class itkLabelStatisticsImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterIUS3IUC3 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_swigregister(itkLabelStatisticsImageFilterIUS3IUC3)
itkLabelStatisticsImageFilterIUS3IUC3___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3___New_orig__
itkLabelStatisticsImageFilterIUS3IUC3_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUC3_cast


def itkLabelStatisticsImageFilterIUS3IUS3_New():
    return itkLabelStatisticsImageFilterIUS3IUS3.New()

class itkLabelStatisticsImageFilterIUS3IUS3(itk.itkImageSinkPython.itkImageSinkIUS3):
    r"""


    Given an intensity image and a label map, compute min, max, variance
    and mean of the pixels associated with each label or segment.

    LabelStatisticsImageFilter computes the minimum, maximum, sum, mean,
    median, variance and sigma of regions of an intensity image, where the
    regions are defined via a label map (a second input). The label image
    should be integral type. The filter needs all of its input image. It
    behaves as a filter with an input and output. Thus it can be inserted
    in a pipline with other filters and the statistics will only be
    recomputed if a downstream filter changes.

    Optionally, the filter also computes intensity histograms on each
    object. If histograms are enabled, a median intensity value can also
    be computed, although its accuracy is limited to the bin width of the
    histogram. If histograms are not enabled, the median returns zero.

    This filter is automatically multi-threaded and can stream its input
    when NumberOfStreamDivisions is set to more than Statistics are
    independently computed for each streamed and threaded region then
    merged.

    example{Filtering/ImageStatistics/StatisticalPropertiesOfRegions,St
    atistical Properties Of Labeled Regions} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_Clone)
    SetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_SetUseHistograms)
    GetUseHistograms = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_GetUseHistograms)
    UseHistogramsOn = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_UseHistogramsOn)
    UseHistogramsOff = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_UseHistogramsOff)
    GetValidLabelValues = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_GetValidLabelValues)
    SetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_SetLabelInput)
    GetLabelInput = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_GetLabelInput)
    HasLabel = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_HasLabel)
    GetNumberOfObjects = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_GetNumberOfObjects)
    GetNumberOfLabels = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_GetNumberOfLabels)
    GetMinimum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_GetMinimum)
    GetMaximum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_GetMaximum)
    GetMean = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_GetMean)
    GetMedian = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_GetMedian)
    GetSigma = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_GetSigma)
    GetVariance = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_GetVariance)
    GetBoundingBox = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_GetBoundingBox)
    GetRegion = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_GetRegion)
    GetSum = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_GetSum)
    GetCount = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_GetCount)
    GetHistogram = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_GetHistogram)
    SetHistogramParameters = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_SetHistogramParameters)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_GetNumberOfStreamDivisions)
    InputHasNumericTraitsCheck = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelStatisticsImageFilterPython.delete_itkLabelStatisticsImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkLabelStatisticsImageFilterIUS3IUS3

        Create a new object of the class itkLabelStatisticsImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelStatisticsImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelStatisticsImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelStatisticsImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelStatisticsImageFilterIUS3IUS3 in _itkLabelStatisticsImageFilterPython:
_itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_swigregister(itkLabelStatisticsImageFilterIUS3IUS3)
itkLabelStatisticsImageFilterIUS3IUS3___New_orig__ = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3___New_orig__
itkLabelStatisticsImageFilterIUS3IUS3_cast = _itkLabelStatisticsImageFilterPython.itkLabelStatisticsImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def label_statistics_image_filter(*args, **kwargs):
    """Procedural interface for LabelStatisticsImageFilter"""
    import itk
    instance = itk.LabelStatisticsImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def label_statistics_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.LabelStatisticsImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.LabelStatisticsImageFilter.values()[0]
    else:
        filter_object = itk.LabelStatisticsImageFilter

    label_statistics_image_filter.__doc__ = filter_object.__doc__
    label_statistics_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    label_statistics_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.LabelStatisticsImageFilter, itkTemplate.itkTemplate):
        label_statistics_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        label_statistics_image_filter.__doc__ += "\n"
        label_statistics_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        label_statistics_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



