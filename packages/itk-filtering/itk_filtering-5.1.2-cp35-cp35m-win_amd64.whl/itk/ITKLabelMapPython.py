# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _ITKLabelMapPython
else:
    import _ITKLabelMapPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _ITKLabelMapPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _ITKLabelMapPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)



swig = {}
import itk.ITKPyBasePython
import itk.ITKTransformPython
import itk.ITKStatisticsPython
import itk.ITKImageLabelPython
from itk.itkLabelObjectLinePython import *
from itk.itkLabelObjectPython import *
from itk.itkShapeLabelObjectPython import *
from itk.itkStatisticsLabelObjectPython import *
from itk.ITKLabelMapBasePython import *
from itk.itkLabelMapFilterPython import *
from itk.itkInPlaceLabelMapFilterPython import *
from itk.itkChangeRegionLabelMapFilterPython import *
from itk.itkAggregateLabelMapFilterPython import *
from itk.itkAutoCropLabelMapFilterPython import *
from itk.itkBinaryFillholeImageFilterPython import *
from itk.itkBinaryGrindPeakImageFilterPython import *
from itk.itkBinaryImageToLabelMapFilterPython import *
from itk.itkBinaryImageToShapeLabelMapFilterPython import *
from itk.itkBinaryImageToStatisticsLabelMapFilterPython import *
from itk.itkBinaryNotImageFilterPython import *
from itk.itkBinaryReconstructionByDilationImageFilterPython import *
from itk.itkBinaryReconstructionByErosionImageFilterPython import *
from itk.itkBinaryShapeKeepNObjectsImageFilterPython import *
from itk.itkBinaryShapeOpeningImageFilterPython import *
from itk.itkBinaryStatisticsKeepNObjectsImageFilterPython import *
from itk.itkBinaryStatisticsOpeningImageFilterPython import *
from itk.itkChangeLabelLabelMapFilterPython import *
from itk.itkCropLabelMapFilterPython import *
from itk.itkLabelImageToLabelMapFilterPython import *
from itk.itkLabelImageToShapeLabelMapFilterPython import *
from itk.itkLabelImageToStatisticsLabelMapFilterPython import *
from itk.itkLabelMapMaskImageFilterPython import *
from itk.itkLabelMapToBinaryImageFilterPython import *
from itk.itkLabelMapToLabelImageFilterPython import *
from itk.itkLabelSelectionLabelMapFilterPython import *
from itk.itkLabelShapeKeepNObjectsImageFilterPython import *
from itk.itkLabelShapeOpeningImageFilterPython import *
from itk.itkLabelStatisticsKeepNObjectsImageFilterPython import *
from itk.itkLabelStatisticsOpeningImageFilterPython import *
from itk.itkLabelUniqueLabelMapFilterPython import *
from itk.itkMergeLabelMapFilterPython import *
from itk.itkObjectByObjectLabelMapFilterPython import *
from itk.itkPadLabelMapFilterPython import *
from itk.itkRegionFromReferenceLabelMapFilterPython import *
from itk.itkRelabelLabelMapFilterPython import *
from itk.itkShapeKeepNObjectsLabelMapFilterPython import *
from itk.itkShapeLabelMapFilterPython import *
from itk.itkShapeOpeningLabelMapFilterPython import *
from itk.itkShapePositionLabelMapFilterPython import *
from itk.itkShapeRelabelImageFilterPython import *
from itk.itkShapeRelabelLabelMapFilterPython import *
from itk.itkShapeUniqueLabelMapFilterPython import *
from itk.itkShiftScaleLabelMapFilterPython import *
from itk.itkStatisticsKeepNObjectsLabelMapFilterPython import *
from itk.itkStatisticsLabelMapFilterPython import *
from itk.itkStatisticsOpeningLabelMapFilterPython import *
from itk.itkStatisticsPositionLabelMapFilterPython import *
from itk.itkStatisticsRelabelImageFilterPython import *
from itk.itkStatisticsRelabelLabelMapFilterPython import *
from itk.itkStatisticsUniqueLabelMapFilterPython import *




