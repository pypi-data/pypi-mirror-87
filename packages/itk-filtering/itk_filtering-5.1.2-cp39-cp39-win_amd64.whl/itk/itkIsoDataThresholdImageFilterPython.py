# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKThresholdingPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkIsoDataThresholdImageFilterPython
else:
    import _itkIsoDataThresholdImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkIsoDataThresholdImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkIsoDataThresholdImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkHistogramThresholdImageFilterPython
import itk.itkHistogramThresholdCalculatorPython
import itk.itkHistogramPython
import itk.itkSamplePython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.ITKCommonBasePython
import itk.itkArrayPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkCovariantVectorPython
import itk.itkImageToImageFilterAPython
import itk.itkImagePython
import itk.itkPointPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToHistogramFilterPython
import itk.itkImageSinkPython

def itkIsoDataThresholdImageFilterID2ISS2_New():
    return itkIsoDataThresholdImageFilterID2ISS2.New()

class itkIsoDataThresholdImageFilterID2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2ISS2_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterID2ISS2
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterID2ISS2

        Create a new object of the class itkIsoDataThresholdImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterID2ISS2 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2ISS2_swigregister(itkIsoDataThresholdImageFilterID2ISS2)
itkIsoDataThresholdImageFilterID2ISS2___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2ISS2___New_orig__
itkIsoDataThresholdImageFilterID2ISS2_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2ISS2_cast


def itkIsoDataThresholdImageFilterID2IUC2_New():
    return itkIsoDataThresholdImageFilterID2IUC2.New()

class itkIsoDataThresholdImageFilterID2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2IUC2_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterID2IUC2
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterID2IUC2

        Create a new object of the class itkIsoDataThresholdImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterID2IUC2 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2IUC2_swigregister(itkIsoDataThresholdImageFilterID2IUC2)
itkIsoDataThresholdImageFilterID2IUC2___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2IUC2___New_orig__
itkIsoDataThresholdImageFilterID2IUC2_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2IUC2_cast


def itkIsoDataThresholdImageFilterID2IUS2_New():
    return itkIsoDataThresholdImageFilterID2IUS2.New()

class itkIsoDataThresholdImageFilterID2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2IUS2_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterID2IUS2
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterID2IUS2

        Create a new object of the class itkIsoDataThresholdImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterID2IUS2 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2IUS2_swigregister(itkIsoDataThresholdImageFilterID2IUS2)
itkIsoDataThresholdImageFilterID2IUS2___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2IUS2___New_orig__
itkIsoDataThresholdImageFilterID2IUS2_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID2IUS2_cast


def itkIsoDataThresholdImageFilterID3ISS3_New():
    return itkIsoDataThresholdImageFilterID3ISS3.New()

class itkIsoDataThresholdImageFilterID3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3ISS3_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterID3ISS3
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterID3ISS3

        Create a new object of the class itkIsoDataThresholdImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterID3ISS3 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3ISS3_swigregister(itkIsoDataThresholdImageFilterID3ISS3)
itkIsoDataThresholdImageFilterID3ISS3___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3ISS3___New_orig__
itkIsoDataThresholdImageFilterID3ISS3_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3ISS3_cast


def itkIsoDataThresholdImageFilterID3IUC3_New():
    return itkIsoDataThresholdImageFilterID3IUC3.New()

class itkIsoDataThresholdImageFilterID3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3IUC3_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterID3IUC3
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterID3IUC3

        Create a new object of the class itkIsoDataThresholdImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterID3IUC3 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3IUC3_swigregister(itkIsoDataThresholdImageFilterID3IUC3)
itkIsoDataThresholdImageFilterID3IUC3___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3IUC3___New_orig__
itkIsoDataThresholdImageFilterID3IUC3_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3IUC3_cast


def itkIsoDataThresholdImageFilterID3IUS3_New():
    return itkIsoDataThresholdImageFilterID3IUS3.New()

class itkIsoDataThresholdImageFilterID3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3IUS3_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterID3IUS3
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterID3IUS3

        Create a new object of the class itkIsoDataThresholdImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterID3IUS3 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3IUS3_swigregister(itkIsoDataThresholdImageFilterID3IUS3)
itkIsoDataThresholdImageFilterID3IUS3___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3IUS3___New_orig__
itkIsoDataThresholdImageFilterID3IUS3_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterID3IUS3_cast


def itkIsoDataThresholdImageFilterIF2ISS2_New():
    return itkIsoDataThresholdImageFilterIF2ISS2.New()

class itkIsoDataThresholdImageFilterIF2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2ISS2_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIF2ISS2
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIF2ISS2

        Create a new object of the class itkIsoDataThresholdImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterIF2ISS2 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2ISS2_swigregister(itkIsoDataThresholdImageFilterIF2ISS2)
itkIsoDataThresholdImageFilterIF2ISS2___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2ISS2___New_orig__
itkIsoDataThresholdImageFilterIF2ISS2_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2ISS2_cast


def itkIsoDataThresholdImageFilterIF2IUC2_New():
    return itkIsoDataThresholdImageFilterIF2IUC2.New()

class itkIsoDataThresholdImageFilterIF2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUC2_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIF2IUC2
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIF2IUC2

        Create a new object of the class itkIsoDataThresholdImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterIF2IUC2 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUC2_swigregister(itkIsoDataThresholdImageFilterIF2IUC2)
itkIsoDataThresholdImageFilterIF2IUC2___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUC2___New_orig__
itkIsoDataThresholdImageFilterIF2IUC2_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUC2_cast


def itkIsoDataThresholdImageFilterIF2IUS2_New():
    return itkIsoDataThresholdImageFilterIF2IUS2.New()

class itkIsoDataThresholdImageFilterIF2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUS2_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIF2IUS2
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIF2IUS2

        Create a new object of the class itkIsoDataThresholdImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterIF2IUS2 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUS2_swigregister(itkIsoDataThresholdImageFilterIF2IUS2)
itkIsoDataThresholdImageFilterIF2IUS2___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUS2___New_orig__
itkIsoDataThresholdImageFilterIF2IUS2_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUS2_cast


def itkIsoDataThresholdImageFilterIF3ISS3_New():
    return itkIsoDataThresholdImageFilterIF3ISS3.New()

class itkIsoDataThresholdImageFilterIF3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3ISS3_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIF3ISS3
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIF3ISS3

        Create a new object of the class itkIsoDataThresholdImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterIF3ISS3 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3ISS3_swigregister(itkIsoDataThresholdImageFilterIF3ISS3)
itkIsoDataThresholdImageFilterIF3ISS3___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3ISS3___New_orig__
itkIsoDataThresholdImageFilterIF3ISS3_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3ISS3_cast


def itkIsoDataThresholdImageFilterIF3IUC3_New():
    return itkIsoDataThresholdImageFilterIF3IUC3.New()

class itkIsoDataThresholdImageFilterIF3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUC3_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIF3IUC3
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIF3IUC3

        Create a new object of the class itkIsoDataThresholdImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterIF3IUC3 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUC3_swigregister(itkIsoDataThresholdImageFilterIF3IUC3)
itkIsoDataThresholdImageFilterIF3IUC3___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUC3___New_orig__
itkIsoDataThresholdImageFilterIF3IUC3_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUC3_cast


def itkIsoDataThresholdImageFilterIF3IUS3_New():
    return itkIsoDataThresholdImageFilterIF3IUS3.New()

class itkIsoDataThresholdImageFilterIF3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUS3_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIF3IUS3
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIF3IUS3

        Create a new object of the class itkIsoDataThresholdImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterIF3IUS3 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUS3_swigregister(itkIsoDataThresholdImageFilterIF3IUS3)
itkIsoDataThresholdImageFilterIF3IUS3___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUS3___New_orig__
itkIsoDataThresholdImageFilterIF3IUS3_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUS3_cast


def itkIsoDataThresholdImageFilterISS2ISS2_New():
    return itkIsoDataThresholdImageFilterISS2ISS2.New()

class itkIsoDataThresholdImageFilterISS2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2ISS2_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterISS2ISS2

        Create a new object of the class itkIsoDataThresholdImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterISS2ISS2 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2ISS2_swigregister(itkIsoDataThresholdImageFilterISS2ISS2)
itkIsoDataThresholdImageFilterISS2ISS2___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2ISS2___New_orig__
itkIsoDataThresholdImageFilterISS2ISS2_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2ISS2_cast


def itkIsoDataThresholdImageFilterISS2IUC2_New():
    return itkIsoDataThresholdImageFilterISS2IUC2.New()

class itkIsoDataThresholdImageFilterISS2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUC2_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterISS2IUC2
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterISS2IUC2

        Create a new object of the class itkIsoDataThresholdImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterISS2IUC2 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUC2_swigregister(itkIsoDataThresholdImageFilterISS2IUC2)
itkIsoDataThresholdImageFilterISS2IUC2___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUC2___New_orig__
itkIsoDataThresholdImageFilterISS2IUC2_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUC2_cast


def itkIsoDataThresholdImageFilterISS2IUS2_New():
    return itkIsoDataThresholdImageFilterISS2IUS2.New()

class itkIsoDataThresholdImageFilterISS2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUS2_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterISS2IUS2
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterISS2IUS2

        Create a new object of the class itkIsoDataThresholdImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterISS2IUS2 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUS2_swigregister(itkIsoDataThresholdImageFilterISS2IUS2)
itkIsoDataThresholdImageFilterISS2IUS2___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUS2___New_orig__
itkIsoDataThresholdImageFilterISS2IUS2_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUS2_cast


def itkIsoDataThresholdImageFilterISS3ISS3_New():
    return itkIsoDataThresholdImageFilterISS3ISS3.New()

class itkIsoDataThresholdImageFilterISS3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3ISS3_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterISS3ISS3

        Create a new object of the class itkIsoDataThresholdImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterISS3ISS3 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3ISS3_swigregister(itkIsoDataThresholdImageFilterISS3ISS3)
itkIsoDataThresholdImageFilterISS3ISS3___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3ISS3___New_orig__
itkIsoDataThresholdImageFilterISS3ISS3_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3ISS3_cast


def itkIsoDataThresholdImageFilterISS3IUC3_New():
    return itkIsoDataThresholdImageFilterISS3IUC3.New()

class itkIsoDataThresholdImageFilterISS3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUC3_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterISS3IUC3
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterISS3IUC3

        Create a new object of the class itkIsoDataThresholdImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterISS3IUC3 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUC3_swigregister(itkIsoDataThresholdImageFilterISS3IUC3)
itkIsoDataThresholdImageFilterISS3IUC3___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUC3___New_orig__
itkIsoDataThresholdImageFilterISS3IUC3_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUC3_cast


def itkIsoDataThresholdImageFilterISS3IUS3_New():
    return itkIsoDataThresholdImageFilterISS3IUS3.New()

class itkIsoDataThresholdImageFilterISS3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUS3_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterISS3IUS3
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterISS3IUS3

        Create a new object of the class itkIsoDataThresholdImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterISS3IUS3 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUS3_swigregister(itkIsoDataThresholdImageFilterISS3IUS3)
itkIsoDataThresholdImageFilterISS3IUS3___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUS3___New_orig__
itkIsoDataThresholdImageFilterISS3IUS3_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUS3_cast


def itkIsoDataThresholdImageFilterIUC2ISS2_New():
    return itkIsoDataThresholdImageFilterIUC2ISS2.New()

class itkIsoDataThresholdImageFilterIUC2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2ISS2_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUC2ISS2
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUC2ISS2

        Create a new object of the class itkIsoDataThresholdImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterIUC2ISS2 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2ISS2_swigregister(itkIsoDataThresholdImageFilterIUC2ISS2)
itkIsoDataThresholdImageFilterIUC2ISS2___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2ISS2___New_orig__
itkIsoDataThresholdImageFilterIUC2ISS2_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2ISS2_cast


def itkIsoDataThresholdImageFilterIUC2IUC2_New():
    return itkIsoDataThresholdImageFilterIUC2IUC2.New()

class itkIsoDataThresholdImageFilterIUC2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUC2_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUC2IUC2

        Create a new object of the class itkIsoDataThresholdImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterIUC2IUC2 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUC2_swigregister(itkIsoDataThresholdImageFilterIUC2IUC2)
itkIsoDataThresholdImageFilterIUC2IUC2___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUC2___New_orig__
itkIsoDataThresholdImageFilterIUC2IUC2_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUC2_cast


def itkIsoDataThresholdImageFilterIUC2IUS2_New():
    return itkIsoDataThresholdImageFilterIUC2IUS2.New()

class itkIsoDataThresholdImageFilterIUC2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUS2_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUC2IUS2
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUC2IUS2

        Create a new object of the class itkIsoDataThresholdImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterIUC2IUS2 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUS2_swigregister(itkIsoDataThresholdImageFilterIUC2IUS2)
itkIsoDataThresholdImageFilterIUC2IUS2___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUS2___New_orig__
itkIsoDataThresholdImageFilterIUC2IUS2_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUS2_cast


def itkIsoDataThresholdImageFilterIUC3ISS3_New():
    return itkIsoDataThresholdImageFilterIUC3ISS3.New()

class itkIsoDataThresholdImageFilterIUC3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3ISS3_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUC3ISS3
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUC3ISS3

        Create a new object of the class itkIsoDataThresholdImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterIUC3ISS3 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3ISS3_swigregister(itkIsoDataThresholdImageFilterIUC3ISS3)
itkIsoDataThresholdImageFilterIUC3ISS3___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3ISS3___New_orig__
itkIsoDataThresholdImageFilterIUC3ISS3_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3ISS3_cast


def itkIsoDataThresholdImageFilterIUC3IUC3_New():
    return itkIsoDataThresholdImageFilterIUC3IUC3.New()

class itkIsoDataThresholdImageFilterIUC3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUC3_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUC3IUC3

        Create a new object of the class itkIsoDataThresholdImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterIUC3IUC3 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUC3_swigregister(itkIsoDataThresholdImageFilterIUC3IUC3)
itkIsoDataThresholdImageFilterIUC3IUC3___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUC3___New_orig__
itkIsoDataThresholdImageFilterIUC3IUC3_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUC3_cast


def itkIsoDataThresholdImageFilterIUC3IUS3_New():
    return itkIsoDataThresholdImageFilterIUC3IUS3.New()

class itkIsoDataThresholdImageFilterIUC3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUS3_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUC3IUS3
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUC3IUS3

        Create a new object of the class itkIsoDataThresholdImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterIUC3IUS3 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUS3_swigregister(itkIsoDataThresholdImageFilterIUC3IUS3)
itkIsoDataThresholdImageFilterIUC3IUS3___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUS3___New_orig__
itkIsoDataThresholdImageFilterIUC3IUS3_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUS3_cast


def itkIsoDataThresholdImageFilterIUS2ISS2_New():
    return itkIsoDataThresholdImageFilterIUS2ISS2.New()

class itkIsoDataThresholdImageFilterIUS2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2ISS2_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUS2ISS2
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUS2ISS2

        Create a new object of the class itkIsoDataThresholdImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterIUS2ISS2 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2ISS2_swigregister(itkIsoDataThresholdImageFilterIUS2ISS2)
itkIsoDataThresholdImageFilterIUS2ISS2___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2ISS2___New_orig__
itkIsoDataThresholdImageFilterIUS2ISS2_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2ISS2_cast


def itkIsoDataThresholdImageFilterIUS2IUC2_New():
    return itkIsoDataThresholdImageFilterIUS2IUC2.New()

class itkIsoDataThresholdImageFilterIUS2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2IUC2_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUS2IUC2
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUS2IUC2

        Create a new object of the class itkIsoDataThresholdImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterIUS2IUC2 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2IUC2_swigregister(itkIsoDataThresholdImageFilterIUS2IUC2)
itkIsoDataThresholdImageFilterIUS2IUC2___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2IUC2___New_orig__
itkIsoDataThresholdImageFilterIUS2IUC2_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2IUC2_cast


def itkIsoDataThresholdImageFilterIUS2IUS2_New():
    return itkIsoDataThresholdImageFilterIUS2IUS2.New()

class itkIsoDataThresholdImageFilterIUS2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2IUS2_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUS2IUS2

        Create a new object of the class itkIsoDataThresholdImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterIUS2IUS2 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2IUS2_swigregister(itkIsoDataThresholdImageFilterIUS2IUS2)
itkIsoDataThresholdImageFilterIUS2IUS2___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2IUS2___New_orig__
itkIsoDataThresholdImageFilterIUS2IUS2_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS2IUS2_cast


def itkIsoDataThresholdImageFilterIUS3ISS3_New():
    return itkIsoDataThresholdImageFilterIUS3ISS3.New()

class itkIsoDataThresholdImageFilterIUS3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3ISS3_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUS3ISS3
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUS3ISS3

        Create a new object of the class itkIsoDataThresholdImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterIUS3ISS3 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3ISS3_swigregister(itkIsoDataThresholdImageFilterIUS3ISS3)
itkIsoDataThresholdImageFilterIUS3ISS3___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3ISS3___New_orig__
itkIsoDataThresholdImageFilterIUS3ISS3_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3ISS3_cast


def itkIsoDataThresholdImageFilterIUS3IUC3_New():
    return itkIsoDataThresholdImageFilterIUS3IUC3.New()

class itkIsoDataThresholdImageFilterIUS3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3IUC3_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUS3IUC3
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUS3IUC3

        Create a new object of the class itkIsoDataThresholdImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterIUS3IUC3 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3IUC3_swigregister(itkIsoDataThresholdImageFilterIUS3IUC3)
itkIsoDataThresholdImageFilterIUS3IUC3___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3IUC3___New_orig__
itkIsoDataThresholdImageFilterIUS3IUC3_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3IUC3_cast


def itkIsoDataThresholdImageFilterIUS3IUS3_New():
    return itkIsoDataThresholdImageFilterIUS3IUS3.New()

class itkIsoDataThresholdImageFilterIUS3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3):
    r"""


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3IUS3_Clone)
    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUS3IUS3

        Create a new object of the class itkIsoDataThresholdImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdImageFilterIUS3IUS3 in _itkIsoDataThresholdImageFilterPython:
_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3IUS3_swigregister(itkIsoDataThresholdImageFilterIUS3IUS3)
itkIsoDataThresholdImageFilterIUS3IUS3___New_orig__ = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3IUS3___New_orig__
itkIsoDataThresholdImageFilterIUS3IUS3_cast = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def iso_data_threshold_image_filter(*args, **kwargs):
    """Procedural interface for IsoDataThresholdImageFilter"""
    import itk
    instance = itk.IsoDataThresholdImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def iso_data_threshold_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.IsoDataThresholdImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.IsoDataThresholdImageFilter.values()[0]
    else:
        filter_object = itk.IsoDataThresholdImageFilter

    iso_data_threshold_image_filter.__doc__ = filter_object.__doc__
    iso_data_threshold_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    iso_data_threshold_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.IsoDataThresholdImageFilter, itkTemplate.itkTemplate):
        iso_data_threshold_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        iso_data_threshold_image_filter.__doc__ += "\n"
        iso_data_threshold_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        iso_data_threshold_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



