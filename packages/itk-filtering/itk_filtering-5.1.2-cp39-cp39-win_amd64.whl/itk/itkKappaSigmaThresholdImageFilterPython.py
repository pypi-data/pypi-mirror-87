# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKThresholdingPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkKappaSigmaThresholdImageFilterPython
else:
    import _itkKappaSigmaThresholdImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkKappaSigmaThresholdImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkKappaSigmaThresholdImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkPointPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkSymmetricSecondRankTensorPython
import itk.ITKCommonBasePython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkRGBPixelPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython

def itkKappaSigmaThresholdImageFilterID2ISS2_New():
    return itkKappaSigmaThresholdImageFilterID2ISS2.New()

class itkKappaSigmaThresholdImageFilterID2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2ISS2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2ISS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2ISS2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2ISS2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2ISS2_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2ISS2_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2ISS2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2ISS2_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2ISS2_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2ISS2_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2ISS2_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2ISS2_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2ISS2_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2ISS2_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2ISS2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2ISS2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2ISS2_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterID2ISS2
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterID2ISS2

        Create a new object of the class itkKappaSigmaThresholdImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterID2ISS2 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2ISS2_swigregister(itkKappaSigmaThresholdImageFilterID2ISS2)
itkKappaSigmaThresholdImageFilterID2ISS2___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2ISS2___New_orig__
itkKappaSigmaThresholdImageFilterID2ISS2_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2ISS2_cast


def itkKappaSigmaThresholdImageFilterID2IUC2_New():
    return itkKappaSigmaThresholdImageFilterID2IUC2.New()

class itkKappaSigmaThresholdImageFilterID2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUC2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUC2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUC2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUC2_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUC2_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUC2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUC2_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUC2_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUC2_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUC2_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUC2_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUC2_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUC2_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUC2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUC2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUC2_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterID2IUC2
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterID2IUC2

        Create a new object of the class itkKappaSigmaThresholdImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterID2IUC2 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUC2_swigregister(itkKappaSigmaThresholdImageFilterID2IUC2)
itkKappaSigmaThresholdImageFilterID2IUC2___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUC2___New_orig__
itkKappaSigmaThresholdImageFilterID2IUC2_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUC2_cast


def itkKappaSigmaThresholdImageFilterID2IUS2_New():
    return itkKappaSigmaThresholdImageFilterID2IUS2.New()

class itkKappaSigmaThresholdImageFilterID2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUS2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUS2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUS2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUS2_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUS2_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUS2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUS2_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUS2_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUS2_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUS2_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUS2_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUS2_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUS2_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUS2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUS2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUS2_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterID2IUS2
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterID2IUS2

        Create a new object of the class itkKappaSigmaThresholdImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterID2IUS2 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUS2_swigregister(itkKappaSigmaThresholdImageFilterID2IUS2)
itkKappaSigmaThresholdImageFilterID2IUS2___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUS2___New_orig__
itkKappaSigmaThresholdImageFilterID2IUS2_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID2IUS2_cast


def itkKappaSigmaThresholdImageFilterID3ISS3_New():
    return itkKappaSigmaThresholdImageFilterID3ISS3.New()

class itkKappaSigmaThresholdImageFilterID3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3ISS3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3ISS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3ISS3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3ISS3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3ISS3_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3ISS3_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3ISS3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3ISS3_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3ISS3_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3ISS3_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3ISS3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3ISS3_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3ISS3_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3ISS3_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3ISS3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3ISS3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3ISS3_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterID3ISS3
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterID3ISS3

        Create a new object of the class itkKappaSigmaThresholdImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterID3ISS3 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3ISS3_swigregister(itkKappaSigmaThresholdImageFilterID3ISS3)
itkKappaSigmaThresholdImageFilterID3ISS3___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3ISS3___New_orig__
itkKappaSigmaThresholdImageFilterID3ISS3_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3ISS3_cast


def itkKappaSigmaThresholdImageFilterID3IUC3_New():
    return itkKappaSigmaThresholdImageFilterID3IUC3.New()

class itkKappaSigmaThresholdImageFilterID3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUC3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUC3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUC3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUC3_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUC3_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUC3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUC3_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUC3_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUC3_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUC3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUC3_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUC3_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUC3_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUC3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUC3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUC3_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterID3IUC3
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterID3IUC3

        Create a new object of the class itkKappaSigmaThresholdImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterID3IUC3 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUC3_swigregister(itkKappaSigmaThresholdImageFilterID3IUC3)
itkKappaSigmaThresholdImageFilterID3IUC3___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUC3___New_orig__
itkKappaSigmaThresholdImageFilterID3IUC3_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUC3_cast


def itkKappaSigmaThresholdImageFilterID3IUS3_New():
    return itkKappaSigmaThresholdImageFilterID3IUS3.New()

class itkKappaSigmaThresholdImageFilterID3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUS3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUS3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUS3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUS3_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUS3_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUS3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUS3_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUS3_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUS3_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUS3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUS3_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUS3_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUS3_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUS3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUS3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUS3_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterID3IUS3
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterID3IUS3

        Create a new object of the class itkKappaSigmaThresholdImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterID3IUS3 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUS3_swigregister(itkKappaSigmaThresholdImageFilterID3IUS3)
itkKappaSigmaThresholdImageFilterID3IUS3___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUS3___New_orig__
itkKappaSigmaThresholdImageFilterID3IUS3_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterID3IUS3_cast


def itkKappaSigmaThresholdImageFilterIF2ISS2_New():
    return itkKappaSigmaThresholdImageFilterIF2ISS2.New()

class itkKappaSigmaThresholdImageFilterIF2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2ISS2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2ISS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2ISS2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2ISS2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2ISS2_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2ISS2_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2ISS2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2ISS2_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2ISS2_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2ISS2_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2ISS2_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2ISS2_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2ISS2_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2ISS2_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2ISS2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2ISS2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2ISS2_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterIF2ISS2
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterIF2ISS2

        Create a new object of the class itkKappaSigmaThresholdImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterIF2ISS2 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2ISS2_swigregister(itkKappaSigmaThresholdImageFilterIF2ISS2)
itkKappaSigmaThresholdImageFilterIF2ISS2___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2ISS2___New_orig__
itkKappaSigmaThresholdImageFilterIF2ISS2_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2ISS2_cast


def itkKappaSigmaThresholdImageFilterIF2IUC2_New():
    return itkKappaSigmaThresholdImageFilterIF2IUC2.New()

class itkKappaSigmaThresholdImageFilterIF2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUC2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUC2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUC2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUC2_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUC2_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUC2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUC2_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUC2_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUC2_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUC2_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUC2_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUC2_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUC2_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUC2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUC2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUC2_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterIF2IUC2
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterIF2IUC2

        Create a new object of the class itkKappaSigmaThresholdImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterIF2IUC2 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUC2_swigregister(itkKappaSigmaThresholdImageFilterIF2IUC2)
itkKappaSigmaThresholdImageFilterIF2IUC2___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUC2___New_orig__
itkKappaSigmaThresholdImageFilterIF2IUC2_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUC2_cast


def itkKappaSigmaThresholdImageFilterIF2IUS2_New():
    return itkKappaSigmaThresholdImageFilterIF2IUS2.New()

class itkKappaSigmaThresholdImageFilterIF2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUS2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUS2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUS2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUS2_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUS2_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUS2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUS2_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUS2_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUS2_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUS2_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUS2_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUS2_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUS2_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUS2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUS2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUS2_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterIF2IUS2
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterIF2IUS2

        Create a new object of the class itkKappaSigmaThresholdImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterIF2IUS2 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUS2_swigregister(itkKappaSigmaThresholdImageFilterIF2IUS2)
itkKappaSigmaThresholdImageFilterIF2IUS2___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUS2___New_orig__
itkKappaSigmaThresholdImageFilterIF2IUS2_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF2IUS2_cast


def itkKappaSigmaThresholdImageFilterIF3ISS3_New():
    return itkKappaSigmaThresholdImageFilterIF3ISS3.New()

class itkKappaSigmaThresholdImageFilterIF3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3ISS3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3ISS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3ISS3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3ISS3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3ISS3_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3ISS3_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3ISS3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3ISS3_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3ISS3_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3ISS3_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3ISS3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3ISS3_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3ISS3_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3ISS3_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3ISS3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3ISS3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3ISS3_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterIF3ISS3
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterIF3ISS3

        Create a new object of the class itkKappaSigmaThresholdImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterIF3ISS3 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3ISS3_swigregister(itkKappaSigmaThresholdImageFilterIF3ISS3)
itkKappaSigmaThresholdImageFilterIF3ISS3___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3ISS3___New_orig__
itkKappaSigmaThresholdImageFilterIF3ISS3_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3ISS3_cast


def itkKappaSigmaThresholdImageFilterIF3IUC3_New():
    return itkKappaSigmaThresholdImageFilterIF3IUC3.New()

class itkKappaSigmaThresholdImageFilterIF3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUC3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUC3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUC3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUC3_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUC3_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUC3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUC3_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUC3_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUC3_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUC3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUC3_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUC3_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUC3_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUC3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUC3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUC3_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterIF3IUC3
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterIF3IUC3

        Create a new object of the class itkKappaSigmaThresholdImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterIF3IUC3 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUC3_swigregister(itkKappaSigmaThresholdImageFilterIF3IUC3)
itkKappaSigmaThresholdImageFilterIF3IUC3___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUC3___New_orig__
itkKappaSigmaThresholdImageFilterIF3IUC3_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUC3_cast


def itkKappaSigmaThresholdImageFilterIF3IUS3_New():
    return itkKappaSigmaThresholdImageFilterIF3IUS3.New()

class itkKappaSigmaThresholdImageFilterIF3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUS3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUS3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUS3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUS3_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUS3_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUS3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUS3_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUS3_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUS3_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUS3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUS3_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUS3_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUS3_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUS3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUS3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUS3_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterIF3IUS3
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterIF3IUS3

        Create a new object of the class itkKappaSigmaThresholdImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterIF3IUS3 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUS3_swigregister(itkKappaSigmaThresholdImageFilterIF3IUS3)
itkKappaSigmaThresholdImageFilterIF3IUS3___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUS3___New_orig__
itkKappaSigmaThresholdImageFilterIF3IUS3_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIF3IUS3_cast


def itkKappaSigmaThresholdImageFilterISS2ISS2_New():
    return itkKappaSigmaThresholdImageFilterISS2ISS2.New()

class itkKappaSigmaThresholdImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2ISS2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2ISS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2ISS2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2ISS2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2ISS2_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2ISS2_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2ISS2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2ISS2_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2ISS2_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2ISS2_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2ISS2_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2ISS2_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2ISS2_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2ISS2_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2ISS2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2ISS2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2ISS2_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterISS2ISS2

        Create a new object of the class itkKappaSigmaThresholdImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterISS2ISS2 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2ISS2_swigregister(itkKappaSigmaThresholdImageFilterISS2ISS2)
itkKappaSigmaThresholdImageFilterISS2ISS2___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2ISS2___New_orig__
itkKappaSigmaThresholdImageFilterISS2ISS2_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2ISS2_cast


def itkKappaSigmaThresholdImageFilterISS2IUC2_New():
    return itkKappaSigmaThresholdImageFilterISS2IUC2.New()

class itkKappaSigmaThresholdImageFilterISS2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUC2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUC2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUC2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUC2_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUC2_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUC2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUC2_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUC2_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUC2_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUC2_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUC2_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUC2_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUC2_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUC2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUC2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUC2_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterISS2IUC2
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterISS2IUC2

        Create a new object of the class itkKappaSigmaThresholdImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterISS2IUC2 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUC2_swigregister(itkKappaSigmaThresholdImageFilterISS2IUC2)
itkKappaSigmaThresholdImageFilterISS2IUC2___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUC2___New_orig__
itkKappaSigmaThresholdImageFilterISS2IUC2_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUC2_cast


def itkKappaSigmaThresholdImageFilterISS2IUS2_New():
    return itkKappaSigmaThresholdImageFilterISS2IUS2.New()

class itkKappaSigmaThresholdImageFilterISS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUS2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUS2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUS2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUS2_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUS2_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUS2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUS2_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUS2_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUS2_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUS2_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUS2_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUS2_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUS2_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUS2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUS2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUS2_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterISS2IUS2
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterISS2IUS2

        Create a new object of the class itkKappaSigmaThresholdImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterISS2IUS2 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUS2_swigregister(itkKappaSigmaThresholdImageFilterISS2IUS2)
itkKappaSigmaThresholdImageFilterISS2IUS2___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUS2___New_orig__
itkKappaSigmaThresholdImageFilterISS2IUS2_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS2IUS2_cast


def itkKappaSigmaThresholdImageFilterISS3ISS3_New():
    return itkKappaSigmaThresholdImageFilterISS3ISS3.New()

class itkKappaSigmaThresholdImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3ISS3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3ISS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3ISS3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3ISS3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3ISS3_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3ISS3_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3ISS3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3ISS3_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3ISS3_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3ISS3_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3ISS3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3ISS3_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3ISS3_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3ISS3_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3ISS3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3ISS3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3ISS3_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterISS3ISS3

        Create a new object of the class itkKappaSigmaThresholdImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterISS3ISS3 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3ISS3_swigregister(itkKappaSigmaThresholdImageFilterISS3ISS3)
itkKappaSigmaThresholdImageFilterISS3ISS3___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3ISS3___New_orig__
itkKappaSigmaThresholdImageFilterISS3ISS3_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3ISS3_cast


def itkKappaSigmaThresholdImageFilterISS3IUC3_New():
    return itkKappaSigmaThresholdImageFilterISS3IUC3.New()

class itkKappaSigmaThresholdImageFilterISS3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUC3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUC3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUC3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUC3_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUC3_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUC3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUC3_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUC3_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUC3_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUC3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUC3_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUC3_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUC3_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUC3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUC3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUC3_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterISS3IUC3
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterISS3IUC3

        Create a new object of the class itkKappaSigmaThresholdImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterISS3IUC3 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUC3_swigregister(itkKappaSigmaThresholdImageFilterISS3IUC3)
itkKappaSigmaThresholdImageFilterISS3IUC3___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUC3___New_orig__
itkKappaSigmaThresholdImageFilterISS3IUC3_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUC3_cast


def itkKappaSigmaThresholdImageFilterISS3IUS3_New():
    return itkKappaSigmaThresholdImageFilterISS3IUS3.New()

class itkKappaSigmaThresholdImageFilterISS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUS3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUS3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUS3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUS3_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUS3_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUS3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUS3_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUS3_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUS3_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUS3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUS3_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUS3_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUS3_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUS3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUS3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUS3_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterISS3IUS3
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterISS3IUS3

        Create a new object of the class itkKappaSigmaThresholdImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterISS3IUS3 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUS3_swigregister(itkKappaSigmaThresholdImageFilterISS3IUS3)
itkKappaSigmaThresholdImageFilterISS3IUS3___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUS3___New_orig__
itkKappaSigmaThresholdImageFilterISS3IUS3_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterISS3IUS3_cast


def itkKappaSigmaThresholdImageFilterIUC2ISS2_New():
    return itkKappaSigmaThresholdImageFilterIUC2ISS2.New()

class itkKappaSigmaThresholdImageFilterIUC2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2ISS2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2ISS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2ISS2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2ISS2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2ISS2_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2ISS2_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2ISS2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2ISS2_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2ISS2_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2ISS2_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2ISS2_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2ISS2_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2ISS2_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2ISS2_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2ISS2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2ISS2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2ISS2_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterIUC2ISS2
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterIUC2ISS2

        Create a new object of the class itkKappaSigmaThresholdImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterIUC2ISS2 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2ISS2_swigregister(itkKappaSigmaThresholdImageFilterIUC2ISS2)
itkKappaSigmaThresholdImageFilterIUC2ISS2___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2ISS2___New_orig__
itkKappaSigmaThresholdImageFilterIUC2ISS2_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2ISS2_cast


def itkKappaSigmaThresholdImageFilterIUC2IUC2_New():
    return itkKappaSigmaThresholdImageFilterIUC2IUC2.New()

class itkKappaSigmaThresholdImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUC2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUC2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUC2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUC2_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUC2_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUC2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUC2_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUC2_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUC2_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUC2_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUC2_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUC2_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUC2_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUC2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUC2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUC2_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterIUC2IUC2

        Create a new object of the class itkKappaSigmaThresholdImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterIUC2IUC2 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUC2_swigregister(itkKappaSigmaThresholdImageFilterIUC2IUC2)
itkKappaSigmaThresholdImageFilterIUC2IUC2___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUC2___New_orig__
itkKappaSigmaThresholdImageFilterIUC2IUC2_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUC2_cast


def itkKappaSigmaThresholdImageFilterIUC2IUS2_New():
    return itkKappaSigmaThresholdImageFilterIUC2IUS2.New()

class itkKappaSigmaThresholdImageFilterIUC2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUS2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUS2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUS2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUS2_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUS2_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUS2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUS2_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUS2_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUS2_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUS2_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUS2_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUS2_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUS2_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUS2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUS2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUS2_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterIUC2IUS2
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterIUC2IUS2

        Create a new object of the class itkKappaSigmaThresholdImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterIUC2IUS2 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUS2_swigregister(itkKappaSigmaThresholdImageFilterIUC2IUS2)
itkKappaSigmaThresholdImageFilterIUC2IUS2___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUS2___New_orig__
itkKappaSigmaThresholdImageFilterIUC2IUS2_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC2IUS2_cast


def itkKappaSigmaThresholdImageFilterIUC3ISS3_New():
    return itkKappaSigmaThresholdImageFilterIUC3ISS3.New()

class itkKappaSigmaThresholdImageFilterIUC3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3ISS3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3ISS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3ISS3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3ISS3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3ISS3_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3ISS3_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3ISS3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3ISS3_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3ISS3_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3ISS3_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3ISS3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3ISS3_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3ISS3_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3ISS3_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3ISS3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3ISS3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3ISS3_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterIUC3ISS3
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterIUC3ISS3

        Create a new object of the class itkKappaSigmaThresholdImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterIUC3ISS3 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3ISS3_swigregister(itkKappaSigmaThresholdImageFilterIUC3ISS3)
itkKappaSigmaThresholdImageFilterIUC3ISS3___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3ISS3___New_orig__
itkKappaSigmaThresholdImageFilterIUC3ISS3_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3ISS3_cast


def itkKappaSigmaThresholdImageFilterIUC3IUC3_New():
    return itkKappaSigmaThresholdImageFilterIUC3IUC3.New()

class itkKappaSigmaThresholdImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUC3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUC3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUC3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUC3_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUC3_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUC3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUC3_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUC3_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUC3_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUC3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUC3_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUC3_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUC3_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUC3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUC3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUC3_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterIUC3IUC3

        Create a new object of the class itkKappaSigmaThresholdImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterIUC3IUC3 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUC3_swigregister(itkKappaSigmaThresholdImageFilterIUC3IUC3)
itkKappaSigmaThresholdImageFilterIUC3IUC3___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUC3___New_orig__
itkKappaSigmaThresholdImageFilterIUC3IUC3_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUC3_cast


def itkKappaSigmaThresholdImageFilterIUC3IUS3_New():
    return itkKappaSigmaThresholdImageFilterIUC3IUS3.New()

class itkKappaSigmaThresholdImageFilterIUC3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUS3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUS3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUS3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUS3_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUS3_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUS3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUS3_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUS3_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUS3_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUS3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUS3_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUS3_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUS3_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUS3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUS3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUS3_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterIUC3IUS3
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterIUC3IUS3

        Create a new object of the class itkKappaSigmaThresholdImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterIUC3IUS3 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUS3_swigregister(itkKappaSigmaThresholdImageFilterIUC3IUS3)
itkKappaSigmaThresholdImageFilterIUC3IUS3___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUS3___New_orig__
itkKappaSigmaThresholdImageFilterIUC3IUS3_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUC3IUS3_cast


def itkKappaSigmaThresholdImageFilterIUS2ISS2_New():
    return itkKappaSigmaThresholdImageFilterIUS2ISS2.New()

class itkKappaSigmaThresholdImageFilterIUS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2ISS2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2ISS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2ISS2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2ISS2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2ISS2_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2ISS2_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2ISS2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2ISS2_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2ISS2_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2ISS2_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2ISS2_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2ISS2_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2ISS2_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2ISS2_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2ISS2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2ISS2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2ISS2_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterIUS2ISS2
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterIUS2ISS2

        Create a new object of the class itkKappaSigmaThresholdImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterIUS2ISS2 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2ISS2_swigregister(itkKappaSigmaThresholdImageFilterIUS2ISS2)
itkKappaSigmaThresholdImageFilterIUS2ISS2___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2ISS2___New_orig__
itkKappaSigmaThresholdImageFilterIUS2ISS2_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2ISS2_cast


def itkKappaSigmaThresholdImageFilterIUS2IUC2_New():
    return itkKappaSigmaThresholdImageFilterIUS2IUC2.New()

class itkKappaSigmaThresholdImageFilterIUS2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUC2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUC2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUC2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUC2_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUC2_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUC2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUC2_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUC2_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUC2_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUC2_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUC2_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUC2_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUC2_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUC2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUC2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUC2_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterIUS2IUC2
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterIUS2IUC2

        Create a new object of the class itkKappaSigmaThresholdImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterIUS2IUC2 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUC2_swigregister(itkKappaSigmaThresholdImageFilterIUS2IUC2)
itkKappaSigmaThresholdImageFilterIUS2IUC2___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUC2___New_orig__
itkKappaSigmaThresholdImageFilterIUS2IUC2_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUC2_cast


def itkKappaSigmaThresholdImageFilterIUS2IUS2_New():
    return itkKappaSigmaThresholdImageFilterIUS2IUS2.New()

class itkKappaSigmaThresholdImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUS2_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUS2_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUS2_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUS2_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUS2_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUS2_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUS2_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUS2_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUS2_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUS2_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUS2_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUS2_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUS2_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUS2_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUS2_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUS2_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterIUS2IUS2

        Create a new object of the class itkKappaSigmaThresholdImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterIUS2IUS2 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUS2_swigregister(itkKappaSigmaThresholdImageFilterIUS2IUS2)
itkKappaSigmaThresholdImageFilterIUS2IUS2___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUS2___New_orig__
itkKappaSigmaThresholdImageFilterIUS2IUS2_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS2IUS2_cast


def itkKappaSigmaThresholdImageFilterIUS3ISS3_New():
    return itkKappaSigmaThresholdImageFilterIUS3ISS3.New()

class itkKappaSigmaThresholdImageFilterIUS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3ISS3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3ISS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3ISS3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3ISS3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3ISS3_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3ISS3_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3ISS3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3ISS3_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3ISS3_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3ISS3_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3ISS3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3ISS3_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3ISS3_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3ISS3_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3ISS3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3ISS3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3ISS3_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterIUS3ISS3
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterIUS3ISS3

        Create a new object of the class itkKappaSigmaThresholdImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterIUS3ISS3 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3ISS3_swigregister(itkKappaSigmaThresholdImageFilterIUS3ISS3)
itkKappaSigmaThresholdImageFilterIUS3ISS3___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3ISS3___New_orig__
itkKappaSigmaThresholdImageFilterIUS3ISS3_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3ISS3_cast


def itkKappaSigmaThresholdImageFilterIUS3IUC3_New():
    return itkKappaSigmaThresholdImageFilterIUS3IUC3.New()

class itkKappaSigmaThresholdImageFilterIUS3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUC3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUC3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUC3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUC3_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUC3_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUC3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUC3_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUC3_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUC3_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUC3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUC3_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUC3_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUC3_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUC3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUC3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUC3_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterIUS3IUC3
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterIUS3IUC3

        Create a new object of the class itkKappaSigmaThresholdImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterIUS3IUC3 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUC3_swigregister(itkKappaSigmaThresholdImageFilterIUS3IUC3)
itkKappaSigmaThresholdImageFilterIUS3IUC3___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUC3___New_orig__
itkKappaSigmaThresholdImageFilterIUS3IUC3_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUC3_cast


def itkKappaSigmaThresholdImageFilterIUS3IUS3_New():
    return itkKappaSigmaThresholdImageFilterIUS3IUS3.New()

class itkKappaSigmaThresholdImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""


    Threshold an image using Kappa-Sigma-Clipping.

    This filter creates a binary thresholded image which separates
    background and foreground modes by iteratively rejecting pixels that
    do not belong to the dominant mode. The filter computes the threshold
    using the KappaSigmaThre- sholdImageCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Gaetan Lehmann

    This class was taken from the Insight Journal
    paper:https://hdl.handle.net/1926/367

    See:  KappaSigmaThresholdImageCalculator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUS3_Clone)
    SetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUS3_GetOutsideValue)
    SetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUS3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUS3_GetInsideValue)
    GetThreshold = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUS3_GetThreshold)
    SetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUS3_SetMaskValue)
    GetMaskValue = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUS3_GetMaskValue)
    SetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUS3_SetSigmaFactor)
    GetSigmaFactor = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUS3_GetSigmaFactor)
    SetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUS3_SetNumberOfIterations)
    GetNumberOfIterations = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUS3_GetNumberOfIterations)
    OutputComparableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUS3_OutputComparableCheck
    
    OutputOStreamWritableCheck = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUS3_OutputOStreamWritableCheck
    
    SetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUS3_GetMaskImage)
    SetInput1 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUS3_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUS3_SetInput2)
    __swig_destroy__ = _itkKappaSigmaThresholdImageFilterPython.delete_itkKappaSigmaThresholdImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkKappaSigmaThresholdImageFilterIUS3IUS3

        Create a new object of the class itkKappaSigmaThresholdImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKappaSigmaThresholdImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKappaSigmaThresholdImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKappaSigmaThresholdImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKappaSigmaThresholdImageFilterIUS3IUS3 in _itkKappaSigmaThresholdImageFilterPython:
_itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUS3_swigregister(itkKappaSigmaThresholdImageFilterIUS3IUS3)
itkKappaSigmaThresholdImageFilterIUS3IUS3___New_orig__ = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUS3___New_orig__
itkKappaSigmaThresholdImageFilterIUS3IUS3_cast = _itkKappaSigmaThresholdImageFilterPython.itkKappaSigmaThresholdImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def kappa_sigma_threshold_image_filter(*args, **kwargs):
    """Procedural interface for KappaSigmaThresholdImageFilter"""
    import itk
    instance = itk.KappaSigmaThresholdImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def kappa_sigma_threshold_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.KappaSigmaThresholdImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.KappaSigmaThresholdImageFilter.values()[0]
    else:
        filter_object = itk.KappaSigmaThresholdImageFilter

    kappa_sigma_threshold_image_filter.__doc__ = filter_object.__doc__
    kappa_sigma_threshold_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    kappa_sigma_threshold_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.KappaSigmaThresholdImageFilter, itkTemplate.itkTemplate):
        kappa_sigma_threshold_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        kappa_sigma_threshold_image_filter.__doc__ += "\n"
        kappa_sigma_threshold_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        kappa_sigma_threshold_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



