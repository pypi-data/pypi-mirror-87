# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: base.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='base.proto',
  package='ansys.api.dpf.base.v0',
  syntax='proto3',
  serialized_options=_b('\252\002\025Ansys.Api.Dpf.Base.V0'),
  serialized_pb=_b('\n\nbase.proto\x12\x15\x61nsys.api.dpf.base.v0\"\x07\n\x05\x45mpty\"\"\n\x0c\x44oubleVector\x12\x12\n\nrep_double\x18\x01 \x03(\x01\" \n\x0b\x46loatVector\x12\x11\n\trep_float\x18\x01 \x03(\x02\"\x1c\n\tIntVector\x12\x0f\n\x07rep_int\x18\x01 \x03(\x05\"4\n\x03Ids\x12-\n\x03ids\x18\x01 \x01(\x0b\x32 .ansys.api.dpf.base.v0.IntVector\"\x1c\n\x08Location\x12\x10\n\x08location\x18\x01 \x01(\t\"\x1e\n\rCountResponse\x12\r\n\x05\x63ount\x18\x01 \x01(\x05\">\n\rPluginRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07\x64llPath\x18\x02 \x01(\t\x12\x0e\n\x06symbol\x18\x03 \x01(\t*G\n\x0b\x43ountEntity\x12\x11\n\rNUM_COMPONENT\x10\x00\x12\x17\n\x13NUM_ELEMENTARY_DATA\x10\x01\x12\x0c\n\x08NUM_SETS\x10\x02*\"\n\x07\x43omplex\x12\x08\n\x04REAL\x10\x00\x12\r\n\tIMAGINARY\x10\x01*/\n\x06Nature\x12\n\n\x06SCALAR\x10\x00\x12\n\n\x06VECTOR\x10\x01\x12\r\n\tSYMMATRIX\x10\x05*\xa5\x01\n\x04Type\x12\n\n\x06STRING\x10\x00\x12\x07\n\x03INT\x10\x01\x12\n\n\x06\x44OUBLE\x10\x02\x12\t\n\x05\x46IELD\x10\x03\x12\x0e\n\nCOLLECTION\x10\x04\x12\x0b\n\x07SCOPING\x10\x05\x12\x10\n\x0c\x44\x41TA_SOURCES\x10\x06\x12\x11\n\rMESHED_REGION\x10\x07\x12\x15\n\x11TIME_FREQ_SUPPORT\x10\x08\x12\x0f\n\x0bRESULT_INFO\x10\t\x12\x07\n\x03RUN\x10\n2Y\n\x0b\x42\x61seService\x12J\n\x04Load\x12$.ansys.api.dpf.base.v0.PluginRequest\x1a\x1c.ansys.api.dpf.base.v0.EmptyB\x18\xaa\x02\x15\x41nsys.Api.Dpf.Base.V0b\x06proto3')
)

_COUNTENTITY = _descriptor.EnumDescriptor(
  name='CountEntity',
  full_name='ansys.api.dpf.base.v0.CountEntity',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NUM_COMPONENT', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NUM_ELEMENTARY_DATA', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NUM_SETS', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=326,
  serialized_end=397,
)
_sym_db.RegisterEnumDescriptor(_COUNTENTITY)

CountEntity = enum_type_wrapper.EnumTypeWrapper(_COUNTENTITY)
_COMPLEX = _descriptor.EnumDescriptor(
  name='Complex',
  full_name='ansys.api.dpf.base.v0.Complex',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='REAL', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IMAGINARY', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=399,
  serialized_end=433,
)
_sym_db.RegisterEnumDescriptor(_COMPLEX)

Complex = enum_type_wrapper.EnumTypeWrapper(_COMPLEX)
_NATURE = _descriptor.EnumDescriptor(
  name='Nature',
  full_name='ansys.api.dpf.base.v0.Nature',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SCALAR', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VECTOR', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SYMMATRIX', index=2, number=5,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=435,
  serialized_end=482,
)
_sym_db.RegisterEnumDescriptor(_NATURE)

Nature = enum_type_wrapper.EnumTypeWrapper(_NATURE)
_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='ansys.api.dpf.base.v0.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='STRING', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INT', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DOUBLE', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FIELD', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COLLECTION', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SCOPING', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DATA_SOURCES', index=6, number=6,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MESHED_REGION', index=7, number=7,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TIME_FREQ_SUPPORT', index=8, number=8,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RESULT_INFO', index=9, number=9,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RUN', index=10, number=10,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=485,
  serialized_end=650,
)
_sym_db.RegisterEnumDescriptor(_TYPE)

Type = enum_type_wrapper.EnumTypeWrapper(_TYPE)
NUM_COMPONENT = 0
NUM_ELEMENTARY_DATA = 1
NUM_SETS = 2
REAL = 0
IMAGINARY = 1
SCALAR = 0
VECTOR = 1
SYMMATRIX = 5
STRING = 0
INT = 1
DOUBLE = 2
FIELD = 3
COLLECTION = 4
SCOPING = 5
DATA_SOURCES = 6
MESHED_REGION = 7
TIME_FREQ_SUPPORT = 8
RESULT_INFO = 9
RUN = 10



_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='ansys.api.dpf.base.v0.Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=37,
  serialized_end=44,
)


_DOUBLEVECTOR = _descriptor.Descriptor(
  name='DoubleVector',
  full_name='ansys.api.dpf.base.v0.DoubleVector',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rep_double', full_name='ansys.api.dpf.base.v0.DoubleVector.rep_double', index=0,
      number=1, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=46,
  serialized_end=80,
)


_FLOATVECTOR = _descriptor.Descriptor(
  name='FloatVector',
  full_name='ansys.api.dpf.base.v0.FloatVector',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rep_float', full_name='ansys.api.dpf.base.v0.FloatVector.rep_float', index=0,
      number=1, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=82,
  serialized_end=114,
)


_INTVECTOR = _descriptor.Descriptor(
  name='IntVector',
  full_name='ansys.api.dpf.base.v0.IntVector',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rep_int', full_name='ansys.api.dpf.base.v0.IntVector.rep_int', index=0,
      number=1, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=116,
  serialized_end=144,
)


_IDS = _descriptor.Descriptor(
  name='Ids',
  full_name='ansys.api.dpf.base.v0.Ids',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ids', full_name='ansys.api.dpf.base.v0.Ids.ids', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=146,
  serialized_end=198,
)


_LOCATION = _descriptor.Descriptor(
  name='Location',
  full_name='ansys.api.dpf.base.v0.Location',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='location', full_name='ansys.api.dpf.base.v0.Location.location', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=200,
  serialized_end=228,
)


_COUNTRESPONSE = _descriptor.Descriptor(
  name='CountResponse',
  full_name='ansys.api.dpf.base.v0.CountResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='count', full_name='ansys.api.dpf.base.v0.CountResponse.count', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=230,
  serialized_end=260,
)


_PLUGINREQUEST = _descriptor.Descriptor(
  name='PluginRequest',
  full_name='ansys.api.dpf.base.v0.PluginRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='ansys.api.dpf.base.v0.PluginRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dllPath', full_name='ansys.api.dpf.base.v0.PluginRequest.dllPath', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='symbol', full_name='ansys.api.dpf.base.v0.PluginRequest.symbol', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=262,
  serialized_end=324,
)

_IDS.fields_by_name['ids'].message_type = _INTVECTOR
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
DESCRIPTOR.message_types_by_name['DoubleVector'] = _DOUBLEVECTOR
DESCRIPTOR.message_types_by_name['FloatVector'] = _FLOATVECTOR
DESCRIPTOR.message_types_by_name['IntVector'] = _INTVECTOR
DESCRIPTOR.message_types_by_name['Ids'] = _IDS
DESCRIPTOR.message_types_by_name['Location'] = _LOCATION
DESCRIPTOR.message_types_by_name['CountResponse'] = _COUNTRESPONSE
DESCRIPTOR.message_types_by_name['PluginRequest'] = _PLUGINREQUEST
DESCRIPTOR.enum_types_by_name['CountEntity'] = _COUNTENTITY
DESCRIPTOR.enum_types_by_name['Complex'] = _COMPLEX
DESCRIPTOR.enum_types_by_name['Nature'] = _NATURE
DESCRIPTOR.enum_types_by_name['Type'] = _TYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), {
  'DESCRIPTOR' : _EMPTY,
  '__module__' : 'base_pb2'
  # @@protoc_insertion_point(class_scope:ansys.api.dpf.base.v0.Empty)
  })
_sym_db.RegisterMessage(Empty)

DoubleVector = _reflection.GeneratedProtocolMessageType('DoubleVector', (_message.Message,), {
  'DESCRIPTOR' : _DOUBLEVECTOR,
  '__module__' : 'base_pb2'
  # @@protoc_insertion_point(class_scope:ansys.api.dpf.base.v0.DoubleVector)
  })
_sym_db.RegisterMessage(DoubleVector)

FloatVector = _reflection.GeneratedProtocolMessageType('FloatVector', (_message.Message,), {
  'DESCRIPTOR' : _FLOATVECTOR,
  '__module__' : 'base_pb2'
  # @@protoc_insertion_point(class_scope:ansys.api.dpf.base.v0.FloatVector)
  })
_sym_db.RegisterMessage(FloatVector)

IntVector = _reflection.GeneratedProtocolMessageType('IntVector', (_message.Message,), {
  'DESCRIPTOR' : _INTVECTOR,
  '__module__' : 'base_pb2'
  # @@protoc_insertion_point(class_scope:ansys.api.dpf.base.v0.IntVector)
  })
_sym_db.RegisterMessage(IntVector)

Ids = _reflection.GeneratedProtocolMessageType('Ids', (_message.Message,), {
  'DESCRIPTOR' : _IDS,
  '__module__' : 'base_pb2'
  # @@protoc_insertion_point(class_scope:ansys.api.dpf.base.v0.Ids)
  })
_sym_db.RegisterMessage(Ids)

Location = _reflection.GeneratedProtocolMessageType('Location', (_message.Message,), {
  'DESCRIPTOR' : _LOCATION,
  '__module__' : 'base_pb2'
  # @@protoc_insertion_point(class_scope:ansys.api.dpf.base.v0.Location)
  })
_sym_db.RegisterMessage(Location)

CountResponse = _reflection.GeneratedProtocolMessageType('CountResponse', (_message.Message,), {
  'DESCRIPTOR' : _COUNTRESPONSE,
  '__module__' : 'base_pb2'
  # @@protoc_insertion_point(class_scope:ansys.api.dpf.base.v0.CountResponse)
  })
_sym_db.RegisterMessage(CountResponse)

PluginRequest = _reflection.GeneratedProtocolMessageType('PluginRequest', (_message.Message,), {
  'DESCRIPTOR' : _PLUGINREQUEST,
  '__module__' : 'base_pb2'
  # @@protoc_insertion_point(class_scope:ansys.api.dpf.base.v0.PluginRequest)
  })
_sym_db.RegisterMessage(PluginRequest)


DESCRIPTOR._options = None

_BASESERVICE = _descriptor.ServiceDescriptor(
  name='BaseService',
  full_name='ansys.api.dpf.base.v0.BaseService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=652,
  serialized_end=741,
  methods=[
  _descriptor.MethodDescriptor(
    name='Load',
    full_name='ansys.api.dpf.base.v0.BaseService.Load',
    index=0,
    containing_service=None,
    input_type=_PLUGINREQUEST,
    output_type=_EMPTY,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_BASESERVICE)

DESCRIPTOR.services_by_name['BaseService'] = _BASESERVICE

# @@protoc_insertion_point(module_scope)
