# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKSpatialObjectsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSpatialObjectPointPython
else:
    import _itkSpatialObjectPointPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkSpatialObjectPointPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkSpatialObjectPointPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkPointPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkSpatialObjectBasePython
import itk.ITKCommonBasePython
import itk.itkSpatialObjectPropertyPython
import itk.itkRGBAPixelPython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageRegionPython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkTransformBasePython
import itk.itkArray2DPython
import itk.itkVariableLengthVectorPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkDiffusionTensor3DPython
class vectoritkSpatialObjectPoint2(object):
    r"""Proxy of C++ std::vector< itkSpatialObjectPoint2 > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___nonzero__)
    __bool__ = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___bool__)
    __len__ = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___len__)
    __getslice__ = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___getslice__)
    __setslice__ = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___setslice__)
    __delslice__ = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___delslice__)
    __delitem__ = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___delitem__)
    __getitem__ = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___getitem__)
    __setitem__ = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___setitem__)
    pop = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_pop)
    append = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_append)
    empty = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_empty)
    size = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_size)
    swap = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_swap)
    begin = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_begin)
    end = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_end)
    rbegin = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_rbegin)
    rend = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_rend)
    clear = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_clear)
    get_allocator = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_get_allocator)
    pop_back = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_pop_back)
    erase = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_erase)

    def __init__(self, *args):
        r"""
        __init__(vectoritkSpatialObjectPoint2 self) -> vectoritkSpatialObjectPoint2
        __init__(vectoritkSpatialObjectPoint2 self, vectoritkSpatialObjectPoint2 other) -> vectoritkSpatialObjectPoint2
        __init__(vectoritkSpatialObjectPoint2 self, std::vector< itkSpatialObjectPoint2 >::size_type size) -> vectoritkSpatialObjectPoint2
        __init__(vectoritkSpatialObjectPoint2 self, std::vector< itkSpatialObjectPoint2 >::size_type size, itkSpatialObjectPoint2 value) -> vectoritkSpatialObjectPoint2
        """
        _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_swiginit(self, _itkSpatialObjectPointPython.new_vectoritkSpatialObjectPoint2(*args))
    push_back = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_push_back)
    front = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_front)
    back = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_back)
    assign = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_assign)
    resize = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_resize)
    insert = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_insert)
    reserve = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_reserve)
    capacity = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_capacity)
    __swig_destroy__ = _itkSpatialObjectPointPython.delete_vectoritkSpatialObjectPoint2

# Register vectoritkSpatialObjectPoint2 in _itkSpatialObjectPointPython:
_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_swigregister(vectoritkSpatialObjectPoint2)

class vectoritkSpatialObjectPoint3(object):
    r"""Proxy of C++ std::vector< itkSpatialObjectPoint3 > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___nonzero__)
    __bool__ = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___bool__)
    __len__ = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___len__)
    __getslice__ = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___getslice__)
    __setslice__ = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___setslice__)
    __delslice__ = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___delslice__)
    __delitem__ = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___delitem__)
    __getitem__ = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___getitem__)
    __setitem__ = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___setitem__)
    pop = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_pop)
    append = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_append)
    empty = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_empty)
    size = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_size)
    swap = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_swap)
    begin = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_begin)
    end = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_end)
    rbegin = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_rbegin)
    rend = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_rend)
    clear = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_clear)
    get_allocator = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_get_allocator)
    pop_back = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_pop_back)
    erase = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_erase)

    def __init__(self, *args):
        r"""
        __init__(vectoritkSpatialObjectPoint3 self) -> vectoritkSpatialObjectPoint3
        __init__(vectoritkSpatialObjectPoint3 self, vectoritkSpatialObjectPoint3 other) -> vectoritkSpatialObjectPoint3
        __init__(vectoritkSpatialObjectPoint3 self, std::vector< itkSpatialObjectPoint3 >::size_type size) -> vectoritkSpatialObjectPoint3
        __init__(vectoritkSpatialObjectPoint3 self, std::vector< itkSpatialObjectPoint3 >::size_type size, itkSpatialObjectPoint3 value) -> vectoritkSpatialObjectPoint3
        """
        _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_swiginit(self, _itkSpatialObjectPointPython.new_vectoritkSpatialObjectPoint3(*args))
    push_back = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_push_back)
    front = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_front)
    back = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_back)
    assign = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_assign)
    resize = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_resize)
    insert = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_insert)
    reserve = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_reserve)
    capacity = _swig_new_instance_method(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_capacity)
    __swig_destroy__ = _itkSpatialObjectPointPython.delete_vectoritkSpatialObjectPoint3

# Register vectoritkSpatialObjectPoint3 in _itkSpatialObjectPointPython:
_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_swigregister(vectoritkSpatialObjectPoint3)

class itkSpatialObjectPoint2(object):
    r"""


    Point used for spatial objets.

    This class contains all the functions necessary to define a point

    See:   TubeSpatialObjectPoint SurfaceSpatialObjectPoint 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkSpatialObjectPointPython.delete_itkSpatialObjectPoint2
    GetNameOfClass = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetNameOfClass)
    SetId = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetId)
    GetId = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetId)
    SetPositionInObjectSpace = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetPositionInObjectSpace)
    GetPositionInObjectSpace = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetPositionInObjectSpace)
    SetSpatialObject = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetSpatialObject)
    GetSpatialObject = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetSpatialObject)
    SetPositionInWorldSpace = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetPositionInWorldSpace)
    GetPositionInWorldSpace = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetPositionInWorldSpace)
    GetColor = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetColor)
    SetColor = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetColor)
    SetRed = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetRed)
    GetRed = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetRed)
    SetGreen = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetGreen)
    GetGreen = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetGreen)
    SetBlue = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetBlue)
    GetBlue = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetBlue)
    SetAlpha = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetAlpha)
    GetAlpha = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetAlpha)
    Print = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_Print)

    def __init__(self, *args):
        r"""
        __init__(itkSpatialObjectPoint2 self) -> itkSpatialObjectPoint2
        __init__(itkSpatialObjectPoint2 self, itkSpatialObjectPoint2 arg0) -> itkSpatialObjectPoint2


        Point used for spatial objets.

        This class contains all the functions necessary to define a point

        See:   TubeSpatialObjectPoint SurfaceSpatialObjectPoint 
        """
        _itkSpatialObjectPointPython.itkSpatialObjectPoint2_swiginit(self, _itkSpatialObjectPointPython.new_itkSpatialObjectPoint2(*args))
    __str__ = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint2___str__)

# Register itkSpatialObjectPoint2 in _itkSpatialObjectPointPython:
_itkSpatialObjectPointPython.itkSpatialObjectPoint2_swigregister(itkSpatialObjectPoint2)

class itkSpatialObjectPoint3(object):
    r"""


    Point used for spatial objets.

    This class contains all the functions necessary to define a point

    See:   TubeSpatialObjectPoint SurfaceSpatialObjectPoint 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkSpatialObjectPointPython.delete_itkSpatialObjectPoint3
    GetNameOfClass = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetNameOfClass)
    SetId = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetId)
    GetId = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetId)
    SetPositionInObjectSpace = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetPositionInObjectSpace)
    GetPositionInObjectSpace = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetPositionInObjectSpace)
    SetSpatialObject = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetSpatialObject)
    GetSpatialObject = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetSpatialObject)
    SetPositionInWorldSpace = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetPositionInWorldSpace)
    GetPositionInWorldSpace = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetPositionInWorldSpace)
    GetColor = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetColor)
    SetColor = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetColor)
    SetRed = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetRed)
    GetRed = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetRed)
    SetGreen = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetGreen)
    GetGreen = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetGreen)
    SetBlue = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetBlue)
    GetBlue = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetBlue)
    SetAlpha = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetAlpha)
    GetAlpha = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetAlpha)
    Print = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_Print)

    def __init__(self, *args):
        r"""
        __init__(itkSpatialObjectPoint3 self) -> itkSpatialObjectPoint3
        __init__(itkSpatialObjectPoint3 self, itkSpatialObjectPoint3 arg0) -> itkSpatialObjectPoint3


        Point used for spatial objets.

        This class contains all the functions necessary to define a point

        See:   TubeSpatialObjectPoint SurfaceSpatialObjectPoint 
        """
        _itkSpatialObjectPointPython.itkSpatialObjectPoint3_swiginit(self, _itkSpatialObjectPointPython.new_itkSpatialObjectPoint3(*args))
    __str__ = _swig_new_instance_method(_itkSpatialObjectPointPython.itkSpatialObjectPoint3___str__)

# Register itkSpatialObjectPoint3 in _itkSpatialObjectPointPython:
_itkSpatialObjectPointPython.itkSpatialObjectPoint3_swigregister(itkSpatialObjectPoint3)



