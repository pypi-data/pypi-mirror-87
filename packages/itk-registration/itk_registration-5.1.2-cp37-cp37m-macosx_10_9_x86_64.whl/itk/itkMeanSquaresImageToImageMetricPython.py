# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKRegistrationCommonPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMeanSquaresImageToImageMetricPython
else:
    import _itkMeanSquaresImageToImageMetricPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkMeanSquaresImageToImageMetricPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkMeanSquaresImageToImageMetricPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageToImageMetricPython
import itk.itkImagePython
import itk.itkSizePython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkOffsetPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkIndexPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkInterpolateImageFunctionPython
import itk.itkImageFunctionBasePython
import itk.itkContinuousIndexPython
import itk.itkFunctionBasePython
import itk.itkArrayPython
import itk.itkSpatialObjectBasePython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkDiffusionTensor3DPython
import itk.itkArray2DPython
import itk.itkVariableLengthVectorPython
import itk.itkOptimizerParametersPython
import itk.itkTransformBasePython
import itk.itkBoundingBoxPython
import itk.itkVectorContainerPython
import itk.itkMapContainerPython
import itk.itkSpatialObjectPropertyPython
import itk.ITKCostFunctionsPython
import itk.vnl_least_squares_functionPython
import itk.vnl_cost_functionPython
import itk.vnl_unary_functionPython
import itk.itkCostFunctionPython

def itkMeanSquaresImageToImageMetricID2ID2_New():
    return itkMeanSquaresImageToImageMetricID2ID2.New()

class itkMeanSquaresImageToImageMetricID2ID2(itk.itkImageToImageMetricPython.itkImageToImageMetricID2ID2):
    r"""


    TODO.

    example{Registration/Common/ComputeMeanSquareBetweenTwoImages,Compute
    Mean Squares Metric Between Two Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID2ID2_Clone)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricID2ID2
    cast = _swig_new_static_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricID2ID2

        Create a new object of the class itkMeanSquaresImageToImageMetricID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanSquaresImageToImageMetricID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanSquaresImageToImageMetricID2ID2 in _itkMeanSquaresImageToImageMetricPython:
_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID2ID2_swigregister(itkMeanSquaresImageToImageMetricID2ID2)
itkMeanSquaresImageToImageMetricID2ID2___New_orig__ = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID2ID2___New_orig__
itkMeanSquaresImageToImageMetricID2ID2_cast = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID2ID2_cast


def itkMeanSquaresImageToImageMetricID3ID3_New():
    return itkMeanSquaresImageToImageMetricID3ID3.New()

class itkMeanSquaresImageToImageMetricID3ID3(itk.itkImageToImageMetricPython.itkImageToImageMetricID3ID3):
    r"""


    TODO.

    example{Registration/Common/ComputeMeanSquareBetweenTwoImages,Compute
    Mean Squares Metric Between Two Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID3ID3_Clone)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricID3ID3
    cast = _swig_new_static_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricID3ID3

        Create a new object of the class itkMeanSquaresImageToImageMetricID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanSquaresImageToImageMetricID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanSquaresImageToImageMetricID3ID3 in _itkMeanSquaresImageToImageMetricPython:
_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID3ID3_swigregister(itkMeanSquaresImageToImageMetricID3ID3)
itkMeanSquaresImageToImageMetricID3ID3___New_orig__ = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID3ID3___New_orig__
itkMeanSquaresImageToImageMetricID3ID3_cast = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID3ID3_cast


def itkMeanSquaresImageToImageMetricIF2IF2_New():
    return itkMeanSquaresImageToImageMetricIF2IF2.New()

class itkMeanSquaresImageToImageMetricIF2IF2(itk.itkImageToImageMetricPython.itkImageToImageMetricIF2IF2):
    r"""


    TODO.

    example{Registration/Common/ComputeMeanSquareBetweenTwoImages,Compute
    Mean Squares Metric Between Two Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2_Clone)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIF2IF2
    cast = _swig_new_static_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIF2IF2

        Create a new object of the class itkMeanSquaresImageToImageMetricIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanSquaresImageToImageMetricIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanSquaresImageToImageMetricIF2IF2 in _itkMeanSquaresImageToImageMetricPython:
_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2_swigregister(itkMeanSquaresImageToImageMetricIF2IF2)
itkMeanSquaresImageToImageMetricIF2IF2___New_orig__ = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2___New_orig__
itkMeanSquaresImageToImageMetricIF2IF2_cast = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2_cast


def itkMeanSquaresImageToImageMetricIF3IF3_New():
    return itkMeanSquaresImageToImageMetricIF3IF3.New()

class itkMeanSquaresImageToImageMetricIF3IF3(itk.itkImageToImageMetricPython.itkImageToImageMetricIF3IF3):
    r"""


    TODO.

    example{Registration/Common/ComputeMeanSquareBetweenTwoImages,Compute
    Mean Squares Metric Between Two Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3_Clone)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIF3IF3
    cast = _swig_new_static_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIF3IF3

        Create a new object of the class itkMeanSquaresImageToImageMetricIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanSquaresImageToImageMetricIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanSquaresImageToImageMetricIF3IF3 in _itkMeanSquaresImageToImageMetricPython:
_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3_swigregister(itkMeanSquaresImageToImageMetricIF3IF3)
itkMeanSquaresImageToImageMetricIF3IF3___New_orig__ = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3___New_orig__
itkMeanSquaresImageToImageMetricIF3IF3_cast = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3_cast


def itkMeanSquaresImageToImageMetricISS2ISS2_New():
    return itkMeanSquaresImageToImageMetricISS2ISS2.New()

class itkMeanSquaresImageToImageMetricISS2ISS2(itk.itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2):
    r"""


    TODO.

    example{Registration/Common/ComputeMeanSquareBetweenTwoImages,Compute
    Mean Squares Metric Between Two Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS2ISS2_Clone)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricISS2ISS2
    cast = _swig_new_static_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricISS2ISS2

        Create a new object of the class itkMeanSquaresImageToImageMetricISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanSquaresImageToImageMetricISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanSquaresImageToImageMetricISS2ISS2 in _itkMeanSquaresImageToImageMetricPython:
_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS2ISS2_swigregister(itkMeanSquaresImageToImageMetricISS2ISS2)
itkMeanSquaresImageToImageMetricISS2ISS2___New_orig__ = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS2ISS2___New_orig__
itkMeanSquaresImageToImageMetricISS2ISS2_cast = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS2ISS2_cast


def itkMeanSquaresImageToImageMetricISS3ISS3_New():
    return itkMeanSquaresImageToImageMetricISS3ISS3.New()

class itkMeanSquaresImageToImageMetricISS3ISS3(itk.itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3):
    r"""


    TODO.

    example{Registration/Common/ComputeMeanSquareBetweenTwoImages,Compute
    Mean Squares Metric Between Two Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS3ISS3_Clone)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricISS3ISS3
    cast = _swig_new_static_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricISS3ISS3

        Create a new object of the class itkMeanSquaresImageToImageMetricISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanSquaresImageToImageMetricISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanSquaresImageToImageMetricISS3ISS3 in _itkMeanSquaresImageToImageMetricPython:
_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS3ISS3_swigregister(itkMeanSquaresImageToImageMetricISS3ISS3)
itkMeanSquaresImageToImageMetricISS3ISS3___New_orig__ = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS3ISS3___New_orig__
itkMeanSquaresImageToImageMetricISS3ISS3_cast = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS3ISS3_cast


def itkMeanSquaresImageToImageMetricIUC2IUC2_New():
    return itkMeanSquaresImageToImageMetricIUC2IUC2.New()

class itkMeanSquaresImageToImageMetricIUC2IUC2(itk.itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2):
    r"""


    TODO.

    example{Registration/Common/ComputeMeanSquareBetweenTwoImages,Compute
    Mean Squares Metric Between Two Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2_Clone)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIUC2IUC2
    cast = _swig_new_static_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIUC2IUC2

        Create a new object of the class itkMeanSquaresImageToImageMetricIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanSquaresImageToImageMetricIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanSquaresImageToImageMetricIUC2IUC2 in _itkMeanSquaresImageToImageMetricPython:
_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2_swigregister(itkMeanSquaresImageToImageMetricIUC2IUC2)
itkMeanSquaresImageToImageMetricIUC2IUC2___New_orig__ = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2___New_orig__
itkMeanSquaresImageToImageMetricIUC2IUC2_cast = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2_cast


def itkMeanSquaresImageToImageMetricIUC3IUC3_New():
    return itkMeanSquaresImageToImageMetricIUC3IUC3.New()

class itkMeanSquaresImageToImageMetricIUC3IUC3(itk.itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3):
    r"""


    TODO.

    example{Registration/Common/ComputeMeanSquareBetweenTwoImages,Compute
    Mean Squares Metric Between Two Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3_Clone)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIUC3IUC3
    cast = _swig_new_static_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIUC3IUC3

        Create a new object of the class itkMeanSquaresImageToImageMetricIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanSquaresImageToImageMetricIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanSquaresImageToImageMetricIUC3IUC3 in _itkMeanSquaresImageToImageMetricPython:
_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3_swigregister(itkMeanSquaresImageToImageMetricIUC3IUC3)
itkMeanSquaresImageToImageMetricIUC3IUC3___New_orig__ = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3___New_orig__
itkMeanSquaresImageToImageMetricIUC3IUC3_cast = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3_cast


def itkMeanSquaresImageToImageMetricIUS2IUS2_New():
    return itkMeanSquaresImageToImageMetricIUS2IUS2.New()

class itkMeanSquaresImageToImageMetricIUS2IUS2(itk.itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2):
    r"""


    TODO.

    example{Registration/Common/ComputeMeanSquareBetweenTwoImages,Compute
    Mean Squares Metric Between Two Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS2IUS2_Clone)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIUS2IUS2
    cast = _swig_new_static_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIUS2IUS2

        Create a new object of the class itkMeanSquaresImageToImageMetricIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanSquaresImageToImageMetricIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanSquaresImageToImageMetricIUS2IUS2 in _itkMeanSquaresImageToImageMetricPython:
_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS2IUS2_swigregister(itkMeanSquaresImageToImageMetricIUS2IUS2)
itkMeanSquaresImageToImageMetricIUS2IUS2___New_orig__ = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS2IUS2___New_orig__
itkMeanSquaresImageToImageMetricIUS2IUS2_cast = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS2IUS2_cast


def itkMeanSquaresImageToImageMetricIUS3IUS3_New():
    return itkMeanSquaresImageToImageMetricIUS3IUS3.New()

class itkMeanSquaresImageToImageMetricIUS3IUS3(itk.itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3):
    r"""


    TODO.

    example{Registration/Common/ComputeMeanSquareBetweenTwoImages,Compute
    Mean Squares Metric Between Two Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS3IUS3_Clone)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIUS3IUS3
    cast = _swig_new_static_method(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIUS3IUS3

        Create a new object of the class itkMeanSquaresImageToImageMetricIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanSquaresImageToImageMetricIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanSquaresImageToImageMetricIUS3IUS3 in _itkMeanSquaresImageToImageMetricPython:
_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS3IUS3_swigregister(itkMeanSquaresImageToImageMetricIUS3IUS3)
itkMeanSquaresImageToImageMetricIUS3IUS3___New_orig__ = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS3IUS3___New_orig__
itkMeanSquaresImageToImageMetricIUS3IUS3_cast = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS3IUS3_cast



