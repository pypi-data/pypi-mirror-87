# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKFastMarchingPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkNodePairPython
else:
    import _itkNodePairPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkNodePairPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkNodePairPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkIndexPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkOffsetPython
class itkNodePairI2D(object):
    r"""


    Represents a Node and its associated value (front value) 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkNodePairI2D self) -> itkNodePairI2D
        __init__(itkNodePairI2D self, itkIndex2 iNode, double const & iValue) -> itkNodePairI2D
        __init__(itkNodePairI2D self, itkNodePairI2D iPair) -> itkNodePairI2D


        Represents a Node and its associated value (front value) 
        """
        _itkNodePairPython.itkNodePairI2D_swiginit(self, _itkNodePairPython.new_itkNodePairI2D(*args))
    SetValue = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2D_SetValue)
    GetValue = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2D_GetValue)
    SetNode = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2D_SetNode)
    GetNode = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2D_GetNode)
    __lt__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2D___lt__)
    __gt__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2D___gt__)
    __le__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2D___le__)
    __ge__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2D___ge__)
    __swig_destroy__ = _itkNodePairPython.delete_itkNodePairI2D

# Register itkNodePairI2D in _itkNodePairPython:
_itkNodePairPython.itkNodePairI2D_swigregister(itkNodePairI2D)

class itkNodePairI2F(object):
    r"""


    Represents a Node and its associated value (front value) 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkNodePairI2F self) -> itkNodePairI2F
        __init__(itkNodePairI2F self, itkIndex2 iNode, float const & iValue) -> itkNodePairI2F
        __init__(itkNodePairI2F self, itkNodePairI2F iPair) -> itkNodePairI2F


        Represents a Node and its associated value (front value) 
        """
        _itkNodePairPython.itkNodePairI2F_swiginit(self, _itkNodePairPython.new_itkNodePairI2F(*args))
    SetValue = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2F_SetValue)
    GetValue = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2F_GetValue)
    SetNode = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2F_SetNode)
    GetNode = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2F_GetNode)
    __lt__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2F___lt__)
    __gt__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2F___gt__)
    __le__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2F___le__)
    __ge__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2F___ge__)
    __swig_destroy__ = _itkNodePairPython.delete_itkNodePairI2F

# Register itkNodePairI2F in _itkNodePairPython:
_itkNodePairPython.itkNodePairI2F_swigregister(itkNodePairI2F)

class itkNodePairI2SS(object):
    r"""


    Represents a Node and its associated value (front value) 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkNodePairI2SS self) -> itkNodePairI2SS
        __init__(itkNodePairI2SS self, itkIndex2 iNode, short const & iValue) -> itkNodePairI2SS
        __init__(itkNodePairI2SS self, itkNodePairI2SS iPair) -> itkNodePairI2SS


        Represents a Node and its associated value (front value) 
        """
        _itkNodePairPython.itkNodePairI2SS_swiginit(self, _itkNodePairPython.new_itkNodePairI2SS(*args))
    SetValue = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2SS_SetValue)
    GetValue = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2SS_GetValue)
    SetNode = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2SS_SetNode)
    GetNode = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2SS_GetNode)
    __lt__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2SS___lt__)
    __gt__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2SS___gt__)
    __le__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2SS___le__)
    __ge__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2SS___ge__)
    __swig_destroy__ = _itkNodePairPython.delete_itkNodePairI2SS

# Register itkNodePairI2SS in _itkNodePairPython:
_itkNodePairPython.itkNodePairI2SS_swigregister(itkNodePairI2SS)

class itkNodePairI2UC(object):
    r"""


    Represents a Node and its associated value (front value) 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkNodePairI2UC self) -> itkNodePairI2UC
        __init__(itkNodePairI2UC self, itkIndex2 iNode, unsigned char const & iValue) -> itkNodePairI2UC
        __init__(itkNodePairI2UC self, itkNodePairI2UC iPair) -> itkNodePairI2UC


        Represents a Node and its associated value (front value) 
        """
        _itkNodePairPython.itkNodePairI2UC_swiginit(self, _itkNodePairPython.new_itkNodePairI2UC(*args))
    SetValue = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2UC_SetValue)
    GetValue = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2UC_GetValue)
    SetNode = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2UC_SetNode)
    GetNode = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2UC_GetNode)
    __lt__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2UC___lt__)
    __gt__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2UC___gt__)
    __le__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2UC___le__)
    __ge__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2UC___ge__)
    __swig_destroy__ = _itkNodePairPython.delete_itkNodePairI2UC

# Register itkNodePairI2UC in _itkNodePairPython:
_itkNodePairPython.itkNodePairI2UC_swigregister(itkNodePairI2UC)

class itkNodePairI2US(object):
    r"""


    Represents a Node and its associated value (front value) 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkNodePairI2US self) -> itkNodePairI2US
        __init__(itkNodePairI2US self, itkIndex2 iNode, unsigned short const & iValue) -> itkNodePairI2US
        __init__(itkNodePairI2US self, itkNodePairI2US iPair) -> itkNodePairI2US


        Represents a Node and its associated value (front value) 
        """
        _itkNodePairPython.itkNodePairI2US_swiginit(self, _itkNodePairPython.new_itkNodePairI2US(*args))
    SetValue = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2US_SetValue)
    GetValue = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2US_GetValue)
    SetNode = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2US_SetNode)
    GetNode = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2US_GetNode)
    __lt__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2US___lt__)
    __gt__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2US___gt__)
    __le__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2US___le__)
    __ge__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI2US___ge__)
    __swig_destroy__ = _itkNodePairPython.delete_itkNodePairI2US

# Register itkNodePairI2US in _itkNodePairPython:
_itkNodePairPython.itkNodePairI2US_swigregister(itkNodePairI2US)

class itkNodePairI3D(object):
    r"""


    Represents a Node and its associated value (front value) 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkNodePairI3D self) -> itkNodePairI3D
        __init__(itkNodePairI3D self, itkIndex3 iNode, double const & iValue) -> itkNodePairI3D
        __init__(itkNodePairI3D self, itkNodePairI3D iPair) -> itkNodePairI3D


        Represents a Node and its associated value (front value) 
        """
        _itkNodePairPython.itkNodePairI3D_swiginit(self, _itkNodePairPython.new_itkNodePairI3D(*args))
    SetValue = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3D_SetValue)
    GetValue = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3D_GetValue)
    SetNode = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3D_SetNode)
    GetNode = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3D_GetNode)
    __lt__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3D___lt__)
    __gt__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3D___gt__)
    __le__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3D___le__)
    __ge__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3D___ge__)
    __swig_destroy__ = _itkNodePairPython.delete_itkNodePairI3D

# Register itkNodePairI3D in _itkNodePairPython:
_itkNodePairPython.itkNodePairI3D_swigregister(itkNodePairI3D)

class itkNodePairI3F(object):
    r"""


    Represents a Node and its associated value (front value) 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkNodePairI3F self) -> itkNodePairI3F
        __init__(itkNodePairI3F self, itkIndex3 iNode, float const & iValue) -> itkNodePairI3F
        __init__(itkNodePairI3F self, itkNodePairI3F iPair) -> itkNodePairI3F


        Represents a Node and its associated value (front value) 
        """
        _itkNodePairPython.itkNodePairI3F_swiginit(self, _itkNodePairPython.new_itkNodePairI3F(*args))
    SetValue = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3F_SetValue)
    GetValue = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3F_GetValue)
    SetNode = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3F_SetNode)
    GetNode = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3F_GetNode)
    __lt__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3F___lt__)
    __gt__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3F___gt__)
    __le__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3F___le__)
    __ge__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3F___ge__)
    __swig_destroy__ = _itkNodePairPython.delete_itkNodePairI3F

# Register itkNodePairI3F in _itkNodePairPython:
_itkNodePairPython.itkNodePairI3F_swigregister(itkNodePairI3F)

class itkNodePairI3SS(object):
    r"""


    Represents a Node and its associated value (front value) 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkNodePairI3SS self) -> itkNodePairI3SS
        __init__(itkNodePairI3SS self, itkIndex3 iNode, short const & iValue) -> itkNodePairI3SS
        __init__(itkNodePairI3SS self, itkNodePairI3SS iPair) -> itkNodePairI3SS


        Represents a Node and its associated value (front value) 
        """
        _itkNodePairPython.itkNodePairI3SS_swiginit(self, _itkNodePairPython.new_itkNodePairI3SS(*args))
    SetValue = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3SS_SetValue)
    GetValue = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3SS_GetValue)
    SetNode = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3SS_SetNode)
    GetNode = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3SS_GetNode)
    __lt__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3SS___lt__)
    __gt__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3SS___gt__)
    __le__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3SS___le__)
    __ge__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3SS___ge__)
    __swig_destroy__ = _itkNodePairPython.delete_itkNodePairI3SS

# Register itkNodePairI3SS in _itkNodePairPython:
_itkNodePairPython.itkNodePairI3SS_swigregister(itkNodePairI3SS)

class itkNodePairI3UC(object):
    r"""


    Represents a Node and its associated value (front value) 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkNodePairI3UC self) -> itkNodePairI3UC
        __init__(itkNodePairI3UC self, itkIndex3 iNode, unsigned char const & iValue) -> itkNodePairI3UC
        __init__(itkNodePairI3UC self, itkNodePairI3UC iPair) -> itkNodePairI3UC


        Represents a Node and its associated value (front value) 
        """
        _itkNodePairPython.itkNodePairI3UC_swiginit(self, _itkNodePairPython.new_itkNodePairI3UC(*args))
    SetValue = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3UC_SetValue)
    GetValue = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3UC_GetValue)
    SetNode = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3UC_SetNode)
    GetNode = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3UC_GetNode)
    __lt__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3UC___lt__)
    __gt__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3UC___gt__)
    __le__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3UC___le__)
    __ge__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3UC___ge__)
    __swig_destroy__ = _itkNodePairPython.delete_itkNodePairI3UC

# Register itkNodePairI3UC in _itkNodePairPython:
_itkNodePairPython.itkNodePairI3UC_swigregister(itkNodePairI3UC)

class itkNodePairI3US(object):
    r"""


    Represents a Node and its associated value (front value) 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkNodePairI3US self) -> itkNodePairI3US
        __init__(itkNodePairI3US self, itkIndex3 iNode, unsigned short const & iValue) -> itkNodePairI3US
        __init__(itkNodePairI3US self, itkNodePairI3US iPair) -> itkNodePairI3US


        Represents a Node and its associated value (front value) 
        """
        _itkNodePairPython.itkNodePairI3US_swiginit(self, _itkNodePairPython.new_itkNodePairI3US(*args))
    SetValue = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3US_SetValue)
    GetValue = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3US_GetValue)
    SetNode = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3US_SetNode)
    GetNode = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3US_GetNode)
    __lt__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3US___lt__)
    __gt__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3US___gt__)
    __le__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3US___le__)
    __ge__ = _swig_new_instance_method(_itkNodePairPython.itkNodePairI3US___ge__)
    __swig_destroy__ = _itkNodePairPython.delete_itkNodePairI3US

# Register itkNodePairI3US in _itkNodePairPython:
_itkNodePairPython.itkNodePairI3US_swigregister(itkNodePairI3US)



