# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageFilterBasePython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBoxImageFilterPython
else:
    import _itkBoxImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkBoxImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkBoxImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkSizePython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.stdcomplexPython
import itk.itkImagePython
import itk.itkOffsetPython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython

def itkBoxImageFilterID2ID2_New():
    return itkBoxImageFilterID2ID2.New()

class itkBoxImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""


    A base class for all the filters working on a box neighborhood.

    This filter provides the code to store the radius information about
    the neighborhood used in the subclasses. It also conveniently
    reimplement the GenerateInputRequestedRegion() so that region is well
    defined for the provided radius.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoxImageFilterPython.itkBoxImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterID2ID2_Clone)
    SetRadius = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterID2ID2_SetRadius)
    GetRadius = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterID2ID2_GetRadius)
    __swig_destroy__ = _itkBoxImageFilterPython.delete_itkBoxImageFilterID2ID2
    cast = _swig_new_static_method(_itkBoxImageFilterPython.itkBoxImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBoxImageFilterID2ID2

        Create a new object of the class itkBoxImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoxImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoxImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoxImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoxImageFilterID2ID2 in _itkBoxImageFilterPython:
_itkBoxImageFilterPython.itkBoxImageFilterID2ID2_swigregister(itkBoxImageFilterID2ID2)
itkBoxImageFilterID2ID2___New_orig__ = _itkBoxImageFilterPython.itkBoxImageFilterID2ID2___New_orig__
itkBoxImageFilterID2ID2_cast = _itkBoxImageFilterPython.itkBoxImageFilterID2ID2_cast


def itkBoxImageFilterID3ID3_New():
    return itkBoxImageFilterID3ID3.New()

class itkBoxImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""


    A base class for all the filters working on a box neighborhood.

    This filter provides the code to store the radius information about
    the neighborhood used in the subclasses. It also conveniently
    reimplement the GenerateInputRequestedRegion() so that region is well
    defined for the provided radius.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoxImageFilterPython.itkBoxImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterID3ID3_Clone)
    SetRadius = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterID3ID3_SetRadius)
    GetRadius = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterID3ID3_GetRadius)
    __swig_destroy__ = _itkBoxImageFilterPython.delete_itkBoxImageFilterID3ID3
    cast = _swig_new_static_method(_itkBoxImageFilterPython.itkBoxImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBoxImageFilterID3ID3

        Create a new object of the class itkBoxImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoxImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoxImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoxImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoxImageFilterID3ID3 in _itkBoxImageFilterPython:
_itkBoxImageFilterPython.itkBoxImageFilterID3ID3_swigregister(itkBoxImageFilterID3ID3)
itkBoxImageFilterID3ID3___New_orig__ = _itkBoxImageFilterPython.itkBoxImageFilterID3ID3___New_orig__
itkBoxImageFilterID3ID3_cast = _itkBoxImageFilterPython.itkBoxImageFilterID3ID3_cast


def itkBoxImageFilterIF2IF2_New():
    return itkBoxImageFilterIF2IF2.New()

class itkBoxImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""


    A base class for all the filters working on a box neighborhood.

    This filter provides the code to store the radius information about
    the neighborhood used in the subclasses. It also conveniently
    reimplement the GenerateInputRequestedRegion() so that region is well
    defined for the provided radius.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoxImageFilterPython.itkBoxImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterIF2IF2_Clone)
    SetRadius = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterIF2IF2_SetRadius)
    GetRadius = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterIF2IF2_GetRadius)
    __swig_destroy__ = _itkBoxImageFilterPython.delete_itkBoxImageFilterIF2IF2
    cast = _swig_new_static_method(_itkBoxImageFilterPython.itkBoxImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBoxImageFilterIF2IF2

        Create a new object of the class itkBoxImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoxImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoxImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoxImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoxImageFilterIF2IF2 in _itkBoxImageFilterPython:
_itkBoxImageFilterPython.itkBoxImageFilterIF2IF2_swigregister(itkBoxImageFilterIF2IF2)
itkBoxImageFilterIF2IF2___New_orig__ = _itkBoxImageFilterPython.itkBoxImageFilterIF2IF2___New_orig__
itkBoxImageFilterIF2IF2_cast = _itkBoxImageFilterPython.itkBoxImageFilterIF2IF2_cast


def itkBoxImageFilterIF3IF3_New():
    return itkBoxImageFilterIF3IF3.New()

class itkBoxImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""


    A base class for all the filters working on a box neighborhood.

    This filter provides the code to store the radius information about
    the neighborhood used in the subclasses. It also conveniently
    reimplement the GenerateInputRequestedRegion() so that region is well
    defined for the provided radius.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoxImageFilterPython.itkBoxImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterIF3IF3_Clone)
    SetRadius = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterIF3IF3_SetRadius)
    GetRadius = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterIF3IF3_GetRadius)
    __swig_destroy__ = _itkBoxImageFilterPython.delete_itkBoxImageFilterIF3IF3
    cast = _swig_new_static_method(_itkBoxImageFilterPython.itkBoxImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBoxImageFilterIF3IF3

        Create a new object of the class itkBoxImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoxImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoxImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoxImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoxImageFilterIF3IF3 in _itkBoxImageFilterPython:
_itkBoxImageFilterPython.itkBoxImageFilterIF3IF3_swigregister(itkBoxImageFilterIF3IF3)
itkBoxImageFilterIF3IF3___New_orig__ = _itkBoxImageFilterPython.itkBoxImageFilterIF3IF3___New_orig__
itkBoxImageFilterIF3IF3_cast = _itkBoxImageFilterPython.itkBoxImageFilterIF3IF3_cast


def itkBoxImageFilterISS2ISS2_New():
    return itkBoxImageFilterISS2ISS2.New()

class itkBoxImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""


    A base class for all the filters working on a box neighborhood.

    This filter provides the code to store the radius information about
    the neighborhood used in the subclasses. It also conveniently
    reimplement the GenerateInputRequestedRegion() so that region is well
    defined for the provided radius.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoxImageFilterPython.itkBoxImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterISS2ISS2_Clone)
    SetRadius = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterISS2ISS2_SetRadius)
    GetRadius = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterISS2ISS2_GetRadius)
    __swig_destroy__ = _itkBoxImageFilterPython.delete_itkBoxImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkBoxImageFilterPython.itkBoxImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBoxImageFilterISS2ISS2

        Create a new object of the class itkBoxImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoxImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoxImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoxImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoxImageFilterISS2ISS2 in _itkBoxImageFilterPython:
_itkBoxImageFilterPython.itkBoxImageFilterISS2ISS2_swigregister(itkBoxImageFilterISS2ISS2)
itkBoxImageFilterISS2ISS2___New_orig__ = _itkBoxImageFilterPython.itkBoxImageFilterISS2ISS2___New_orig__
itkBoxImageFilterISS2ISS2_cast = _itkBoxImageFilterPython.itkBoxImageFilterISS2ISS2_cast


def itkBoxImageFilterISS3ISS3_New():
    return itkBoxImageFilterISS3ISS3.New()

class itkBoxImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""


    A base class for all the filters working on a box neighborhood.

    This filter provides the code to store the radius information about
    the neighborhood used in the subclasses. It also conveniently
    reimplement the GenerateInputRequestedRegion() so that region is well
    defined for the provided radius.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoxImageFilterPython.itkBoxImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterISS3ISS3_Clone)
    SetRadius = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterISS3ISS3_SetRadius)
    GetRadius = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterISS3ISS3_GetRadius)
    __swig_destroy__ = _itkBoxImageFilterPython.delete_itkBoxImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkBoxImageFilterPython.itkBoxImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBoxImageFilterISS3ISS3

        Create a new object of the class itkBoxImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoxImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoxImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoxImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoxImageFilterISS3ISS3 in _itkBoxImageFilterPython:
_itkBoxImageFilterPython.itkBoxImageFilterISS3ISS3_swigregister(itkBoxImageFilterISS3ISS3)
itkBoxImageFilterISS3ISS3___New_orig__ = _itkBoxImageFilterPython.itkBoxImageFilterISS3ISS3___New_orig__
itkBoxImageFilterISS3ISS3_cast = _itkBoxImageFilterPython.itkBoxImageFilterISS3ISS3_cast


def itkBoxImageFilterIUC2IUC2_New():
    return itkBoxImageFilterIUC2IUC2.New()

class itkBoxImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""


    A base class for all the filters working on a box neighborhood.

    This filter provides the code to store the radius information about
    the neighborhood used in the subclasses. It also conveniently
    reimplement the GenerateInputRequestedRegion() so that region is well
    defined for the provided radius.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoxImageFilterPython.itkBoxImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterIUC2IUC2_Clone)
    SetRadius = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterIUC2IUC2_SetRadius)
    GetRadius = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterIUC2IUC2_GetRadius)
    __swig_destroy__ = _itkBoxImageFilterPython.delete_itkBoxImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkBoxImageFilterPython.itkBoxImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBoxImageFilterIUC2IUC2

        Create a new object of the class itkBoxImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoxImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoxImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoxImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoxImageFilterIUC2IUC2 in _itkBoxImageFilterPython:
_itkBoxImageFilterPython.itkBoxImageFilterIUC2IUC2_swigregister(itkBoxImageFilterIUC2IUC2)
itkBoxImageFilterIUC2IUC2___New_orig__ = _itkBoxImageFilterPython.itkBoxImageFilterIUC2IUC2___New_orig__
itkBoxImageFilterIUC2IUC2_cast = _itkBoxImageFilterPython.itkBoxImageFilterIUC2IUC2_cast


def itkBoxImageFilterIUC3IUC3_New():
    return itkBoxImageFilterIUC3IUC3.New()

class itkBoxImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""


    A base class for all the filters working on a box neighborhood.

    This filter provides the code to store the radius information about
    the neighborhood used in the subclasses. It also conveniently
    reimplement the GenerateInputRequestedRegion() so that region is well
    defined for the provided radius.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoxImageFilterPython.itkBoxImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterIUC3IUC3_Clone)
    SetRadius = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterIUC3IUC3_SetRadius)
    GetRadius = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterIUC3IUC3_GetRadius)
    __swig_destroy__ = _itkBoxImageFilterPython.delete_itkBoxImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkBoxImageFilterPython.itkBoxImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBoxImageFilterIUC3IUC3

        Create a new object of the class itkBoxImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoxImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoxImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoxImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoxImageFilterIUC3IUC3 in _itkBoxImageFilterPython:
_itkBoxImageFilterPython.itkBoxImageFilterIUC3IUC3_swigregister(itkBoxImageFilterIUC3IUC3)
itkBoxImageFilterIUC3IUC3___New_orig__ = _itkBoxImageFilterPython.itkBoxImageFilterIUC3IUC3___New_orig__
itkBoxImageFilterIUC3IUC3_cast = _itkBoxImageFilterPython.itkBoxImageFilterIUC3IUC3_cast


def itkBoxImageFilterIUS2IUS2_New():
    return itkBoxImageFilterIUS2IUS2.New()

class itkBoxImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""


    A base class for all the filters working on a box neighborhood.

    This filter provides the code to store the radius information about
    the neighborhood used in the subclasses. It also conveniently
    reimplement the GenerateInputRequestedRegion() so that region is well
    defined for the provided radius.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoxImageFilterPython.itkBoxImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterIUS2IUS2_Clone)
    SetRadius = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterIUS2IUS2_SetRadius)
    GetRadius = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterIUS2IUS2_GetRadius)
    __swig_destroy__ = _itkBoxImageFilterPython.delete_itkBoxImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkBoxImageFilterPython.itkBoxImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBoxImageFilterIUS2IUS2

        Create a new object of the class itkBoxImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoxImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoxImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoxImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoxImageFilterIUS2IUS2 in _itkBoxImageFilterPython:
_itkBoxImageFilterPython.itkBoxImageFilterIUS2IUS2_swigregister(itkBoxImageFilterIUS2IUS2)
itkBoxImageFilterIUS2IUS2___New_orig__ = _itkBoxImageFilterPython.itkBoxImageFilterIUS2IUS2___New_orig__
itkBoxImageFilterIUS2IUS2_cast = _itkBoxImageFilterPython.itkBoxImageFilterIUS2IUS2_cast


def itkBoxImageFilterIUS3IUS3_New():
    return itkBoxImageFilterIUS3IUS3.New()

class itkBoxImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""


    A base class for all the filters working on a box neighborhood.

    This filter provides the code to store the radius information about
    the neighborhood used in the subclasses. It also conveniently
    reimplement the GenerateInputRequestedRegion() so that region is well
    defined for the provided radius.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoxImageFilterPython.itkBoxImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterIUS3IUS3_Clone)
    SetRadius = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterIUS3IUS3_SetRadius)
    GetRadius = _swig_new_instance_method(_itkBoxImageFilterPython.itkBoxImageFilterIUS3IUS3_GetRadius)
    __swig_destroy__ = _itkBoxImageFilterPython.delete_itkBoxImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkBoxImageFilterPython.itkBoxImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBoxImageFilterIUS3IUS3

        Create a new object of the class itkBoxImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoxImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoxImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoxImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoxImageFilterIUS3IUS3 in _itkBoxImageFilterPython:
_itkBoxImageFilterPython.itkBoxImageFilterIUS3IUS3_swigregister(itkBoxImageFilterIUS3IUS3)
itkBoxImageFilterIUS3IUS3___New_orig__ = _itkBoxImageFilterPython.itkBoxImageFilterIUS3IUS3___New_orig__
itkBoxImageFilterIUS3IUS3_cast = _itkBoxImageFilterPython.itkBoxImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def box_image_filter(*args, **kwargs):
    """Procedural interface for BoxImageFilter"""
    import itk
    instance = itk.BoxImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def box_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.BoxImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.BoxImageFilter.values()[0]
    else:
        filter_object = itk.BoxImageFilter

    box_image_filter.__doc__ = filter_object.__doc__
    box_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    box_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.BoxImageFilter, itkTemplate.itkTemplate):
        box_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        box_image_filter.__doc__ += "\n"
        box_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        box_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



