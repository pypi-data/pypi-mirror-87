# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageFunctionPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBSplineDecompositionImageFilterPython
else:
    import _itkBSplineDecompositionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkBSplineDecompositionImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkBSplineDecompositionImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.pyBasePython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.ITKCommonBasePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkVectorImagePython
import itk.stdcomplexPython
import itk.itkVariableLengthVectorPython
import itk.itkImagePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython

def itkBSplineDecompositionImageFilterID2ID2_New():
    return itkBSplineDecompositionImageFilterID2ID2.New()

class itkBSplineDecompositionImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""


    Calculates the B-Spline coefficients of an image. Spline order may be
    from 0 to 5.

    This class defines N-Dimension B-Spline transformation. It is based
    on: [1] M. Unser, "Splines: A Perfect Fit for Signal and Image
    Processing," IEEE Signal Processing Magazine, vol. 16, no. 6, pp.
    22-38, November 1999. [2] M. Unser, A. Aldroubi and M. Eden,
    "B-Spline Signal Processing: Part I--Theory," IEEE Transactions on
    Signal Processing, vol. 41, no. 2, pp. 821-832, February 1993. [3] M.
    Unser, A. Aldroubi and M. Eden, "B-Spline Signal Processing: Part II
    --Efficient Design and Applications," IEEE Transactions on Signal
    Processing, vol. 41, no. 2, pp. 834-848, February 1993. And code
    obtained from bigwww.epfl.ch by Philippe Thevenaz

    Limitations: Spline order must be between 0 and 5. Spline order must
    be set before setting the image. Uses mirror boundary conditions.
    Requires the same order of Spline for each dimension. Can only process
    LargestPossibleRegion

    See:   BSplineResampleImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterID2ID2_Clone)
    SetSplineOrder = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterID2ID2_SetSplineOrder)
    GetSplineOrder = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterID2ID2_GetSplineOrder)
    GetSplinePoles = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterID2ID2_GetSplinePoles)
    GetNumberOfPoles = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterID2ID2_GetNumberOfPoles)
    DimensionCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterID2ID2_DimensionCheck
    
    InputConvertibleToOutputCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterID2ID2_InputConvertibleToOutputCheck
    
    DoubleConvertibleToOutputCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterID2ID2_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBSplineDecompositionImageFilterPython.delete_itkBSplineDecompositionImageFilterID2ID2
    cast = _swig_new_static_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBSplineDecompositionImageFilterID2ID2

        Create a new object of the class itkBSplineDecompositionImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineDecompositionImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineDecompositionImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineDecompositionImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineDecompositionImageFilterID2ID2 in _itkBSplineDecompositionImageFilterPython:
_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterID2ID2_swigregister(itkBSplineDecompositionImageFilterID2ID2)
itkBSplineDecompositionImageFilterID2ID2___New_orig__ = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterID2ID2___New_orig__
itkBSplineDecompositionImageFilterID2ID2_cast = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterID2ID2_cast


def itkBSplineDecompositionImageFilterID3ID3_New():
    return itkBSplineDecompositionImageFilterID3ID3.New()

class itkBSplineDecompositionImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""


    Calculates the B-Spline coefficients of an image. Spline order may be
    from 0 to 5.

    This class defines N-Dimension B-Spline transformation. It is based
    on: [1] M. Unser, "Splines: A Perfect Fit for Signal and Image
    Processing," IEEE Signal Processing Magazine, vol. 16, no. 6, pp.
    22-38, November 1999. [2] M. Unser, A. Aldroubi and M. Eden,
    "B-Spline Signal Processing: Part I--Theory," IEEE Transactions on
    Signal Processing, vol. 41, no. 2, pp. 821-832, February 1993. [3] M.
    Unser, A. Aldroubi and M. Eden, "B-Spline Signal Processing: Part II
    --Efficient Design and Applications," IEEE Transactions on Signal
    Processing, vol. 41, no. 2, pp. 834-848, February 1993. And code
    obtained from bigwww.epfl.ch by Philippe Thevenaz

    Limitations: Spline order must be between 0 and 5. Spline order must
    be set before setting the image. Uses mirror boundary conditions.
    Requires the same order of Spline for each dimension. Can only process
    LargestPossibleRegion

    See:   BSplineResampleImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterID3ID3_Clone)
    SetSplineOrder = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterID3ID3_SetSplineOrder)
    GetSplineOrder = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterID3ID3_GetSplineOrder)
    GetSplinePoles = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterID3ID3_GetSplinePoles)
    GetNumberOfPoles = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterID3ID3_GetNumberOfPoles)
    DimensionCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterID3ID3_DimensionCheck
    
    InputConvertibleToOutputCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterID3ID3_InputConvertibleToOutputCheck
    
    DoubleConvertibleToOutputCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterID3ID3_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBSplineDecompositionImageFilterPython.delete_itkBSplineDecompositionImageFilterID3ID3
    cast = _swig_new_static_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBSplineDecompositionImageFilterID3ID3

        Create a new object of the class itkBSplineDecompositionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineDecompositionImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineDecompositionImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineDecompositionImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineDecompositionImageFilterID3ID3 in _itkBSplineDecompositionImageFilterPython:
_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterID3ID3_swigregister(itkBSplineDecompositionImageFilterID3ID3)
itkBSplineDecompositionImageFilterID3ID3___New_orig__ = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterID3ID3___New_orig__
itkBSplineDecompositionImageFilterID3ID3_cast = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterID3ID3_cast


def itkBSplineDecompositionImageFilterIF2IF2_New():
    return itkBSplineDecompositionImageFilterIF2IF2.New()

class itkBSplineDecompositionImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""


    Calculates the B-Spline coefficients of an image. Spline order may be
    from 0 to 5.

    This class defines N-Dimension B-Spline transformation. It is based
    on: [1] M. Unser, "Splines: A Perfect Fit for Signal and Image
    Processing," IEEE Signal Processing Magazine, vol. 16, no. 6, pp.
    22-38, November 1999. [2] M. Unser, A. Aldroubi and M. Eden,
    "B-Spline Signal Processing: Part I--Theory," IEEE Transactions on
    Signal Processing, vol. 41, no. 2, pp. 821-832, February 1993. [3] M.
    Unser, A. Aldroubi and M. Eden, "B-Spline Signal Processing: Part II
    --Efficient Design and Applications," IEEE Transactions on Signal
    Processing, vol. 41, no. 2, pp. 834-848, February 1993. And code
    obtained from bigwww.epfl.ch by Philippe Thevenaz

    Limitations: Spline order must be between 0 and 5. Spline order must
    be set before setting the image. Uses mirror boundary conditions.
    Requires the same order of Spline for each dimension. Can only process
    LargestPossibleRegion

    See:   BSplineResampleImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIF2IF2_Clone)
    SetSplineOrder = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIF2IF2_SetSplineOrder)
    GetSplineOrder = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIF2IF2_GetSplineOrder)
    GetSplinePoles = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIF2IF2_GetSplinePoles)
    GetNumberOfPoles = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIF2IF2_GetNumberOfPoles)
    DimensionCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIF2IF2_DimensionCheck
    
    InputConvertibleToOutputCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIF2IF2_InputConvertibleToOutputCheck
    
    DoubleConvertibleToOutputCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIF2IF2_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBSplineDecompositionImageFilterPython.delete_itkBSplineDecompositionImageFilterIF2IF2
    cast = _swig_new_static_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBSplineDecompositionImageFilterIF2IF2

        Create a new object of the class itkBSplineDecompositionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineDecompositionImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineDecompositionImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineDecompositionImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineDecompositionImageFilterIF2IF2 in _itkBSplineDecompositionImageFilterPython:
_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIF2IF2_swigregister(itkBSplineDecompositionImageFilterIF2IF2)
itkBSplineDecompositionImageFilterIF2IF2___New_orig__ = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIF2IF2___New_orig__
itkBSplineDecompositionImageFilterIF2IF2_cast = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIF2IF2_cast


def itkBSplineDecompositionImageFilterIF3IF3_New():
    return itkBSplineDecompositionImageFilterIF3IF3.New()

class itkBSplineDecompositionImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""


    Calculates the B-Spline coefficients of an image. Spline order may be
    from 0 to 5.

    This class defines N-Dimension B-Spline transformation. It is based
    on: [1] M. Unser, "Splines: A Perfect Fit for Signal and Image
    Processing," IEEE Signal Processing Magazine, vol. 16, no. 6, pp.
    22-38, November 1999. [2] M. Unser, A. Aldroubi and M. Eden,
    "B-Spline Signal Processing: Part I--Theory," IEEE Transactions on
    Signal Processing, vol. 41, no. 2, pp. 821-832, February 1993. [3] M.
    Unser, A. Aldroubi and M. Eden, "B-Spline Signal Processing: Part II
    --Efficient Design and Applications," IEEE Transactions on Signal
    Processing, vol. 41, no. 2, pp. 834-848, February 1993. And code
    obtained from bigwww.epfl.ch by Philippe Thevenaz

    Limitations: Spline order must be between 0 and 5. Spline order must
    be set before setting the image. Uses mirror boundary conditions.
    Requires the same order of Spline for each dimension. Can only process
    LargestPossibleRegion

    See:   BSplineResampleImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIF3IF3_Clone)
    SetSplineOrder = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIF3IF3_SetSplineOrder)
    GetSplineOrder = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIF3IF3_GetSplineOrder)
    GetSplinePoles = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIF3IF3_GetSplinePoles)
    GetNumberOfPoles = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIF3IF3_GetNumberOfPoles)
    DimensionCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIF3IF3_DimensionCheck
    
    InputConvertibleToOutputCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIF3IF3_InputConvertibleToOutputCheck
    
    DoubleConvertibleToOutputCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIF3IF3_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBSplineDecompositionImageFilterPython.delete_itkBSplineDecompositionImageFilterIF3IF3
    cast = _swig_new_static_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBSplineDecompositionImageFilterIF3IF3

        Create a new object of the class itkBSplineDecompositionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineDecompositionImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineDecompositionImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineDecompositionImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineDecompositionImageFilterIF3IF3 in _itkBSplineDecompositionImageFilterPython:
_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIF3IF3_swigregister(itkBSplineDecompositionImageFilterIF3IF3)
itkBSplineDecompositionImageFilterIF3IF3___New_orig__ = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIF3IF3___New_orig__
itkBSplineDecompositionImageFilterIF3IF3_cast = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIF3IF3_cast


def itkBSplineDecompositionImageFilterISS2ISS2_New():
    return itkBSplineDecompositionImageFilterISS2ISS2.New()

class itkBSplineDecompositionImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""


    Calculates the B-Spline coefficients of an image. Spline order may be
    from 0 to 5.

    This class defines N-Dimension B-Spline transformation. It is based
    on: [1] M. Unser, "Splines: A Perfect Fit for Signal and Image
    Processing," IEEE Signal Processing Magazine, vol. 16, no. 6, pp.
    22-38, November 1999. [2] M. Unser, A. Aldroubi and M. Eden,
    "B-Spline Signal Processing: Part I--Theory," IEEE Transactions on
    Signal Processing, vol. 41, no. 2, pp. 821-832, February 1993. [3] M.
    Unser, A. Aldroubi and M. Eden, "B-Spline Signal Processing: Part II
    --Efficient Design and Applications," IEEE Transactions on Signal
    Processing, vol. 41, no. 2, pp. 834-848, February 1993. And code
    obtained from bigwww.epfl.ch by Philippe Thevenaz

    Limitations: Spline order must be between 0 and 5. Spline order must
    be set before setting the image. Uses mirror boundary conditions.
    Requires the same order of Spline for each dimension. Can only process
    LargestPossibleRegion

    See:   BSplineResampleImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterISS2ISS2_Clone)
    SetSplineOrder = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterISS2ISS2_SetSplineOrder)
    GetSplineOrder = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterISS2ISS2_GetSplineOrder)
    GetSplinePoles = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterISS2ISS2_GetSplinePoles)
    GetNumberOfPoles = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterISS2ISS2_GetNumberOfPoles)
    DimensionCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterISS2ISS2_DimensionCheck
    
    InputConvertibleToOutputCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterISS2ISS2_InputConvertibleToOutputCheck
    
    DoubleConvertibleToOutputCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterISS2ISS2_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBSplineDecompositionImageFilterPython.delete_itkBSplineDecompositionImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBSplineDecompositionImageFilterISS2ISS2

        Create a new object of the class itkBSplineDecompositionImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineDecompositionImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineDecompositionImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineDecompositionImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineDecompositionImageFilterISS2ISS2 in _itkBSplineDecompositionImageFilterPython:
_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterISS2ISS2_swigregister(itkBSplineDecompositionImageFilterISS2ISS2)
itkBSplineDecompositionImageFilterISS2ISS2___New_orig__ = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterISS2ISS2___New_orig__
itkBSplineDecompositionImageFilterISS2ISS2_cast = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterISS2ISS2_cast


def itkBSplineDecompositionImageFilterISS3ISS3_New():
    return itkBSplineDecompositionImageFilterISS3ISS3.New()

class itkBSplineDecompositionImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""


    Calculates the B-Spline coefficients of an image. Spline order may be
    from 0 to 5.

    This class defines N-Dimension B-Spline transformation. It is based
    on: [1] M. Unser, "Splines: A Perfect Fit for Signal and Image
    Processing," IEEE Signal Processing Magazine, vol. 16, no. 6, pp.
    22-38, November 1999. [2] M. Unser, A. Aldroubi and M. Eden,
    "B-Spline Signal Processing: Part I--Theory," IEEE Transactions on
    Signal Processing, vol. 41, no. 2, pp. 821-832, February 1993. [3] M.
    Unser, A. Aldroubi and M. Eden, "B-Spline Signal Processing: Part II
    --Efficient Design and Applications," IEEE Transactions on Signal
    Processing, vol. 41, no. 2, pp. 834-848, February 1993. And code
    obtained from bigwww.epfl.ch by Philippe Thevenaz

    Limitations: Spline order must be between 0 and 5. Spline order must
    be set before setting the image. Uses mirror boundary conditions.
    Requires the same order of Spline for each dimension. Can only process
    LargestPossibleRegion

    See:   BSplineResampleImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterISS3ISS3_Clone)
    SetSplineOrder = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterISS3ISS3_SetSplineOrder)
    GetSplineOrder = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterISS3ISS3_GetSplineOrder)
    GetSplinePoles = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterISS3ISS3_GetSplinePoles)
    GetNumberOfPoles = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterISS3ISS3_GetNumberOfPoles)
    DimensionCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterISS3ISS3_DimensionCheck
    
    InputConvertibleToOutputCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterISS3ISS3_InputConvertibleToOutputCheck
    
    DoubleConvertibleToOutputCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterISS3ISS3_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBSplineDecompositionImageFilterPython.delete_itkBSplineDecompositionImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBSplineDecompositionImageFilterISS3ISS3

        Create a new object of the class itkBSplineDecompositionImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineDecompositionImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineDecompositionImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineDecompositionImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineDecompositionImageFilterISS3ISS3 in _itkBSplineDecompositionImageFilterPython:
_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterISS3ISS3_swigregister(itkBSplineDecompositionImageFilterISS3ISS3)
itkBSplineDecompositionImageFilterISS3ISS3___New_orig__ = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterISS3ISS3___New_orig__
itkBSplineDecompositionImageFilterISS3ISS3_cast = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterISS3ISS3_cast


def itkBSplineDecompositionImageFilterIUC2IUC2_New():
    return itkBSplineDecompositionImageFilterIUC2IUC2.New()

class itkBSplineDecompositionImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""


    Calculates the B-Spline coefficients of an image. Spline order may be
    from 0 to 5.

    This class defines N-Dimension B-Spline transformation. It is based
    on: [1] M. Unser, "Splines: A Perfect Fit for Signal and Image
    Processing," IEEE Signal Processing Magazine, vol. 16, no. 6, pp.
    22-38, November 1999. [2] M. Unser, A. Aldroubi and M. Eden,
    "B-Spline Signal Processing: Part I--Theory," IEEE Transactions on
    Signal Processing, vol. 41, no. 2, pp. 821-832, February 1993. [3] M.
    Unser, A. Aldroubi and M. Eden, "B-Spline Signal Processing: Part II
    --Efficient Design and Applications," IEEE Transactions on Signal
    Processing, vol. 41, no. 2, pp. 834-848, February 1993. And code
    obtained from bigwww.epfl.ch by Philippe Thevenaz

    Limitations: Spline order must be between 0 and 5. Spline order must
    be set before setting the image. Uses mirror boundary conditions.
    Requires the same order of Spline for each dimension. Can only process
    LargestPossibleRegion

    See:   BSplineResampleImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUC2IUC2_Clone)
    SetSplineOrder = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUC2IUC2_SetSplineOrder)
    GetSplineOrder = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUC2IUC2_GetSplineOrder)
    GetSplinePoles = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUC2IUC2_GetSplinePoles)
    GetNumberOfPoles = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUC2IUC2_GetNumberOfPoles)
    DimensionCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUC2IUC2_DimensionCheck
    
    InputConvertibleToOutputCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    
    DoubleConvertibleToOutputCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUC2IUC2_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBSplineDecompositionImageFilterPython.delete_itkBSplineDecompositionImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBSplineDecompositionImageFilterIUC2IUC2

        Create a new object of the class itkBSplineDecompositionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineDecompositionImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineDecompositionImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineDecompositionImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineDecompositionImageFilterIUC2IUC2 in _itkBSplineDecompositionImageFilterPython:
_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUC2IUC2_swigregister(itkBSplineDecompositionImageFilterIUC2IUC2)
itkBSplineDecompositionImageFilterIUC2IUC2___New_orig__ = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUC2IUC2___New_orig__
itkBSplineDecompositionImageFilterIUC2IUC2_cast = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUC2IUC2_cast


def itkBSplineDecompositionImageFilterIUC3IUC3_New():
    return itkBSplineDecompositionImageFilterIUC3IUC3.New()

class itkBSplineDecompositionImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""


    Calculates the B-Spline coefficients of an image. Spline order may be
    from 0 to 5.

    This class defines N-Dimension B-Spline transformation. It is based
    on: [1] M. Unser, "Splines: A Perfect Fit for Signal and Image
    Processing," IEEE Signal Processing Magazine, vol. 16, no. 6, pp.
    22-38, November 1999. [2] M. Unser, A. Aldroubi and M. Eden,
    "B-Spline Signal Processing: Part I--Theory," IEEE Transactions on
    Signal Processing, vol. 41, no. 2, pp. 821-832, February 1993. [3] M.
    Unser, A. Aldroubi and M. Eden, "B-Spline Signal Processing: Part II
    --Efficient Design and Applications," IEEE Transactions on Signal
    Processing, vol. 41, no. 2, pp. 834-848, February 1993. And code
    obtained from bigwww.epfl.ch by Philippe Thevenaz

    Limitations: Spline order must be between 0 and 5. Spline order must
    be set before setting the image. Uses mirror boundary conditions.
    Requires the same order of Spline for each dimension. Can only process
    LargestPossibleRegion

    See:   BSplineResampleImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUC3IUC3_Clone)
    SetSplineOrder = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUC3IUC3_SetSplineOrder)
    GetSplineOrder = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUC3IUC3_GetSplineOrder)
    GetSplinePoles = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUC3IUC3_GetSplinePoles)
    GetNumberOfPoles = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUC3IUC3_GetNumberOfPoles)
    DimensionCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUC3IUC3_DimensionCheck
    
    InputConvertibleToOutputCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    
    DoubleConvertibleToOutputCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUC3IUC3_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBSplineDecompositionImageFilterPython.delete_itkBSplineDecompositionImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBSplineDecompositionImageFilterIUC3IUC3

        Create a new object of the class itkBSplineDecompositionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineDecompositionImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineDecompositionImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineDecompositionImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineDecompositionImageFilterIUC3IUC3 in _itkBSplineDecompositionImageFilterPython:
_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUC3IUC3_swigregister(itkBSplineDecompositionImageFilterIUC3IUC3)
itkBSplineDecompositionImageFilterIUC3IUC3___New_orig__ = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUC3IUC3___New_orig__
itkBSplineDecompositionImageFilterIUC3IUC3_cast = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUC3IUC3_cast


def itkBSplineDecompositionImageFilterIUS2IUS2_New():
    return itkBSplineDecompositionImageFilterIUS2IUS2.New()

class itkBSplineDecompositionImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""


    Calculates the B-Spline coefficients of an image. Spline order may be
    from 0 to 5.

    This class defines N-Dimension B-Spline transformation. It is based
    on: [1] M. Unser, "Splines: A Perfect Fit for Signal and Image
    Processing," IEEE Signal Processing Magazine, vol. 16, no. 6, pp.
    22-38, November 1999. [2] M. Unser, A. Aldroubi and M. Eden,
    "B-Spline Signal Processing: Part I--Theory," IEEE Transactions on
    Signal Processing, vol. 41, no. 2, pp. 821-832, February 1993. [3] M.
    Unser, A. Aldroubi and M. Eden, "B-Spline Signal Processing: Part II
    --Efficient Design and Applications," IEEE Transactions on Signal
    Processing, vol. 41, no. 2, pp. 834-848, February 1993. And code
    obtained from bigwww.epfl.ch by Philippe Thevenaz

    Limitations: Spline order must be between 0 and 5. Spline order must
    be set before setting the image. Uses mirror boundary conditions.
    Requires the same order of Spline for each dimension. Can only process
    LargestPossibleRegion

    See:   BSplineResampleImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUS2IUS2_Clone)
    SetSplineOrder = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUS2IUS2_SetSplineOrder)
    GetSplineOrder = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUS2IUS2_GetSplineOrder)
    GetSplinePoles = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUS2IUS2_GetSplinePoles)
    GetNumberOfPoles = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUS2IUS2_GetNumberOfPoles)
    DimensionCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUS2IUS2_DimensionCheck
    
    InputConvertibleToOutputCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    
    DoubleConvertibleToOutputCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUS2IUS2_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBSplineDecompositionImageFilterPython.delete_itkBSplineDecompositionImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBSplineDecompositionImageFilterIUS2IUS2

        Create a new object of the class itkBSplineDecompositionImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineDecompositionImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineDecompositionImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineDecompositionImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineDecompositionImageFilterIUS2IUS2 in _itkBSplineDecompositionImageFilterPython:
_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUS2IUS2_swigregister(itkBSplineDecompositionImageFilterIUS2IUS2)
itkBSplineDecompositionImageFilterIUS2IUS2___New_orig__ = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUS2IUS2___New_orig__
itkBSplineDecompositionImageFilterIUS2IUS2_cast = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUS2IUS2_cast


def itkBSplineDecompositionImageFilterIUS3IUS3_New():
    return itkBSplineDecompositionImageFilterIUS3IUS3.New()

class itkBSplineDecompositionImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""


    Calculates the B-Spline coefficients of an image. Spline order may be
    from 0 to 5.

    This class defines N-Dimension B-Spline transformation. It is based
    on: [1] M. Unser, "Splines: A Perfect Fit for Signal and Image
    Processing," IEEE Signal Processing Magazine, vol. 16, no. 6, pp.
    22-38, November 1999. [2] M. Unser, A. Aldroubi and M. Eden,
    "B-Spline Signal Processing: Part I--Theory," IEEE Transactions on
    Signal Processing, vol. 41, no. 2, pp. 821-832, February 1993. [3] M.
    Unser, A. Aldroubi and M. Eden, "B-Spline Signal Processing: Part II
    --Efficient Design and Applications," IEEE Transactions on Signal
    Processing, vol. 41, no. 2, pp. 834-848, February 1993. And code
    obtained from bigwww.epfl.ch by Philippe Thevenaz

    Limitations: Spline order must be between 0 and 5. Spline order must
    be set before setting the image. Uses mirror boundary conditions.
    Requires the same order of Spline for each dimension. Can only process
    LargestPossibleRegion

    See:   BSplineResampleImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUS3IUS3_Clone)
    SetSplineOrder = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUS3IUS3_SetSplineOrder)
    GetSplineOrder = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUS3IUS3_GetSplineOrder)
    GetSplinePoles = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUS3IUS3_GetSplinePoles)
    GetNumberOfPoles = _swig_new_instance_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUS3IUS3_GetNumberOfPoles)
    DimensionCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUS3IUS3_DimensionCheck
    
    InputConvertibleToOutputCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    
    DoubleConvertibleToOutputCheck = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUS3IUS3_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBSplineDecompositionImageFilterPython.delete_itkBSplineDecompositionImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBSplineDecompositionImageFilterIUS3IUS3

        Create a new object of the class itkBSplineDecompositionImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineDecompositionImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineDecompositionImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineDecompositionImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineDecompositionImageFilterIUS3IUS3 in _itkBSplineDecompositionImageFilterPython:
_itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUS3IUS3_swigregister(itkBSplineDecompositionImageFilterIUS3IUS3)
itkBSplineDecompositionImageFilterIUS3IUS3___New_orig__ = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUS3IUS3___New_orig__
itkBSplineDecompositionImageFilterIUS3IUS3_cast = _itkBSplineDecompositionImageFilterPython.itkBSplineDecompositionImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def b_spline_decomposition_image_filter(*args, **kwargs):
    """Procedural interface for BSplineDecompositionImageFilter"""
    import itk
    instance = itk.BSplineDecompositionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def b_spline_decomposition_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.BSplineDecompositionImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.BSplineDecompositionImageFilter.values()[0]
    else:
        filter_object = itk.BSplineDecompositionImageFilter

    b_spline_decomposition_image_filter.__doc__ = filter_object.__doc__
    b_spline_decomposition_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    b_spline_decomposition_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.BSplineDecompositionImageFilter, itkTemplate.itkTemplate):
        b_spline_decomposition_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        b_spline_decomposition_image_filter.__doc__ += "\n"
        b_spline_decomposition_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        b_spline_decomposition_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



