# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKNarrowBandPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _ITKNarrowBandBasePython
else:
    import _ITKNarrowBandBasePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _ITKNarrowBandBasePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _ITKNarrowBandBasePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
class itkBandNodeI2D(object):
    r"""Proxy of C++ itkBandNodeI2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkBandNodeI2D

    def __init__(self, *args):
        r"""
        __init__(itkBandNodeI2D self) -> itkBandNodeI2D
        __init__(itkBandNodeI2D self, itkBandNodeI2D arg0) -> itkBandNodeI2D
        """
        _ITKNarrowBandBasePython.itkBandNodeI2D_swiginit(self, _ITKNarrowBandBasePython.new_itkBandNodeI2D(*args))

# Register itkBandNodeI2D in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkBandNodeI2D_swigregister(itkBandNodeI2D)

class itkBandNodeI2F(object):
    r"""Proxy of C++ itkBandNodeI2F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkBandNodeI2F

    def __init__(self, *args):
        r"""
        __init__(itkBandNodeI2F self) -> itkBandNodeI2F
        __init__(itkBandNodeI2F self, itkBandNodeI2F arg0) -> itkBandNodeI2F
        """
        _ITKNarrowBandBasePython.itkBandNodeI2F_swiginit(self, _ITKNarrowBandBasePython.new_itkBandNodeI2F(*args))

# Register itkBandNodeI2F in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkBandNodeI2F_swigregister(itkBandNodeI2F)

class itkBandNodeI2SS(object):
    r"""Proxy of C++ itkBandNodeI2SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkBandNodeI2SS

    def __init__(self, *args):
        r"""
        __init__(itkBandNodeI2SS self) -> itkBandNodeI2SS
        __init__(itkBandNodeI2SS self, itkBandNodeI2SS arg0) -> itkBandNodeI2SS
        """
        _ITKNarrowBandBasePython.itkBandNodeI2SS_swiginit(self, _ITKNarrowBandBasePython.new_itkBandNodeI2SS(*args))

# Register itkBandNodeI2SS in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkBandNodeI2SS_swigregister(itkBandNodeI2SS)

class itkBandNodeI2UC(object):
    r"""Proxy of C++ itkBandNodeI2UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkBandNodeI2UC

    def __init__(self, *args):
        r"""
        __init__(itkBandNodeI2UC self) -> itkBandNodeI2UC
        __init__(itkBandNodeI2UC self, itkBandNodeI2UC arg0) -> itkBandNodeI2UC
        """
        _ITKNarrowBandBasePython.itkBandNodeI2UC_swiginit(self, _ITKNarrowBandBasePython.new_itkBandNodeI2UC(*args))

# Register itkBandNodeI2UC in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkBandNodeI2UC_swigregister(itkBandNodeI2UC)

class itkBandNodeI2US(object):
    r"""Proxy of C++ itkBandNodeI2US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkBandNodeI2US

    def __init__(self, *args):
        r"""
        __init__(itkBandNodeI2US self) -> itkBandNodeI2US
        __init__(itkBandNodeI2US self, itkBandNodeI2US arg0) -> itkBandNodeI2US
        """
        _ITKNarrowBandBasePython.itkBandNodeI2US_swiginit(self, _ITKNarrowBandBasePython.new_itkBandNodeI2US(*args))

# Register itkBandNodeI2US in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkBandNodeI2US_swigregister(itkBandNodeI2US)

class itkBandNodeI3D(object):
    r"""Proxy of C++ itkBandNodeI3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkBandNodeI3D

    def __init__(self, *args):
        r"""
        __init__(itkBandNodeI3D self) -> itkBandNodeI3D
        __init__(itkBandNodeI3D self, itkBandNodeI3D arg0) -> itkBandNodeI3D
        """
        _ITKNarrowBandBasePython.itkBandNodeI3D_swiginit(self, _ITKNarrowBandBasePython.new_itkBandNodeI3D(*args))

# Register itkBandNodeI3D in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkBandNodeI3D_swigregister(itkBandNodeI3D)

class itkBandNodeI3F(object):
    r"""Proxy of C++ itkBandNodeI3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkBandNodeI3F

    def __init__(self, *args):
        r"""
        __init__(itkBandNodeI3F self) -> itkBandNodeI3F
        __init__(itkBandNodeI3F self, itkBandNodeI3F arg0) -> itkBandNodeI3F
        """
        _ITKNarrowBandBasePython.itkBandNodeI3F_swiginit(self, _ITKNarrowBandBasePython.new_itkBandNodeI3F(*args))

# Register itkBandNodeI3F in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkBandNodeI3F_swigregister(itkBandNodeI3F)

class itkBandNodeI3SS(object):
    r"""Proxy of C++ itkBandNodeI3SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkBandNodeI3SS

    def __init__(self, *args):
        r"""
        __init__(itkBandNodeI3SS self) -> itkBandNodeI3SS
        __init__(itkBandNodeI3SS self, itkBandNodeI3SS arg0) -> itkBandNodeI3SS
        """
        _ITKNarrowBandBasePython.itkBandNodeI3SS_swiginit(self, _ITKNarrowBandBasePython.new_itkBandNodeI3SS(*args))

# Register itkBandNodeI3SS in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkBandNodeI3SS_swigregister(itkBandNodeI3SS)

class itkBandNodeI3UC(object):
    r"""Proxy of C++ itkBandNodeI3UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkBandNodeI3UC

    def __init__(self, *args):
        r"""
        __init__(itkBandNodeI3UC self) -> itkBandNodeI3UC
        __init__(itkBandNodeI3UC self, itkBandNodeI3UC arg0) -> itkBandNodeI3UC
        """
        _ITKNarrowBandBasePython.itkBandNodeI3UC_swiginit(self, _ITKNarrowBandBasePython.new_itkBandNodeI3UC(*args))

# Register itkBandNodeI3UC in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkBandNodeI3UC_swigregister(itkBandNodeI3UC)

class itkBandNodeI3US(object):
    r"""Proxy of C++ itkBandNodeI3US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkBandNodeI3US

    def __init__(self, *args):
        r"""
        __init__(itkBandNodeI3US self) -> itkBandNodeI3US
        __init__(itkBandNodeI3US self, itkBandNodeI3US arg0) -> itkBandNodeI3US
        """
        _ITKNarrowBandBasePython.itkBandNodeI3US_swiginit(self, _ITKNarrowBandBasePython.new_itkBandNodeI3US(*args))

# Register itkBandNodeI3US in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkBandNodeI3US_swigregister(itkBandNodeI3US)


def itkNarrowBandBNI2D_New():
    return itkNarrowBandBNI2D.New()

class itkNarrowBandBNI2D(itk.ITKCommonBasePython.itkLightObject):
    r"""


    Narrow Band class. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2D___New_orig__)
    Clone = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2D_Clone)
    Size = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2D_Size)
    Empty = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2D_Empty)
    Clear = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2D_Clear)
    Reserve = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2D_Reserve)
    PushBack = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2D_PushBack)
    PopBack = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2D_PopBack)
    Resize = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2D_Resize)
    SetTotalRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2D_SetTotalRadius)
    GetTotalRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2D_GetTotalRadius)
    SetInnerRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2D_SetInnerRadius)
    GetInnerRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2D_GetInnerRadius)
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkNarrowBandBNI2D
    cast = _swig_new_static_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2D_cast)

    def New(*args, **kargs):
        """New() -> itkNarrowBandBNI2D

        Create a new object of the class itkNarrowBandBNI2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNarrowBandBNI2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNarrowBandBNI2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNarrowBandBNI2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNarrowBandBNI2D in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkNarrowBandBNI2D_swigregister(itkNarrowBandBNI2D)
itkNarrowBandBNI2D___New_orig__ = _ITKNarrowBandBasePython.itkNarrowBandBNI2D___New_orig__
itkNarrowBandBNI2D_cast = _ITKNarrowBandBasePython.itkNarrowBandBNI2D_cast


def itkNarrowBandBNI2F_New():
    return itkNarrowBandBNI2F.New()

class itkNarrowBandBNI2F(itk.ITKCommonBasePython.itkLightObject):
    r"""


    Narrow Band class. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2F___New_orig__)
    Clone = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2F_Clone)
    Size = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2F_Size)
    Empty = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2F_Empty)
    Clear = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2F_Clear)
    Reserve = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2F_Reserve)
    PushBack = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2F_PushBack)
    PopBack = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2F_PopBack)
    Resize = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2F_Resize)
    SetTotalRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2F_SetTotalRadius)
    GetTotalRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2F_GetTotalRadius)
    SetInnerRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2F_SetInnerRadius)
    GetInnerRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2F_GetInnerRadius)
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkNarrowBandBNI2F
    cast = _swig_new_static_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2F_cast)

    def New(*args, **kargs):
        """New() -> itkNarrowBandBNI2F

        Create a new object of the class itkNarrowBandBNI2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNarrowBandBNI2F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNarrowBandBNI2F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNarrowBandBNI2F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNarrowBandBNI2F in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkNarrowBandBNI2F_swigregister(itkNarrowBandBNI2F)
itkNarrowBandBNI2F___New_orig__ = _ITKNarrowBandBasePython.itkNarrowBandBNI2F___New_orig__
itkNarrowBandBNI2F_cast = _ITKNarrowBandBasePython.itkNarrowBandBNI2F_cast


def itkNarrowBandBNI2SS_New():
    return itkNarrowBandBNI2SS.New()

class itkNarrowBandBNI2SS(itk.ITKCommonBasePython.itkLightObject):
    r"""


    Narrow Band class. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2SS___New_orig__)
    Clone = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2SS_Clone)
    Size = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2SS_Size)
    Empty = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2SS_Empty)
    Clear = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2SS_Clear)
    Reserve = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2SS_Reserve)
    PushBack = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2SS_PushBack)
    PopBack = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2SS_PopBack)
    Resize = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2SS_Resize)
    SetTotalRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2SS_SetTotalRadius)
    GetTotalRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2SS_GetTotalRadius)
    SetInnerRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2SS_SetInnerRadius)
    GetInnerRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2SS_GetInnerRadius)
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkNarrowBandBNI2SS
    cast = _swig_new_static_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2SS_cast)

    def New(*args, **kargs):
        """New() -> itkNarrowBandBNI2SS

        Create a new object of the class itkNarrowBandBNI2SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNarrowBandBNI2SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNarrowBandBNI2SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNarrowBandBNI2SS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNarrowBandBNI2SS in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkNarrowBandBNI2SS_swigregister(itkNarrowBandBNI2SS)
itkNarrowBandBNI2SS___New_orig__ = _ITKNarrowBandBasePython.itkNarrowBandBNI2SS___New_orig__
itkNarrowBandBNI2SS_cast = _ITKNarrowBandBasePython.itkNarrowBandBNI2SS_cast


def itkNarrowBandBNI2UC_New():
    return itkNarrowBandBNI2UC.New()

class itkNarrowBandBNI2UC(itk.ITKCommonBasePython.itkLightObject):
    r"""


    Narrow Band class. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2UC___New_orig__)
    Clone = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2UC_Clone)
    Size = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2UC_Size)
    Empty = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2UC_Empty)
    Clear = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2UC_Clear)
    Reserve = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2UC_Reserve)
    PushBack = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2UC_PushBack)
    PopBack = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2UC_PopBack)
    Resize = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2UC_Resize)
    SetTotalRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2UC_SetTotalRadius)
    GetTotalRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2UC_GetTotalRadius)
    SetInnerRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2UC_SetInnerRadius)
    GetInnerRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2UC_GetInnerRadius)
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkNarrowBandBNI2UC
    cast = _swig_new_static_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2UC_cast)

    def New(*args, **kargs):
        """New() -> itkNarrowBandBNI2UC

        Create a new object of the class itkNarrowBandBNI2UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNarrowBandBNI2UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNarrowBandBNI2UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNarrowBandBNI2UC.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNarrowBandBNI2UC in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkNarrowBandBNI2UC_swigregister(itkNarrowBandBNI2UC)
itkNarrowBandBNI2UC___New_orig__ = _ITKNarrowBandBasePython.itkNarrowBandBNI2UC___New_orig__
itkNarrowBandBNI2UC_cast = _ITKNarrowBandBasePython.itkNarrowBandBNI2UC_cast


def itkNarrowBandBNI2US_New():
    return itkNarrowBandBNI2US.New()

class itkNarrowBandBNI2US(itk.ITKCommonBasePython.itkLightObject):
    r"""


    Narrow Band class. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2US___New_orig__)
    Clone = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2US_Clone)
    Size = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2US_Size)
    Empty = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2US_Empty)
    Clear = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2US_Clear)
    Reserve = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2US_Reserve)
    PushBack = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2US_PushBack)
    PopBack = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2US_PopBack)
    Resize = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2US_Resize)
    SetTotalRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2US_SetTotalRadius)
    GetTotalRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2US_GetTotalRadius)
    SetInnerRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2US_SetInnerRadius)
    GetInnerRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2US_GetInnerRadius)
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkNarrowBandBNI2US
    cast = _swig_new_static_method(_ITKNarrowBandBasePython.itkNarrowBandBNI2US_cast)

    def New(*args, **kargs):
        """New() -> itkNarrowBandBNI2US

        Create a new object of the class itkNarrowBandBNI2US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNarrowBandBNI2US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNarrowBandBNI2US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNarrowBandBNI2US.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNarrowBandBNI2US in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkNarrowBandBNI2US_swigregister(itkNarrowBandBNI2US)
itkNarrowBandBNI2US___New_orig__ = _ITKNarrowBandBasePython.itkNarrowBandBNI2US___New_orig__
itkNarrowBandBNI2US_cast = _ITKNarrowBandBasePython.itkNarrowBandBNI2US_cast


def itkNarrowBandBNI3D_New():
    return itkNarrowBandBNI3D.New()

class itkNarrowBandBNI3D(itk.ITKCommonBasePython.itkLightObject):
    r"""


    Narrow Band class. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3D___New_orig__)
    Clone = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3D_Clone)
    Size = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3D_Size)
    Empty = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3D_Empty)
    Clear = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3D_Clear)
    Reserve = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3D_Reserve)
    PushBack = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3D_PushBack)
    PopBack = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3D_PopBack)
    Resize = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3D_Resize)
    SetTotalRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3D_SetTotalRadius)
    GetTotalRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3D_GetTotalRadius)
    SetInnerRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3D_SetInnerRadius)
    GetInnerRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3D_GetInnerRadius)
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkNarrowBandBNI3D
    cast = _swig_new_static_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3D_cast)

    def New(*args, **kargs):
        """New() -> itkNarrowBandBNI3D

        Create a new object of the class itkNarrowBandBNI3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNarrowBandBNI3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNarrowBandBNI3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNarrowBandBNI3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNarrowBandBNI3D in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkNarrowBandBNI3D_swigregister(itkNarrowBandBNI3D)
itkNarrowBandBNI3D___New_orig__ = _ITKNarrowBandBasePython.itkNarrowBandBNI3D___New_orig__
itkNarrowBandBNI3D_cast = _ITKNarrowBandBasePython.itkNarrowBandBNI3D_cast


def itkNarrowBandBNI3F_New():
    return itkNarrowBandBNI3F.New()

class itkNarrowBandBNI3F(itk.ITKCommonBasePython.itkLightObject):
    r"""


    Narrow Band class. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3F___New_orig__)
    Clone = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3F_Clone)
    Size = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3F_Size)
    Empty = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3F_Empty)
    Clear = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3F_Clear)
    Reserve = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3F_Reserve)
    PushBack = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3F_PushBack)
    PopBack = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3F_PopBack)
    Resize = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3F_Resize)
    SetTotalRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3F_SetTotalRadius)
    GetTotalRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3F_GetTotalRadius)
    SetInnerRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3F_SetInnerRadius)
    GetInnerRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3F_GetInnerRadius)
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkNarrowBandBNI3F
    cast = _swig_new_static_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3F_cast)

    def New(*args, **kargs):
        """New() -> itkNarrowBandBNI3F

        Create a new object of the class itkNarrowBandBNI3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNarrowBandBNI3F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNarrowBandBNI3F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNarrowBandBNI3F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNarrowBandBNI3F in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkNarrowBandBNI3F_swigregister(itkNarrowBandBNI3F)
itkNarrowBandBNI3F___New_orig__ = _ITKNarrowBandBasePython.itkNarrowBandBNI3F___New_orig__
itkNarrowBandBNI3F_cast = _ITKNarrowBandBasePython.itkNarrowBandBNI3F_cast


def itkNarrowBandBNI3SS_New():
    return itkNarrowBandBNI3SS.New()

class itkNarrowBandBNI3SS(itk.ITKCommonBasePython.itkLightObject):
    r"""


    Narrow Band class. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3SS___New_orig__)
    Clone = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3SS_Clone)
    Size = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3SS_Size)
    Empty = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3SS_Empty)
    Clear = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3SS_Clear)
    Reserve = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3SS_Reserve)
    PushBack = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3SS_PushBack)
    PopBack = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3SS_PopBack)
    Resize = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3SS_Resize)
    SetTotalRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3SS_SetTotalRadius)
    GetTotalRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3SS_GetTotalRadius)
    SetInnerRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3SS_SetInnerRadius)
    GetInnerRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3SS_GetInnerRadius)
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkNarrowBandBNI3SS
    cast = _swig_new_static_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3SS_cast)

    def New(*args, **kargs):
        """New() -> itkNarrowBandBNI3SS

        Create a new object of the class itkNarrowBandBNI3SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNarrowBandBNI3SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNarrowBandBNI3SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNarrowBandBNI3SS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNarrowBandBNI3SS in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkNarrowBandBNI3SS_swigregister(itkNarrowBandBNI3SS)
itkNarrowBandBNI3SS___New_orig__ = _ITKNarrowBandBasePython.itkNarrowBandBNI3SS___New_orig__
itkNarrowBandBNI3SS_cast = _ITKNarrowBandBasePython.itkNarrowBandBNI3SS_cast


def itkNarrowBandBNI3UC_New():
    return itkNarrowBandBNI3UC.New()

class itkNarrowBandBNI3UC(itk.ITKCommonBasePython.itkLightObject):
    r"""


    Narrow Band class. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3UC___New_orig__)
    Clone = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3UC_Clone)
    Size = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3UC_Size)
    Empty = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3UC_Empty)
    Clear = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3UC_Clear)
    Reserve = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3UC_Reserve)
    PushBack = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3UC_PushBack)
    PopBack = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3UC_PopBack)
    Resize = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3UC_Resize)
    SetTotalRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3UC_SetTotalRadius)
    GetTotalRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3UC_GetTotalRadius)
    SetInnerRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3UC_SetInnerRadius)
    GetInnerRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3UC_GetInnerRadius)
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkNarrowBandBNI3UC
    cast = _swig_new_static_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3UC_cast)

    def New(*args, **kargs):
        """New() -> itkNarrowBandBNI3UC

        Create a new object of the class itkNarrowBandBNI3UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNarrowBandBNI3UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNarrowBandBNI3UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNarrowBandBNI3UC.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNarrowBandBNI3UC in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkNarrowBandBNI3UC_swigregister(itkNarrowBandBNI3UC)
itkNarrowBandBNI3UC___New_orig__ = _ITKNarrowBandBasePython.itkNarrowBandBNI3UC___New_orig__
itkNarrowBandBNI3UC_cast = _ITKNarrowBandBasePython.itkNarrowBandBNI3UC_cast


def itkNarrowBandBNI3US_New():
    return itkNarrowBandBNI3US.New()

class itkNarrowBandBNI3US(itk.ITKCommonBasePython.itkLightObject):
    r"""


    Narrow Band class. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3US___New_orig__)
    Clone = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3US_Clone)
    Size = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3US_Size)
    Empty = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3US_Empty)
    Clear = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3US_Clear)
    Reserve = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3US_Reserve)
    PushBack = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3US_PushBack)
    PopBack = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3US_PopBack)
    Resize = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3US_Resize)
    SetTotalRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3US_SetTotalRadius)
    GetTotalRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3US_GetTotalRadius)
    SetInnerRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3US_SetInnerRadius)
    GetInnerRadius = _swig_new_instance_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3US_GetInnerRadius)
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkNarrowBandBNI3US
    cast = _swig_new_static_method(_ITKNarrowBandBasePython.itkNarrowBandBNI3US_cast)

    def New(*args, **kargs):
        """New() -> itkNarrowBandBNI3US

        Create a new object of the class itkNarrowBandBNI3US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNarrowBandBNI3US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNarrowBandBNI3US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNarrowBandBNI3US.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNarrowBandBNI3US in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkNarrowBandBNI3US_swigregister(itkNarrowBandBNI3US)
itkNarrowBandBNI3US___New_orig__ = _ITKNarrowBandBasePython.itkNarrowBandBNI3US___New_orig__
itkNarrowBandBNI3US_cast = _ITKNarrowBandBasePython.itkNarrowBandBNI3US_cast



