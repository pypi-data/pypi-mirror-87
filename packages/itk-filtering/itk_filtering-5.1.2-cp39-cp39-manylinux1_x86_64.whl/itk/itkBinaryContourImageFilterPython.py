# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageLabelPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBinaryContourImageFilterPython
else:
    import _itkBinaryContourImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkBinaryContourImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkBinaryContourImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkRGBPixelPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterBPython
import itk.itkScanlineFilterCommonPython

def itkBinaryContourImageFilterID2ID2_New():
    return itkBinaryContourImageFilterID2ID2.New()

class itkBinaryContourImageFilterID2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""


    Labels the pixels on the border of the objects in a binary image.

    BinaryContourImageFilter takes a binary image as input, where the
    pixels in the objects are the pixels with a value equal to
    ForegroundValue. Only the pixels on the contours of the objects are
    kept. The pixels not on the border are changed to BackgroundValue.

    The connectivity can be changed to minimum or maximum connectivity
    with SetFullyConnected(). Full connectivity produces thicker contours.

    https://hdl.handle.net/1926/1352

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   LabelContourImageFilter BinaryErodeImageFilter
    SimpleContourExtractorImageFilter  Outer Boundaries Of Blobs In Binary
    Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID2ID2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID2ID2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID2ID2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID2ID2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID2ID2_FullyConnectedOff)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID2ID2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID2ID2_GetBackgroundValue)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID2ID2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID2ID2_GetForegroundValue)
    __swig_destroy__ = _itkBinaryContourImageFilterPython.delete_itkBinaryContourImageFilterID2ID2
    cast = _swig_new_static_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryContourImageFilterID2ID2

        Create a new object of the class itkBinaryContourImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryContourImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryContourImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryContourImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryContourImageFilterID2ID2 in _itkBinaryContourImageFilterPython:
_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID2ID2_swigregister(itkBinaryContourImageFilterID2ID2)
itkBinaryContourImageFilterID2ID2___New_orig__ = _itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID2ID2___New_orig__
itkBinaryContourImageFilterID2ID2_cast = _itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID2ID2_cast


def itkBinaryContourImageFilterID3ID3_New():
    return itkBinaryContourImageFilterID3ID3.New()

class itkBinaryContourImageFilterID3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""


    Labels the pixels on the border of the objects in a binary image.

    BinaryContourImageFilter takes a binary image as input, where the
    pixels in the objects are the pixels with a value equal to
    ForegroundValue. Only the pixels on the contours of the objects are
    kept. The pixels not on the border are changed to BackgroundValue.

    The connectivity can be changed to minimum or maximum connectivity
    with SetFullyConnected(). Full connectivity produces thicker contours.

    https://hdl.handle.net/1926/1352

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   LabelContourImageFilter BinaryErodeImageFilter
    SimpleContourExtractorImageFilter  Outer Boundaries Of Blobs In Binary
    Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID3ID3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID3ID3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID3ID3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID3ID3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID3ID3_FullyConnectedOff)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID3ID3_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID3ID3_GetBackgroundValue)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID3ID3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID3ID3_GetForegroundValue)
    __swig_destroy__ = _itkBinaryContourImageFilterPython.delete_itkBinaryContourImageFilterID3ID3
    cast = _swig_new_static_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryContourImageFilterID3ID3

        Create a new object of the class itkBinaryContourImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryContourImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryContourImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryContourImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryContourImageFilterID3ID3 in _itkBinaryContourImageFilterPython:
_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID3ID3_swigregister(itkBinaryContourImageFilterID3ID3)
itkBinaryContourImageFilterID3ID3___New_orig__ = _itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID3ID3___New_orig__
itkBinaryContourImageFilterID3ID3_cast = _itkBinaryContourImageFilterPython.itkBinaryContourImageFilterID3ID3_cast


def itkBinaryContourImageFilterIF2IF2_New():
    return itkBinaryContourImageFilterIF2IF2.New()

class itkBinaryContourImageFilterIF2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""


    Labels the pixels on the border of the objects in a binary image.

    BinaryContourImageFilter takes a binary image as input, where the
    pixels in the objects are the pixels with a value equal to
    ForegroundValue. Only the pixels on the contours of the objects are
    kept. The pixels not on the border are changed to BackgroundValue.

    The connectivity can be changed to minimum or maximum connectivity
    with SetFullyConnected(). Full connectivity produces thicker contours.

    https://hdl.handle.net/1926/1352

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   LabelContourImageFilter BinaryErodeImageFilter
    SimpleContourExtractorImageFilter  Outer Boundaries Of Blobs In Binary
    Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF2IF2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF2IF2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF2IF2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF2IF2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF2IF2_FullyConnectedOff)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF2IF2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF2IF2_GetBackgroundValue)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF2IF2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF2IF2_GetForegroundValue)
    __swig_destroy__ = _itkBinaryContourImageFilterPython.delete_itkBinaryContourImageFilterIF2IF2
    cast = _swig_new_static_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryContourImageFilterIF2IF2

        Create a new object of the class itkBinaryContourImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryContourImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryContourImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryContourImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryContourImageFilterIF2IF2 in _itkBinaryContourImageFilterPython:
_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF2IF2_swigregister(itkBinaryContourImageFilterIF2IF2)
itkBinaryContourImageFilterIF2IF2___New_orig__ = _itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF2IF2___New_orig__
itkBinaryContourImageFilterIF2IF2_cast = _itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF2IF2_cast


def itkBinaryContourImageFilterIF3IF3_New():
    return itkBinaryContourImageFilterIF3IF3.New()

class itkBinaryContourImageFilterIF3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""


    Labels the pixels on the border of the objects in a binary image.

    BinaryContourImageFilter takes a binary image as input, where the
    pixels in the objects are the pixels with a value equal to
    ForegroundValue. Only the pixels on the contours of the objects are
    kept. The pixels not on the border are changed to BackgroundValue.

    The connectivity can be changed to minimum or maximum connectivity
    with SetFullyConnected(). Full connectivity produces thicker contours.

    https://hdl.handle.net/1926/1352

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   LabelContourImageFilter BinaryErodeImageFilter
    SimpleContourExtractorImageFilter  Outer Boundaries Of Blobs In Binary
    Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF3IF3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF3IF3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF3IF3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF3IF3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF3IF3_FullyConnectedOff)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF3IF3_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF3IF3_GetBackgroundValue)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF3IF3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF3IF3_GetForegroundValue)
    __swig_destroy__ = _itkBinaryContourImageFilterPython.delete_itkBinaryContourImageFilterIF3IF3
    cast = _swig_new_static_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryContourImageFilterIF3IF3

        Create a new object of the class itkBinaryContourImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryContourImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryContourImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryContourImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryContourImageFilterIF3IF3 in _itkBinaryContourImageFilterPython:
_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF3IF3_swigregister(itkBinaryContourImageFilterIF3IF3)
itkBinaryContourImageFilterIF3IF3___New_orig__ = _itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF3IF3___New_orig__
itkBinaryContourImageFilterIF3IF3_cast = _itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIF3IF3_cast


def itkBinaryContourImageFilterISS2ISS2_New():
    return itkBinaryContourImageFilterISS2ISS2.New()

class itkBinaryContourImageFilterISS2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    r"""


    Labels the pixels on the border of the objects in a binary image.

    BinaryContourImageFilter takes a binary image as input, where the
    pixels in the objects are the pixels with a value equal to
    ForegroundValue. Only the pixels on the contours of the objects are
    kept. The pixels not on the border are changed to BackgroundValue.

    The connectivity can be changed to minimum or maximum connectivity
    with SetFullyConnected(). Full connectivity produces thicker contours.

    https://hdl.handle.net/1926/1352

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   LabelContourImageFilter BinaryErodeImageFilter
    SimpleContourExtractorImageFilter  Outer Boundaries Of Blobs In Binary
    Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS2ISS2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS2ISS2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS2ISS2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS2ISS2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS2ISS2_FullyConnectedOff)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS2ISS2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS2ISS2_GetBackgroundValue)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS2ISS2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS2ISS2_GetForegroundValue)
    __swig_destroy__ = _itkBinaryContourImageFilterPython.delete_itkBinaryContourImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryContourImageFilterISS2ISS2

        Create a new object of the class itkBinaryContourImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryContourImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryContourImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryContourImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryContourImageFilterISS2ISS2 in _itkBinaryContourImageFilterPython:
_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS2ISS2_swigregister(itkBinaryContourImageFilterISS2ISS2)
itkBinaryContourImageFilterISS2ISS2___New_orig__ = _itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS2ISS2___New_orig__
itkBinaryContourImageFilterISS2ISS2_cast = _itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS2ISS2_cast


def itkBinaryContourImageFilterISS3ISS3_New():
    return itkBinaryContourImageFilterISS3ISS3.New()

class itkBinaryContourImageFilterISS3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    r"""


    Labels the pixels on the border of the objects in a binary image.

    BinaryContourImageFilter takes a binary image as input, where the
    pixels in the objects are the pixels with a value equal to
    ForegroundValue. Only the pixels on the contours of the objects are
    kept. The pixels not on the border are changed to BackgroundValue.

    The connectivity can be changed to minimum or maximum connectivity
    with SetFullyConnected(). Full connectivity produces thicker contours.

    https://hdl.handle.net/1926/1352

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   LabelContourImageFilter BinaryErodeImageFilter
    SimpleContourExtractorImageFilter  Outer Boundaries Of Blobs In Binary
    Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS3ISS3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS3ISS3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS3ISS3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS3ISS3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS3ISS3_FullyConnectedOff)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS3ISS3_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS3ISS3_GetBackgroundValue)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS3ISS3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS3ISS3_GetForegroundValue)
    __swig_destroy__ = _itkBinaryContourImageFilterPython.delete_itkBinaryContourImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryContourImageFilterISS3ISS3

        Create a new object of the class itkBinaryContourImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryContourImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryContourImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryContourImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryContourImageFilterISS3ISS3 in _itkBinaryContourImageFilterPython:
_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS3ISS3_swigregister(itkBinaryContourImageFilterISS3ISS3)
itkBinaryContourImageFilterISS3ISS3___New_orig__ = _itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS3ISS3___New_orig__
itkBinaryContourImageFilterISS3ISS3_cast = _itkBinaryContourImageFilterPython.itkBinaryContourImageFilterISS3ISS3_cast


def itkBinaryContourImageFilterIUC2IUC2_New():
    return itkBinaryContourImageFilterIUC2IUC2.New()

class itkBinaryContourImageFilterIUC2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    r"""


    Labels the pixels on the border of the objects in a binary image.

    BinaryContourImageFilter takes a binary image as input, where the
    pixels in the objects are the pixels with a value equal to
    ForegroundValue. Only the pixels on the contours of the objects are
    kept. The pixels not on the border are changed to BackgroundValue.

    The connectivity can be changed to minimum or maximum connectivity
    with SetFullyConnected(). Full connectivity produces thicker contours.

    https://hdl.handle.net/1926/1352

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   LabelContourImageFilter BinaryErodeImageFilter
    SimpleContourExtractorImageFilter  Outer Boundaries Of Blobs In Binary
    Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC2IUC2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC2IUC2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC2IUC2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC2IUC2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC2IUC2_FullyConnectedOff)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC2IUC2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC2IUC2_GetBackgroundValue)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC2IUC2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC2IUC2_GetForegroundValue)
    __swig_destroy__ = _itkBinaryContourImageFilterPython.delete_itkBinaryContourImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryContourImageFilterIUC2IUC2

        Create a new object of the class itkBinaryContourImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryContourImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryContourImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryContourImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryContourImageFilterIUC2IUC2 in _itkBinaryContourImageFilterPython:
_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC2IUC2_swigregister(itkBinaryContourImageFilterIUC2IUC2)
itkBinaryContourImageFilterIUC2IUC2___New_orig__ = _itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC2IUC2___New_orig__
itkBinaryContourImageFilterIUC2IUC2_cast = _itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC2IUC2_cast


def itkBinaryContourImageFilterIUC3IUC3_New():
    return itkBinaryContourImageFilterIUC3IUC3.New()

class itkBinaryContourImageFilterIUC3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    r"""


    Labels the pixels on the border of the objects in a binary image.

    BinaryContourImageFilter takes a binary image as input, where the
    pixels in the objects are the pixels with a value equal to
    ForegroundValue. Only the pixels on the contours of the objects are
    kept. The pixels not on the border are changed to BackgroundValue.

    The connectivity can be changed to minimum or maximum connectivity
    with SetFullyConnected(). Full connectivity produces thicker contours.

    https://hdl.handle.net/1926/1352

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   LabelContourImageFilter BinaryErodeImageFilter
    SimpleContourExtractorImageFilter  Outer Boundaries Of Blobs In Binary
    Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC3IUC3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC3IUC3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC3IUC3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC3IUC3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC3IUC3_FullyConnectedOff)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC3IUC3_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC3IUC3_GetBackgroundValue)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC3IUC3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC3IUC3_GetForegroundValue)
    __swig_destroy__ = _itkBinaryContourImageFilterPython.delete_itkBinaryContourImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryContourImageFilterIUC3IUC3

        Create a new object of the class itkBinaryContourImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryContourImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryContourImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryContourImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryContourImageFilterIUC3IUC3 in _itkBinaryContourImageFilterPython:
_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC3IUC3_swigregister(itkBinaryContourImageFilterIUC3IUC3)
itkBinaryContourImageFilterIUC3IUC3___New_orig__ = _itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC3IUC3___New_orig__
itkBinaryContourImageFilterIUC3IUC3_cast = _itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUC3IUC3_cast


def itkBinaryContourImageFilterIUS2IUS2_New():
    return itkBinaryContourImageFilterIUS2IUS2.New()

class itkBinaryContourImageFilterIUS2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""


    Labels the pixels on the border of the objects in a binary image.

    BinaryContourImageFilter takes a binary image as input, where the
    pixels in the objects are the pixels with a value equal to
    ForegroundValue. Only the pixels on the contours of the objects are
    kept. The pixels not on the border are changed to BackgroundValue.

    The connectivity can be changed to minimum or maximum connectivity
    with SetFullyConnected(). Full connectivity produces thicker contours.

    https://hdl.handle.net/1926/1352

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   LabelContourImageFilter BinaryErodeImageFilter
    SimpleContourExtractorImageFilter  Outer Boundaries Of Blobs In Binary
    Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS2IUS2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS2IUS2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS2IUS2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS2IUS2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS2IUS2_FullyConnectedOff)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS2IUS2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS2IUS2_GetBackgroundValue)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS2IUS2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS2IUS2_GetForegroundValue)
    __swig_destroy__ = _itkBinaryContourImageFilterPython.delete_itkBinaryContourImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryContourImageFilterIUS2IUS2

        Create a new object of the class itkBinaryContourImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryContourImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryContourImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryContourImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryContourImageFilterIUS2IUS2 in _itkBinaryContourImageFilterPython:
_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS2IUS2_swigregister(itkBinaryContourImageFilterIUS2IUS2)
itkBinaryContourImageFilterIUS2IUS2___New_orig__ = _itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS2IUS2___New_orig__
itkBinaryContourImageFilterIUS2IUS2_cast = _itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS2IUS2_cast


def itkBinaryContourImageFilterIUS3IUS3_New():
    return itkBinaryContourImageFilterIUS3IUS3.New()

class itkBinaryContourImageFilterIUS3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""


    Labels the pixels on the border of the objects in a binary image.

    BinaryContourImageFilter takes a binary image as input, where the
    pixels in the objects are the pixels with a value equal to
    ForegroundValue. Only the pixels on the contours of the objects are
    kept. The pixels not on the border are changed to BackgroundValue.

    The connectivity can be changed to minimum or maximum connectivity
    with SetFullyConnected(). Full connectivity produces thicker contours.

    https://hdl.handle.net/1926/1352

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   LabelContourImageFilter BinaryErodeImageFilter
    SimpleContourExtractorImageFilter  Outer Boundaries Of Blobs In Binary
    Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS3IUS3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS3IUS3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS3IUS3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS3IUS3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS3IUS3_FullyConnectedOff)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS3IUS3_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS3IUS3_GetBackgroundValue)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS3IUS3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS3IUS3_GetForegroundValue)
    __swig_destroy__ = _itkBinaryContourImageFilterPython.delete_itkBinaryContourImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryContourImageFilterIUS3IUS3

        Create a new object of the class itkBinaryContourImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryContourImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryContourImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryContourImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryContourImageFilterIUS3IUS3 in _itkBinaryContourImageFilterPython:
_itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS3IUS3_swigregister(itkBinaryContourImageFilterIUS3IUS3)
itkBinaryContourImageFilterIUS3IUS3___New_orig__ = _itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS3IUS3___New_orig__
itkBinaryContourImageFilterIUS3IUS3_cast = _itkBinaryContourImageFilterPython.itkBinaryContourImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def binary_contour_image_filter(*args, **kwargs):
    """Procedural interface for BinaryContourImageFilter"""
    import itk
    instance = itk.BinaryContourImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def binary_contour_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.BinaryContourImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.BinaryContourImageFilter.values()[0]
    else:
        filter_object = itk.BinaryContourImageFilter

    binary_contour_image_filter.__doc__ = filter_object.__doc__
    binary_contour_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    binary_contour_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.BinaryContourImageFilter, itkTemplate.itkTemplate):
        binary_contour_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        binary_contour_image_filter.__doc__ += "\n"
        binary_contour_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        binary_contour_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



