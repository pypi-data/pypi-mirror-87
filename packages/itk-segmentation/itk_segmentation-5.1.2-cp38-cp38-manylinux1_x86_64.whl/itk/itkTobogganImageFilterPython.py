# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKWatershedsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkTobogganImageFilterPython
else:
    import _itkTobogganImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkTobogganImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkTobogganImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageToImageFilterAPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkPointPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.ITKCommonBasePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython

def itkTobogganImageFilterID2_New():
    return itkTobogganImageFilterID2.New()

class itkTobogganImageFilterID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2):
    r"""


    toboggan image segmentation The Toboggan segmentation takes a gradient
    magnitude image as input and produces an (over-)segmentation of the
    image based on connecting each pixel to a local minimum of gradient.
    It is roughly equivalent to a watershed segmentation of the lowest
    level.

    The output is a 4 connected labeled map of the image. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkTobogganImageFilterPython.itkTobogganImageFilterID2_ImageDimension
    
    __New_orig__ = _swig_new_static_method(_itkTobogganImageFilterPython.itkTobogganImageFilterID2___New_orig__)
    Clone = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterID2_Clone)
    GenerateData = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterID2_GenerateData)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterID2_GenerateInputRequestedRegion)
    LessThanComparableCheck = _itkTobogganImageFilterPython.itkTobogganImageFilterID2_LessThanComparableCheck
    
    OStreamWritableCheck = _itkTobogganImageFilterPython.itkTobogganImageFilterID2_OStreamWritableCheck
    
    __swig_destroy__ = _itkTobogganImageFilterPython.delete_itkTobogganImageFilterID2
    cast = _swig_new_static_method(_itkTobogganImageFilterPython.itkTobogganImageFilterID2_cast)

    def New(*args, **kargs):
        """New() -> itkTobogganImageFilterID2

        Create a new object of the class itkTobogganImageFilterID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTobogganImageFilterID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTobogganImageFilterID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTobogganImageFilterID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTobogganImageFilterID2 in _itkTobogganImageFilterPython:
_itkTobogganImageFilterPython.itkTobogganImageFilterID2_swigregister(itkTobogganImageFilterID2)
itkTobogganImageFilterID2___New_orig__ = _itkTobogganImageFilterPython.itkTobogganImageFilterID2___New_orig__
itkTobogganImageFilterID2_cast = _itkTobogganImageFilterPython.itkTobogganImageFilterID2_cast


def itkTobogganImageFilterID3_New():
    return itkTobogganImageFilterID3.New()

class itkTobogganImageFilterID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3):
    r"""


    toboggan image segmentation The Toboggan segmentation takes a gradient
    magnitude image as input and produces an (over-)segmentation of the
    image based on connecting each pixel to a local minimum of gradient.
    It is roughly equivalent to a watershed segmentation of the lowest
    level.

    The output is a 4 connected labeled map of the image. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkTobogganImageFilterPython.itkTobogganImageFilterID3_ImageDimension
    
    __New_orig__ = _swig_new_static_method(_itkTobogganImageFilterPython.itkTobogganImageFilterID3___New_orig__)
    Clone = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterID3_Clone)
    GenerateData = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterID3_GenerateData)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterID3_GenerateInputRequestedRegion)
    LessThanComparableCheck = _itkTobogganImageFilterPython.itkTobogganImageFilterID3_LessThanComparableCheck
    
    OStreamWritableCheck = _itkTobogganImageFilterPython.itkTobogganImageFilterID3_OStreamWritableCheck
    
    __swig_destroy__ = _itkTobogganImageFilterPython.delete_itkTobogganImageFilterID3
    cast = _swig_new_static_method(_itkTobogganImageFilterPython.itkTobogganImageFilterID3_cast)

    def New(*args, **kargs):
        """New() -> itkTobogganImageFilterID3

        Create a new object of the class itkTobogganImageFilterID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTobogganImageFilterID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTobogganImageFilterID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTobogganImageFilterID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTobogganImageFilterID3 in _itkTobogganImageFilterPython:
_itkTobogganImageFilterPython.itkTobogganImageFilterID3_swigregister(itkTobogganImageFilterID3)
itkTobogganImageFilterID3___New_orig__ = _itkTobogganImageFilterPython.itkTobogganImageFilterID3___New_orig__
itkTobogganImageFilterID3_cast = _itkTobogganImageFilterPython.itkTobogganImageFilterID3_cast


def itkTobogganImageFilterIF2_New():
    return itkTobogganImageFilterIF2.New()

class itkTobogganImageFilterIF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2):
    r"""


    toboggan image segmentation The Toboggan segmentation takes a gradient
    magnitude image as input and produces an (over-)segmentation of the
    image based on connecting each pixel to a local minimum of gradient.
    It is roughly equivalent to a watershed segmentation of the lowest
    level.

    The output is a 4 connected labeled map of the image. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkTobogganImageFilterPython.itkTobogganImageFilterIF2_ImageDimension
    
    __New_orig__ = _swig_new_static_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIF2_Clone)
    GenerateData = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIF2_GenerateData)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIF2_GenerateInputRequestedRegion)
    LessThanComparableCheck = _itkTobogganImageFilterPython.itkTobogganImageFilterIF2_LessThanComparableCheck
    
    OStreamWritableCheck = _itkTobogganImageFilterPython.itkTobogganImageFilterIF2_OStreamWritableCheck
    
    __swig_destroy__ = _itkTobogganImageFilterPython.delete_itkTobogganImageFilterIF2
    cast = _swig_new_static_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIF2_cast)

    def New(*args, **kargs):
        """New() -> itkTobogganImageFilterIF2

        Create a new object of the class itkTobogganImageFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTobogganImageFilterIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTobogganImageFilterIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTobogganImageFilterIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTobogganImageFilterIF2 in _itkTobogganImageFilterPython:
_itkTobogganImageFilterPython.itkTobogganImageFilterIF2_swigregister(itkTobogganImageFilterIF2)
itkTobogganImageFilterIF2___New_orig__ = _itkTobogganImageFilterPython.itkTobogganImageFilterIF2___New_orig__
itkTobogganImageFilterIF2_cast = _itkTobogganImageFilterPython.itkTobogganImageFilterIF2_cast


def itkTobogganImageFilterIF3_New():
    return itkTobogganImageFilterIF3.New()

class itkTobogganImageFilterIF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3):
    r"""


    toboggan image segmentation The Toboggan segmentation takes a gradient
    magnitude image as input and produces an (over-)segmentation of the
    image based on connecting each pixel to a local minimum of gradient.
    It is roughly equivalent to a watershed segmentation of the lowest
    level.

    The output is a 4 connected labeled map of the image. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkTobogganImageFilterPython.itkTobogganImageFilterIF3_ImageDimension
    
    __New_orig__ = _swig_new_static_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIF3_Clone)
    GenerateData = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIF3_GenerateData)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIF3_GenerateInputRequestedRegion)
    LessThanComparableCheck = _itkTobogganImageFilterPython.itkTobogganImageFilterIF3_LessThanComparableCheck
    
    OStreamWritableCheck = _itkTobogganImageFilterPython.itkTobogganImageFilterIF3_OStreamWritableCheck
    
    __swig_destroy__ = _itkTobogganImageFilterPython.delete_itkTobogganImageFilterIF3
    cast = _swig_new_static_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIF3_cast)

    def New(*args, **kargs):
        """New() -> itkTobogganImageFilterIF3

        Create a new object of the class itkTobogganImageFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTobogganImageFilterIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTobogganImageFilterIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTobogganImageFilterIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTobogganImageFilterIF3 in _itkTobogganImageFilterPython:
_itkTobogganImageFilterPython.itkTobogganImageFilterIF3_swigregister(itkTobogganImageFilterIF3)
itkTobogganImageFilterIF3___New_orig__ = _itkTobogganImageFilterPython.itkTobogganImageFilterIF3___New_orig__
itkTobogganImageFilterIF3_cast = _itkTobogganImageFilterPython.itkTobogganImageFilterIF3_cast


def itkTobogganImageFilterISS2_New():
    return itkTobogganImageFilterISS2.New()

class itkTobogganImageFilterISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2IUL2):
    r"""


    toboggan image segmentation The Toboggan segmentation takes a gradient
    magnitude image as input and produces an (over-)segmentation of the
    image based on connecting each pixel to a local minimum of gradient.
    It is roughly equivalent to a watershed segmentation of the lowest
    level.

    The output is a 4 connected labeled map of the image. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkTobogganImageFilterPython.itkTobogganImageFilterISS2_ImageDimension
    
    __New_orig__ = _swig_new_static_method(_itkTobogganImageFilterPython.itkTobogganImageFilterISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterISS2_Clone)
    GenerateData = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterISS2_GenerateData)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterISS2_GenerateInputRequestedRegion)
    LessThanComparableCheck = _itkTobogganImageFilterPython.itkTobogganImageFilterISS2_LessThanComparableCheck
    
    OStreamWritableCheck = _itkTobogganImageFilterPython.itkTobogganImageFilterISS2_OStreamWritableCheck
    
    __swig_destroy__ = _itkTobogganImageFilterPython.delete_itkTobogganImageFilterISS2
    cast = _swig_new_static_method(_itkTobogganImageFilterPython.itkTobogganImageFilterISS2_cast)

    def New(*args, **kargs):
        """New() -> itkTobogganImageFilterISS2

        Create a new object of the class itkTobogganImageFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTobogganImageFilterISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTobogganImageFilterISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTobogganImageFilterISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTobogganImageFilterISS2 in _itkTobogganImageFilterPython:
_itkTobogganImageFilterPython.itkTobogganImageFilterISS2_swigregister(itkTobogganImageFilterISS2)
itkTobogganImageFilterISS2___New_orig__ = _itkTobogganImageFilterPython.itkTobogganImageFilterISS2___New_orig__
itkTobogganImageFilterISS2_cast = _itkTobogganImageFilterPython.itkTobogganImageFilterISS2_cast


def itkTobogganImageFilterISS3_New():
    return itkTobogganImageFilterISS3.New()

class itkTobogganImageFilterISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3IUL3):
    r"""


    toboggan image segmentation The Toboggan segmentation takes a gradient
    magnitude image as input and produces an (over-)segmentation of the
    image based on connecting each pixel to a local minimum of gradient.
    It is roughly equivalent to a watershed segmentation of the lowest
    level.

    The output is a 4 connected labeled map of the image. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkTobogganImageFilterPython.itkTobogganImageFilterISS3_ImageDimension
    
    __New_orig__ = _swig_new_static_method(_itkTobogganImageFilterPython.itkTobogganImageFilterISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterISS3_Clone)
    GenerateData = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterISS3_GenerateData)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterISS3_GenerateInputRequestedRegion)
    LessThanComparableCheck = _itkTobogganImageFilterPython.itkTobogganImageFilterISS3_LessThanComparableCheck
    
    OStreamWritableCheck = _itkTobogganImageFilterPython.itkTobogganImageFilterISS3_OStreamWritableCheck
    
    __swig_destroy__ = _itkTobogganImageFilterPython.delete_itkTobogganImageFilterISS3
    cast = _swig_new_static_method(_itkTobogganImageFilterPython.itkTobogganImageFilterISS3_cast)

    def New(*args, **kargs):
        """New() -> itkTobogganImageFilterISS3

        Create a new object of the class itkTobogganImageFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTobogganImageFilterISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTobogganImageFilterISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTobogganImageFilterISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTobogganImageFilterISS3 in _itkTobogganImageFilterPython:
_itkTobogganImageFilterPython.itkTobogganImageFilterISS3_swigregister(itkTobogganImageFilterISS3)
itkTobogganImageFilterISS3___New_orig__ = _itkTobogganImageFilterPython.itkTobogganImageFilterISS3___New_orig__
itkTobogganImageFilterISS3_cast = _itkTobogganImageFilterPython.itkTobogganImageFilterISS3_cast


def itkTobogganImageFilterIUC2_New():
    return itkTobogganImageFilterIUC2.New()

class itkTobogganImageFilterIUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2):
    r"""


    toboggan image segmentation The Toboggan segmentation takes a gradient
    magnitude image as input and produces an (over-)segmentation of the
    image based on connecting each pixel to a local minimum of gradient.
    It is roughly equivalent to a watershed segmentation of the lowest
    level.

    The output is a 4 connected labeled map of the image. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkTobogganImageFilterPython.itkTobogganImageFilterIUC2_ImageDimension
    
    __New_orig__ = _swig_new_static_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIUC2_Clone)
    GenerateData = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIUC2_GenerateData)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIUC2_GenerateInputRequestedRegion)
    LessThanComparableCheck = _itkTobogganImageFilterPython.itkTobogganImageFilterIUC2_LessThanComparableCheck
    
    OStreamWritableCheck = _itkTobogganImageFilterPython.itkTobogganImageFilterIUC2_OStreamWritableCheck
    
    __swig_destroy__ = _itkTobogganImageFilterPython.delete_itkTobogganImageFilterIUC2
    cast = _swig_new_static_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIUC2_cast)

    def New(*args, **kargs):
        """New() -> itkTobogganImageFilterIUC2

        Create a new object of the class itkTobogganImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTobogganImageFilterIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTobogganImageFilterIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTobogganImageFilterIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTobogganImageFilterIUC2 in _itkTobogganImageFilterPython:
_itkTobogganImageFilterPython.itkTobogganImageFilterIUC2_swigregister(itkTobogganImageFilterIUC2)
itkTobogganImageFilterIUC2___New_orig__ = _itkTobogganImageFilterPython.itkTobogganImageFilterIUC2___New_orig__
itkTobogganImageFilterIUC2_cast = _itkTobogganImageFilterPython.itkTobogganImageFilterIUC2_cast


def itkTobogganImageFilterIUC3_New():
    return itkTobogganImageFilterIUC3.New()

class itkTobogganImageFilterIUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3):
    r"""


    toboggan image segmentation The Toboggan segmentation takes a gradient
    magnitude image as input and produces an (over-)segmentation of the
    image based on connecting each pixel to a local minimum of gradient.
    It is roughly equivalent to a watershed segmentation of the lowest
    level.

    The output is a 4 connected labeled map of the image. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkTobogganImageFilterPython.itkTobogganImageFilterIUC3_ImageDimension
    
    __New_orig__ = _swig_new_static_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIUC3_Clone)
    GenerateData = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIUC3_GenerateData)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIUC3_GenerateInputRequestedRegion)
    LessThanComparableCheck = _itkTobogganImageFilterPython.itkTobogganImageFilterIUC3_LessThanComparableCheck
    
    OStreamWritableCheck = _itkTobogganImageFilterPython.itkTobogganImageFilterIUC3_OStreamWritableCheck
    
    __swig_destroy__ = _itkTobogganImageFilterPython.delete_itkTobogganImageFilterIUC3
    cast = _swig_new_static_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkTobogganImageFilterIUC3

        Create a new object of the class itkTobogganImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTobogganImageFilterIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTobogganImageFilterIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTobogganImageFilterIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTobogganImageFilterIUC3 in _itkTobogganImageFilterPython:
_itkTobogganImageFilterPython.itkTobogganImageFilterIUC3_swigregister(itkTobogganImageFilterIUC3)
itkTobogganImageFilterIUC3___New_orig__ = _itkTobogganImageFilterPython.itkTobogganImageFilterIUC3___New_orig__
itkTobogganImageFilterIUC3_cast = _itkTobogganImageFilterPython.itkTobogganImageFilterIUC3_cast


def itkTobogganImageFilterIUS2_New():
    return itkTobogganImageFilterIUS2.New()

class itkTobogganImageFilterIUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2):
    r"""


    toboggan image segmentation The Toboggan segmentation takes a gradient
    magnitude image as input and produces an (over-)segmentation of the
    image based on connecting each pixel to a local minimum of gradient.
    It is roughly equivalent to a watershed segmentation of the lowest
    level.

    The output is a 4 connected labeled map of the image. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkTobogganImageFilterPython.itkTobogganImageFilterIUS2_ImageDimension
    
    __New_orig__ = _swig_new_static_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIUS2_Clone)
    GenerateData = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIUS2_GenerateData)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIUS2_GenerateInputRequestedRegion)
    LessThanComparableCheck = _itkTobogganImageFilterPython.itkTobogganImageFilterIUS2_LessThanComparableCheck
    
    OStreamWritableCheck = _itkTobogganImageFilterPython.itkTobogganImageFilterIUS2_OStreamWritableCheck
    
    __swig_destroy__ = _itkTobogganImageFilterPython.delete_itkTobogganImageFilterIUS2
    cast = _swig_new_static_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIUS2_cast)

    def New(*args, **kargs):
        """New() -> itkTobogganImageFilterIUS2

        Create a new object of the class itkTobogganImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTobogganImageFilterIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTobogganImageFilterIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTobogganImageFilterIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTobogganImageFilterIUS2 in _itkTobogganImageFilterPython:
_itkTobogganImageFilterPython.itkTobogganImageFilterIUS2_swigregister(itkTobogganImageFilterIUS2)
itkTobogganImageFilterIUS2___New_orig__ = _itkTobogganImageFilterPython.itkTobogganImageFilterIUS2___New_orig__
itkTobogganImageFilterIUS2_cast = _itkTobogganImageFilterPython.itkTobogganImageFilterIUS2_cast


def itkTobogganImageFilterIUS3_New():
    return itkTobogganImageFilterIUS3.New()

class itkTobogganImageFilterIUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3):
    r"""


    toboggan image segmentation The Toboggan segmentation takes a gradient
    magnitude image as input and produces an (over-)segmentation of the
    image based on connecting each pixel to a local minimum of gradient.
    It is roughly equivalent to a watershed segmentation of the lowest
    level.

    The output is a 4 connected labeled map of the image. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkTobogganImageFilterPython.itkTobogganImageFilterIUS3_ImageDimension
    
    __New_orig__ = _swig_new_static_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIUS3_Clone)
    GenerateData = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIUS3_GenerateData)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIUS3_GenerateInputRequestedRegion)
    LessThanComparableCheck = _itkTobogganImageFilterPython.itkTobogganImageFilterIUS3_LessThanComparableCheck
    
    OStreamWritableCheck = _itkTobogganImageFilterPython.itkTobogganImageFilterIUS3_OStreamWritableCheck
    
    __swig_destroy__ = _itkTobogganImageFilterPython.delete_itkTobogganImageFilterIUS3
    cast = _swig_new_static_method(_itkTobogganImageFilterPython.itkTobogganImageFilterIUS3_cast)

    def New(*args, **kargs):
        """New() -> itkTobogganImageFilterIUS3

        Create a new object of the class itkTobogganImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTobogganImageFilterIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTobogganImageFilterIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTobogganImageFilterIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTobogganImageFilterIUS3 in _itkTobogganImageFilterPython:
_itkTobogganImageFilterPython.itkTobogganImageFilterIUS3_swigregister(itkTobogganImageFilterIUS3)
itkTobogganImageFilterIUS3___New_orig__ = _itkTobogganImageFilterPython.itkTobogganImageFilterIUS3___New_orig__
itkTobogganImageFilterIUS3_cast = _itkTobogganImageFilterPython.itkTobogganImageFilterIUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def toboggan_image_filter(*args, **kwargs):
    """Procedural interface for TobogganImageFilter"""
    import itk
    instance = itk.TobogganImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def toboggan_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.TobogganImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.TobogganImageFilter.values()[0]
    else:
        filter_object = itk.TobogganImageFilter

    toboggan_image_filter.__doc__ = filter_object.__doc__
    toboggan_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    toboggan_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.TobogganImageFilter, itkTemplate.itkTemplate):
        toboggan_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        toboggan_image_filter.__doc__ += "\n"
        toboggan_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        toboggan_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



