# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageSourcesPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkGaussianImageSourcePython
else:
    import _itkGaussianImageSourcePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkGaussianImageSourcePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkGaussianImageSourcePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkParametricImageSourcePython
import itk.itkArrayPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkGenerateImageSourcePython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageSourcePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkImageSourceCommonPython

def itkGaussianImageSourceID2_New():
    return itkGaussianImageSourceID2.New()

class itkGaussianImageSourceID2(itk.itkParametricImageSourcePython.itkParametricImageSourceID2):
    r"""


    Generate an n-dimensional image of a Gaussian.

    GaussianImageSource generates an image of a Gaussian. m_Normalized
    determines whether or not the Gaussian is normalized (whether or not
    the sum over infinite space is 1.0) When creating an image, it is
    preferable to not normalize the Gaussian m_Scale scales the output of
    the Gaussian to span a range larger than 0->1, and is typically set to
    the maximum value of the output data type (for instance, 255 for
    uchars)

    The output image may be of any dimension. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGaussianImageSourcePython.itkGaussianImageSourceID2___New_orig__)
    Clone = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceID2_Clone)
    SetScale = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceID2_SetScale)
    GetScale = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceID2_GetScale)
    SetNormalized = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceID2_SetNormalized)
    GetNormalized = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceID2_GetNormalized)
    NormalizedOn = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceID2_NormalizedOn)
    NormalizedOff = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceID2_NormalizedOff)
    SetSigma = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceID2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceID2_GetSigma)
    SetMean = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceID2_SetMean)
    GetMean = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceID2_GetMean)
    __swig_destroy__ = _itkGaussianImageSourcePython.delete_itkGaussianImageSourceID2
    cast = _swig_new_static_method(_itkGaussianImageSourcePython.itkGaussianImageSourceID2_cast)

    def New(*args, **kargs):
        """New() -> itkGaussianImageSourceID2

        Create a new object of the class itkGaussianImageSourceID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGaussianImageSourceID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGaussianImageSourceID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGaussianImageSourceID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGaussianImageSourceID2 in _itkGaussianImageSourcePython:
_itkGaussianImageSourcePython.itkGaussianImageSourceID2_swigregister(itkGaussianImageSourceID2)
itkGaussianImageSourceID2___New_orig__ = _itkGaussianImageSourcePython.itkGaussianImageSourceID2___New_orig__
itkGaussianImageSourceID2_cast = _itkGaussianImageSourcePython.itkGaussianImageSourceID2_cast


def itkGaussianImageSourceID3_New():
    return itkGaussianImageSourceID3.New()

class itkGaussianImageSourceID3(itk.itkParametricImageSourcePython.itkParametricImageSourceID3):
    r"""


    Generate an n-dimensional image of a Gaussian.

    GaussianImageSource generates an image of a Gaussian. m_Normalized
    determines whether or not the Gaussian is normalized (whether or not
    the sum over infinite space is 1.0) When creating an image, it is
    preferable to not normalize the Gaussian m_Scale scales the output of
    the Gaussian to span a range larger than 0->1, and is typically set to
    the maximum value of the output data type (for instance, 255 for
    uchars)

    The output image may be of any dimension. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGaussianImageSourcePython.itkGaussianImageSourceID3___New_orig__)
    Clone = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceID3_Clone)
    SetScale = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceID3_SetScale)
    GetScale = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceID3_GetScale)
    SetNormalized = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceID3_SetNormalized)
    GetNormalized = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceID3_GetNormalized)
    NormalizedOn = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceID3_NormalizedOn)
    NormalizedOff = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceID3_NormalizedOff)
    SetSigma = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceID3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceID3_GetSigma)
    SetMean = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceID3_SetMean)
    GetMean = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceID3_GetMean)
    __swig_destroy__ = _itkGaussianImageSourcePython.delete_itkGaussianImageSourceID3
    cast = _swig_new_static_method(_itkGaussianImageSourcePython.itkGaussianImageSourceID3_cast)

    def New(*args, **kargs):
        """New() -> itkGaussianImageSourceID3

        Create a new object of the class itkGaussianImageSourceID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGaussianImageSourceID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGaussianImageSourceID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGaussianImageSourceID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGaussianImageSourceID3 in _itkGaussianImageSourcePython:
_itkGaussianImageSourcePython.itkGaussianImageSourceID3_swigregister(itkGaussianImageSourceID3)
itkGaussianImageSourceID3___New_orig__ = _itkGaussianImageSourcePython.itkGaussianImageSourceID3___New_orig__
itkGaussianImageSourceID3_cast = _itkGaussianImageSourcePython.itkGaussianImageSourceID3_cast


def itkGaussianImageSourceIF2_New():
    return itkGaussianImageSourceIF2.New()

class itkGaussianImageSourceIF2(itk.itkParametricImageSourcePython.itkParametricImageSourceIF2):
    r"""


    Generate an n-dimensional image of a Gaussian.

    GaussianImageSource generates an image of a Gaussian. m_Normalized
    determines whether or not the Gaussian is normalized (whether or not
    the sum over infinite space is 1.0) When creating an image, it is
    preferable to not normalize the Gaussian m_Scale scales the output of
    the Gaussian to span a range larger than 0->1, and is typically set to
    the maximum value of the output data type (for instance, 255 for
    uchars)

    The output image may be of any dimension. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIF2_Clone)
    SetScale = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIF2_SetScale)
    GetScale = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIF2_GetScale)
    SetNormalized = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIF2_SetNormalized)
    GetNormalized = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIF2_GetNormalized)
    NormalizedOn = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIF2_NormalizedOn)
    NormalizedOff = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIF2_NormalizedOff)
    SetSigma = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIF2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIF2_GetSigma)
    SetMean = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIF2_SetMean)
    GetMean = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIF2_GetMean)
    __swig_destroy__ = _itkGaussianImageSourcePython.delete_itkGaussianImageSourceIF2
    cast = _swig_new_static_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIF2_cast)

    def New(*args, **kargs):
        """New() -> itkGaussianImageSourceIF2

        Create a new object of the class itkGaussianImageSourceIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGaussianImageSourceIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGaussianImageSourceIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGaussianImageSourceIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGaussianImageSourceIF2 in _itkGaussianImageSourcePython:
_itkGaussianImageSourcePython.itkGaussianImageSourceIF2_swigregister(itkGaussianImageSourceIF2)
itkGaussianImageSourceIF2___New_orig__ = _itkGaussianImageSourcePython.itkGaussianImageSourceIF2___New_orig__
itkGaussianImageSourceIF2_cast = _itkGaussianImageSourcePython.itkGaussianImageSourceIF2_cast


def itkGaussianImageSourceIF3_New():
    return itkGaussianImageSourceIF3.New()

class itkGaussianImageSourceIF3(itk.itkParametricImageSourcePython.itkParametricImageSourceIF3):
    r"""


    Generate an n-dimensional image of a Gaussian.

    GaussianImageSource generates an image of a Gaussian. m_Normalized
    determines whether or not the Gaussian is normalized (whether or not
    the sum over infinite space is 1.0) When creating an image, it is
    preferable to not normalize the Gaussian m_Scale scales the output of
    the Gaussian to span a range larger than 0->1, and is typically set to
    the maximum value of the output data type (for instance, 255 for
    uchars)

    The output image may be of any dimension. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIF3_Clone)
    SetScale = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIF3_SetScale)
    GetScale = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIF3_GetScale)
    SetNormalized = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIF3_SetNormalized)
    GetNormalized = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIF3_GetNormalized)
    NormalizedOn = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIF3_NormalizedOn)
    NormalizedOff = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIF3_NormalizedOff)
    SetSigma = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIF3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIF3_GetSigma)
    SetMean = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIF3_SetMean)
    GetMean = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIF3_GetMean)
    __swig_destroy__ = _itkGaussianImageSourcePython.delete_itkGaussianImageSourceIF3
    cast = _swig_new_static_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIF3_cast)

    def New(*args, **kargs):
        """New() -> itkGaussianImageSourceIF3

        Create a new object of the class itkGaussianImageSourceIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGaussianImageSourceIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGaussianImageSourceIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGaussianImageSourceIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGaussianImageSourceIF3 in _itkGaussianImageSourcePython:
_itkGaussianImageSourcePython.itkGaussianImageSourceIF3_swigregister(itkGaussianImageSourceIF3)
itkGaussianImageSourceIF3___New_orig__ = _itkGaussianImageSourcePython.itkGaussianImageSourceIF3___New_orig__
itkGaussianImageSourceIF3_cast = _itkGaussianImageSourcePython.itkGaussianImageSourceIF3_cast


def itkGaussianImageSourceISS2_New():
    return itkGaussianImageSourceISS2.New()

class itkGaussianImageSourceISS2(itk.itkParametricImageSourcePython.itkParametricImageSourceISS2):
    r"""


    Generate an n-dimensional image of a Gaussian.

    GaussianImageSource generates an image of a Gaussian. m_Normalized
    determines whether or not the Gaussian is normalized (whether or not
    the sum over infinite space is 1.0) When creating an image, it is
    preferable to not normalize the Gaussian m_Scale scales the output of
    the Gaussian to span a range larger than 0->1, and is typically set to
    the maximum value of the output data type (for instance, 255 for
    uchars)

    The output image may be of any dimension. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGaussianImageSourcePython.itkGaussianImageSourceISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceISS2_Clone)
    SetScale = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceISS2_SetScale)
    GetScale = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceISS2_GetScale)
    SetNormalized = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceISS2_SetNormalized)
    GetNormalized = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceISS2_GetNormalized)
    NormalizedOn = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceISS2_NormalizedOn)
    NormalizedOff = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceISS2_NormalizedOff)
    SetSigma = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceISS2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceISS2_GetSigma)
    SetMean = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceISS2_SetMean)
    GetMean = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceISS2_GetMean)
    __swig_destroy__ = _itkGaussianImageSourcePython.delete_itkGaussianImageSourceISS2
    cast = _swig_new_static_method(_itkGaussianImageSourcePython.itkGaussianImageSourceISS2_cast)

    def New(*args, **kargs):
        """New() -> itkGaussianImageSourceISS2

        Create a new object of the class itkGaussianImageSourceISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGaussianImageSourceISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGaussianImageSourceISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGaussianImageSourceISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGaussianImageSourceISS2 in _itkGaussianImageSourcePython:
_itkGaussianImageSourcePython.itkGaussianImageSourceISS2_swigregister(itkGaussianImageSourceISS2)
itkGaussianImageSourceISS2___New_orig__ = _itkGaussianImageSourcePython.itkGaussianImageSourceISS2___New_orig__
itkGaussianImageSourceISS2_cast = _itkGaussianImageSourcePython.itkGaussianImageSourceISS2_cast


def itkGaussianImageSourceISS3_New():
    return itkGaussianImageSourceISS3.New()

class itkGaussianImageSourceISS3(itk.itkParametricImageSourcePython.itkParametricImageSourceISS3):
    r"""


    Generate an n-dimensional image of a Gaussian.

    GaussianImageSource generates an image of a Gaussian. m_Normalized
    determines whether or not the Gaussian is normalized (whether or not
    the sum over infinite space is 1.0) When creating an image, it is
    preferable to not normalize the Gaussian m_Scale scales the output of
    the Gaussian to span a range larger than 0->1, and is typically set to
    the maximum value of the output data type (for instance, 255 for
    uchars)

    The output image may be of any dimension. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGaussianImageSourcePython.itkGaussianImageSourceISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceISS3_Clone)
    SetScale = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceISS3_SetScale)
    GetScale = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceISS3_GetScale)
    SetNormalized = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceISS3_SetNormalized)
    GetNormalized = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceISS3_GetNormalized)
    NormalizedOn = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceISS3_NormalizedOn)
    NormalizedOff = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceISS3_NormalizedOff)
    SetSigma = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceISS3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceISS3_GetSigma)
    SetMean = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceISS3_SetMean)
    GetMean = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceISS3_GetMean)
    __swig_destroy__ = _itkGaussianImageSourcePython.delete_itkGaussianImageSourceISS3
    cast = _swig_new_static_method(_itkGaussianImageSourcePython.itkGaussianImageSourceISS3_cast)

    def New(*args, **kargs):
        """New() -> itkGaussianImageSourceISS3

        Create a new object of the class itkGaussianImageSourceISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGaussianImageSourceISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGaussianImageSourceISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGaussianImageSourceISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGaussianImageSourceISS3 in _itkGaussianImageSourcePython:
_itkGaussianImageSourcePython.itkGaussianImageSourceISS3_swigregister(itkGaussianImageSourceISS3)
itkGaussianImageSourceISS3___New_orig__ = _itkGaussianImageSourcePython.itkGaussianImageSourceISS3___New_orig__
itkGaussianImageSourceISS3_cast = _itkGaussianImageSourcePython.itkGaussianImageSourceISS3_cast


def itkGaussianImageSourceIUC2_New():
    return itkGaussianImageSourceIUC2.New()

class itkGaussianImageSourceIUC2(itk.itkParametricImageSourcePython.itkParametricImageSourceIUC2):
    r"""


    Generate an n-dimensional image of a Gaussian.

    GaussianImageSource generates an image of a Gaussian. m_Normalized
    determines whether or not the Gaussian is normalized (whether or not
    the sum over infinite space is 1.0) When creating an image, it is
    preferable to not normalize the Gaussian m_Scale scales the output of
    the Gaussian to span a range larger than 0->1, and is typically set to
    the maximum value of the output data type (for instance, 255 for
    uchars)

    The output image may be of any dimension. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUC2_Clone)
    SetScale = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUC2_SetScale)
    GetScale = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUC2_GetScale)
    SetNormalized = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUC2_SetNormalized)
    GetNormalized = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUC2_GetNormalized)
    NormalizedOn = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUC2_NormalizedOn)
    NormalizedOff = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUC2_NormalizedOff)
    SetSigma = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUC2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUC2_GetSigma)
    SetMean = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUC2_SetMean)
    GetMean = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUC2_GetMean)
    __swig_destroy__ = _itkGaussianImageSourcePython.delete_itkGaussianImageSourceIUC2
    cast = _swig_new_static_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUC2_cast)

    def New(*args, **kargs):
        """New() -> itkGaussianImageSourceIUC2

        Create a new object of the class itkGaussianImageSourceIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGaussianImageSourceIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGaussianImageSourceIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGaussianImageSourceIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGaussianImageSourceIUC2 in _itkGaussianImageSourcePython:
_itkGaussianImageSourcePython.itkGaussianImageSourceIUC2_swigregister(itkGaussianImageSourceIUC2)
itkGaussianImageSourceIUC2___New_orig__ = _itkGaussianImageSourcePython.itkGaussianImageSourceIUC2___New_orig__
itkGaussianImageSourceIUC2_cast = _itkGaussianImageSourcePython.itkGaussianImageSourceIUC2_cast


def itkGaussianImageSourceIUC3_New():
    return itkGaussianImageSourceIUC3.New()

class itkGaussianImageSourceIUC3(itk.itkParametricImageSourcePython.itkParametricImageSourceIUC3):
    r"""


    Generate an n-dimensional image of a Gaussian.

    GaussianImageSource generates an image of a Gaussian. m_Normalized
    determines whether or not the Gaussian is normalized (whether or not
    the sum over infinite space is 1.0) When creating an image, it is
    preferable to not normalize the Gaussian m_Scale scales the output of
    the Gaussian to span a range larger than 0->1, and is typically set to
    the maximum value of the output data type (for instance, 255 for
    uchars)

    The output image may be of any dimension. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUC3_Clone)
    SetScale = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUC3_SetScale)
    GetScale = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUC3_GetScale)
    SetNormalized = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUC3_SetNormalized)
    GetNormalized = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUC3_GetNormalized)
    NormalizedOn = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUC3_NormalizedOn)
    NormalizedOff = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUC3_NormalizedOff)
    SetSigma = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUC3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUC3_GetSigma)
    SetMean = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUC3_SetMean)
    GetMean = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUC3_GetMean)
    __swig_destroy__ = _itkGaussianImageSourcePython.delete_itkGaussianImageSourceIUC3
    cast = _swig_new_static_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkGaussianImageSourceIUC3

        Create a new object of the class itkGaussianImageSourceIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGaussianImageSourceIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGaussianImageSourceIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGaussianImageSourceIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGaussianImageSourceIUC3 in _itkGaussianImageSourcePython:
_itkGaussianImageSourcePython.itkGaussianImageSourceIUC3_swigregister(itkGaussianImageSourceIUC3)
itkGaussianImageSourceIUC3___New_orig__ = _itkGaussianImageSourcePython.itkGaussianImageSourceIUC3___New_orig__
itkGaussianImageSourceIUC3_cast = _itkGaussianImageSourcePython.itkGaussianImageSourceIUC3_cast


def itkGaussianImageSourceIUS2_New():
    return itkGaussianImageSourceIUS2.New()

class itkGaussianImageSourceIUS2(itk.itkParametricImageSourcePython.itkParametricImageSourceIUS2):
    r"""


    Generate an n-dimensional image of a Gaussian.

    GaussianImageSource generates an image of a Gaussian. m_Normalized
    determines whether or not the Gaussian is normalized (whether or not
    the sum over infinite space is 1.0) When creating an image, it is
    preferable to not normalize the Gaussian m_Scale scales the output of
    the Gaussian to span a range larger than 0->1, and is typically set to
    the maximum value of the output data type (for instance, 255 for
    uchars)

    The output image may be of any dimension. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUS2_Clone)
    SetScale = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUS2_SetScale)
    GetScale = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUS2_GetScale)
    SetNormalized = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUS2_SetNormalized)
    GetNormalized = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUS2_GetNormalized)
    NormalizedOn = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUS2_NormalizedOn)
    NormalizedOff = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUS2_NormalizedOff)
    SetSigma = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUS2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUS2_GetSigma)
    SetMean = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUS2_SetMean)
    GetMean = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUS2_GetMean)
    __swig_destroy__ = _itkGaussianImageSourcePython.delete_itkGaussianImageSourceIUS2
    cast = _swig_new_static_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUS2_cast)

    def New(*args, **kargs):
        """New() -> itkGaussianImageSourceIUS2

        Create a new object of the class itkGaussianImageSourceIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGaussianImageSourceIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGaussianImageSourceIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGaussianImageSourceIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGaussianImageSourceIUS2 in _itkGaussianImageSourcePython:
_itkGaussianImageSourcePython.itkGaussianImageSourceIUS2_swigregister(itkGaussianImageSourceIUS2)
itkGaussianImageSourceIUS2___New_orig__ = _itkGaussianImageSourcePython.itkGaussianImageSourceIUS2___New_orig__
itkGaussianImageSourceIUS2_cast = _itkGaussianImageSourcePython.itkGaussianImageSourceIUS2_cast


def itkGaussianImageSourceIUS3_New():
    return itkGaussianImageSourceIUS3.New()

class itkGaussianImageSourceIUS3(itk.itkParametricImageSourcePython.itkParametricImageSourceIUS3):
    r"""


    Generate an n-dimensional image of a Gaussian.

    GaussianImageSource generates an image of a Gaussian. m_Normalized
    determines whether or not the Gaussian is normalized (whether or not
    the sum over infinite space is 1.0) When creating an image, it is
    preferable to not normalize the Gaussian m_Scale scales the output of
    the Gaussian to span a range larger than 0->1, and is typically set to
    the maximum value of the output data type (for instance, 255 for
    uchars)

    The output image may be of any dimension. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUS3_Clone)
    SetScale = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUS3_SetScale)
    GetScale = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUS3_GetScale)
    SetNormalized = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUS3_SetNormalized)
    GetNormalized = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUS3_GetNormalized)
    NormalizedOn = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUS3_NormalizedOn)
    NormalizedOff = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUS3_NormalizedOff)
    SetSigma = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUS3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUS3_GetSigma)
    SetMean = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUS3_SetMean)
    GetMean = _swig_new_instance_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUS3_GetMean)
    __swig_destroy__ = _itkGaussianImageSourcePython.delete_itkGaussianImageSourceIUS3
    cast = _swig_new_static_method(_itkGaussianImageSourcePython.itkGaussianImageSourceIUS3_cast)

    def New(*args, **kargs):
        """New() -> itkGaussianImageSourceIUS3

        Create a new object of the class itkGaussianImageSourceIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGaussianImageSourceIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGaussianImageSourceIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGaussianImageSourceIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGaussianImageSourceIUS3 in _itkGaussianImageSourcePython:
_itkGaussianImageSourcePython.itkGaussianImageSourceIUS3_swigregister(itkGaussianImageSourceIUS3)
itkGaussianImageSourceIUS3___New_orig__ = _itkGaussianImageSourcePython.itkGaussianImageSourceIUS3___New_orig__
itkGaussianImageSourceIUS3_cast = _itkGaussianImageSourcePython.itkGaussianImageSourceIUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def gaussian_image_source(*args, **kwargs):
    """Procedural interface for GaussianImageSource"""
    import itk
    instance = itk.GaussianImageSource.New(*args, **kwargs)
    return instance.__internal_call__()

def gaussian_image_source_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.GaussianImageSource, itkTemplate.itkTemplate):
        filter_object = itk.GaussianImageSource.values()[0]
    else:
        filter_object = itk.GaussianImageSource

    gaussian_image_source.__doc__ = filter_object.__doc__
    gaussian_image_source.__doc__ += "\n Args are Input(s) to the filter.\n"
    gaussian_image_source.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.GaussianImageSource, itkTemplate.itkTemplate):
        gaussian_image_source.__doc__ += itkHelpers.filter_args(filter_object)[0]
        gaussian_image_source.__doc__ += "\n"
        gaussian_image_source.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        gaussian_image_source.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



