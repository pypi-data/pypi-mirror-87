# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageStatisticsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSumProjectionImageFilterPython
else:
    import _itkSumProjectionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkSumProjectionImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkSumProjectionImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.stdcomplexPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterBPython

def itkSumProjectionImageFilterID2ID2_Superclass_New():
    return itkSumProjectionImageFilterID2ID2_Superclass.New()

class itkSumProjectionImageFilterID2ID2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkSumProjectionImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_Superclass_Clone)
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterID2ID2_Superclass
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterID2ID2_Superclass

        Create a new object of the class itkSumProjectionImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterID2ID2_Superclass in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_Superclass_swigregister(itkSumProjectionImageFilterID2ID2_Superclass)
itkSumProjectionImageFilterID2ID2_Superclass___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_Superclass___New_orig__
itkSumProjectionImageFilterID2ID2_Superclass_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_Superclass_cast


def itkSumProjectionImageFilterID3ID2_Superclass_New():
    return itkSumProjectionImageFilterID3ID2_Superclass.New()

class itkSumProjectionImageFilterID3ID2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterID3ID2):
    r"""Proxy of C++ itkSumProjectionImageFilterID3ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_Superclass_Clone)
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterID3ID2_Superclass
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterID3ID2_Superclass

        Create a new object of the class itkSumProjectionImageFilterID3ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterID3ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterID3ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterID3ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterID3ID2_Superclass in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_Superclass_swigregister(itkSumProjectionImageFilterID3ID2_Superclass)
itkSumProjectionImageFilterID3ID2_Superclass___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_Superclass___New_orig__
itkSumProjectionImageFilterID3ID2_Superclass_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_Superclass_cast


def itkSumProjectionImageFilterID3ID3_Superclass_New():
    return itkSumProjectionImageFilterID3ID3_Superclass.New()

class itkSumProjectionImageFilterID3ID3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkSumProjectionImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_Superclass_Clone)
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterID3ID3_Superclass
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterID3ID3_Superclass

        Create a new object of the class itkSumProjectionImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterID3ID3_Superclass in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_Superclass_swigregister(itkSumProjectionImageFilterID3ID3_Superclass)
itkSumProjectionImageFilterID3ID3_Superclass___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_Superclass___New_orig__
itkSumProjectionImageFilterID3ID3_Superclass_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_Superclass_cast


def itkSumProjectionImageFilterIF2IF2_Superclass_New():
    return itkSumProjectionImageFilterIF2IF2_Superclass.New()

class itkSumProjectionImageFilterIF2IF2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkSumProjectionImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_Clone)
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIF2IF2_Superclass
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIF2IF2_Superclass

        Create a new object of the class itkSumProjectionImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterIF2IF2_Superclass in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_swigregister(itkSumProjectionImageFilterIF2IF2_Superclass)
itkSumProjectionImageFilterIF2IF2_Superclass___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass___New_orig__
itkSumProjectionImageFilterIF2IF2_Superclass_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_cast


def itkSumProjectionImageFilterIF3IF2_Superclass_New():
    return itkSumProjectionImageFilterIF3IF2_Superclass.New()

class itkSumProjectionImageFilterIF3IF2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2):
    r"""Proxy of C++ itkSumProjectionImageFilterIF3IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_Clone)
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIF3IF2_Superclass
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIF3IF2_Superclass

        Create a new object of the class itkSumProjectionImageFilterIF3IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIF3IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIF3IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterIF3IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterIF3IF2_Superclass in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_swigregister(itkSumProjectionImageFilterIF3IF2_Superclass)
itkSumProjectionImageFilterIF3IF2_Superclass___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass___New_orig__
itkSumProjectionImageFilterIF3IF2_Superclass_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_cast


def itkSumProjectionImageFilterIF3IF3_Superclass_New():
    return itkSumProjectionImageFilterIF3IF3_Superclass.New()

class itkSumProjectionImageFilterIF3IF3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkSumProjectionImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_Clone)
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIF3IF3_Superclass
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIF3IF3_Superclass

        Create a new object of the class itkSumProjectionImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterIF3IF3_Superclass in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_swigregister(itkSumProjectionImageFilterIF3IF3_Superclass)
itkSumProjectionImageFilterIF3IF3_Superclass___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass___New_orig__
itkSumProjectionImageFilterIF3IF3_Superclass_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_cast


def itkSumProjectionImageFilterISS2ISS2_Superclass_New():
    return itkSumProjectionImageFilterISS2ISS2_Superclass.New()

class itkSumProjectionImageFilterISS2ISS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkSumProjectionImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_Superclass_Clone)
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterISS2ISS2_Superclass
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterISS2ISS2_Superclass

        Create a new object of the class itkSumProjectionImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterISS2ISS2_Superclass in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_Superclass_swigregister(itkSumProjectionImageFilterISS2ISS2_Superclass)
itkSumProjectionImageFilterISS2ISS2_Superclass___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_Superclass___New_orig__
itkSumProjectionImageFilterISS2ISS2_Superclass_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_Superclass_cast


def itkSumProjectionImageFilterISS3ISS2_Superclass_New():
    return itkSumProjectionImageFilterISS3ISS2_Superclass.New()

class itkSumProjectionImageFilterISS3ISS2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS3ISS2):
    r"""Proxy of C++ itkSumProjectionImageFilterISS3ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_Superclass_Clone)
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterISS3ISS2_Superclass
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterISS3ISS2_Superclass

        Create a new object of the class itkSumProjectionImageFilterISS3ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterISS3ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterISS3ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterISS3ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterISS3ISS2_Superclass in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_Superclass_swigregister(itkSumProjectionImageFilterISS3ISS2_Superclass)
itkSumProjectionImageFilterISS3ISS2_Superclass___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_Superclass___New_orig__
itkSumProjectionImageFilterISS3ISS2_Superclass_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_Superclass_cast


def itkSumProjectionImageFilterISS3ISS3_Superclass_New():
    return itkSumProjectionImageFilterISS3ISS3_Superclass.New()

class itkSumProjectionImageFilterISS3ISS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkSumProjectionImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_Superclass_Clone)
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterISS3ISS3_Superclass
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterISS3ISS3_Superclass

        Create a new object of the class itkSumProjectionImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterISS3ISS3_Superclass in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_Superclass_swigregister(itkSumProjectionImageFilterISS3ISS3_Superclass)
itkSumProjectionImageFilterISS3ISS3_Superclass___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_Superclass___New_orig__
itkSumProjectionImageFilterISS3ISS3_Superclass_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_Superclass_cast


def itkSumProjectionImageFilterIUC2IUC2_Superclass_New():
    return itkSumProjectionImageFilterIUC2IUC2_Superclass.New()

class itkSumProjectionImageFilterIUC2IUC2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkSumProjectionImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_Clone)
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUC2IUC2_Superclass
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkSumProjectionImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterIUC2IUC2_Superclass in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_swigregister(itkSumProjectionImageFilterIUC2IUC2_Superclass)
itkSumProjectionImageFilterIUC2IUC2_Superclass___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass___New_orig__
itkSumProjectionImageFilterIUC2IUC2_Superclass_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_cast


def itkSumProjectionImageFilterIUC3IUC2_Superclass_New():
    return itkSumProjectionImageFilterIUC3IUC2_Superclass.New()

class itkSumProjectionImageFilterIUC3IUC2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2):
    r"""Proxy of C++ itkSumProjectionImageFilterIUC3IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_Clone)
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUC3IUC2_Superclass
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUC3IUC2_Superclass

        Create a new object of the class itkSumProjectionImageFilterIUC3IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIUC3IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIUC3IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterIUC3IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterIUC3IUC2_Superclass in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_swigregister(itkSumProjectionImageFilterIUC3IUC2_Superclass)
itkSumProjectionImageFilterIUC3IUC2_Superclass___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass___New_orig__
itkSumProjectionImageFilterIUC3IUC2_Superclass_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_cast


def itkSumProjectionImageFilterIUC3IUC3_Superclass_New():
    return itkSumProjectionImageFilterIUC3IUC3_Superclass.New()

class itkSumProjectionImageFilterIUC3IUC3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkSumProjectionImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_Clone)
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUC3IUC3_Superclass
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkSumProjectionImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterIUC3IUC3_Superclass in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_swigregister(itkSumProjectionImageFilterIUC3IUC3_Superclass)
itkSumProjectionImageFilterIUC3IUC3_Superclass___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass___New_orig__
itkSumProjectionImageFilterIUC3IUC3_Superclass_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_cast


def itkSumProjectionImageFilterIUS2IUS2_Superclass_New():
    return itkSumProjectionImageFilterIUS2IUS2_Superclass.New()

class itkSumProjectionImageFilterIUS2IUS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkSumProjectionImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_Clone)
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUS2IUS2_Superclass
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkSumProjectionImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterIUS2IUS2_Superclass in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_swigregister(itkSumProjectionImageFilterIUS2IUS2_Superclass)
itkSumProjectionImageFilterIUS2IUS2_Superclass___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass___New_orig__
itkSumProjectionImageFilterIUS2IUS2_Superclass_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_cast


def itkSumProjectionImageFilterIUS3IUS2_Superclass_New():
    return itkSumProjectionImageFilterIUS3IUS2_Superclass.New()

class itkSumProjectionImageFilterIUS3IUS2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2):
    r"""Proxy of C++ itkSumProjectionImageFilterIUS3IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_Clone)
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUS3IUS2_Superclass
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUS3IUS2_Superclass

        Create a new object of the class itkSumProjectionImageFilterIUS3IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIUS3IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIUS3IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterIUS3IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterIUS3IUS2_Superclass in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_swigregister(itkSumProjectionImageFilterIUS3IUS2_Superclass)
itkSumProjectionImageFilterIUS3IUS2_Superclass___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass___New_orig__
itkSumProjectionImageFilterIUS3IUS2_Superclass_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_cast


def itkSumProjectionImageFilterIUS3IUS3_Superclass_New():
    return itkSumProjectionImageFilterIUS3IUS3_Superclass.New()

class itkSumProjectionImageFilterIUS3IUS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkSumProjectionImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_Clone)
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUS3IUS3_Superclass
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkSumProjectionImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterIUS3IUS3_Superclass in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_swigregister(itkSumProjectionImageFilterIUS3IUS3_Superclass)
itkSumProjectionImageFilterIUS3IUS3_Superclass___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass___New_orig__
itkSumProjectionImageFilterIUS3IUS3_Superclass_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_cast


def itkSumProjectionImageFilterID2ID2_New():
    return itkSumProjectionImageFilterID2ID2.New()

class itkSumProjectionImageFilterID2ID2(itkSumProjectionImageFilterID2ID2_Superclass):
    r"""


    Sum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterID2ID2
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterID2ID2

        Create a new object of the class itkSumProjectionImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterID2ID2 in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_swigregister(itkSumProjectionImageFilterID2ID2)
itkSumProjectionImageFilterID2ID2___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2___New_orig__
itkSumProjectionImageFilterID2ID2_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_cast


def itkSumProjectionImageFilterID3ID2_New():
    return itkSumProjectionImageFilterID3ID2.New()

class itkSumProjectionImageFilterID3ID2(itkSumProjectionImageFilterID3ID2_Superclass):
    r"""


    Sum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterID3ID2
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterID3ID2

        Create a new object of the class itkSumProjectionImageFilterID3ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterID3ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterID3ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterID3ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterID3ID2 in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_swigregister(itkSumProjectionImageFilterID3ID2)
itkSumProjectionImageFilterID3ID2___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2___New_orig__
itkSumProjectionImageFilterID3ID2_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_cast


def itkSumProjectionImageFilterID3ID3_New():
    return itkSumProjectionImageFilterID3ID3.New()

class itkSumProjectionImageFilterID3ID3(itkSumProjectionImageFilterID3ID3_Superclass):
    r"""


    Sum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterID3ID3
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterID3ID3

        Create a new object of the class itkSumProjectionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterID3ID3 in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_swigregister(itkSumProjectionImageFilterID3ID3)
itkSumProjectionImageFilterID3ID3___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3___New_orig__
itkSumProjectionImageFilterID3ID3_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_cast


def itkSumProjectionImageFilterIF2IF2_New():
    return itkSumProjectionImageFilterIF2IF2.New()

class itkSumProjectionImageFilterIF2IF2(itkSumProjectionImageFilterIF2IF2_Superclass):
    r"""


    Sum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIF2IF2
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIF2IF2

        Create a new object of the class itkSumProjectionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterIF2IF2 in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_swigregister(itkSumProjectionImageFilterIF2IF2)
itkSumProjectionImageFilterIF2IF2___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2___New_orig__
itkSumProjectionImageFilterIF2IF2_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_cast


def itkSumProjectionImageFilterIF3IF2_New():
    return itkSumProjectionImageFilterIF3IF2.New()

class itkSumProjectionImageFilterIF3IF2(itkSumProjectionImageFilterIF3IF2_Superclass):
    r"""


    Sum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIF3IF2
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIF3IF2

        Create a new object of the class itkSumProjectionImageFilterIF3IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIF3IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIF3IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterIF3IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterIF3IF2 in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_swigregister(itkSumProjectionImageFilterIF3IF2)
itkSumProjectionImageFilterIF3IF2___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2___New_orig__
itkSumProjectionImageFilterIF3IF2_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_cast


def itkSumProjectionImageFilterIF3IF3_New():
    return itkSumProjectionImageFilterIF3IF3.New()

class itkSumProjectionImageFilterIF3IF3(itkSumProjectionImageFilterIF3IF3_Superclass):
    r"""


    Sum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIF3IF3
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIF3IF3

        Create a new object of the class itkSumProjectionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterIF3IF3 in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_swigregister(itkSumProjectionImageFilterIF3IF3)
itkSumProjectionImageFilterIF3IF3___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3___New_orig__
itkSumProjectionImageFilterIF3IF3_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_cast


def itkSumProjectionImageFilterISS2ISS2_New():
    return itkSumProjectionImageFilterISS2ISS2.New()

class itkSumProjectionImageFilterISS2ISS2(itkSumProjectionImageFilterISS2ISS2_Superclass):
    r"""


    Sum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterISS2ISS2

        Create a new object of the class itkSumProjectionImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterISS2ISS2 in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_swigregister(itkSumProjectionImageFilterISS2ISS2)
itkSumProjectionImageFilterISS2ISS2___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2___New_orig__
itkSumProjectionImageFilterISS2ISS2_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS2ISS2_cast


def itkSumProjectionImageFilterISS3ISS2_New():
    return itkSumProjectionImageFilterISS3ISS2.New()

class itkSumProjectionImageFilterISS3ISS2(itkSumProjectionImageFilterISS3ISS2_Superclass):
    r"""


    Sum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterISS3ISS2
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterISS3ISS2

        Create a new object of the class itkSumProjectionImageFilterISS3ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterISS3ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterISS3ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterISS3ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterISS3ISS2 in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_swigregister(itkSumProjectionImageFilterISS3ISS2)
itkSumProjectionImageFilterISS3ISS2___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2___New_orig__
itkSumProjectionImageFilterISS3ISS2_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS2_cast


def itkSumProjectionImageFilterISS3ISS3_New():
    return itkSumProjectionImageFilterISS3ISS3.New()

class itkSumProjectionImageFilterISS3ISS3(itkSumProjectionImageFilterISS3ISS3_Superclass):
    r"""


    Sum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterISS3ISS3

        Create a new object of the class itkSumProjectionImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterISS3ISS3 in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_swigregister(itkSumProjectionImageFilterISS3ISS3)
itkSumProjectionImageFilterISS3ISS3___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3___New_orig__
itkSumProjectionImageFilterISS3ISS3_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterISS3ISS3_cast


def itkSumProjectionImageFilterIUC2IUC2_New():
    return itkSumProjectionImageFilterIUC2IUC2.New()

class itkSumProjectionImageFilterIUC2IUC2(itkSumProjectionImageFilterIUC2IUC2_Superclass):
    r"""


    Sum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUC2IUC2

        Create a new object of the class itkSumProjectionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterIUC2IUC2 in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_swigregister(itkSumProjectionImageFilterIUC2IUC2)
itkSumProjectionImageFilterIUC2IUC2___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2___New_orig__
itkSumProjectionImageFilterIUC2IUC2_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_cast


def itkSumProjectionImageFilterIUC3IUC2_New():
    return itkSumProjectionImageFilterIUC3IUC2.New()

class itkSumProjectionImageFilterIUC3IUC2(itkSumProjectionImageFilterIUC3IUC2_Superclass):
    r"""


    Sum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUC3IUC2
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUC3IUC2

        Create a new object of the class itkSumProjectionImageFilterIUC3IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIUC3IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIUC3IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterIUC3IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterIUC3IUC2 in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_swigregister(itkSumProjectionImageFilterIUC3IUC2)
itkSumProjectionImageFilterIUC3IUC2___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2___New_orig__
itkSumProjectionImageFilterIUC3IUC2_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_cast


def itkSumProjectionImageFilterIUC3IUC3_New():
    return itkSumProjectionImageFilterIUC3IUC3.New()

class itkSumProjectionImageFilterIUC3IUC3(itkSumProjectionImageFilterIUC3IUC3_Superclass):
    r"""


    Sum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUC3IUC3

        Create a new object of the class itkSumProjectionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterIUC3IUC3 in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_swigregister(itkSumProjectionImageFilterIUC3IUC3)
itkSumProjectionImageFilterIUC3IUC3___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3___New_orig__
itkSumProjectionImageFilterIUC3IUC3_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_cast


def itkSumProjectionImageFilterIUS2IUS2_New():
    return itkSumProjectionImageFilterIUS2IUS2.New()

class itkSumProjectionImageFilterIUS2IUS2(itkSumProjectionImageFilterIUS2IUS2_Superclass):
    r"""


    Sum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUS2IUS2

        Create a new object of the class itkSumProjectionImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterIUS2IUS2 in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_swigregister(itkSumProjectionImageFilterIUS2IUS2)
itkSumProjectionImageFilterIUS2IUS2___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2___New_orig__
itkSumProjectionImageFilterIUS2IUS2_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_cast


def itkSumProjectionImageFilterIUS3IUS2_New():
    return itkSumProjectionImageFilterIUS3IUS2.New()

class itkSumProjectionImageFilterIUS3IUS2(itkSumProjectionImageFilterIUS3IUS2_Superclass):
    r"""


    Sum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUS3IUS2
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUS3IUS2

        Create a new object of the class itkSumProjectionImageFilterIUS3IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIUS3IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIUS3IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterIUS3IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterIUS3IUS2 in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_swigregister(itkSumProjectionImageFilterIUS3IUS2)
itkSumProjectionImageFilterIUS3IUS2___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2___New_orig__
itkSumProjectionImageFilterIUS3IUS2_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_cast


def itkSumProjectionImageFilterIUS3IUS3_New():
    return itkSumProjectionImageFilterIUS3IUS3.New()

class itkSumProjectionImageFilterIUS3IUS3(itkSumProjectionImageFilterIUS3IUS3_Superclass):
    r"""


    Sum projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUS3IUS3

        Create a new object of the class itkSumProjectionImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSumProjectionImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSumProjectionImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSumProjectionImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSumProjectionImageFilterIUS3IUS3 in _itkSumProjectionImageFilterPython:
_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_swigregister(itkSumProjectionImageFilterIUS3IUS3)
itkSumProjectionImageFilterIUS3IUS3___New_orig__ = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3___New_orig__
itkSumProjectionImageFilterIUS3IUS3_cast = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def sum_projection_image_filter(*args, **kwargs):
    """Procedural interface for SumProjectionImageFilter"""
    import itk
    instance = itk.SumProjectionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def sum_projection_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.SumProjectionImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.SumProjectionImageFilter.values()[0]
    else:
        filter_object = itk.SumProjectionImageFilter

    sum_projection_image_filter.__doc__ = filter_object.__doc__
    sum_projection_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    sum_projection_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.SumProjectionImageFilter, itkTemplate.itkTemplate):
        sum_projection_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        sum_projection_image_filter.__doc__ += "\n"
        sum_projection_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        sum_projection_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def projection_image_filter(*args, **kwargs):
    """Procedural interface for ProjectionImageFilter"""
    import itk
    instance = itk.ProjectionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def projection_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ProjectionImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ProjectionImageFilter.values()[0]
    else:
        filter_object = itk.ProjectionImageFilter

    projection_image_filter.__doc__ = filter_object.__doc__
    projection_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    projection_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ProjectionImageFilter, itkTemplate.itkTemplate):
        projection_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        projection_image_filter.__doc__ += "\n"
        projection_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        projection_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



