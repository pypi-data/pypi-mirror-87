# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKCommonPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBoundingBoxPython
else:
    import _itkBoundingBoxPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkBoundingBoxPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkBoundingBoxPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkMapContainerPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.ITKCommonBasePython
import itk.itkPointPython
import itk.itkVectorContainerPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython

def itkBoundingBoxUL2DMCULPD2_New():
    return itkBoundingBoxUL2DMCULPD2.New()

class itkBoundingBoxUL2DMCULPD2(itk.ITKCommonBasePython.itkObject):
    r"""


    Represent and compute information about bounding boxes.

    BoundingBox is a supporting class that represents, computes, and
    caches information about bounding boxes. The bounding box can be
    computed from several sources, including manual specification and
    computation from an input points container.

    This is a templated, n-dimensional version of the bounding box.
    Bounding boxes are represented by n pairs of (min,max) pairs, where
    min is the minimum coordinate value and max is the maximum coordinate
    value for coordinate axis i.

    Template parameters for BoundingBox:

    Parameters:
    -----------

    TPointIdentifier:  The type used to access a particular point (i.e., a
    point's id)

    TCoordRep:  Numerical type with which to represent each coordinate
    value.

    VPointDimension:  Geometric dimension of space. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoundingBoxPython.itkBoundingBoxUL2DMCULPD2___New_orig__)
    Clone = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DMCULPD2_Clone)
    SetPoints = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DMCULPD2_SetPoints)
    GetPoints = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DMCULPD2_GetPoints)
    ComputeCorners = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DMCULPD2_ComputeCorners)
    ComputeBoundingBox = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DMCULPD2_ComputeBoundingBox)
    GetBounds = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DMCULPD2_GetBounds)
    GetCenter = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DMCULPD2_GetCenter)
    GetMinimum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DMCULPD2_GetMinimum)
    SetMinimum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DMCULPD2_SetMinimum)
    GetMaximum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DMCULPD2_GetMaximum)
    SetMaximum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DMCULPD2_SetMaximum)
    ConsiderPoint = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DMCULPD2_ConsiderPoint)
    GetDiagonalLength2 = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DMCULPD2_GetDiagonalLength2)
    IsInside = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DMCULPD2_IsInside)
    DeepCopy = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DMCULPD2_DeepCopy)
    __swig_destroy__ = _itkBoundingBoxPython.delete_itkBoundingBoxUL2DMCULPD2
    cast = _swig_new_static_method(_itkBoundingBoxPython.itkBoundingBoxUL2DMCULPD2_cast)

    def New(*args, **kargs):
        """New() -> itkBoundingBoxUL2DMCULPD2

        Create a new object of the class itkBoundingBoxUL2DMCULPD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoundingBoxUL2DMCULPD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoundingBoxUL2DMCULPD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoundingBoxUL2DMCULPD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoundingBoxUL2DMCULPD2 in _itkBoundingBoxPython:
_itkBoundingBoxPython.itkBoundingBoxUL2DMCULPD2_swigregister(itkBoundingBoxUL2DMCULPD2)
itkBoundingBoxUL2DMCULPD2___New_orig__ = _itkBoundingBoxPython.itkBoundingBoxUL2DMCULPD2___New_orig__
itkBoundingBoxUL2DMCULPD2_cast = _itkBoundingBoxPython.itkBoundingBoxUL2DMCULPD2_cast


def itkBoundingBoxUL2DVCULPD2_New():
    return itkBoundingBoxUL2DVCULPD2.New()

class itkBoundingBoxUL2DVCULPD2(itk.ITKCommonBasePython.itkObject):
    r"""


    Represent and compute information about bounding boxes.

    BoundingBox is a supporting class that represents, computes, and
    caches information about bounding boxes. The bounding box can be
    computed from several sources, including manual specification and
    computation from an input points container.

    This is a templated, n-dimensional version of the bounding box.
    Bounding boxes are represented by n pairs of (min,max) pairs, where
    min is the minimum coordinate value and max is the maximum coordinate
    value for coordinate axis i.

    Template parameters for BoundingBox:

    Parameters:
    -----------

    TPointIdentifier:  The type used to access a particular point (i.e., a
    point's id)

    TCoordRep:  Numerical type with which to represent each coordinate
    value.

    VPointDimension:  Geometric dimension of space. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoundingBoxPython.itkBoundingBoxUL2DVCULPD2___New_orig__)
    Clone = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DVCULPD2_Clone)
    SetPoints = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DVCULPD2_SetPoints)
    GetPoints = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DVCULPD2_GetPoints)
    ComputeCorners = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DVCULPD2_ComputeCorners)
    ComputeBoundingBox = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DVCULPD2_ComputeBoundingBox)
    GetBounds = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DVCULPD2_GetBounds)
    GetCenter = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DVCULPD2_GetCenter)
    GetMinimum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DVCULPD2_GetMinimum)
    SetMinimum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DVCULPD2_SetMinimum)
    GetMaximum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DVCULPD2_GetMaximum)
    SetMaximum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DVCULPD2_SetMaximum)
    ConsiderPoint = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DVCULPD2_ConsiderPoint)
    GetDiagonalLength2 = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DVCULPD2_GetDiagonalLength2)
    IsInside = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DVCULPD2_IsInside)
    DeepCopy = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2DVCULPD2_DeepCopy)
    __swig_destroy__ = _itkBoundingBoxPython.delete_itkBoundingBoxUL2DVCULPD2
    cast = _swig_new_static_method(_itkBoundingBoxPython.itkBoundingBoxUL2DVCULPD2_cast)

    def New(*args, **kargs):
        """New() -> itkBoundingBoxUL2DVCULPD2

        Create a new object of the class itkBoundingBoxUL2DVCULPD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoundingBoxUL2DVCULPD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoundingBoxUL2DVCULPD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoundingBoxUL2DVCULPD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoundingBoxUL2DVCULPD2 in _itkBoundingBoxPython:
_itkBoundingBoxPython.itkBoundingBoxUL2DVCULPD2_swigregister(itkBoundingBoxUL2DVCULPD2)
itkBoundingBoxUL2DVCULPD2___New_orig__ = _itkBoundingBoxPython.itkBoundingBoxUL2DVCULPD2___New_orig__
itkBoundingBoxUL2DVCULPD2_cast = _itkBoundingBoxPython.itkBoundingBoxUL2DVCULPD2_cast


def itkBoundingBoxUL2FMCULPF2_New():
    return itkBoundingBoxUL2FMCULPF2.New()

class itkBoundingBoxUL2FMCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""


    Represent and compute information about bounding boxes.

    BoundingBox is a supporting class that represents, computes, and
    caches information about bounding boxes. The bounding box can be
    computed from several sources, including manual specification and
    computation from an input points container.

    This is a templated, n-dimensional version of the bounding box.
    Bounding boxes are represented by n pairs of (min,max) pairs, where
    min is the minimum coordinate value and max is the maximum coordinate
    value for coordinate axis i.

    Template parameters for BoundingBox:

    Parameters:
    -----------

    TPointIdentifier:  The type used to access a particular point (i.e., a
    point's id)

    TCoordRep:  Numerical type with which to represent each coordinate
    value.

    VPointDimension:  Geometric dimension of space. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoundingBoxPython.itkBoundingBoxUL2FMCULPF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FMCULPF2_Clone)
    SetPoints = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FMCULPF2_SetPoints)
    GetPoints = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FMCULPF2_GetPoints)
    ComputeCorners = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FMCULPF2_ComputeCorners)
    ComputeBoundingBox = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FMCULPF2_ComputeBoundingBox)
    GetBounds = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FMCULPF2_GetBounds)
    GetCenter = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FMCULPF2_GetCenter)
    GetMinimum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FMCULPF2_GetMinimum)
    SetMinimum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FMCULPF2_SetMinimum)
    GetMaximum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FMCULPF2_GetMaximum)
    SetMaximum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FMCULPF2_SetMaximum)
    ConsiderPoint = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FMCULPF2_ConsiderPoint)
    GetDiagonalLength2 = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FMCULPF2_GetDiagonalLength2)
    IsInside = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FMCULPF2_IsInside)
    DeepCopy = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FMCULPF2_DeepCopy)
    __swig_destroy__ = _itkBoundingBoxPython.delete_itkBoundingBoxUL2FMCULPF2
    cast = _swig_new_static_method(_itkBoundingBoxPython.itkBoundingBoxUL2FMCULPF2_cast)

    def New(*args, **kargs):
        """New() -> itkBoundingBoxUL2FMCULPF2

        Create a new object of the class itkBoundingBoxUL2FMCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoundingBoxUL2FMCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoundingBoxUL2FMCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoundingBoxUL2FMCULPF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoundingBoxUL2FMCULPF2 in _itkBoundingBoxPython:
_itkBoundingBoxPython.itkBoundingBoxUL2FMCULPF2_swigregister(itkBoundingBoxUL2FMCULPF2)
itkBoundingBoxUL2FMCULPF2___New_orig__ = _itkBoundingBoxPython.itkBoundingBoxUL2FMCULPF2___New_orig__
itkBoundingBoxUL2FMCULPF2_cast = _itkBoundingBoxPython.itkBoundingBoxUL2FMCULPF2_cast


def itkBoundingBoxUL2FVCULPF2_New():
    return itkBoundingBoxUL2FVCULPF2.New()

class itkBoundingBoxUL2FVCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""


    Represent and compute information about bounding boxes.

    BoundingBox is a supporting class that represents, computes, and
    caches information about bounding boxes. The bounding box can be
    computed from several sources, including manual specification and
    computation from an input points container.

    This is a templated, n-dimensional version of the bounding box.
    Bounding boxes are represented by n pairs of (min,max) pairs, where
    min is the minimum coordinate value and max is the maximum coordinate
    value for coordinate axis i.

    Template parameters for BoundingBox:

    Parameters:
    -----------

    TPointIdentifier:  The type used to access a particular point (i.e., a
    point's id)

    TCoordRep:  Numerical type with which to represent each coordinate
    value.

    VPointDimension:  Geometric dimension of space. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoundingBoxPython.itkBoundingBoxUL2FVCULPF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FVCULPF2_Clone)
    SetPoints = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FVCULPF2_SetPoints)
    GetPoints = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FVCULPF2_GetPoints)
    ComputeCorners = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FVCULPF2_ComputeCorners)
    ComputeBoundingBox = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FVCULPF2_ComputeBoundingBox)
    GetBounds = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FVCULPF2_GetBounds)
    GetCenter = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FVCULPF2_GetCenter)
    GetMinimum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FVCULPF2_GetMinimum)
    SetMinimum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FVCULPF2_SetMinimum)
    GetMaximum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FVCULPF2_GetMaximum)
    SetMaximum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FVCULPF2_SetMaximum)
    ConsiderPoint = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FVCULPF2_ConsiderPoint)
    GetDiagonalLength2 = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FVCULPF2_GetDiagonalLength2)
    IsInside = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FVCULPF2_IsInside)
    DeepCopy = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL2FVCULPF2_DeepCopy)
    __swig_destroy__ = _itkBoundingBoxPython.delete_itkBoundingBoxUL2FVCULPF2
    cast = _swig_new_static_method(_itkBoundingBoxPython.itkBoundingBoxUL2FVCULPF2_cast)

    def New(*args, **kargs):
        """New() -> itkBoundingBoxUL2FVCULPF2

        Create a new object of the class itkBoundingBoxUL2FVCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoundingBoxUL2FVCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoundingBoxUL2FVCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoundingBoxUL2FVCULPF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoundingBoxUL2FVCULPF2 in _itkBoundingBoxPython:
_itkBoundingBoxPython.itkBoundingBoxUL2FVCULPF2_swigregister(itkBoundingBoxUL2FVCULPF2)
itkBoundingBoxUL2FVCULPF2___New_orig__ = _itkBoundingBoxPython.itkBoundingBoxUL2FVCULPF2___New_orig__
itkBoundingBoxUL2FVCULPF2_cast = _itkBoundingBoxPython.itkBoundingBoxUL2FVCULPF2_cast


def itkBoundingBoxUL3DMCULPD3_New():
    return itkBoundingBoxUL3DMCULPD3.New()

class itkBoundingBoxUL3DMCULPD3(itk.ITKCommonBasePython.itkObject):
    r"""


    Represent and compute information about bounding boxes.

    BoundingBox is a supporting class that represents, computes, and
    caches information about bounding boxes. The bounding box can be
    computed from several sources, including manual specification and
    computation from an input points container.

    This is a templated, n-dimensional version of the bounding box.
    Bounding boxes are represented by n pairs of (min,max) pairs, where
    min is the minimum coordinate value and max is the maximum coordinate
    value for coordinate axis i.

    Template parameters for BoundingBox:

    Parameters:
    -----------

    TPointIdentifier:  The type used to access a particular point (i.e., a
    point's id)

    TCoordRep:  Numerical type with which to represent each coordinate
    value.

    VPointDimension:  Geometric dimension of space. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoundingBoxPython.itkBoundingBoxUL3DMCULPD3___New_orig__)
    Clone = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DMCULPD3_Clone)
    SetPoints = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DMCULPD3_SetPoints)
    GetPoints = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DMCULPD3_GetPoints)
    ComputeCorners = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DMCULPD3_ComputeCorners)
    ComputeBoundingBox = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DMCULPD3_ComputeBoundingBox)
    GetBounds = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DMCULPD3_GetBounds)
    GetCenter = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DMCULPD3_GetCenter)
    GetMinimum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DMCULPD3_GetMinimum)
    SetMinimum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DMCULPD3_SetMinimum)
    GetMaximum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DMCULPD3_GetMaximum)
    SetMaximum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DMCULPD3_SetMaximum)
    ConsiderPoint = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DMCULPD3_ConsiderPoint)
    GetDiagonalLength2 = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DMCULPD3_GetDiagonalLength2)
    IsInside = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DMCULPD3_IsInside)
    DeepCopy = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DMCULPD3_DeepCopy)
    __swig_destroy__ = _itkBoundingBoxPython.delete_itkBoundingBoxUL3DMCULPD3
    cast = _swig_new_static_method(_itkBoundingBoxPython.itkBoundingBoxUL3DMCULPD3_cast)

    def New(*args, **kargs):
        """New() -> itkBoundingBoxUL3DMCULPD3

        Create a new object of the class itkBoundingBoxUL3DMCULPD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoundingBoxUL3DMCULPD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoundingBoxUL3DMCULPD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoundingBoxUL3DMCULPD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoundingBoxUL3DMCULPD3 in _itkBoundingBoxPython:
_itkBoundingBoxPython.itkBoundingBoxUL3DMCULPD3_swigregister(itkBoundingBoxUL3DMCULPD3)
itkBoundingBoxUL3DMCULPD3___New_orig__ = _itkBoundingBoxPython.itkBoundingBoxUL3DMCULPD3___New_orig__
itkBoundingBoxUL3DMCULPD3_cast = _itkBoundingBoxPython.itkBoundingBoxUL3DMCULPD3_cast


def itkBoundingBoxUL3DVCULPD3_New():
    return itkBoundingBoxUL3DVCULPD3.New()

class itkBoundingBoxUL3DVCULPD3(itk.ITKCommonBasePython.itkObject):
    r"""


    Represent and compute information about bounding boxes.

    BoundingBox is a supporting class that represents, computes, and
    caches information about bounding boxes. The bounding box can be
    computed from several sources, including manual specification and
    computation from an input points container.

    This is a templated, n-dimensional version of the bounding box.
    Bounding boxes are represented by n pairs of (min,max) pairs, where
    min is the minimum coordinate value and max is the maximum coordinate
    value for coordinate axis i.

    Template parameters for BoundingBox:

    Parameters:
    -----------

    TPointIdentifier:  The type used to access a particular point (i.e., a
    point's id)

    TCoordRep:  Numerical type with which to represent each coordinate
    value.

    VPointDimension:  Geometric dimension of space. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoundingBoxPython.itkBoundingBoxUL3DVCULPD3___New_orig__)
    Clone = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DVCULPD3_Clone)
    SetPoints = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DVCULPD3_SetPoints)
    GetPoints = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DVCULPD3_GetPoints)
    ComputeCorners = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DVCULPD3_ComputeCorners)
    ComputeBoundingBox = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DVCULPD3_ComputeBoundingBox)
    GetBounds = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DVCULPD3_GetBounds)
    GetCenter = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DVCULPD3_GetCenter)
    GetMinimum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DVCULPD3_GetMinimum)
    SetMinimum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DVCULPD3_SetMinimum)
    GetMaximum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DVCULPD3_GetMaximum)
    SetMaximum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DVCULPD3_SetMaximum)
    ConsiderPoint = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DVCULPD3_ConsiderPoint)
    GetDiagonalLength2 = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DVCULPD3_GetDiagonalLength2)
    IsInside = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DVCULPD3_IsInside)
    DeepCopy = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3DVCULPD3_DeepCopy)
    __swig_destroy__ = _itkBoundingBoxPython.delete_itkBoundingBoxUL3DVCULPD3
    cast = _swig_new_static_method(_itkBoundingBoxPython.itkBoundingBoxUL3DVCULPD3_cast)

    def New(*args, **kargs):
        """New() -> itkBoundingBoxUL3DVCULPD3

        Create a new object of the class itkBoundingBoxUL3DVCULPD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoundingBoxUL3DVCULPD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoundingBoxUL3DVCULPD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoundingBoxUL3DVCULPD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoundingBoxUL3DVCULPD3 in _itkBoundingBoxPython:
_itkBoundingBoxPython.itkBoundingBoxUL3DVCULPD3_swigregister(itkBoundingBoxUL3DVCULPD3)
itkBoundingBoxUL3DVCULPD3___New_orig__ = _itkBoundingBoxPython.itkBoundingBoxUL3DVCULPD3___New_orig__
itkBoundingBoxUL3DVCULPD3_cast = _itkBoundingBoxPython.itkBoundingBoxUL3DVCULPD3_cast


def itkBoundingBoxUL3FMCULPF3_New():
    return itkBoundingBoxUL3FMCULPF3.New()

class itkBoundingBoxUL3FMCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""


    Represent and compute information about bounding boxes.

    BoundingBox is a supporting class that represents, computes, and
    caches information about bounding boxes. The bounding box can be
    computed from several sources, including manual specification and
    computation from an input points container.

    This is a templated, n-dimensional version of the bounding box.
    Bounding boxes are represented by n pairs of (min,max) pairs, where
    min is the minimum coordinate value and max is the maximum coordinate
    value for coordinate axis i.

    Template parameters for BoundingBox:

    Parameters:
    -----------

    TPointIdentifier:  The type used to access a particular point (i.e., a
    point's id)

    TCoordRep:  Numerical type with which to represent each coordinate
    value.

    VPointDimension:  Geometric dimension of space. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoundingBoxPython.itkBoundingBoxUL3FMCULPF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FMCULPF3_Clone)
    SetPoints = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FMCULPF3_SetPoints)
    GetPoints = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FMCULPF3_GetPoints)
    ComputeCorners = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FMCULPF3_ComputeCorners)
    ComputeBoundingBox = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FMCULPF3_ComputeBoundingBox)
    GetBounds = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FMCULPF3_GetBounds)
    GetCenter = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FMCULPF3_GetCenter)
    GetMinimum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FMCULPF3_GetMinimum)
    SetMinimum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FMCULPF3_SetMinimum)
    GetMaximum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FMCULPF3_GetMaximum)
    SetMaximum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FMCULPF3_SetMaximum)
    ConsiderPoint = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FMCULPF3_ConsiderPoint)
    GetDiagonalLength2 = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FMCULPF3_GetDiagonalLength2)
    IsInside = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FMCULPF3_IsInside)
    DeepCopy = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FMCULPF3_DeepCopy)
    __swig_destroy__ = _itkBoundingBoxPython.delete_itkBoundingBoxUL3FMCULPF3
    cast = _swig_new_static_method(_itkBoundingBoxPython.itkBoundingBoxUL3FMCULPF3_cast)

    def New(*args, **kargs):
        """New() -> itkBoundingBoxUL3FMCULPF3

        Create a new object of the class itkBoundingBoxUL3FMCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoundingBoxUL3FMCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoundingBoxUL3FMCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoundingBoxUL3FMCULPF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoundingBoxUL3FMCULPF3 in _itkBoundingBoxPython:
_itkBoundingBoxPython.itkBoundingBoxUL3FMCULPF3_swigregister(itkBoundingBoxUL3FMCULPF3)
itkBoundingBoxUL3FMCULPF3___New_orig__ = _itkBoundingBoxPython.itkBoundingBoxUL3FMCULPF3___New_orig__
itkBoundingBoxUL3FMCULPF3_cast = _itkBoundingBoxPython.itkBoundingBoxUL3FMCULPF3_cast


def itkBoundingBoxUL3FVCULPF3_New():
    return itkBoundingBoxUL3FVCULPF3.New()

class itkBoundingBoxUL3FVCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""


    Represent and compute information about bounding boxes.

    BoundingBox is a supporting class that represents, computes, and
    caches information about bounding boxes. The bounding box can be
    computed from several sources, including manual specification and
    computation from an input points container.

    This is a templated, n-dimensional version of the bounding box.
    Bounding boxes are represented by n pairs of (min,max) pairs, where
    min is the minimum coordinate value and max is the maximum coordinate
    value for coordinate axis i.

    Template parameters for BoundingBox:

    Parameters:
    -----------

    TPointIdentifier:  The type used to access a particular point (i.e., a
    point's id)

    TCoordRep:  Numerical type with which to represent each coordinate
    value.

    VPointDimension:  Geometric dimension of space. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoundingBoxPython.itkBoundingBoxUL3FVCULPF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FVCULPF3_Clone)
    SetPoints = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FVCULPF3_SetPoints)
    GetPoints = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FVCULPF3_GetPoints)
    ComputeCorners = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FVCULPF3_ComputeCorners)
    ComputeBoundingBox = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FVCULPF3_ComputeBoundingBox)
    GetBounds = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FVCULPF3_GetBounds)
    GetCenter = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FVCULPF3_GetCenter)
    GetMinimum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FVCULPF3_GetMinimum)
    SetMinimum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FVCULPF3_SetMinimum)
    GetMaximum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FVCULPF3_GetMaximum)
    SetMaximum = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FVCULPF3_SetMaximum)
    ConsiderPoint = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FVCULPF3_ConsiderPoint)
    GetDiagonalLength2 = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FVCULPF3_GetDiagonalLength2)
    IsInside = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FVCULPF3_IsInside)
    DeepCopy = _swig_new_instance_method(_itkBoundingBoxPython.itkBoundingBoxUL3FVCULPF3_DeepCopy)
    __swig_destroy__ = _itkBoundingBoxPython.delete_itkBoundingBoxUL3FVCULPF3
    cast = _swig_new_static_method(_itkBoundingBoxPython.itkBoundingBoxUL3FVCULPF3_cast)

    def New(*args, **kargs):
        """New() -> itkBoundingBoxUL3FVCULPF3

        Create a new object of the class itkBoundingBoxUL3FVCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoundingBoxUL3FVCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoundingBoxUL3FVCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoundingBoxUL3FVCULPF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoundingBoxUL3FVCULPF3 in _itkBoundingBoxPython:
_itkBoundingBoxPython.itkBoundingBoxUL3FVCULPF3_swigregister(itkBoundingBoxUL3FVCULPF3)
itkBoundingBoxUL3FVCULPF3___New_orig__ = _itkBoundingBoxPython.itkBoundingBoxUL3FVCULPF3___New_orig__
itkBoundingBoxUL3FVCULPF3_cast = _itkBoundingBoxPython.itkBoundingBoxUL3FVCULPF3_cast



