# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKThresholdingPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkTriangleThresholdImageFilterPython
else:
    import _itkTriangleThresholdImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkTriangleThresholdImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkTriangleThresholdImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkHistogramThresholdImageFilterPython
import itk.itkImageToHistogramFilterPython
import itk.itkHistogramPython
import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkArrayPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkSamplePython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkCovariantVectorPython
import itk.itkImageSinkPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImagePython
import itk.itkPointPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkHistogramThresholdCalculatorPython

def itkTriangleThresholdImageFilterID2ISS2_New():
    return itkTriangleThresholdImageFilterID2ISS2.New()

class itkTriangleThresholdImageFilterID2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2ISS2_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterID2ISS2
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterID2ISS2

        Create a new object of the class itkTriangleThresholdImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterID2ISS2 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2ISS2_swigregister(itkTriangleThresholdImageFilterID2ISS2)
itkTriangleThresholdImageFilterID2ISS2___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2ISS2___New_orig__
itkTriangleThresholdImageFilterID2ISS2_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2ISS2_cast


def itkTriangleThresholdImageFilterID2IUC2_New():
    return itkTriangleThresholdImageFilterID2IUC2.New()

class itkTriangleThresholdImageFilterID2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2IUC2_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterID2IUC2
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterID2IUC2

        Create a new object of the class itkTriangleThresholdImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterID2IUC2 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2IUC2_swigregister(itkTriangleThresholdImageFilterID2IUC2)
itkTriangleThresholdImageFilterID2IUC2___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2IUC2___New_orig__
itkTriangleThresholdImageFilterID2IUC2_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2IUC2_cast


def itkTriangleThresholdImageFilterID2IUS2_New():
    return itkTriangleThresholdImageFilterID2IUS2.New()

class itkTriangleThresholdImageFilterID2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2IUS2_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterID2IUS2
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterID2IUS2

        Create a new object of the class itkTriangleThresholdImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterID2IUS2 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2IUS2_swigregister(itkTriangleThresholdImageFilterID2IUS2)
itkTriangleThresholdImageFilterID2IUS2___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2IUS2___New_orig__
itkTriangleThresholdImageFilterID2IUS2_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID2IUS2_cast


def itkTriangleThresholdImageFilterID3ISS3_New():
    return itkTriangleThresholdImageFilterID3ISS3.New()

class itkTriangleThresholdImageFilterID3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3ISS3_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterID3ISS3
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterID3ISS3

        Create a new object of the class itkTriangleThresholdImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterID3ISS3 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3ISS3_swigregister(itkTriangleThresholdImageFilterID3ISS3)
itkTriangleThresholdImageFilterID3ISS3___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3ISS3___New_orig__
itkTriangleThresholdImageFilterID3ISS3_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3ISS3_cast


def itkTriangleThresholdImageFilterID3IUC3_New():
    return itkTriangleThresholdImageFilterID3IUC3.New()

class itkTriangleThresholdImageFilterID3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3IUC3_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterID3IUC3
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterID3IUC3

        Create a new object of the class itkTriangleThresholdImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterID3IUC3 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3IUC3_swigregister(itkTriangleThresholdImageFilterID3IUC3)
itkTriangleThresholdImageFilterID3IUC3___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3IUC3___New_orig__
itkTriangleThresholdImageFilterID3IUC3_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3IUC3_cast


def itkTriangleThresholdImageFilterID3IUS3_New():
    return itkTriangleThresholdImageFilterID3IUS3.New()

class itkTriangleThresholdImageFilterID3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3IUS3_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterID3IUS3
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterID3IUS3

        Create a new object of the class itkTriangleThresholdImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterID3IUS3 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3IUS3_swigregister(itkTriangleThresholdImageFilterID3IUS3)
itkTriangleThresholdImageFilterID3IUS3___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3IUS3___New_orig__
itkTriangleThresholdImageFilterID3IUS3_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterID3IUS3_cast


def itkTriangleThresholdImageFilterIF2ISS2_New():
    return itkTriangleThresholdImageFilterIF2ISS2.New()

class itkTriangleThresholdImageFilterIF2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2ISS2_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIF2ISS2
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIF2ISS2

        Create a new object of the class itkTriangleThresholdImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterIF2ISS2 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2ISS2_swigregister(itkTriangleThresholdImageFilterIF2ISS2)
itkTriangleThresholdImageFilterIF2ISS2___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2ISS2___New_orig__
itkTriangleThresholdImageFilterIF2ISS2_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2ISS2_cast


def itkTriangleThresholdImageFilterIF2IUC2_New():
    return itkTriangleThresholdImageFilterIF2IUC2.New()

class itkTriangleThresholdImageFilterIF2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2IUC2_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIF2IUC2
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIF2IUC2

        Create a new object of the class itkTriangleThresholdImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterIF2IUC2 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2IUC2_swigregister(itkTriangleThresholdImageFilterIF2IUC2)
itkTriangleThresholdImageFilterIF2IUC2___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2IUC2___New_orig__
itkTriangleThresholdImageFilterIF2IUC2_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2IUC2_cast


def itkTriangleThresholdImageFilterIF2IUS2_New():
    return itkTriangleThresholdImageFilterIF2IUS2.New()

class itkTriangleThresholdImageFilterIF2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2IUS2_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIF2IUS2
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIF2IUS2

        Create a new object of the class itkTriangleThresholdImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterIF2IUS2 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2IUS2_swigregister(itkTriangleThresholdImageFilterIF2IUS2)
itkTriangleThresholdImageFilterIF2IUS2___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2IUS2___New_orig__
itkTriangleThresholdImageFilterIF2IUS2_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF2IUS2_cast


def itkTriangleThresholdImageFilterIF3ISS3_New():
    return itkTriangleThresholdImageFilterIF3ISS3.New()

class itkTriangleThresholdImageFilterIF3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3ISS3_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIF3ISS3
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIF3ISS3

        Create a new object of the class itkTriangleThresholdImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterIF3ISS3 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3ISS3_swigregister(itkTriangleThresholdImageFilterIF3ISS3)
itkTriangleThresholdImageFilterIF3ISS3___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3ISS3___New_orig__
itkTriangleThresholdImageFilterIF3ISS3_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3ISS3_cast


def itkTriangleThresholdImageFilterIF3IUC3_New():
    return itkTriangleThresholdImageFilterIF3IUC3.New()

class itkTriangleThresholdImageFilterIF3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3IUC3_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIF3IUC3
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIF3IUC3

        Create a new object of the class itkTriangleThresholdImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterIF3IUC3 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3IUC3_swigregister(itkTriangleThresholdImageFilterIF3IUC3)
itkTriangleThresholdImageFilterIF3IUC3___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3IUC3___New_orig__
itkTriangleThresholdImageFilterIF3IUC3_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3IUC3_cast


def itkTriangleThresholdImageFilterIF3IUS3_New():
    return itkTriangleThresholdImageFilterIF3IUS3.New()

class itkTriangleThresholdImageFilterIF3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3IUS3_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIF3IUS3
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIF3IUS3

        Create a new object of the class itkTriangleThresholdImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterIF3IUS3 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3IUS3_swigregister(itkTriangleThresholdImageFilterIF3IUS3)
itkTriangleThresholdImageFilterIF3IUS3___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3IUS3___New_orig__
itkTriangleThresholdImageFilterIF3IUS3_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIF3IUS3_cast


def itkTriangleThresholdImageFilterISS2ISS2_New():
    return itkTriangleThresholdImageFilterISS2ISS2.New()

class itkTriangleThresholdImageFilterISS2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2ISS2_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterISS2ISS2

        Create a new object of the class itkTriangleThresholdImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterISS2ISS2 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2ISS2_swigregister(itkTriangleThresholdImageFilterISS2ISS2)
itkTriangleThresholdImageFilterISS2ISS2___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2ISS2___New_orig__
itkTriangleThresholdImageFilterISS2ISS2_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2ISS2_cast


def itkTriangleThresholdImageFilterISS2IUC2_New():
    return itkTriangleThresholdImageFilterISS2IUC2.New()

class itkTriangleThresholdImageFilterISS2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2IUC2_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterISS2IUC2
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterISS2IUC2

        Create a new object of the class itkTriangleThresholdImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterISS2IUC2 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2IUC2_swigregister(itkTriangleThresholdImageFilterISS2IUC2)
itkTriangleThresholdImageFilterISS2IUC2___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2IUC2___New_orig__
itkTriangleThresholdImageFilterISS2IUC2_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2IUC2_cast


def itkTriangleThresholdImageFilterISS2IUS2_New():
    return itkTriangleThresholdImageFilterISS2IUS2.New()

class itkTriangleThresholdImageFilterISS2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2IUS2_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterISS2IUS2
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterISS2IUS2

        Create a new object of the class itkTriangleThresholdImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterISS2IUS2 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2IUS2_swigregister(itkTriangleThresholdImageFilterISS2IUS2)
itkTriangleThresholdImageFilterISS2IUS2___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2IUS2___New_orig__
itkTriangleThresholdImageFilterISS2IUS2_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS2IUS2_cast


def itkTriangleThresholdImageFilterISS3ISS3_New():
    return itkTriangleThresholdImageFilterISS3ISS3.New()

class itkTriangleThresholdImageFilterISS3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3ISS3_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterISS3ISS3

        Create a new object of the class itkTriangleThresholdImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterISS3ISS3 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3ISS3_swigregister(itkTriangleThresholdImageFilterISS3ISS3)
itkTriangleThresholdImageFilterISS3ISS3___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3ISS3___New_orig__
itkTriangleThresholdImageFilterISS3ISS3_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3ISS3_cast


def itkTriangleThresholdImageFilterISS3IUC3_New():
    return itkTriangleThresholdImageFilterISS3IUC3.New()

class itkTriangleThresholdImageFilterISS3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3IUC3_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterISS3IUC3
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterISS3IUC3

        Create a new object of the class itkTriangleThresholdImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterISS3IUC3 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3IUC3_swigregister(itkTriangleThresholdImageFilterISS3IUC3)
itkTriangleThresholdImageFilterISS3IUC3___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3IUC3___New_orig__
itkTriangleThresholdImageFilterISS3IUC3_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3IUC3_cast


def itkTriangleThresholdImageFilterISS3IUS3_New():
    return itkTriangleThresholdImageFilterISS3IUS3.New()

class itkTriangleThresholdImageFilterISS3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3IUS3_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterISS3IUS3
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterISS3IUS3

        Create a new object of the class itkTriangleThresholdImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterISS3IUS3 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3IUS3_swigregister(itkTriangleThresholdImageFilterISS3IUS3)
itkTriangleThresholdImageFilterISS3IUS3___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3IUS3___New_orig__
itkTriangleThresholdImageFilterISS3IUS3_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterISS3IUS3_cast


def itkTriangleThresholdImageFilterIUC2ISS2_New():
    return itkTriangleThresholdImageFilterIUC2ISS2.New()

class itkTriangleThresholdImageFilterIUC2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2ISS2_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIUC2ISS2
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIUC2ISS2

        Create a new object of the class itkTriangleThresholdImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterIUC2ISS2 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2ISS2_swigregister(itkTriangleThresholdImageFilterIUC2ISS2)
itkTriangleThresholdImageFilterIUC2ISS2___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2ISS2___New_orig__
itkTriangleThresholdImageFilterIUC2ISS2_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2ISS2_cast


def itkTriangleThresholdImageFilterIUC2IUC2_New():
    return itkTriangleThresholdImageFilterIUC2IUC2.New()

class itkTriangleThresholdImageFilterIUC2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2IUC2_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIUC2IUC2

        Create a new object of the class itkTriangleThresholdImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterIUC2IUC2 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2IUC2_swigregister(itkTriangleThresholdImageFilterIUC2IUC2)
itkTriangleThresholdImageFilterIUC2IUC2___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2IUC2___New_orig__
itkTriangleThresholdImageFilterIUC2IUC2_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2IUC2_cast


def itkTriangleThresholdImageFilterIUC2IUS2_New():
    return itkTriangleThresholdImageFilterIUC2IUS2.New()

class itkTriangleThresholdImageFilterIUC2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2IUS2_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIUC2IUS2
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIUC2IUS2

        Create a new object of the class itkTriangleThresholdImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterIUC2IUS2 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2IUS2_swigregister(itkTriangleThresholdImageFilterIUC2IUS2)
itkTriangleThresholdImageFilterIUC2IUS2___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2IUS2___New_orig__
itkTriangleThresholdImageFilterIUC2IUS2_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC2IUS2_cast


def itkTriangleThresholdImageFilterIUC3ISS3_New():
    return itkTriangleThresholdImageFilterIUC3ISS3.New()

class itkTriangleThresholdImageFilterIUC3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3ISS3_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIUC3ISS3
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIUC3ISS3

        Create a new object of the class itkTriangleThresholdImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterIUC3ISS3 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3ISS3_swigregister(itkTriangleThresholdImageFilterIUC3ISS3)
itkTriangleThresholdImageFilterIUC3ISS3___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3ISS3___New_orig__
itkTriangleThresholdImageFilterIUC3ISS3_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3ISS3_cast


def itkTriangleThresholdImageFilterIUC3IUC3_New():
    return itkTriangleThresholdImageFilterIUC3IUC3.New()

class itkTriangleThresholdImageFilterIUC3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3IUC3_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIUC3IUC3

        Create a new object of the class itkTriangleThresholdImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterIUC3IUC3 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3IUC3_swigregister(itkTriangleThresholdImageFilterIUC3IUC3)
itkTriangleThresholdImageFilterIUC3IUC3___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3IUC3___New_orig__
itkTriangleThresholdImageFilterIUC3IUC3_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3IUC3_cast


def itkTriangleThresholdImageFilterIUC3IUS3_New():
    return itkTriangleThresholdImageFilterIUC3IUS3.New()

class itkTriangleThresholdImageFilterIUC3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3IUS3_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIUC3IUS3
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIUC3IUS3

        Create a new object of the class itkTriangleThresholdImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterIUC3IUS3 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3IUS3_swigregister(itkTriangleThresholdImageFilterIUC3IUS3)
itkTriangleThresholdImageFilterIUC3IUS3___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3IUS3___New_orig__
itkTriangleThresholdImageFilterIUC3IUS3_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUC3IUS3_cast


def itkTriangleThresholdImageFilterIUS2ISS2_New():
    return itkTriangleThresholdImageFilterIUS2ISS2.New()

class itkTriangleThresholdImageFilterIUS2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2ISS2_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIUS2ISS2
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIUS2ISS2

        Create a new object of the class itkTriangleThresholdImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterIUS2ISS2 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2ISS2_swigregister(itkTriangleThresholdImageFilterIUS2ISS2)
itkTriangleThresholdImageFilterIUS2ISS2___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2ISS2___New_orig__
itkTriangleThresholdImageFilterIUS2ISS2_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2ISS2_cast


def itkTriangleThresholdImageFilterIUS2IUC2_New():
    return itkTriangleThresholdImageFilterIUS2IUC2.New()

class itkTriangleThresholdImageFilterIUS2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2IUC2_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIUS2IUC2
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIUS2IUC2

        Create a new object of the class itkTriangleThresholdImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterIUS2IUC2 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2IUC2_swigregister(itkTriangleThresholdImageFilterIUS2IUC2)
itkTriangleThresholdImageFilterIUS2IUC2___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2IUC2___New_orig__
itkTriangleThresholdImageFilterIUS2IUC2_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2IUC2_cast


def itkTriangleThresholdImageFilterIUS2IUS2_New():
    return itkTriangleThresholdImageFilterIUS2IUS2.New()

class itkTriangleThresholdImageFilterIUS2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2IUS2_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIUS2IUS2

        Create a new object of the class itkTriangleThresholdImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterIUS2IUS2 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2IUS2_swigregister(itkTriangleThresholdImageFilterIUS2IUS2)
itkTriangleThresholdImageFilterIUS2IUS2___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2IUS2___New_orig__
itkTriangleThresholdImageFilterIUS2IUS2_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS2IUS2_cast


def itkTriangleThresholdImageFilterIUS3ISS3_New():
    return itkTriangleThresholdImageFilterIUS3ISS3.New()

class itkTriangleThresholdImageFilterIUS3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3ISS3_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIUS3ISS3
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIUS3ISS3

        Create a new object of the class itkTriangleThresholdImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterIUS3ISS3 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3ISS3_swigregister(itkTriangleThresholdImageFilterIUS3ISS3)
itkTriangleThresholdImageFilterIUS3ISS3___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3ISS3___New_orig__
itkTriangleThresholdImageFilterIUS3ISS3_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3ISS3_cast


def itkTriangleThresholdImageFilterIUS3IUC3_New():
    return itkTriangleThresholdImageFilterIUS3IUC3.New()

class itkTriangleThresholdImageFilterIUS3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3IUC3_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIUS3IUC3
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIUS3IUC3

        Create a new object of the class itkTriangleThresholdImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterIUS3IUC3 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3IUC3_swigregister(itkTriangleThresholdImageFilterIUS3IUC3)
itkTriangleThresholdImageFilterIUS3IUC3___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3IUC3___New_orig__
itkTriangleThresholdImageFilterIUS3IUC3_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3IUC3_cast


def itkTriangleThresholdImageFilterIUS3IUS3_New():
    return itkTriangleThresholdImageFilterIUS3IUS3.New()

class itkTriangleThresholdImageFilterIUS3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3):
    r"""


    Threshold an image using the Triangle Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the TriangleThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3IUS3_Clone)
    __swig_destroy__ = _itkTriangleThresholdImageFilterPython.delete_itkTriangleThresholdImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkTriangleThresholdImageFilterIUS3IUS3

        Create a new object of the class itkTriangleThresholdImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTriangleThresholdImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTriangleThresholdImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTriangleThresholdImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTriangleThresholdImageFilterIUS3IUS3 in _itkTriangleThresholdImageFilterPython:
_itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3IUS3_swigregister(itkTriangleThresholdImageFilterIUS3IUS3)
itkTriangleThresholdImageFilterIUS3IUS3___New_orig__ = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3IUS3___New_orig__
itkTriangleThresholdImageFilterIUS3IUS3_cast = _itkTriangleThresholdImageFilterPython.itkTriangleThresholdImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def triangle_threshold_image_filter(*args, **kwargs):
    """Procedural interface for TriangleThresholdImageFilter"""
    import itk
    instance = itk.TriangleThresholdImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def triangle_threshold_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.TriangleThresholdImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.TriangleThresholdImageFilter.values()[0]
    else:
        filter_object = itk.TriangleThresholdImageFilter

    triangle_threshold_image_filter.__doc__ = filter_object.__doc__
    triangle_threshold_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    triangle_threshold_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.TriangleThresholdImageFilter, itkTemplate.itkTemplate):
        triangle_threshold_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        triangle_threshold_image_filter.__doc__ += "\n"
        triangle_threshold_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        triangle_threshold_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



