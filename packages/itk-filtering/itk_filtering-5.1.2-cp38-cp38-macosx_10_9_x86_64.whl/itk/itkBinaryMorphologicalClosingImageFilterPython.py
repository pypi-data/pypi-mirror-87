# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKBinaryMathematicalMorphologyPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBinaryMorphologicalClosingImageFilterPython
else:
    import _itkBinaryMorphologicalClosingImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkBinaryMorphologicalClosingImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkBinaryMorphologicalClosingImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkFlatStructuringElementPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkNeighborhoodPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.itkRGBPixelPython
import itk.itkImagePython
import itk.itkPointPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkIndexPython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkBoxImageFilterPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython

def itkBinaryMorphologicalClosingImageFilterID2ID2SE2_New():
    return itkBinaryMorphologicalClosingImageFilterID2ID2SE2.New()

class itkBinaryMorphologicalClosingImageFilterID2ID2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterID2ID2SE2):
    r"""


    binary morphological closing of an image.

    This filter removes small (i.e., smaller than the structuring element)
    holes and tube like structures in the interior or at the boundaries of
    the image. The morphological closing of an image "f" is defined as:
    Closing(f) = Erosion(Dilation(f)).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    This code was contributed in the Insight Journal paper: "Binary
    morphological closing and opening image filters" by Lehmann
    G.https://hdl.handle.net/1926/141http://www.insight-
    journal.org/browse/publication/58

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleErodeImageFilter
    example{Filtering/BinaryMathematicalMorphology/ClosingBinaryImage,
    Closing Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterID2ID2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterID2ID2SE2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterID2ID2SE2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterID2ID2SE2_GetForegroundValue)
    SetSafeBorder = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterID2ID2SE2_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterID2ID2SE2_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterID2ID2SE2_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterID2ID2SE2_SafeBorderOff)
    __swig_destroy__ = _itkBinaryMorphologicalClosingImageFilterPython.delete_itkBinaryMorphologicalClosingImageFilterID2ID2SE2
    cast = _swig_new_static_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterID2ID2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalClosingImageFilterID2ID2SE2

        Create a new object of the class itkBinaryMorphologicalClosingImageFilterID2ID2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalClosingImageFilterID2ID2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalClosingImageFilterID2ID2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalClosingImageFilterID2ID2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalClosingImageFilterID2ID2SE2 in _itkBinaryMorphologicalClosingImageFilterPython:
_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterID2ID2SE2_swigregister(itkBinaryMorphologicalClosingImageFilterID2ID2SE2)
itkBinaryMorphologicalClosingImageFilterID2ID2SE2___New_orig__ = _itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterID2ID2SE2___New_orig__
itkBinaryMorphologicalClosingImageFilterID2ID2SE2_cast = _itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterID2ID2SE2_cast


def itkBinaryMorphologicalClosingImageFilterID3ID3SE3_New():
    return itkBinaryMorphologicalClosingImageFilterID3ID3SE3.New()

class itkBinaryMorphologicalClosingImageFilterID3ID3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterID3ID3SE3):
    r"""


    binary morphological closing of an image.

    This filter removes small (i.e., smaller than the structuring element)
    holes and tube like structures in the interior or at the boundaries of
    the image. The morphological closing of an image "f" is defined as:
    Closing(f) = Erosion(Dilation(f)).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    This code was contributed in the Insight Journal paper: "Binary
    morphological closing and opening image filters" by Lehmann
    G.https://hdl.handle.net/1926/141http://www.insight-
    journal.org/browse/publication/58

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleErodeImageFilter
    example{Filtering/BinaryMathematicalMorphology/ClosingBinaryImage,
    Closing Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterID3ID3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterID3ID3SE3_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterID3ID3SE3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterID3ID3SE3_GetForegroundValue)
    SetSafeBorder = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterID3ID3SE3_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterID3ID3SE3_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterID3ID3SE3_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterID3ID3SE3_SafeBorderOff)
    __swig_destroy__ = _itkBinaryMorphologicalClosingImageFilterPython.delete_itkBinaryMorphologicalClosingImageFilterID3ID3SE3
    cast = _swig_new_static_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterID3ID3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalClosingImageFilterID3ID3SE3

        Create a new object of the class itkBinaryMorphologicalClosingImageFilterID3ID3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalClosingImageFilterID3ID3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalClosingImageFilterID3ID3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalClosingImageFilterID3ID3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalClosingImageFilterID3ID3SE3 in _itkBinaryMorphologicalClosingImageFilterPython:
_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterID3ID3SE3_swigregister(itkBinaryMorphologicalClosingImageFilterID3ID3SE3)
itkBinaryMorphologicalClosingImageFilterID3ID3SE3___New_orig__ = _itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterID3ID3SE3___New_orig__
itkBinaryMorphologicalClosingImageFilterID3ID3SE3_cast = _itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterID3ID3SE3_cast


def itkBinaryMorphologicalClosingImageFilterIF2IF2SE2_New():
    return itkBinaryMorphologicalClosingImageFilterIF2IF2SE2.New()

class itkBinaryMorphologicalClosingImageFilterIF2IF2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF2IF2SE2):
    r"""


    binary morphological closing of an image.

    This filter removes small (i.e., smaller than the structuring element)
    holes and tube like structures in the interior or at the boundaries of
    the image. The morphological closing of an image "f" is defined as:
    Closing(f) = Erosion(Dilation(f)).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    This code was contributed in the Insight Journal paper: "Binary
    morphological closing and opening image filters" by Lehmann
    G.https://hdl.handle.net/1926/141http://www.insight-
    journal.org/browse/publication/58

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleErodeImageFilter
    example{Filtering/BinaryMathematicalMorphology/ClosingBinaryImage,
    Closing Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIF2IF2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIF2IF2SE2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIF2IF2SE2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIF2IF2SE2_GetForegroundValue)
    SetSafeBorder = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIF2IF2SE2_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIF2IF2SE2_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIF2IF2SE2_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIF2IF2SE2_SafeBorderOff)
    __swig_destroy__ = _itkBinaryMorphologicalClosingImageFilterPython.delete_itkBinaryMorphologicalClosingImageFilterIF2IF2SE2
    cast = _swig_new_static_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIF2IF2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalClosingImageFilterIF2IF2SE2

        Create a new object of the class itkBinaryMorphologicalClosingImageFilterIF2IF2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalClosingImageFilterIF2IF2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalClosingImageFilterIF2IF2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalClosingImageFilterIF2IF2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalClosingImageFilterIF2IF2SE2 in _itkBinaryMorphologicalClosingImageFilterPython:
_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIF2IF2SE2_swigregister(itkBinaryMorphologicalClosingImageFilterIF2IF2SE2)
itkBinaryMorphologicalClosingImageFilterIF2IF2SE2___New_orig__ = _itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIF2IF2SE2___New_orig__
itkBinaryMorphologicalClosingImageFilterIF2IF2SE2_cast = _itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIF2IF2SE2_cast


def itkBinaryMorphologicalClosingImageFilterIF3IF3SE3_New():
    return itkBinaryMorphologicalClosingImageFilterIF3IF3SE3.New()

class itkBinaryMorphologicalClosingImageFilterIF3IF3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF3IF3SE3):
    r"""


    binary morphological closing of an image.

    This filter removes small (i.e., smaller than the structuring element)
    holes and tube like structures in the interior or at the boundaries of
    the image. The morphological closing of an image "f" is defined as:
    Closing(f) = Erosion(Dilation(f)).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    This code was contributed in the Insight Journal paper: "Binary
    morphological closing and opening image filters" by Lehmann
    G.https://hdl.handle.net/1926/141http://www.insight-
    journal.org/browse/publication/58

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleErodeImageFilter
    example{Filtering/BinaryMathematicalMorphology/ClosingBinaryImage,
    Closing Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIF3IF3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIF3IF3SE3_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIF3IF3SE3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIF3IF3SE3_GetForegroundValue)
    SetSafeBorder = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIF3IF3SE3_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIF3IF3SE3_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIF3IF3SE3_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIF3IF3SE3_SafeBorderOff)
    __swig_destroy__ = _itkBinaryMorphologicalClosingImageFilterPython.delete_itkBinaryMorphologicalClosingImageFilterIF3IF3SE3
    cast = _swig_new_static_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIF3IF3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalClosingImageFilterIF3IF3SE3

        Create a new object of the class itkBinaryMorphologicalClosingImageFilterIF3IF3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalClosingImageFilterIF3IF3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalClosingImageFilterIF3IF3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalClosingImageFilterIF3IF3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalClosingImageFilterIF3IF3SE3 in _itkBinaryMorphologicalClosingImageFilterPython:
_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIF3IF3SE3_swigregister(itkBinaryMorphologicalClosingImageFilterIF3IF3SE3)
itkBinaryMorphologicalClosingImageFilterIF3IF3SE3___New_orig__ = _itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIF3IF3SE3___New_orig__
itkBinaryMorphologicalClosingImageFilterIF3IF3SE3_cast = _itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIF3IF3SE3_cast


def itkBinaryMorphologicalClosingImageFilterISS2ISS2SE2_New():
    return itkBinaryMorphologicalClosingImageFilterISS2ISS2SE2.New()

class itkBinaryMorphologicalClosingImageFilterISS2ISS2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS2ISS2SE2):
    r"""


    binary morphological closing of an image.

    This filter removes small (i.e., smaller than the structuring element)
    holes and tube like structures in the interior or at the boundaries of
    the image. The morphological closing of an image "f" is defined as:
    Closing(f) = Erosion(Dilation(f)).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    This code was contributed in the Insight Journal paper: "Binary
    morphological closing and opening image filters" by Lehmann
    G.https://hdl.handle.net/1926/141http://www.insight-
    journal.org/browse/publication/58

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleErodeImageFilter
    example{Filtering/BinaryMathematicalMorphology/ClosingBinaryImage,
    Closing Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterISS2ISS2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterISS2ISS2SE2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterISS2ISS2SE2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterISS2ISS2SE2_GetForegroundValue)
    SetSafeBorder = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterISS2ISS2SE2_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterISS2ISS2SE2_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterISS2ISS2SE2_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterISS2ISS2SE2_SafeBorderOff)
    __swig_destroy__ = _itkBinaryMorphologicalClosingImageFilterPython.delete_itkBinaryMorphologicalClosingImageFilterISS2ISS2SE2
    cast = _swig_new_static_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterISS2ISS2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalClosingImageFilterISS2ISS2SE2

        Create a new object of the class itkBinaryMorphologicalClosingImageFilterISS2ISS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalClosingImageFilterISS2ISS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalClosingImageFilterISS2ISS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalClosingImageFilterISS2ISS2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalClosingImageFilterISS2ISS2SE2 in _itkBinaryMorphologicalClosingImageFilterPython:
_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterISS2ISS2SE2_swigregister(itkBinaryMorphologicalClosingImageFilterISS2ISS2SE2)
itkBinaryMorphologicalClosingImageFilterISS2ISS2SE2___New_orig__ = _itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterISS2ISS2SE2___New_orig__
itkBinaryMorphologicalClosingImageFilterISS2ISS2SE2_cast = _itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterISS2ISS2SE2_cast


def itkBinaryMorphologicalClosingImageFilterISS3ISS3SE3_New():
    return itkBinaryMorphologicalClosingImageFilterISS3ISS3SE3.New()

class itkBinaryMorphologicalClosingImageFilterISS3ISS3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS3ISS3SE3):
    r"""


    binary morphological closing of an image.

    This filter removes small (i.e., smaller than the structuring element)
    holes and tube like structures in the interior or at the boundaries of
    the image. The morphological closing of an image "f" is defined as:
    Closing(f) = Erosion(Dilation(f)).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    This code was contributed in the Insight Journal paper: "Binary
    morphological closing and opening image filters" by Lehmann
    G.https://hdl.handle.net/1926/141http://www.insight-
    journal.org/browse/publication/58

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleErodeImageFilter
    example{Filtering/BinaryMathematicalMorphology/ClosingBinaryImage,
    Closing Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterISS3ISS3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterISS3ISS3SE3_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterISS3ISS3SE3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterISS3ISS3SE3_GetForegroundValue)
    SetSafeBorder = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterISS3ISS3SE3_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterISS3ISS3SE3_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterISS3ISS3SE3_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterISS3ISS3SE3_SafeBorderOff)
    __swig_destroy__ = _itkBinaryMorphologicalClosingImageFilterPython.delete_itkBinaryMorphologicalClosingImageFilterISS3ISS3SE3
    cast = _swig_new_static_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterISS3ISS3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalClosingImageFilterISS3ISS3SE3

        Create a new object of the class itkBinaryMorphologicalClosingImageFilterISS3ISS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalClosingImageFilterISS3ISS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalClosingImageFilterISS3ISS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalClosingImageFilterISS3ISS3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalClosingImageFilterISS3ISS3SE3 in _itkBinaryMorphologicalClosingImageFilterPython:
_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterISS3ISS3SE3_swigregister(itkBinaryMorphologicalClosingImageFilterISS3ISS3SE3)
itkBinaryMorphologicalClosingImageFilterISS3ISS3SE3___New_orig__ = _itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterISS3ISS3SE3___New_orig__
itkBinaryMorphologicalClosingImageFilterISS3ISS3SE3_cast = _itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterISS3ISS3SE3_cast


def itkBinaryMorphologicalClosingImageFilterIUC2IUC2SE2_New():
    return itkBinaryMorphologicalClosingImageFilterIUC2IUC2SE2.New()

class itkBinaryMorphologicalClosingImageFilterIUC2IUC2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC2IUC2SE2):
    r"""


    binary morphological closing of an image.

    This filter removes small (i.e., smaller than the structuring element)
    holes and tube like structures in the interior or at the boundaries of
    the image. The morphological closing of an image "f" is defined as:
    Closing(f) = Erosion(Dilation(f)).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    This code was contributed in the Insight Journal paper: "Binary
    morphological closing and opening image filters" by Lehmann
    G.https://hdl.handle.net/1926/141http://www.insight-
    journal.org/browse/publication/58

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleErodeImageFilter
    example{Filtering/BinaryMathematicalMorphology/ClosingBinaryImage,
    Closing Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUC2IUC2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUC2IUC2SE2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUC2IUC2SE2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUC2IUC2SE2_GetForegroundValue)
    SetSafeBorder = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUC2IUC2SE2_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUC2IUC2SE2_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUC2IUC2SE2_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUC2IUC2SE2_SafeBorderOff)
    __swig_destroy__ = _itkBinaryMorphologicalClosingImageFilterPython.delete_itkBinaryMorphologicalClosingImageFilterIUC2IUC2SE2
    cast = _swig_new_static_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUC2IUC2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalClosingImageFilterIUC2IUC2SE2

        Create a new object of the class itkBinaryMorphologicalClosingImageFilterIUC2IUC2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalClosingImageFilterIUC2IUC2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalClosingImageFilterIUC2IUC2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalClosingImageFilterIUC2IUC2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalClosingImageFilterIUC2IUC2SE2 in _itkBinaryMorphologicalClosingImageFilterPython:
_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUC2IUC2SE2_swigregister(itkBinaryMorphologicalClosingImageFilterIUC2IUC2SE2)
itkBinaryMorphologicalClosingImageFilterIUC2IUC2SE2___New_orig__ = _itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUC2IUC2SE2___New_orig__
itkBinaryMorphologicalClosingImageFilterIUC2IUC2SE2_cast = _itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUC2IUC2SE2_cast


def itkBinaryMorphologicalClosingImageFilterIUC3IUC3SE3_New():
    return itkBinaryMorphologicalClosingImageFilterIUC3IUC3SE3.New()

class itkBinaryMorphologicalClosingImageFilterIUC3IUC3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC3IUC3SE3):
    r"""


    binary morphological closing of an image.

    This filter removes small (i.e., smaller than the structuring element)
    holes and tube like structures in the interior or at the boundaries of
    the image. The morphological closing of an image "f" is defined as:
    Closing(f) = Erosion(Dilation(f)).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    This code was contributed in the Insight Journal paper: "Binary
    morphological closing and opening image filters" by Lehmann
    G.https://hdl.handle.net/1926/141http://www.insight-
    journal.org/browse/publication/58

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleErodeImageFilter
    example{Filtering/BinaryMathematicalMorphology/ClosingBinaryImage,
    Closing Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUC3IUC3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUC3IUC3SE3_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUC3IUC3SE3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUC3IUC3SE3_GetForegroundValue)
    SetSafeBorder = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUC3IUC3SE3_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUC3IUC3SE3_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUC3IUC3SE3_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUC3IUC3SE3_SafeBorderOff)
    __swig_destroy__ = _itkBinaryMorphologicalClosingImageFilterPython.delete_itkBinaryMorphologicalClosingImageFilterIUC3IUC3SE3
    cast = _swig_new_static_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUC3IUC3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalClosingImageFilterIUC3IUC3SE3

        Create a new object of the class itkBinaryMorphologicalClosingImageFilterIUC3IUC3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalClosingImageFilterIUC3IUC3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalClosingImageFilterIUC3IUC3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalClosingImageFilterIUC3IUC3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalClosingImageFilterIUC3IUC3SE3 in _itkBinaryMorphologicalClosingImageFilterPython:
_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUC3IUC3SE3_swigregister(itkBinaryMorphologicalClosingImageFilterIUC3IUC3SE3)
itkBinaryMorphologicalClosingImageFilterIUC3IUC3SE3___New_orig__ = _itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUC3IUC3SE3___New_orig__
itkBinaryMorphologicalClosingImageFilterIUC3IUC3SE3_cast = _itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUC3IUC3SE3_cast


def itkBinaryMorphologicalClosingImageFilterIUS2IUS2SE2_New():
    return itkBinaryMorphologicalClosingImageFilterIUS2IUS2SE2.New()

class itkBinaryMorphologicalClosingImageFilterIUS2IUS2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS2IUS2SE2):
    r"""


    binary morphological closing of an image.

    This filter removes small (i.e., smaller than the structuring element)
    holes and tube like structures in the interior or at the boundaries of
    the image. The morphological closing of an image "f" is defined as:
    Closing(f) = Erosion(Dilation(f)).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    This code was contributed in the Insight Journal paper: "Binary
    morphological closing and opening image filters" by Lehmann
    G.https://hdl.handle.net/1926/141http://www.insight-
    journal.org/browse/publication/58

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleErodeImageFilter
    example{Filtering/BinaryMathematicalMorphology/ClosingBinaryImage,
    Closing Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUS2IUS2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUS2IUS2SE2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUS2IUS2SE2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUS2IUS2SE2_GetForegroundValue)
    SetSafeBorder = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUS2IUS2SE2_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUS2IUS2SE2_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUS2IUS2SE2_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUS2IUS2SE2_SafeBorderOff)
    __swig_destroy__ = _itkBinaryMorphologicalClosingImageFilterPython.delete_itkBinaryMorphologicalClosingImageFilterIUS2IUS2SE2
    cast = _swig_new_static_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUS2IUS2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalClosingImageFilterIUS2IUS2SE2

        Create a new object of the class itkBinaryMorphologicalClosingImageFilterIUS2IUS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalClosingImageFilterIUS2IUS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalClosingImageFilterIUS2IUS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalClosingImageFilterIUS2IUS2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalClosingImageFilterIUS2IUS2SE2 in _itkBinaryMorphologicalClosingImageFilterPython:
_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUS2IUS2SE2_swigregister(itkBinaryMorphologicalClosingImageFilterIUS2IUS2SE2)
itkBinaryMorphologicalClosingImageFilterIUS2IUS2SE2___New_orig__ = _itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUS2IUS2SE2___New_orig__
itkBinaryMorphologicalClosingImageFilterIUS2IUS2SE2_cast = _itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUS2IUS2SE2_cast


def itkBinaryMorphologicalClosingImageFilterIUS3IUS3SE3_New():
    return itkBinaryMorphologicalClosingImageFilterIUS3IUS3SE3.New()

class itkBinaryMorphologicalClosingImageFilterIUS3IUS3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS3IUS3SE3):
    r"""


    binary morphological closing of an image.

    This filter removes small (i.e., smaller than the structuring element)
    holes and tube like structures in the interior or at the boundaries of
    the image. The morphological closing of an image "f" is defined as:
    Closing(f) = Erosion(Dilation(f)).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    This code was contributed in the Insight Journal paper: "Binary
    morphological closing and opening image filters" by Lehmann
    G.https://hdl.handle.net/1926/141http://www.insight-
    journal.org/browse/publication/58

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleErodeImageFilter
    example{Filtering/BinaryMathematicalMorphology/ClosingBinaryImage,
    Closing Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUS3IUS3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUS3IUS3SE3_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUS3IUS3SE3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUS3IUS3SE3_GetForegroundValue)
    SetSafeBorder = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUS3IUS3SE3_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUS3IUS3SE3_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUS3IUS3SE3_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUS3IUS3SE3_SafeBorderOff)
    __swig_destroy__ = _itkBinaryMorphologicalClosingImageFilterPython.delete_itkBinaryMorphologicalClosingImageFilterIUS3IUS3SE3
    cast = _swig_new_static_method(_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUS3IUS3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalClosingImageFilterIUS3IUS3SE3

        Create a new object of the class itkBinaryMorphologicalClosingImageFilterIUS3IUS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalClosingImageFilterIUS3IUS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalClosingImageFilterIUS3IUS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalClosingImageFilterIUS3IUS3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalClosingImageFilterIUS3IUS3SE3 in _itkBinaryMorphologicalClosingImageFilterPython:
_itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUS3IUS3SE3_swigregister(itkBinaryMorphologicalClosingImageFilterIUS3IUS3SE3)
itkBinaryMorphologicalClosingImageFilterIUS3IUS3SE3___New_orig__ = _itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUS3IUS3SE3___New_orig__
itkBinaryMorphologicalClosingImageFilterIUS3IUS3SE3_cast = _itkBinaryMorphologicalClosingImageFilterPython.itkBinaryMorphologicalClosingImageFilterIUS3IUS3SE3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def binary_morphological_closing_image_filter(*args, **kwargs):
    """Procedural interface for BinaryMorphologicalClosingImageFilter"""
    import itk
    instance = itk.BinaryMorphologicalClosingImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def binary_morphological_closing_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.BinaryMorphologicalClosingImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.BinaryMorphologicalClosingImageFilter.values()[0]
    else:
        filter_object = itk.BinaryMorphologicalClosingImageFilter

    binary_morphological_closing_image_filter.__doc__ = filter_object.__doc__
    binary_morphological_closing_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    binary_morphological_closing_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.BinaryMorphologicalClosingImageFilter, itkTemplate.itkTemplate):
        binary_morphological_closing_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        binary_morphological_closing_image_filter.__doc__ += "\n"
        binary_morphological_closing_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        binary_morphological_closing_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



