# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageStatisticsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkStandardDeviationProjectionImageFilterPython
else:
    import _itkStandardDeviationProjectionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkStandardDeviationProjectionImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkStandardDeviationProjectionImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterBPython

def itkStandardDeviationProjectionImageFilterID2ID2_Superclass_New():
    return itkStandardDeviationProjectionImageFilterID2ID2_Superclass.New()

class itkStandardDeviationProjectionImageFilterID2ID2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_Superclass_Clone)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterID2ID2_Superclass
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterID2ID2_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterID2ID2_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_Superclass_swigregister(itkStandardDeviationProjectionImageFilterID2ID2_Superclass)
itkStandardDeviationProjectionImageFilterID2ID2_Superclass___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_Superclass___New_orig__
itkStandardDeviationProjectionImageFilterID2ID2_Superclass_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_Superclass_cast


def itkStandardDeviationProjectionImageFilterID3ID2_Superclass_New():
    return itkStandardDeviationProjectionImageFilterID3ID2_Superclass.New()

class itkStandardDeviationProjectionImageFilterID3ID2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterID3ID2):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterID3ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_Superclass_Clone)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterID3ID2_Superclass
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterID3ID2_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterID3ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterID3ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterID3ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterID3ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterID3ID2_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_Superclass_swigregister(itkStandardDeviationProjectionImageFilterID3ID2_Superclass)
itkStandardDeviationProjectionImageFilterID3ID2_Superclass___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_Superclass___New_orig__
itkStandardDeviationProjectionImageFilterID3ID2_Superclass_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_Superclass_cast


def itkStandardDeviationProjectionImageFilterID3ID3_Superclass_New():
    return itkStandardDeviationProjectionImageFilterID3ID3_Superclass.New()

class itkStandardDeviationProjectionImageFilterID3ID3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_Superclass_Clone)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterID3ID3_Superclass
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterID3ID3_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterID3ID3_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_Superclass_swigregister(itkStandardDeviationProjectionImageFilterID3ID3_Superclass)
itkStandardDeviationProjectionImageFilterID3ID3_Superclass___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_Superclass___New_orig__
itkStandardDeviationProjectionImageFilterID3ID3_Superclass_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_Superclass_cast


def itkStandardDeviationProjectionImageFilterIF2IF2_Superclass_New():
    return itkStandardDeviationProjectionImageFilterIF2IF2_Superclass.New()

class itkStandardDeviationProjectionImageFilterIF2IF2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_Superclass_Clone)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIF2IF2_Superclass
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIF2IF2_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIF2IF2_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_Superclass_swigregister(itkStandardDeviationProjectionImageFilterIF2IF2_Superclass)
itkStandardDeviationProjectionImageFilterIF2IF2_Superclass___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_Superclass___New_orig__
itkStandardDeviationProjectionImageFilterIF2IF2_Superclass_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_Superclass_cast


def itkStandardDeviationProjectionImageFilterIF3IF2_Superclass_New():
    return itkStandardDeviationProjectionImageFilterIF3IF2_Superclass.New()

class itkStandardDeviationProjectionImageFilterIF3IF2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIF3IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_Superclass_Clone)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIF3IF2_Superclass
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIF3IF2_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterIF3IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIF3IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIF3IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIF3IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIF3IF2_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_Superclass_swigregister(itkStandardDeviationProjectionImageFilterIF3IF2_Superclass)
itkStandardDeviationProjectionImageFilterIF3IF2_Superclass___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_Superclass___New_orig__
itkStandardDeviationProjectionImageFilterIF3IF2_Superclass_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_Superclass_cast


def itkStandardDeviationProjectionImageFilterIF3IF3_Superclass_New():
    return itkStandardDeviationProjectionImageFilterIF3IF3_Superclass.New()

class itkStandardDeviationProjectionImageFilterIF3IF3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_Superclass_Clone)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIF3IF3_Superclass
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIF3IF3_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIF3IF3_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_Superclass_swigregister(itkStandardDeviationProjectionImageFilterIF3IF3_Superclass)
itkStandardDeviationProjectionImageFilterIF3IF3_Superclass___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_Superclass___New_orig__
itkStandardDeviationProjectionImageFilterIF3IF3_Superclass_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_Superclass_cast


def itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass_New():
    return itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass.New()

class itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass_Clone)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass_swigregister(itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass)
itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass___New_orig__
itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass_cast


def itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass_New():
    return itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass.New()

class itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS3ISS2):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass_Clone)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass_swigregister(itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass)
itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass___New_orig__
itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass_cast


def itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass_New():
    return itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass.New()

class itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass_Clone)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass_swigregister(itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass)
itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass___New_orig__
itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass_cast


def itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass_New():
    return itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass.New()

class itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass_Clone)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass_swigregister(itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass)
itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass___New_orig__
itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass_cast


def itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass_New():
    return itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass.New()

class itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass_Clone)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass_swigregister(itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass)
itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass___New_orig__
itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass_cast


def itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass_New():
    return itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass.New()

class itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass_Clone)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass_swigregister(itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass)
itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass___New_orig__
itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass_cast


def itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass_New():
    return itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass.New()

class itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass_Clone)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass_swigregister(itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass)
itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass___New_orig__
itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass_cast


def itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass_New():
    return itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass.New()

class itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass_Clone)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass_swigregister(itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass)
itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass___New_orig__
itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass_cast


def itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass_New():
    return itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass.New()

class itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass_Clone)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass_swigregister(itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass)
itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass___New_orig__
itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass_cast


def itkStandardDeviationProjectionImageFilterID2ID2_New():
    return itkStandardDeviationProjectionImageFilterID2ID2.New()

class itkStandardDeviationProjectionImageFilterID2ID2(itkStandardDeviationProjectionImageFilterID2ID2_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterID2ID2
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterID2ID2

        Create a new object of the class itkStandardDeviationProjectionImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterID2ID2 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_swigregister(itkStandardDeviationProjectionImageFilterID2ID2)
itkStandardDeviationProjectionImageFilterID2ID2___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2___New_orig__
itkStandardDeviationProjectionImageFilterID2ID2_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_cast


def itkStandardDeviationProjectionImageFilterID3ID2_New():
    return itkStandardDeviationProjectionImageFilterID3ID2.New()

class itkStandardDeviationProjectionImageFilterID3ID2(itkStandardDeviationProjectionImageFilterID3ID2_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterID3ID2
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterID3ID2

        Create a new object of the class itkStandardDeviationProjectionImageFilterID3ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterID3ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterID3ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterID3ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterID3ID2 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_swigregister(itkStandardDeviationProjectionImageFilterID3ID2)
itkStandardDeviationProjectionImageFilterID3ID2___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2___New_orig__
itkStandardDeviationProjectionImageFilterID3ID2_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_cast


def itkStandardDeviationProjectionImageFilterID3ID3_New():
    return itkStandardDeviationProjectionImageFilterID3ID3.New()

class itkStandardDeviationProjectionImageFilterID3ID3(itkStandardDeviationProjectionImageFilterID3ID3_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterID3ID3
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterID3ID3

        Create a new object of the class itkStandardDeviationProjectionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterID3ID3 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_swigregister(itkStandardDeviationProjectionImageFilterID3ID3)
itkStandardDeviationProjectionImageFilterID3ID3___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3___New_orig__
itkStandardDeviationProjectionImageFilterID3ID3_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_cast


def itkStandardDeviationProjectionImageFilterIF2IF2_New():
    return itkStandardDeviationProjectionImageFilterIF2IF2.New()

class itkStandardDeviationProjectionImageFilterIF2IF2(itkStandardDeviationProjectionImageFilterIF2IF2_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIF2IF2
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIF2IF2

        Create a new object of the class itkStandardDeviationProjectionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIF2IF2 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_swigregister(itkStandardDeviationProjectionImageFilterIF2IF2)
itkStandardDeviationProjectionImageFilterIF2IF2___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2___New_orig__
itkStandardDeviationProjectionImageFilterIF2IF2_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_cast


def itkStandardDeviationProjectionImageFilterIF3IF2_New():
    return itkStandardDeviationProjectionImageFilterIF3IF2.New()

class itkStandardDeviationProjectionImageFilterIF3IF2(itkStandardDeviationProjectionImageFilterIF3IF2_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIF3IF2
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIF3IF2

        Create a new object of the class itkStandardDeviationProjectionImageFilterIF3IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIF3IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIF3IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIF3IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIF3IF2 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_swigregister(itkStandardDeviationProjectionImageFilterIF3IF2)
itkStandardDeviationProjectionImageFilterIF3IF2___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2___New_orig__
itkStandardDeviationProjectionImageFilterIF3IF2_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_cast


def itkStandardDeviationProjectionImageFilterIF3IF3_New():
    return itkStandardDeviationProjectionImageFilterIF3IF3.New()

class itkStandardDeviationProjectionImageFilterIF3IF3(itkStandardDeviationProjectionImageFilterIF3IF3_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIF3IF3
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIF3IF3

        Create a new object of the class itkStandardDeviationProjectionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIF3IF3 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_swigregister(itkStandardDeviationProjectionImageFilterIF3IF3)
itkStandardDeviationProjectionImageFilterIF3IF3___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3___New_orig__
itkStandardDeviationProjectionImageFilterIF3IF3_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_cast


def itkStandardDeviationProjectionImageFilterISS2ISS2_New():
    return itkStandardDeviationProjectionImageFilterISS2ISS2.New()

class itkStandardDeviationProjectionImageFilterISS2ISS2(itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterISS2ISS2

        Create a new object of the class itkStandardDeviationProjectionImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterISS2ISS2 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_swigregister(itkStandardDeviationProjectionImageFilterISS2ISS2)
itkStandardDeviationProjectionImageFilterISS2ISS2___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2___New_orig__
itkStandardDeviationProjectionImageFilterISS2ISS2_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_cast


def itkStandardDeviationProjectionImageFilterISS3ISS2_New():
    return itkStandardDeviationProjectionImageFilterISS3ISS2.New()

class itkStandardDeviationProjectionImageFilterISS3ISS2(itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterISS3ISS2
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterISS3ISS2

        Create a new object of the class itkStandardDeviationProjectionImageFilterISS3ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterISS3ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterISS3ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterISS3ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterISS3ISS2 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_swigregister(itkStandardDeviationProjectionImageFilterISS3ISS2)
itkStandardDeviationProjectionImageFilterISS3ISS2___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2___New_orig__
itkStandardDeviationProjectionImageFilterISS3ISS2_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_cast


def itkStandardDeviationProjectionImageFilterISS3ISS3_New():
    return itkStandardDeviationProjectionImageFilterISS3ISS3.New()

class itkStandardDeviationProjectionImageFilterISS3ISS3(itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterISS3ISS3

        Create a new object of the class itkStandardDeviationProjectionImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterISS3ISS3 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_swigregister(itkStandardDeviationProjectionImageFilterISS3ISS3)
itkStandardDeviationProjectionImageFilterISS3ISS3___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3___New_orig__
itkStandardDeviationProjectionImageFilterISS3ISS3_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_cast


def itkStandardDeviationProjectionImageFilterIUC2IUC2_New():
    return itkStandardDeviationProjectionImageFilterIUC2IUC2.New()

class itkStandardDeviationProjectionImageFilterIUC2IUC2(itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUC2IUC2

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUC2IUC2 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_swigregister(itkStandardDeviationProjectionImageFilterIUC2IUC2)
itkStandardDeviationProjectionImageFilterIUC2IUC2___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2___New_orig__
itkStandardDeviationProjectionImageFilterIUC2IUC2_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_cast


def itkStandardDeviationProjectionImageFilterIUC3IUC2_New():
    return itkStandardDeviationProjectionImageFilterIUC3IUC2.New()

class itkStandardDeviationProjectionImageFilterIUC3IUC2(itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUC3IUC2
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUC3IUC2

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUC3IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUC3IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUC3IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUC3IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUC3IUC2 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_swigregister(itkStandardDeviationProjectionImageFilterIUC3IUC2)
itkStandardDeviationProjectionImageFilterIUC3IUC2___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2___New_orig__
itkStandardDeviationProjectionImageFilterIUC3IUC2_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_cast


def itkStandardDeviationProjectionImageFilterIUC3IUC3_New():
    return itkStandardDeviationProjectionImageFilterIUC3IUC3.New()

class itkStandardDeviationProjectionImageFilterIUC3IUC3(itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUC3IUC3

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUC3IUC3 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_swigregister(itkStandardDeviationProjectionImageFilterIUC3IUC3)
itkStandardDeviationProjectionImageFilterIUC3IUC3___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3___New_orig__
itkStandardDeviationProjectionImageFilterIUC3IUC3_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_cast


def itkStandardDeviationProjectionImageFilterIUS2IUS2_New():
    return itkStandardDeviationProjectionImageFilterIUS2IUS2.New()

class itkStandardDeviationProjectionImageFilterIUS2IUS2(itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUS2IUS2

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUS2IUS2 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_swigregister(itkStandardDeviationProjectionImageFilterIUS2IUS2)
itkStandardDeviationProjectionImageFilterIUS2IUS2___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2___New_orig__
itkStandardDeviationProjectionImageFilterIUS2IUS2_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_cast


def itkStandardDeviationProjectionImageFilterIUS3IUS2_New():
    return itkStandardDeviationProjectionImageFilterIUS3IUS2.New()

class itkStandardDeviationProjectionImageFilterIUS3IUS2(itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUS3IUS2
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUS3IUS2

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUS3IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUS3IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUS3IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUS3IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUS3IUS2 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_swigregister(itkStandardDeviationProjectionImageFilterIUS3IUS2)
itkStandardDeviationProjectionImageFilterIUS3IUS2___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2___New_orig__
itkStandardDeviationProjectionImageFilterIUS3IUS2_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_cast


def itkStandardDeviationProjectionImageFilterIUS3IUS3_New():
    return itkStandardDeviationProjectionImageFilterIUS3IUS3.New()

class itkStandardDeviationProjectionImageFilterIUS3IUS3(itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   BinaryProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUS3IUS3

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUS3IUS3 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_swigregister(itkStandardDeviationProjectionImageFilterIUS3IUS3)
itkStandardDeviationProjectionImageFilterIUS3IUS3___New_orig__ = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3___New_orig__
itkStandardDeviationProjectionImageFilterIUS3IUS3_cast = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def standard_deviation_projection_image_filter(*args, **kwargs):
    """Procedural interface for StandardDeviationProjectionImageFilter"""
    import itk
    instance = itk.StandardDeviationProjectionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def standard_deviation_projection_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.StandardDeviationProjectionImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.StandardDeviationProjectionImageFilter.values()[0]
    else:
        filter_object = itk.StandardDeviationProjectionImageFilter

    standard_deviation_projection_image_filter.__doc__ = filter_object.__doc__
    standard_deviation_projection_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    standard_deviation_projection_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.StandardDeviationProjectionImageFilter, itkTemplate.itkTemplate):
        standard_deviation_projection_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        standard_deviation_projection_image_filter.__doc__ += "\n"
        standard_deviation_projection_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        standard_deviation_projection_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def projection_image_filter(*args, **kwargs):
    """Procedural interface for ProjectionImageFilter"""
    import itk
    instance = itk.ProjectionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def projection_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ProjectionImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ProjectionImageFilter.values()[0]
    else:
        filter_object = itk.ProjectionImageFilter

    projection_image_filter.__doc__ = filter_object.__doc__
    projection_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    projection_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ProjectionImageFilter, itkTemplate.itkTemplate):
        projection_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        projection_image_filter.__doc__ += "\n"
        projection_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        projection_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



