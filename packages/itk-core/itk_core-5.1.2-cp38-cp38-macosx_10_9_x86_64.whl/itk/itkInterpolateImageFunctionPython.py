# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageFunctionPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkInterpolateImageFunctionPython
else:
    import _itkInterpolateImageFunctionPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkInterpolateImageFunctionPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkInterpolateImageFunctionPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageFunctionBasePython
import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkImagePython
import itk.itkPointPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkFunctionBasePython
import itk.itkContinuousIndexPython
import itk.itkArrayPython
class itkInterpolateImageFunctionICVF22D(itk.itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionICVF22D_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionICVF22D
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionICVF22D_cast)

# Register itkInterpolateImageFunctionICVF22D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionICVF22D_swigregister(itkInterpolateImageFunctionICVF22D)
itkInterpolateImageFunctionICVF22D_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionICVF22D_cast

class itkInterpolateImageFunctionICVF33D(itk.itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionICVF33D_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionICVF33D
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionICVF33D_cast)

# Register itkInterpolateImageFunctionICVF33D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionICVF33D_swigregister(itkInterpolateImageFunctionICVF33D)
itkInterpolateImageFunctionICVF33D_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionICVF33D_cast

class itkInterpolateImageFunctionID2D(itk.itkImageFunctionBasePython.itkImageFunctionID2DD):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID2D_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionID2D
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID2D_cast)

# Register itkInterpolateImageFunctionID2D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID2D_swigregister(itkInterpolateImageFunctionID2D)
itkInterpolateImageFunctionID2D_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID2D_cast

class itkInterpolateImageFunctionID2F(itk.itkImageFunctionBasePython.itkImageFunctionID2DF):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID2F_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionID2F
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID2F_cast)

# Register itkInterpolateImageFunctionID2F in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID2F_swigregister(itkInterpolateImageFunctionID2F)
itkInterpolateImageFunctionID2F_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID2F_cast

class itkInterpolateImageFunctionID3D(itk.itkImageFunctionBasePython.itkImageFunctionID3DD):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID3D_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionID3D
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID3D_cast)

# Register itkInterpolateImageFunctionID3D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID3D_swigregister(itkInterpolateImageFunctionID3D)
itkInterpolateImageFunctionID3D_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID3D_cast

class itkInterpolateImageFunctionID3F(itk.itkImageFunctionBasePython.itkImageFunctionID3DF):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID3F_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionID3F
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID3F_cast)

# Register itkInterpolateImageFunctionID3F in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID3F_swigregister(itkInterpolateImageFunctionID3F)
itkInterpolateImageFunctionID3F_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID3F_cast

class itkInterpolateImageFunctionIF2D(itk.itkImageFunctionBasePython.itkImageFunctionIF2DD):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF2D_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIF2D
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF2D_cast)

# Register itkInterpolateImageFunctionIF2D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF2D_swigregister(itkInterpolateImageFunctionIF2D)
itkInterpolateImageFunctionIF2D_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF2D_cast

class itkInterpolateImageFunctionIF2F(itk.itkImageFunctionBasePython.itkImageFunctionIF2DF):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF2F_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIF2F
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF2F_cast)

# Register itkInterpolateImageFunctionIF2F in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF2F_swigregister(itkInterpolateImageFunctionIF2F)
itkInterpolateImageFunctionIF2F_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF2F_cast

class itkInterpolateImageFunctionIF3D(itk.itkImageFunctionBasePython.itkImageFunctionIF3DD):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF3D_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIF3D
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF3D_cast)

# Register itkInterpolateImageFunctionIF3D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF3D_swigregister(itkInterpolateImageFunctionIF3D)
itkInterpolateImageFunctionIF3D_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF3D_cast

class itkInterpolateImageFunctionIF3F(itk.itkImageFunctionBasePython.itkImageFunctionIF3DF):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF3F_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIF3F
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF3F_cast)

# Register itkInterpolateImageFunctionIF3F in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF3F_swigregister(itkInterpolateImageFunctionIF3F)
itkInterpolateImageFunctionIF3F_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF3F_cast

class itkInterpolateImageFunctionIRGBAUC2D(itk.itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBAUC2D_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIRGBAUC2D
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBAUC2D_cast)

# Register itkInterpolateImageFunctionIRGBAUC2D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBAUC2D_swigregister(itkInterpolateImageFunctionIRGBAUC2D)
itkInterpolateImageFunctionIRGBAUC2D_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBAUC2D_cast

class itkInterpolateImageFunctionIRGBAUC3D(itk.itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBAUC3D_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIRGBAUC3D
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBAUC3D_cast)

# Register itkInterpolateImageFunctionIRGBAUC3D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBAUC3D_swigregister(itkInterpolateImageFunctionIRGBAUC3D)
itkInterpolateImageFunctionIRGBAUC3D_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBAUC3D_cast

class itkInterpolateImageFunctionIRGBUC2D(itk.itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBUC2D_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIRGBUC2D
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBUC2D_cast)

# Register itkInterpolateImageFunctionIRGBUC2D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBUC2D_swigregister(itkInterpolateImageFunctionIRGBUC2D)
itkInterpolateImageFunctionIRGBUC2D_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBUC2D_cast

class itkInterpolateImageFunctionIRGBUC3D(itk.itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBUC3D_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIRGBUC3D
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBUC3D_cast)

# Register itkInterpolateImageFunctionIRGBUC3D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBUC3D_swigregister(itkInterpolateImageFunctionIRGBUC3D)
itkInterpolateImageFunctionIRGBUC3D_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBUC3D_cast

class itkInterpolateImageFunctionISS2D(itk.itkImageFunctionBasePython.itkImageFunctionISS2DD):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS2D_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionISS2D
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS2D_cast)

# Register itkInterpolateImageFunctionISS2D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS2D_swigregister(itkInterpolateImageFunctionISS2D)
itkInterpolateImageFunctionISS2D_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS2D_cast

class itkInterpolateImageFunctionISS2F(itk.itkImageFunctionBasePython.itkImageFunctionISS2DF):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS2F_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionISS2F
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS2F_cast)

# Register itkInterpolateImageFunctionISS2F in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS2F_swigregister(itkInterpolateImageFunctionISS2F)
itkInterpolateImageFunctionISS2F_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS2F_cast

class itkInterpolateImageFunctionISS3D(itk.itkImageFunctionBasePython.itkImageFunctionISS3DD):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS3D_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionISS3D
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS3D_cast)

# Register itkInterpolateImageFunctionISS3D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS3D_swigregister(itkInterpolateImageFunctionISS3D)
itkInterpolateImageFunctionISS3D_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS3D_cast

class itkInterpolateImageFunctionISS3F(itk.itkImageFunctionBasePython.itkImageFunctionISS3DF):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS3F_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionISS3F
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS3F_cast)

# Register itkInterpolateImageFunctionISS3F in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS3F_swigregister(itkInterpolateImageFunctionISS3F)
itkInterpolateImageFunctionISS3F_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS3F_cast

class itkInterpolateImageFunctionIUC2D(itk.itkImageFunctionBasePython.itkImageFunctionIUC2DD):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC2D_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIUC2D
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC2D_cast)

# Register itkInterpolateImageFunctionIUC2D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC2D_swigregister(itkInterpolateImageFunctionIUC2D)
itkInterpolateImageFunctionIUC2D_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC2D_cast

class itkInterpolateImageFunctionIUC2F(itk.itkImageFunctionBasePython.itkImageFunctionIUC2DF):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC2F_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIUC2F
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC2F_cast)

# Register itkInterpolateImageFunctionIUC2F in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC2F_swigregister(itkInterpolateImageFunctionIUC2F)
itkInterpolateImageFunctionIUC2F_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC2F_cast

class itkInterpolateImageFunctionIUC3D(itk.itkImageFunctionBasePython.itkImageFunctionIUC3DD):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC3D_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIUC3D
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC3D_cast)

# Register itkInterpolateImageFunctionIUC3D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC3D_swigregister(itkInterpolateImageFunctionIUC3D)
itkInterpolateImageFunctionIUC3D_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC3D_cast

class itkInterpolateImageFunctionIUC3F(itk.itkImageFunctionBasePython.itkImageFunctionIUC3DF):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC3F_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIUC3F
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC3F_cast)

# Register itkInterpolateImageFunctionIUC3F in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC3F_swigregister(itkInterpolateImageFunctionIUC3F)
itkInterpolateImageFunctionIUC3F_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC3F_cast

class itkInterpolateImageFunctionIUS2D(itk.itkImageFunctionBasePython.itkImageFunctionIUS2DD):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS2D_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIUS2D
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS2D_cast)

# Register itkInterpolateImageFunctionIUS2D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS2D_swigregister(itkInterpolateImageFunctionIUS2D)
itkInterpolateImageFunctionIUS2D_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS2D_cast

class itkInterpolateImageFunctionIUS2F(itk.itkImageFunctionBasePython.itkImageFunctionIUS2DF):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS2F_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIUS2F
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS2F_cast)

# Register itkInterpolateImageFunctionIUS2F in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS2F_swigregister(itkInterpolateImageFunctionIUS2F)
itkInterpolateImageFunctionIUS2F_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS2F_cast

class itkInterpolateImageFunctionIUS3D(itk.itkImageFunctionBasePython.itkImageFunctionIUS3DD):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS3D_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIUS3D
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS3D_cast)

# Register itkInterpolateImageFunctionIUS3D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS3D_swigregister(itkInterpolateImageFunctionIUS3D)
itkInterpolateImageFunctionIUS3D_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS3D_cast

class itkInterpolateImageFunctionIUS3F(itk.itkImageFunctionBasePython.itkImageFunctionIUS3DF):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS3F_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIUS3F
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS3F_cast)

# Register itkInterpolateImageFunctionIUS3F in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS3F_swigregister(itkInterpolateImageFunctionIUS3F)
itkInterpolateImageFunctionIUS3F_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS3F_cast

class itkInterpolateImageFunctionIVF22D(itk.itkImageFunctionBasePython.itkImageFunctionIVF22DD):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIVF22D_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIVF22D
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIVF22D_cast)

# Register itkInterpolateImageFunctionIVF22D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIVF22D_swigregister(itkInterpolateImageFunctionIVF22D)
itkInterpolateImageFunctionIVF22D_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIVF22D_cast

class itkInterpolateImageFunctionIVF33D(itk.itkImageFunctionBasePython.itkImageFunctionIVF33DD):
    r"""


    Base class for all image interpolators.

    InterpolateImageFunction is the base for all ImageFunctions that
    interpolates image intensity at a non-integer pixel position. This
    class is templated over the input image type and the coordinate
    representation type (e.g. float or double ).

    WARNING:  This hierarchy of functions work only for images with scalar
    pixel types. For images of vector pixel types use
    VectorInterpolateImageFunctions.

    See:  VectorInterpolateImageFunction 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetRadius = _swig_new_instance_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIVF33D_GetRadius)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIVF33D
    cast = _swig_new_static_method(_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIVF33D_cast)

# Register itkInterpolateImageFunctionIVF33D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIVF33D_swigregister(itkInterpolateImageFunctionIVF33D)
itkInterpolateImageFunctionIVF33D_cast = _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIVF33D_cast



