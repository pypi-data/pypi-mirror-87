# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKThresholdingPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkHuangThresholdImageFilterPython
else:
    import _itkHuangThresholdImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkHuangThresholdImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkHuangThresholdImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkHistogramThresholdImageFilterPython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkVectorImagePython
import itk.stdcomplexPython
import itk.itkVariableLengthVectorPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkFixedArrayPython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkHistogramThresholdCalculatorPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkArrayPython
import itk.itkHistogramPython
import itk.itkSamplePython
import itk.itkImageToHistogramFilterPython
import itk.itkImageSinkPython

def itkHuangThresholdImageFilterID2ISS2_New():
    return itkHuangThresholdImageFilterID2ISS2.New()

class itkHuangThresholdImageFilterID2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID2ISS2_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterID2ISS2
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterID2ISS2

        Create a new object of the class itkHuangThresholdImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterID2ISS2 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID2ISS2_swigregister(itkHuangThresholdImageFilterID2ISS2)
itkHuangThresholdImageFilterID2ISS2___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID2ISS2___New_orig__
itkHuangThresholdImageFilterID2ISS2_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID2ISS2_cast


def itkHuangThresholdImageFilterID2IUC2_New():
    return itkHuangThresholdImageFilterID2IUC2.New()

class itkHuangThresholdImageFilterID2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID2IUC2_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterID2IUC2
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterID2IUC2

        Create a new object of the class itkHuangThresholdImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterID2IUC2 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID2IUC2_swigregister(itkHuangThresholdImageFilterID2IUC2)
itkHuangThresholdImageFilterID2IUC2___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID2IUC2___New_orig__
itkHuangThresholdImageFilterID2IUC2_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID2IUC2_cast


def itkHuangThresholdImageFilterID2IUS2_New():
    return itkHuangThresholdImageFilterID2IUS2.New()

class itkHuangThresholdImageFilterID2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID2IUS2_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterID2IUS2
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterID2IUS2

        Create a new object of the class itkHuangThresholdImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterID2IUS2 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID2IUS2_swigregister(itkHuangThresholdImageFilterID2IUS2)
itkHuangThresholdImageFilterID2IUS2___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID2IUS2___New_orig__
itkHuangThresholdImageFilterID2IUS2_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID2IUS2_cast


def itkHuangThresholdImageFilterID3ISS3_New():
    return itkHuangThresholdImageFilterID3ISS3.New()

class itkHuangThresholdImageFilterID3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID3ISS3_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterID3ISS3
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterID3ISS3

        Create a new object of the class itkHuangThresholdImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterID3ISS3 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID3ISS3_swigregister(itkHuangThresholdImageFilterID3ISS3)
itkHuangThresholdImageFilterID3ISS3___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID3ISS3___New_orig__
itkHuangThresholdImageFilterID3ISS3_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID3ISS3_cast


def itkHuangThresholdImageFilterID3IUC3_New():
    return itkHuangThresholdImageFilterID3IUC3.New()

class itkHuangThresholdImageFilterID3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID3IUC3_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterID3IUC3
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterID3IUC3

        Create a new object of the class itkHuangThresholdImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterID3IUC3 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID3IUC3_swigregister(itkHuangThresholdImageFilterID3IUC3)
itkHuangThresholdImageFilterID3IUC3___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID3IUC3___New_orig__
itkHuangThresholdImageFilterID3IUC3_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID3IUC3_cast


def itkHuangThresholdImageFilterID3IUS3_New():
    return itkHuangThresholdImageFilterID3IUS3.New()

class itkHuangThresholdImageFilterID3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID3IUS3_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterID3IUS3
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterID3IUS3

        Create a new object of the class itkHuangThresholdImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterID3IUS3 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID3IUS3_swigregister(itkHuangThresholdImageFilterID3IUS3)
itkHuangThresholdImageFilterID3IUS3___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID3IUS3___New_orig__
itkHuangThresholdImageFilterID3IUS3_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterID3IUS3_cast


def itkHuangThresholdImageFilterIF2ISS2_New():
    return itkHuangThresholdImageFilterIF2ISS2.New()

class itkHuangThresholdImageFilterIF2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2ISS2_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterIF2ISS2
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterIF2ISS2

        Create a new object of the class itkHuangThresholdImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterIF2ISS2 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2ISS2_swigregister(itkHuangThresholdImageFilterIF2ISS2)
itkHuangThresholdImageFilterIF2ISS2___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2ISS2___New_orig__
itkHuangThresholdImageFilterIF2ISS2_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2ISS2_cast


def itkHuangThresholdImageFilterIF2IUC2_New():
    return itkHuangThresholdImageFilterIF2IUC2.New()

class itkHuangThresholdImageFilterIF2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2IUC2_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterIF2IUC2
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterIF2IUC2

        Create a new object of the class itkHuangThresholdImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterIF2IUC2 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2IUC2_swigregister(itkHuangThresholdImageFilterIF2IUC2)
itkHuangThresholdImageFilterIF2IUC2___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2IUC2___New_orig__
itkHuangThresholdImageFilterIF2IUC2_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2IUC2_cast


def itkHuangThresholdImageFilterIF2IUS2_New():
    return itkHuangThresholdImageFilterIF2IUS2.New()

class itkHuangThresholdImageFilterIF2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2IUS2_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterIF2IUS2
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterIF2IUS2

        Create a new object of the class itkHuangThresholdImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterIF2IUS2 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2IUS2_swigregister(itkHuangThresholdImageFilterIF2IUS2)
itkHuangThresholdImageFilterIF2IUS2___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2IUS2___New_orig__
itkHuangThresholdImageFilterIF2IUS2_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2IUS2_cast


def itkHuangThresholdImageFilterIF3ISS3_New():
    return itkHuangThresholdImageFilterIF3ISS3.New()

class itkHuangThresholdImageFilterIF3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3ISS3_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterIF3ISS3
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterIF3ISS3

        Create a new object of the class itkHuangThresholdImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterIF3ISS3 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3ISS3_swigregister(itkHuangThresholdImageFilterIF3ISS3)
itkHuangThresholdImageFilterIF3ISS3___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3ISS3___New_orig__
itkHuangThresholdImageFilterIF3ISS3_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3ISS3_cast


def itkHuangThresholdImageFilterIF3IUC3_New():
    return itkHuangThresholdImageFilterIF3IUC3.New()

class itkHuangThresholdImageFilterIF3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3IUC3_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterIF3IUC3
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterIF3IUC3

        Create a new object of the class itkHuangThresholdImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterIF3IUC3 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3IUC3_swigregister(itkHuangThresholdImageFilterIF3IUC3)
itkHuangThresholdImageFilterIF3IUC3___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3IUC3___New_orig__
itkHuangThresholdImageFilterIF3IUC3_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3IUC3_cast


def itkHuangThresholdImageFilterIF3IUS3_New():
    return itkHuangThresholdImageFilterIF3IUS3.New()

class itkHuangThresholdImageFilterIF3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3IUS3_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterIF3IUS3
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterIF3IUS3

        Create a new object of the class itkHuangThresholdImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterIF3IUS3 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3IUS3_swigregister(itkHuangThresholdImageFilterIF3IUS3)
itkHuangThresholdImageFilterIF3IUS3___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3IUS3___New_orig__
itkHuangThresholdImageFilterIF3IUS3_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3IUS3_cast


def itkHuangThresholdImageFilterISS2ISS2_New():
    return itkHuangThresholdImageFilterISS2ISS2.New()

class itkHuangThresholdImageFilterISS2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2ISS2_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterISS2ISS2

        Create a new object of the class itkHuangThresholdImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterISS2ISS2 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2ISS2_swigregister(itkHuangThresholdImageFilterISS2ISS2)
itkHuangThresholdImageFilterISS2ISS2___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2ISS2___New_orig__
itkHuangThresholdImageFilterISS2ISS2_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2ISS2_cast


def itkHuangThresholdImageFilterISS2IUC2_New():
    return itkHuangThresholdImageFilterISS2IUC2.New()

class itkHuangThresholdImageFilterISS2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2IUC2_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterISS2IUC2
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterISS2IUC2

        Create a new object of the class itkHuangThresholdImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterISS2IUC2 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2IUC2_swigregister(itkHuangThresholdImageFilterISS2IUC2)
itkHuangThresholdImageFilterISS2IUC2___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2IUC2___New_orig__
itkHuangThresholdImageFilterISS2IUC2_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2IUC2_cast


def itkHuangThresholdImageFilterISS2IUS2_New():
    return itkHuangThresholdImageFilterISS2IUS2.New()

class itkHuangThresholdImageFilterISS2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2IUS2_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterISS2IUS2
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterISS2IUS2

        Create a new object of the class itkHuangThresholdImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterISS2IUS2 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2IUS2_swigregister(itkHuangThresholdImageFilterISS2IUS2)
itkHuangThresholdImageFilterISS2IUS2___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2IUS2___New_orig__
itkHuangThresholdImageFilterISS2IUS2_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2IUS2_cast


def itkHuangThresholdImageFilterISS3ISS3_New():
    return itkHuangThresholdImageFilterISS3ISS3.New()

class itkHuangThresholdImageFilterISS3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3ISS3_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterISS3ISS3

        Create a new object of the class itkHuangThresholdImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterISS3ISS3 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3ISS3_swigregister(itkHuangThresholdImageFilterISS3ISS3)
itkHuangThresholdImageFilterISS3ISS3___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3ISS3___New_orig__
itkHuangThresholdImageFilterISS3ISS3_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3ISS3_cast


def itkHuangThresholdImageFilterISS3IUC3_New():
    return itkHuangThresholdImageFilterISS3IUC3.New()

class itkHuangThresholdImageFilterISS3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3IUC3_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterISS3IUC3
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterISS3IUC3

        Create a new object of the class itkHuangThresholdImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterISS3IUC3 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3IUC3_swigregister(itkHuangThresholdImageFilterISS3IUC3)
itkHuangThresholdImageFilterISS3IUC3___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3IUC3___New_orig__
itkHuangThresholdImageFilterISS3IUC3_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3IUC3_cast


def itkHuangThresholdImageFilterISS3IUS3_New():
    return itkHuangThresholdImageFilterISS3IUS3.New()

class itkHuangThresholdImageFilterISS3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3IUS3_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterISS3IUS3
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterISS3IUS3

        Create a new object of the class itkHuangThresholdImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterISS3IUS3 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3IUS3_swigregister(itkHuangThresholdImageFilterISS3IUS3)
itkHuangThresholdImageFilterISS3IUS3___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3IUS3___New_orig__
itkHuangThresholdImageFilterISS3IUS3_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3IUS3_cast


def itkHuangThresholdImageFilterIUC2ISS2_New():
    return itkHuangThresholdImageFilterIUC2ISS2.New()

class itkHuangThresholdImageFilterIUC2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2ISS2_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterIUC2ISS2
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterIUC2ISS2

        Create a new object of the class itkHuangThresholdImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterIUC2ISS2 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2ISS2_swigregister(itkHuangThresholdImageFilterIUC2ISS2)
itkHuangThresholdImageFilterIUC2ISS2___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2ISS2___New_orig__
itkHuangThresholdImageFilterIUC2ISS2_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2ISS2_cast


def itkHuangThresholdImageFilterIUC2IUC2_New():
    return itkHuangThresholdImageFilterIUC2IUC2.New()

class itkHuangThresholdImageFilterIUC2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2IUC2_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterIUC2IUC2

        Create a new object of the class itkHuangThresholdImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterIUC2IUC2 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2IUC2_swigregister(itkHuangThresholdImageFilterIUC2IUC2)
itkHuangThresholdImageFilterIUC2IUC2___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2IUC2___New_orig__
itkHuangThresholdImageFilterIUC2IUC2_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2IUC2_cast


def itkHuangThresholdImageFilterIUC2IUS2_New():
    return itkHuangThresholdImageFilterIUC2IUS2.New()

class itkHuangThresholdImageFilterIUC2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2IUS2_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterIUC2IUS2
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterIUC2IUS2

        Create a new object of the class itkHuangThresholdImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterIUC2IUS2 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2IUS2_swigregister(itkHuangThresholdImageFilterIUC2IUS2)
itkHuangThresholdImageFilterIUC2IUS2___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2IUS2___New_orig__
itkHuangThresholdImageFilterIUC2IUS2_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2IUS2_cast


def itkHuangThresholdImageFilterIUC3ISS3_New():
    return itkHuangThresholdImageFilterIUC3ISS3.New()

class itkHuangThresholdImageFilterIUC3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3ISS3_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterIUC3ISS3
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterIUC3ISS3

        Create a new object of the class itkHuangThresholdImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterIUC3ISS3 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3ISS3_swigregister(itkHuangThresholdImageFilterIUC3ISS3)
itkHuangThresholdImageFilterIUC3ISS3___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3ISS3___New_orig__
itkHuangThresholdImageFilterIUC3ISS3_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3ISS3_cast


def itkHuangThresholdImageFilterIUC3IUC3_New():
    return itkHuangThresholdImageFilterIUC3IUC3.New()

class itkHuangThresholdImageFilterIUC3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3IUC3_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterIUC3IUC3

        Create a new object of the class itkHuangThresholdImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterIUC3IUC3 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3IUC3_swigregister(itkHuangThresholdImageFilterIUC3IUC3)
itkHuangThresholdImageFilterIUC3IUC3___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3IUC3___New_orig__
itkHuangThresholdImageFilterIUC3IUC3_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3IUC3_cast


def itkHuangThresholdImageFilterIUC3IUS3_New():
    return itkHuangThresholdImageFilterIUC3IUS3.New()

class itkHuangThresholdImageFilterIUC3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3IUS3_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterIUC3IUS3
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterIUC3IUS3

        Create a new object of the class itkHuangThresholdImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterIUC3IUS3 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3IUS3_swigregister(itkHuangThresholdImageFilterIUC3IUS3)
itkHuangThresholdImageFilterIUC3IUS3___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3IUS3___New_orig__
itkHuangThresholdImageFilterIUC3IUS3_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3IUS3_cast


def itkHuangThresholdImageFilterIUS2ISS2_New():
    return itkHuangThresholdImageFilterIUS2ISS2.New()

class itkHuangThresholdImageFilterIUS2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS2ISS2_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterIUS2ISS2
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterIUS2ISS2

        Create a new object of the class itkHuangThresholdImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterIUS2ISS2 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS2ISS2_swigregister(itkHuangThresholdImageFilterIUS2ISS2)
itkHuangThresholdImageFilterIUS2ISS2___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS2ISS2___New_orig__
itkHuangThresholdImageFilterIUS2ISS2_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS2ISS2_cast


def itkHuangThresholdImageFilterIUS2IUC2_New():
    return itkHuangThresholdImageFilterIUS2IUC2.New()

class itkHuangThresholdImageFilterIUS2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS2IUC2_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterIUS2IUC2
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterIUS2IUC2

        Create a new object of the class itkHuangThresholdImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterIUS2IUC2 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS2IUC2_swigregister(itkHuangThresholdImageFilterIUS2IUC2)
itkHuangThresholdImageFilterIUS2IUC2___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS2IUC2___New_orig__
itkHuangThresholdImageFilterIUS2IUC2_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS2IUC2_cast


def itkHuangThresholdImageFilterIUS2IUS2_New():
    return itkHuangThresholdImageFilterIUS2IUS2.New()

class itkHuangThresholdImageFilterIUS2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS2IUS2_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterIUS2IUS2

        Create a new object of the class itkHuangThresholdImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterIUS2IUS2 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS2IUS2_swigregister(itkHuangThresholdImageFilterIUS2IUS2)
itkHuangThresholdImageFilterIUS2IUS2___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS2IUS2___New_orig__
itkHuangThresholdImageFilterIUS2IUS2_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS2IUS2_cast


def itkHuangThresholdImageFilterIUS3ISS3_New():
    return itkHuangThresholdImageFilterIUS3ISS3.New()

class itkHuangThresholdImageFilterIUS3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS3ISS3_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterIUS3ISS3
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterIUS3ISS3

        Create a new object of the class itkHuangThresholdImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterIUS3ISS3 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS3ISS3_swigregister(itkHuangThresholdImageFilterIUS3ISS3)
itkHuangThresholdImageFilterIUS3ISS3___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS3ISS3___New_orig__
itkHuangThresholdImageFilterIUS3ISS3_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS3ISS3_cast


def itkHuangThresholdImageFilterIUS3IUC3_New():
    return itkHuangThresholdImageFilterIUS3IUC3.New()

class itkHuangThresholdImageFilterIUS3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS3IUC3_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterIUS3IUC3
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterIUS3IUC3

        Create a new object of the class itkHuangThresholdImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterIUS3IUC3 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS3IUC3_swigregister(itkHuangThresholdImageFilterIUS3IUC3)
itkHuangThresholdImageFilterIUS3IUC3___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS3IUC3___New_orig__
itkHuangThresholdImageFilterIUS3IUC3_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS3IUC3_cast


def itkHuangThresholdImageFilterIUS3IUS3_New():
    return itkHuangThresholdImageFilterIUS3IUS3.New()

class itkHuangThresholdImageFilterIUS3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3):
    r"""


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS3IUS3_Clone)
    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterIUS3IUS3

        Create a new object of the class itkHuangThresholdImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHuangThresholdImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHuangThresholdImageFilterIUS3IUS3 in _itkHuangThresholdImageFilterPython:
_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS3IUS3_swigregister(itkHuangThresholdImageFilterIUS3IUS3)
itkHuangThresholdImageFilterIUS3IUS3___New_orig__ = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS3IUS3___New_orig__
itkHuangThresholdImageFilterIUS3IUS3_cast = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def huang_threshold_image_filter(*args, **kwargs):
    """Procedural interface for HuangThresholdImageFilter"""
    import itk
    instance = itk.HuangThresholdImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def huang_threshold_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.HuangThresholdImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.HuangThresholdImageFilter.values()[0]
    else:
        filter_object = itk.HuangThresholdImageFilter

    huang_threshold_image_filter.__doc__ = filter_object.__doc__
    huang_threshold_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    huang_threshold_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.HuangThresholdImageFilter, itkTemplate.itkTemplate):
        huang_threshold_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        huang_threshold_image_filter.__doc__ += "\n"
        huang_threshold_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        huang_threshold_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



