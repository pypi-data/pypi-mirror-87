version: 2
workflows:
  version: 2
  test:
    jobs:
      - test-3.7:
          context: pip-staging
      - test-3.8:
          context: pip-staging
      - test-3.6:
          context: pip-staging
jobs:
  test-3.6: &test-template
    environment:
      COLUMNS: 160
      # default is /usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      PATH: /root/.local/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    docker:
      - image: python:3.6
    working_directory: ~/repo
    steps:
      - checkout
#      - run:
#          name: Install Git LFS
#          command: |
#            curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
#            apt-get update
#            apt-get install -y git-lfs openssh-client
#            git lfs install
#            mkdir -p ~/.ssh
#            ssh-keyscan -H github.com >> ~/.ssh/known_hosts
#            ssh git@github.com git-lfs-authenticate "${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}" download
#            git lfs pull
      - run:
          name: Install deps
          command: |
            echo PATH=$PATH $PIP_INDEX_URL
            pip install --user --upgrade -r requirements.txt

      - run:
          name: List deps
          command: |
            mkdir -p artifacts
            pip freeze | tee artifacts/pip-freeze.txt

      - run:
          name: setup.py develop
          command: |
            python setup.py develop --prefix ~/.local --no-deps

      - run:
          name: Run tests
          command: |
            make test-coverage

#      - run:
#          name: Notebooks
#          command: |
#            make -C notebooks || true

      - run:
          name: Coverage analysis
          when: always
          command: |
            make coverage-report

      - run:
          name: Coveralls submission
          when: always
          command: |
            make coverage-coveralls
#
#      - run:
#          name: Create JUnit output
#          when: always
#          command: |
#            make junit

      - test-results-store:
          path: out-comptests/junit

#      - store_artifacts:
#          path: out-comptests/duckietown_world_tests
#          destination: duckietown_world_tests

      - store_artifacts:
          path: artifacts
          destination: artifacts

      - store_artifacts:
          path: out_coverage
          destination: coverage

      - store_artifacts:
          path: notebooks
          destination: notebooks


  test-3.7:
    <<: *test-template
    docker:
    - image: python:3.7

  test-3.8:
    <<: *test-template
    docker:
    - image: python:3.8
