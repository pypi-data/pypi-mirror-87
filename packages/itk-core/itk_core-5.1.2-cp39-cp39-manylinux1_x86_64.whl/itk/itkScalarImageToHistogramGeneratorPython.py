# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKStatisticsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkScalarImageToHistogramGeneratorPython
else:
    import _itkScalarImageToHistogramGeneratorPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkScalarImageToHistogramGeneratorPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkScalarImageToHistogramGeneratorPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkSizePython
import itk.itkCovariantVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkRGBPixelPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkHistogramPython
import itk.itkArrayPython
import itk.itkSamplePython

def itkScalarImageToHistogramGeneratorID2_New():
    return itkScalarImageToHistogramGeneratorID2.New()

class itkScalarImageToHistogramGeneratorID2(itk.ITKCommonBasePython.itkObject):
    r"""


    TODO. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_Clone)
    Compute = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_Compute)
    SetInput = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_SetInput)
    GetOutput = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_GetOutput)
    SetNumberOfBins = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_SetNumberOfBins)
    SetMarginalScale = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_SetMarginalScale)
    SetHistogramMin = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_SetHistogramMin)
    SetHistogramMax = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_SetHistogramMax)
    SetAutoHistogramMinimumMaximum = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_SetAutoHistogramMinimumMaximum)
    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorID2
    cast = _swig_new_static_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorID2

        Create a new object of the class itkScalarImageToHistogramGeneratorID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToHistogramGeneratorID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToHistogramGeneratorID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToHistogramGeneratorID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToHistogramGeneratorID2 in _itkScalarImageToHistogramGeneratorPython:
_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_swigregister(itkScalarImageToHistogramGeneratorID2)
itkScalarImageToHistogramGeneratorID2___New_orig__ = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2___New_orig__
itkScalarImageToHistogramGeneratorID2_cast = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_cast


def itkScalarImageToHistogramGeneratorID3_New():
    return itkScalarImageToHistogramGeneratorID3.New()

class itkScalarImageToHistogramGeneratorID3(itk.ITKCommonBasePython.itkObject):
    r"""


    TODO. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_Clone)
    Compute = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_Compute)
    SetInput = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_SetInput)
    GetOutput = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_GetOutput)
    SetNumberOfBins = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_SetNumberOfBins)
    SetMarginalScale = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_SetMarginalScale)
    SetHistogramMin = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_SetHistogramMin)
    SetHistogramMax = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_SetHistogramMax)
    SetAutoHistogramMinimumMaximum = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_SetAutoHistogramMinimumMaximum)
    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorID3
    cast = _swig_new_static_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorID3

        Create a new object of the class itkScalarImageToHistogramGeneratorID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToHistogramGeneratorID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToHistogramGeneratorID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToHistogramGeneratorID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToHistogramGeneratorID3 in _itkScalarImageToHistogramGeneratorPython:
_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_swigregister(itkScalarImageToHistogramGeneratorID3)
itkScalarImageToHistogramGeneratorID3___New_orig__ = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3___New_orig__
itkScalarImageToHistogramGeneratorID3_cast = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_cast


def itkScalarImageToHistogramGeneratorIF2_New():
    return itkScalarImageToHistogramGeneratorIF2.New()

class itkScalarImageToHistogramGeneratorIF2(itk.ITKCommonBasePython.itkObject):
    r"""


    TODO. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_Clone)
    Compute = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_Compute)
    SetInput = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetInput)
    GetOutput = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_GetOutput)
    SetNumberOfBins = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetNumberOfBins)
    SetMarginalScale = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetMarginalScale)
    SetHistogramMin = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetHistogramMin)
    SetHistogramMax = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetHistogramMax)
    SetAutoHistogramMinimumMaximum = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetAutoHistogramMinimumMaximum)
    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorIF2
    cast = _swig_new_static_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorIF2

        Create a new object of the class itkScalarImageToHistogramGeneratorIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToHistogramGeneratorIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToHistogramGeneratorIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToHistogramGeneratorIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToHistogramGeneratorIF2 in _itkScalarImageToHistogramGeneratorPython:
_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_swigregister(itkScalarImageToHistogramGeneratorIF2)
itkScalarImageToHistogramGeneratorIF2___New_orig__ = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2___New_orig__
itkScalarImageToHistogramGeneratorIF2_cast = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_cast


def itkScalarImageToHistogramGeneratorIF3_New():
    return itkScalarImageToHistogramGeneratorIF3.New()

class itkScalarImageToHistogramGeneratorIF3(itk.ITKCommonBasePython.itkObject):
    r"""


    TODO. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_Clone)
    Compute = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_Compute)
    SetInput = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetInput)
    GetOutput = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_GetOutput)
    SetNumberOfBins = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetNumberOfBins)
    SetMarginalScale = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetMarginalScale)
    SetHistogramMin = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetHistogramMin)
    SetHistogramMax = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetHistogramMax)
    SetAutoHistogramMinimumMaximum = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetAutoHistogramMinimumMaximum)
    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorIF3
    cast = _swig_new_static_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorIF3

        Create a new object of the class itkScalarImageToHistogramGeneratorIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToHistogramGeneratorIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToHistogramGeneratorIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToHistogramGeneratorIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToHistogramGeneratorIF3 in _itkScalarImageToHistogramGeneratorPython:
_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_swigregister(itkScalarImageToHistogramGeneratorIF3)
itkScalarImageToHistogramGeneratorIF3___New_orig__ = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3___New_orig__
itkScalarImageToHistogramGeneratorIF3_cast = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_cast


def itkScalarImageToHistogramGeneratorISS2_New():
    return itkScalarImageToHistogramGeneratorISS2.New()

class itkScalarImageToHistogramGeneratorISS2(itk.ITKCommonBasePython.itkObject):
    r"""


    TODO. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_Clone)
    Compute = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_Compute)
    SetInput = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_SetInput)
    GetOutput = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_GetOutput)
    SetNumberOfBins = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_SetNumberOfBins)
    SetMarginalScale = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_SetMarginalScale)
    SetHistogramMin = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_SetHistogramMin)
    SetHistogramMax = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_SetHistogramMax)
    SetAutoHistogramMinimumMaximum = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_SetAutoHistogramMinimumMaximum)
    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorISS2
    cast = _swig_new_static_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorISS2

        Create a new object of the class itkScalarImageToHistogramGeneratorISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToHistogramGeneratorISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToHistogramGeneratorISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToHistogramGeneratorISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToHistogramGeneratorISS2 in _itkScalarImageToHistogramGeneratorPython:
_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_swigregister(itkScalarImageToHistogramGeneratorISS2)
itkScalarImageToHistogramGeneratorISS2___New_orig__ = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2___New_orig__
itkScalarImageToHistogramGeneratorISS2_cast = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS2_cast


def itkScalarImageToHistogramGeneratorISS3_New():
    return itkScalarImageToHistogramGeneratorISS3.New()

class itkScalarImageToHistogramGeneratorISS3(itk.ITKCommonBasePython.itkObject):
    r"""


    TODO. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_Clone)
    Compute = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_Compute)
    SetInput = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_SetInput)
    GetOutput = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_GetOutput)
    SetNumberOfBins = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_SetNumberOfBins)
    SetMarginalScale = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_SetMarginalScale)
    SetHistogramMin = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_SetHistogramMin)
    SetHistogramMax = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_SetHistogramMax)
    SetAutoHistogramMinimumMaximum = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_SetAutoHistogramMinimumMaximum)
    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorISS3
    cast = _swig_new_static_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorISS3

        Create a new object of the class itkScalarImageToHistogramGeneratorISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToHistogramGeneratorISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToHistogramGeneratorISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToHistogramGeneratorISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToHistogramGeneratorISS3 in _itkScalarImageToHistogramGeneratorPython:
_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_swigregister(itkScalarImageToHistogramGeneratorISS3)
itkScalarImageToHistogramGeneratorISS3___New_orig__ = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3___New_orig__
itkScalarImageToHistogramGeneratorISS3_cast = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorISS3_cast


def itkScalarImageToHistogramGeneratorIUC2_New():
    return itkScalarImageToHistogramGeneratorIUC2.New()

class itkScalarImageToHistogramGeneratorIUC2(itk.ITKCommonBasePython.itkObject):
    r"""


    TODO. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_Clone)
    Compute = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_Compute)
    SetInput = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetInput)
    GetOutput = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_GetOutput)
    SetNumberOfBins = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetNumberOfBins)
    SetMarginalScale = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetMarginalScale)
    SetHistogramMin = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetHistogramMin)
    SetHistogramMax = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetHistogramMax)
    SetAutoHistogramMinimumMaximum = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetAutoHistogramMinimumMaximum)
    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorIUC2
    cast = _swig_new_static_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorIUC2

        Create a new object of the class itkScalarImageToHistogramGeneratorIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToHistogramGeneratorIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToHistogramGeneratorIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToHistogramGeneratorIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToHistogramGeneratorIUC2 in _itkScalarImageToHistogramGeneratorPython:
_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_swigregister(itkScalarImageToHistogramGeneratorIUC2)
itkScalarImageToHistogramGeneratorIUC2___New_orig__ = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2___New_orig__
itkScalarImageToHistogramGeneratorIUC2_cast = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_cast


def itkScalarImageToHistogramGeneratorIUC3_New():
    return itkScalarImageToHistogramGeneratorIUC3.New()

class itkScalarImageToHistogramGeneratorIUC3(itk.ITKCommonBasePython.itkObject):
    r"""


    TODO. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_Clone)
    Compute = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_Compute)
    SetInput = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetInput)
    GetOutput = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_GetOutput)
    SetNumberOfBins = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetNumberOfBins)
    SetMarginalScale = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetMarginalScale)
    SetHistogramMin = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetHistogramMin)
    SetHistogramMax = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetHistogramMax)
    SetAutoHistogramMinimumMaximum = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetAutoHistogramMinimumMaximum)
    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorIUC3
    cast = _swig_new_static_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorIUC3

        Create a new object of the class itkScalarImageToHistogramGeneratorIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToHistogramGeneratorIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToHistogramGeneratorIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToHistogramGeneratorIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToHistogramGeneratorIUC3 in _itkScalarImageToHistogramGeneratorPython:
_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_swigregister(itkScalarImageToHistogramGeneratorIUC3)
itkScalarImageToHistogramGeneratorIUC3___New_orig__ = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3___New_orig__
itkScalarImageToHistogramGeneratorIUC3_cast = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_cast


def itkScalarImageToHistogramGeneratorIUS2_New():
    return itkScalarImageToHistogramGeneratorIUS2.New()

class itkScalarImageToHistogramGeneratorIUS2(itk.ITKCommonBasePython.itkObject):
    r"""


    TODO. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_Clone)
    Compute = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_Compute)
    SetInput = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetInput)
    GetOutput = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_GetOutput)
    SetNumberOfBins = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetNumberOfBins)
    SetMarginalScale = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetMarginalScale)
    SetHistogramMin = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetHistogramMin)
    SetHistogramMax = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetHistogramMax)
    SetAutoHistogramMinimumMaximum = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetAutoHistogramMinimumMaximum)
    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorIUS2
    cast = _swig_new_static_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorIUS2

        Create a new object of the class itkScalarImageToHistogramGeneratorIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToHistogramGeneratorIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToHistogramGeneratorIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToHistogramGeneratorIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToHistogramGeneratorIUS2 in _itkScalarImageToHistogramGeneratorPython:
_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_swigregister(itkScalarImageToHistogramGeneratorIUS2)
itkScalarImageToHistogramGeneratorIUS2___New_orig__ = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2___New_orig__
itkScalarImageToHistogramGeneratorIUS2_cast = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_cast


def itkScalarImageToHistogramGeneratorIUS3_New():
    return itkScalarImageToHistogramGeneratorIUS3.New()

class itkScalarImageToHistogramGeneratorIUS3(itk.ITKCommonBasePython.itkObject):
    r"""


    TODO. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_Clone)
    Compute = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_Compute)
    SetInput = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetInput)
    GetOutput = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_GetOutput)
    SetNumberOfBins = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetNumberOfBins)
    SetMarginalScale = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetMarginalScale)
    SetHistogramMin = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetHistogramMin)
    SetHistogramMax = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetHistogramMax)
    SetAutoHistogramMinimumMaximum = _swig_new_instance_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetAutoHistogramMinimumMaximum)
    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorIUS3
    cast = _swig_new_static_method(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorIUS3

        Create a new object of the class itkScalarImageToHistogramGeneratorIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToHistogramGeneratorIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToHistogramGeneratorIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToHistogramGeneratorIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToHistogramGeneratorIUS3 in _itkScalarImageToHistogramGeneratorPython:
_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_swigregister(itkScalarImageToHistogramGeneratorIUS3)
itkScalarImageToHistogramGeneratorIUS3___New_orig__ = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3___New_orig__
itkScalarImageToHistogramGeneratorIUS3_cast = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_cast



