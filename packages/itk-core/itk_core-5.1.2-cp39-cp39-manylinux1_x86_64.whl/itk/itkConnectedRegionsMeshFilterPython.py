# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKMeshPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkConnectedRegionsMeshFilterPython
else:
    import _itkConnectedRegionsMeshFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkConnectedRegionsMeshFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkConnectedRegionsMeshFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkMeshToMeshFilterPython
import itk.itkMeshSourcePython
import itk.itkPointSetPython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkMeshBasePython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkArrayPython

def itkConnectedRegionsMeshFilterMD2MD2_New():
    return itkConnectedRegionsMeshFilterMD2MD2.New()

class itkConnectedRegionsMeshFilterMD2MD2(itk.itkMeshToMeshFilterPython.itkMeshToMeshFilterMD2MD2):
    r"""


    Extract portions of a mesh that are connected at vertices.

    ConnectedRegionsMeshFilter will extract portions of a mesh that are
    connected at vertices. (Such connected portions of the mesh are
    referred to as a region.) Options exist to extract the largest region,
    a particular region, a region containing a specified point, or a
    region containing a specified cell. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2___New_orig__)
    Clone = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_Clone)
    PointSeededRegions = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_PointSeededRegions
    
    CellSeededRegions = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_CellSeededRegions
    
    SpecifiedRegions = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_SpecifiedRegions
    
    LargestRegion = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_LargestRegion
    
    AllRegions = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_AllRegions
    
    ClosestPointRegion = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_ClosestPointRegion
    
    SetExtractionMode = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_SetExtractionMode)
    GetExtractionMode = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_GetExtractionMode)
    SetExtractionModeToPointSeededRegions = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_SetExtractionModeToPointSeededRegions)
    SetExtractionModeToCellSeededRegions = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_SetExtractionModeToCellSeededRegions)
    SetExtractionModeToSpecifiedRegions = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_SetExtractionModeToSpecifiedRegions)
    SetExtractionModeToLargestRegion = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_SetExtractionModeToLargestRegion)
    SetExtractionModeToAllRegions = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_SetExtractionModeToAllRegions)
    SetExtractionModeToClosestPointRegion = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_SetExtractionModeToClosestPointRegion)
    InitializeSeedList = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_InitializeSeedList)
    AddSeed = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_AddSeed)
    DeleteSeed = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_DeleteSeed)
    InitializeSpecifiedRegionList = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_InitializeSpecifiedRegionList)
    AddSpecifiedRegion = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_AddSpecifiedRegion)
    DeleteSpecifiedRegion = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_DeleteSpecifiedRegion)
    SetClosestPoint = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_SetClosestPoint)
    GetClosestPoint = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_GetClosestPoint)
    GetNumberOfExtractedRegions = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_GetNumberOfExtractedRegions)
    __swig_destroy__ = _itkConnectedRegionsMeshFilterPython.delete_itkConnectedRegionsMeshFilterMD2MD2
    cast = _swig_new_static_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_cast)

    def New(*args, **kargs):
        """New() -> itkConnectedRegionsMeshFilterMD2MD2

        Create a new object of the class itkConnectedRegionsMeshFilterMD2MD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConnectedRegionsMeshFilterMD2MD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConnectedRegionsMeshFilterMD2MD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConnectedRegionsMeshFilterMD2MD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConnectedRegionsMeshFilterMD2MD2 in _itkConnectedRegionsMeshFilterPython:
_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_swigregister(itkConnectedRegionsMeshFilterMD2MD2)
itkConnectedRegionsMeshFilterMD2MD2___New_orig__ = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2___New_orig__
itkConnectedRegionsMeshFilterMD2MD2_cast = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD2MD2_cast


def itkConnectedRegionsMeshFilterMD3MD3_New():
    return itkConnectedRegionsMeshFilterMD3MD3.New()

class itkConnectedRegionsMeshFilterMD3MD3(itk.itkMeshToMeshFilterPython.itkMeshToMeshFilterMD3MD3):
    r"""


    Extract portions of a mesh that are connected at vertices.

    ConnectedRegionsMeshFilter will extract portions of a mesh that are
    connected at vertices. (Such connected portions of the mesh are
    referred to as a region.) Options exist to extract the largest region,
    a particular region, a region containing a specified point, or a
    region containing a specified cell. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3___New_orig__)
    Clone = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_Clone)
    PointSeededRegions = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_PointSeededRegions
    
    CellSeededRegions = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_CellSeededRegions
    
    SpecifiedRegions = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_SpecifiedRegions
    
    LargestRegion = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_LargestRegion
    
    AllRegions = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_AllRegions
    
    ClosestPointRegion = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_ClosestPointRegion
    
    SetExtractionMode = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_SetExtractionMode)
    GetExtractionMode = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_GetExtractionMode)
    SetExtractionModeToPointSeededRegions = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_SetExtractionModeToPointSeededRegions)
    SetExtractionModeToCellSeededRegions = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_SetExtractionModeToCellSeededRegions)
    SetExtractionModeToSpecifiedRegions = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_SetExtractionModeToSpecifiedRegions)
    SetExtractionModeToLargestRegion = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_SetExtractionModeToLargestRegion)
    SetExtractionModeToAllRegions = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_SetExtractionModeToAllRegions)
    SetExtractionModeToClosestPointRegion = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_SetExtractionModeToClosestPointRegion)
    InitializeSeedList = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_InitializeSeedList)
    AddSeed = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_AddSeed)
    DeleteSeed = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_DeleteSeed)
    InitializeSpecifiedRegionList = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_InitializeSpecifiedRegionList)
    AddSpecifiedRegion = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_AddSpecifiedRegion)
    DeleteSpecifiedRegion = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_DeleteSpecifiedRegion)
    SetClosestPoint = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_SetClosestPoint)
    GetClosestPoint = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_GetClosestPoint)
    GetNumberOfExtractedRegions = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_GetNumberOfExtractedRegions)
    __swig_destroy__ = _itkConnectedRegionsMeshFilterPython.delete_itkConnectedRegionsMeshFilterMD3MD3
    cast = _swig_new_static_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_cast)

    def New(*args, **kargs):
        """New() -> itkConnectedRegionsMeshFilterMD3MD3

        Create a new object of the class itkConnectedRegionsMeshFilterMD3MD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConnectedRegionsMeshFilterMD3MD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConnectedRegionsMeshFilterMD3MD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConnectedRegionsMeshFilterMD3MD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConnectedRegionsMeshFilterMD3MD3 in _itkConnectedRegionsMeshFilterPython:
_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_swigregister(itkConnectedRegionsMeshFilterMD3MD3)
itkConnectedRegionsMeshFilterMD3MD3___New_orig__ = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3___New_orig__
itkConnectedRegionsMeshFilterMD3MD3_cast = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMD3MD3_cast


def itkConnectedRegionsMeshFilterMF2MF2_New():
    return itkConnectedRegionsMeshFilterMF2MF2.New()

class itkConnectedRegionsMeshFilterMF2MF2(itk.itkMeshToMeshFilterPython.itkMeshToMeshFilterMF2MF2):
    r"""


    Extract portions of a mesh that are connected at vertices.

    ConnectedRegionsMeshFilter will extract portions of a mesh that are
    connected at vertices. (Such connected portions of the mesh are
    referred to as a region.) Options exist to extract the largest region,
    a particular region, a region containing a specified point, or a
    region containing a specified cell. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2___New_orig__)
    Clone = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_Clone)
    PointSeededRegions = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_PointSeededRegions
    
    CellSeededRegions = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_CellSeededRegions
    
    SpecifiedRegions = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_SpecifiedRegions
    
    LargestRegion = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_LargestRegion
    
    AllRegions = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_AllRegions
    
    ClosestPointRegion = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_ClosestPointRegion
    
    SetExtractionMode = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_SetExtractionMode)
    GetExtractionMode = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_GetExtractionMode)
    SetExtractionModeToPointSeededRegions = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_SetExtractionModeToPointSeededRegions)
    SetExtractionModeToCellSeededRegions = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_SetExtractionModeToCellSeededRegions)
    SetExtractionModeToSpecifiedRegions = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_SetExtractionModeToSpecifiedRegions)
    SetExtractionModeToLargestRegion = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_SetExtractionModeToLargestRegion)
    SetExtractionModeToAllRegions = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_SetExtractionModeToAllRegions)
    SetExtractionModeToClosestPointRegion = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_SetExtractionModeToClosestPointRegion)
    InitializeSeedList = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_InitializeSeedList)
    AddSeed = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_AddSeed)
    DeleteSeed = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_DeleteSeed)
    InitializeSpecifiedRegionList = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_InitializeSpecifiedRegionList)
    AddSpecifiedRegion = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_AddSpecifiedRegion)
    DeleteSpecifiedRegion = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_DeleteSpecifiedRegion)
    SetClosestPoint = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_SetClosestPoint)
    GetClosestPoint = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_GetClosestPoint)
    GetNumberOfExtractedRegions = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_GetNumberOfExtractedRegions)
    __swig_destroy__ = _itkConnectedRegionsMeshFilterPython.delete_itkConnectedRegionsMeshFilterMF2MF2
    cast = _swig_new_static_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_cast)

    def New(*args, **kargs):
        """New() -> itkConnectedRegionsMeshFilterMF2MF2

        Create a new object of the class itkConnectedRegionsMeshFilterMF2MF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConnectedRegionsMeshFilterMF2MF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConnectedRegionsMeshFilterMF2MF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConnectedRegionsMeshFilterMF2MF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConnectedRegionsMeshFilterMF2MF2 in _itkConnectedRegionsMeshFilterPython:
_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_swigregister(itkConnectedRegionsMeshFilterMF2MF2)
itkConnectedRegionsMeshFilterMF2MF2___New_orig__ = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2___New_orig__
itkConnectedRegionsMeshFilterMF2MF2_cast = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF2MF2_cast


def itkConnectedRegionsMeshFilterMF3MF3_New():
    return itkConnectedRegionsMeshFilterMF3MF3.New()

class itkConnectedRegionsMeshFilterMF3MF3(itk.itkMeshToMeshFilterPython.itkMeshToMeshFilterMF3MF3):
    r"""


    Extract portions of a mesh that are connected at vertices.

    ConnectedRegionsMeshFilter will extract portions of a mesh that are
    connected at vertices. (Such connected portions of the mesh are
    referred to as a region.) Options exist to extract the largest region,
    a particular region, a region containing a specified point, or a
    region containing a specified cell. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3___New_orig__)
    Clone = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_Clone)
    PointSeededRegions = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_PointSeededRegions
    
    CellSeededRegions = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_CellSeededRegions
    
    SpecifiedRegions = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_SpecifiedRegions
    
    LargestRegion = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_LargestRegion
    
    AllRegions = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_AllRegions
    
    ClosestPointRegion = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_ClosestPointRegion
    
    SetExtractionMode = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_SetExtractionMode)
    GetExtractionMode = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_GetExtractionMode)
    SetExtractionModeToPointSeededRegions = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_SetExtractionModeToPointSeededRegions)
    SetExtractionModeToCellSeededRegions = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_SetExtractionModeToCellSeededRegions)
    SetExtractionModeToSpecifiedRegions = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_SetExtractionModeToSpecifiedRegions)
    SetExtractionModeToLargestRegion = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_SetExtractionModeToLargestRegion)
    SetExtractionModeToAllRegions = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_SetExtractionModeToAllRegions)
    SetExtractionModeToClosestPointRegion = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_SetExtractionModeToClosestPointRegion)
    InitializeSeedList = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_InitializeSeedList)
    AddSeed = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_AddSeed)
    DeleteSeed = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_DeleteSeed)
    InitializeSpecifiedRegionList = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_InitializeSpecifiedRegionList)
    AddSpecifiedRegion = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_AddSpecifiedRegion)
    DeleteSpecifiedRegion = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_DeleteSpecifiedRegion)
    SetClosestPoint = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_SetClosestPoint)
    GetClosestPoint = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_GetClosestPoint)
    GetNumberOfExtractedRegions = _swig_new_instance_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_GetNumberOfExtractedRegions)
    __swig_destroy__ = _itkConnectedRegionsMeshFilterPython.delete_itkConnectedRegionsMeshFilterMF3MF3
    cast = _swig_new_static_method(_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_cast)

    def New(*args, **kargs):
        """New() -> itkConnectedRegionsMeshFilterMF3MF3

        Create a new object of the class itkConnectedRegionsMeshFilterMF3MF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConnectedRegionsMeshFilterMF3MF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConnectedRegionsMeshFilterMF3MF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConnectedRegionsMeshFilterMF3MF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConnectedRegionsMeshFilterMF3MF3 in _itkConnectedRegionsMeshFilterPython:
_itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_swigregister(itkConnectedRegionsMeshFilterMF3MF3)
itkConnectedRegionsMeshFilterMF3MF3___New_orig__ = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3___New_orig__
itkConnectedRegionsMeshFilterMF3MF3_cast = _itkConnectedRegionsMeshFilterPython.itkConnectedRegionsMeshFilterMF3MF3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def connected_regions_mesh_filter(*args, **kwargs):
    """Procedural interface for ConnectedRegionsMeshFilter"""
    import itk
    instance = itk.ConnectedRegionsMeshFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def connected_regions_mesh_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ConnectedRegionsMeshFilter, itkTemplate.itkTemplate):
        filter_object = itk.ConnectedRegionsMeshFilter.values()[0]
    else:
        filter_object = itk.ConnectedRegionsMeshFilter

    connected_regions_mesh_filter.__doc__ = filter_object.__doc__
    connected_regions_mesh_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    connected_regions_mesh_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ConnectedRegionsMeshFilter, itkTemplate.itkTemplate):
        connected_regions_mesh_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        connected_regions_mesh_filter.__doc__ += "\n"
        connected_regions_mesh_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        connected_regions_mesh_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



