# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKCommonPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkContinuousIndexPython
else:
    import _itkContinuousIndexPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkContinuousIndexPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkContinuousIndexPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
class itkContinuousIndexD2(itk.itkPointPython.itkPointD2):
    r"""


    A templated class holding a point in n-Dimensional image space.

    ContinuousIndex is a templated class that holds a set of coordinates
    (components). The template parameter TCoordRep can be any floating
    point type (float, double). The VIndexDimension defines the number of
    components in the continuous index array.

    See:   Point

    See:   Index 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __swig_destroy__ = _itkContinuousIndexPython.delete_itkContinuousIndexD2

    def __init__(self, *args):
        r"""
        __init__(itkContinuousIndexD2 self) -> itkContinuousIndexD2
        __init__(itkContinuousIndexD2 self, itkContinuousIndexD2 arg0) -> itkContinuousIndexD2
        __init__(itkContinuousIndexD2 self, double const * r) -> itkContinuousIndexD2
        __init__(itkContinuousIndexD2 self, itkIndex2 index) -> itkContinuousIndexD2


        A templated class holding a point in n-Dimensional image space.

        ContinuousIndex is a templated class that holds a set of coordinates
        (components). The template parameter TCoordRep can be any floating
        point type (float, double). The VIndexDimension defines the number of
        components in the continuous index array.

        See:   Point

        See:   Index 
        """
        _itkContinuousIndexPython.itkContinuousIndexD2_swiginit(self, _itkContinuousIndexPython.new_itkContinuousIndexD2(*args))
    __getitem__ = _swig_new_instance_method(_itkContinuousIndexPython.itkContinuousIndexD2___getitem__)
    __setitem__ = _swig_new_instance_method(_itkContinuousIndexPython.itkContinuousIndexD2___setitem__)
    __len__ = _swig_new_static_method(_itkContinuousIndexPython.itkContinuousIndexD2___len__)
    __repr__ = _swig_new_instance_method(_itkContinuousIndexPython.itkContinuousIndexD2___repr__)

# Register itkContinuousIndexD2 in _itkContinuousIndexPython:
_itkContinuousIndexPython.itkContinuousIndexD2_swigregister(itkContinuousIndexD2)
itkContinuousIndexD2___len__ = _itkContinuousIndexPython.itkContinuousIndexD2___len__

class itkContinuousIndexD3(itk.itkPointPython.itkPointD3):
    r"""


    A templated class holding a point in n-Dimensional image space.

    ContinuousIndex is a templated class that holds a set of coordinates
    (components). The template parameter TCoordRep can be any floating
    point type (float, double). The VIndexDimension defines the number of
    components in the continuous index array.

    See:   Point

    See:   Index 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __swig_destroy__ = _itkContinuousIndexPython.delete_itkContinuousIndexD3

    def __init__(self, *args):
        r"""
        __init__(itkContinuousIndexD3 self) -> itkContinuousIndexD3
        __init__(itkContinuousIndexD3 self, itkContinuousIndexD3 arg0) -> itkContinuousIndexD3
        __init__(itkContinuousIndexD3 self, double const * r) -> itkContinuousIndexD3
        __init__(itkContinuousIndexD3 self, itkIndex3 index) -> itkContinuousIndexD3


        A templated class holding a point in n-Dimensional image space.

        ContinuousIndex is a templated class that holds a set of coordinates
        (components). The template parameter TCoordRep can be any floating
        point type (float, double). The VIndexDimension defines the number of
        components in the continuous index array.

        See:   Point

        See:   Index 
        """
        _itkContinuousIndexPython.itkContinuousIndexD3_swiginit(self, _itkContinuousIndexPython.new_itkContinuousIndexD3(*args))
    __getitem__ = _swig_new_instance_method(_itkContinuousIndexPython.itkContinuousIndexD3___getitem__)
    __setitem__ = _swig_new_instance_method(_itkContinuousIndexPython.itkContinuousIndexD3___setitem__)
    __len__ = _swig_new_static_method(_itkContinuousIndexPython.itkContinuousIndexD3___len__)
    __repr__ = _swig_new_instance_method(_itkContinuousIndexPython.itkContinuousIndexD3___repr__)

# Register itkContinuousIndexD3 in _itkContinuousIndexPython:
_itkContinuousIndexPython.itkContinuousIndexD3_swigregister(itkContinuousIndexD3)
itkContinuousIndexD3___len__ = _itkContinuousIndexPython.itkContinuousIndexD3___len__

class itkContinuousIndexD4(itk.itkPointPython.itkPointD4):
    r"""


    A templated class holding a point in n-Dimensional image space.

    ContinuousIndex is a templated class that holds a set of coordinates
    (components). The template parameter TCoordRep can be any floating
    point type (float, double). The VIndexDimension defines the number of
    components in the continuous index array.

    See:   Point

    See:   Index 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __swig_destroy__ = _itkContinuousIndexPython.delete_itkContinuousIndexD4

    def __init__(self, *args):
        r"""
        __init__(itkContinuousIndexD4 self) -> itkContinuousIndexD4
        __init__(itkContinuousIndexD4 self, itkContinuousIndexD4 arg0) -> itkContinuousIndexD4
        __init__(itkContinuousIndexD4 self, double const * r) -> itkContinuousIndexD4
        __init__(itkContinuousIndexD4 self, itkIndex4 index) -> itkContinuousIndexD4


        A templated class holding a point in n-Dimensional image space.

        ContinuousIndex is a templated class that holds a set of coordinates
        (components). The template parameter TCoordRep can be any floating
        point type (float, double). The VIndexDimension defines the number of
        components in the continuous index array.

        See:   Point

        See:   Index 
        """
        _itkContinuousIndexPython.itkContinuousIndexD4_swiginit(self, _itkContinuousIndexPython.new_itkContinuousIndexD4(*args))
    __getitem__ = _swig_new_instance_method(_itkContinuousIndexPython.itkContinuousIndexD4___getitem__)
    __setitem__ = _swig_new_instance_method(_itkContinuousIndexPython.itkContinuousIndexD4___setitem__)
    __len__ = _swig_new_static_method(_itkContinuousIndexPython.itkContinuousIndexD4___len__)
    __repr__ = _swig_new_instance_method(_itkContinuousIndexPython.itkContinuousIndexD4___repr__)

# Register itkContinuousIndexD4 in _itkContinuousIndexPython:
_itkContinuousIndexPython.itkContinuousIndexD4_swigregister(itkContinuousIndexD4)
itkContinuousIndexD4___len__ = _itkContinuousIndexPython.itkContinuousIndexD4___len__

class itkContinuousIndexF2(itk.itkPointPython.itkPointF2):
    r"""


    A templated class holding a point in n-Dimensional image space.

    ContinuousIndex is a templated class that holds a set of coordinates
    (components). The template parameter TCoordRep can be any floating
    point type (float, double). The VIndexDimension defines the number of
    components in the continuous index array.

    See:   Point

    See:   Index 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __swig_destroy__ = _itkContinuousIndexPython.delete_itkContinuousIndexF2

    def __init__(self, *args):
        r"""
        __init__(itkContinuousIndexF2 self) -> itkContinuousIndexF2
        __init__(itkContinuousIndexF2 self, itkContinuousIndexF2 arg0) -> itkContinuousIndexF2
        __init__(itkContinuousIndexF2 self, float const * r) -> itkContinuousIndexF2
        __init__(itkContinuousIndexF2 self, itkIndex2 index) -> itkContinuousIndexF2


        A templated class holding a point in n-Dimensional image space.

        ContinuousIndex is a templated class that holds a set of coordinates
        (components). The template parameter TCoordRep can be any floating
        point type (float, double). The VIndexDimension defines the number of
        components in the continuous index array.

        See:   Point

        See:   Index 
        """
        _itkContinuousIndexPython.itkContinuousIndexF2_swiginit(self, _itkContinuousIndexPython.new_itkContinuousIndexF2(*args))
    __getitem__ = _swig_new_instance_method(_itkContinuousIndexPython.itkContinuousIndexF2___getitem__)
    __setitem__ = _swig_new_instance_method(_itkContinuousIndexPython.itkContinuousIndexF2___setitem__)
    __len__ = _swig_new_static_method(_itkContinuousIndexPython.itkContinuousIndexF2___len__)
    __repr__ = _swig_new_instance_method(_itkContinuousIndexPython.itkContinuousIndexF2___repr__)

# Register itkContinuousIndexF2 in _itkContinuousIndexPython:
_itkContinuousIndexPython.itkContinuousIndexF2_swigregister(itkContinuousIndexF2)
itkContinuousIndexF2___len__ = _itkContinuousIndexPython.itkContinuousIndexF2___len__

class itkContinuousIndexF3(itk.itkPointPython.itkPointF3):
    r"""


    A templated class holding a point in n-Dimensional image space.

    ContinuousIndex is a templated class that holds a set of coordinates
    (components). The template parameter TCoordRep can be any floating
    point type (float, double). The VIndexDimension defines the number of
    components in the continuous index array.

    See:   Point

    See:   Index 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __swig_destroy__ = _itkContinuousIndexPython.delete_itkContinuousIndexF3

    def __init__(self, *args):
        r"""
        __init__(itkContinuousIndexF3 self) -> itkContinuousIndexF3
        __init__(itkContinuousIndexF3 self, itkContinuousIndexF3 arg0) -> itkContinuousIndexF3
        __init__(itkContinuousIndexF3 self, float const * r) -> itkContinuousIndexF3
        __init__(itkContinuousIndexF3 self, itkIndex3 index) -> itkContinuousIndexF3


        A templated class holding a point in n-Dimensional image space.

        ContinuousIndex is a templated class that holds a set of coordinates
        (components). The template parameter TCoordRep can be any floating
        point type (float, double). The VIndexDimension defines the number of
        components in the continuous index array.

        See:   Point

        See:   Index 
        """
        _itkContinuousIndexPython.itkContinuousIndexF3_swiginit(self, _itkContinuousIndexPython.new_itkContinuousIndexF3(*args))
    __getitem__ = _swig_new_instance_method(_itkContinuousIndexPython.itkContinuousIndexF3___getitem__)
    __setitem__ = _swig_new_instance_method(_itkContinuousIndexPython.itkContinuousIndexF3___setitem__)
    __len__ = _swig_new_static_method(_itkContinuousIndexPython.itkContinuousIndexF3___len__)
    __repr__ = _swig_new_instance_method(_itkContinuousIndexPython.itkContinuousIndexF3___repr__)

# Register itkContinuousIndexF3 in _itkContinuousIndexPython:
_itkContinuousIndexPython.itkContinuousIndexF3_swigregister(itkContinuousIndexF3)
itkContinuousIndexF3___len__ = _itkContinuousIndexPython.itkContinuousIndexF3___len__

class itkContinuousIndexF4(itk.itkPointPython.itkPointF4):
    r"""


    A templated class holding a point in n-Dimensional image space.

    ContinuousIndex is a templated class that holds a set of coordinates
    (components). The template parameter TCoordRep can be any floating
    point type (float, double). The VIndexDimension defines the number of
    components in the continuous index array.

    See:   Point

    See:   Index 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __swig_destroy__ = _itkContinuousIndexPython.delete_itkContinuousIndexF4

    def __init__(self, *args):
        r"""
        __init__(itkContinuousIndexF4 self) -> itkContinuousIndexF4
        __init__(itkContinuousIndexF4 self, itkContinuousIndexF4 arg0) -> itkContinuousIndexF4
        __init__(itkContinuousIndexF4 self, float const * r) -> itkContinuousIndexF4
        __init__(itkContinuousIndexF4 self, itkIndex4 index) -> itkContinuousIndexF4


        A templated class holding a point in n-Dimensional image space.

        ContinuousIndex is a templated class that holds a set of coordinates
        (components). The template parameter TCoordRep can be any floating
        point type (float, double). The VIndexDimension defines the number of
        components in the continuous index array.

        See:   Point

        See:   Index 
        """
        _itkContinuousIndexPython.itkContinuousIndexF4_swiginit(self, _itkContinuousIndexPython.new_itkContinuousIndexF4(*args))
    __getitem__ = _swig_new_instance_method(_itkContinuousIndexPython.itkContinuousIndexF4___getitem__)
    __setitem__ = _swig_new_instance_method(_itkContinuousIndexPython.itkContinuousIndexF4___setitem__)
    __len__ = _swig_new_static_method(_itkContinuousIndexPython.itkContinuousIndexF4___len__)
    __repr__ = _swig_new_instance_method(_itkContinuousIndexPython.itkContinuousIndexF4___repr__)

# Register itkContinuousIndexF4 in _itkContinuousIndexPython:
_itkContinuousIndexPython.itkContinuousIndexF4_swigregister(itkContinuousIndexF4)
itkContinuousIndexF4___len__ = _itkContinuousIndexPython.itkContinuousIndexF4___len__



