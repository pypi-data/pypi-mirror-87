Metadata-Version: 2.1
Name: deadlinkz
Version: 1.0.2
Summary: Program that checks for dead links in a file
Home-page: https://github.com/IcemanEtika/deadlinkz
Author: TJ L
Author-email: ssjarceus@outlook.com
License: UNKNOWN
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: requests (==2.24.0)
Requires-Dist: colorama (==0.4.4)
Requires-Dist: black (==20.8b1)
Requires-Dist: flake8 (==3.8.4)
Requires-Dist: pytest (==6.1.2)
Requires-Dist: coverage (==5.3.0)

# deadlinkz
Python tool that checks for dead urls in a txt or html file

# Features
* Good links will appear green, bad will appear red, and unknown will appear grey
* Supports windows and linux style arguments (e.g, --version and -v both work for version)
* Supports parallelization via the use of threads
* Gets only request headers for optimization

# Run Instructions

To run open cmd in root of the repo, and type main.py followed by one of the supported arguments:

* -a or --all filename.extension to check all URLs in file
* -g or --good filename.extension to check only good URLs in file
* -b or --bad filename.extension to check only bad URLs in file
* -v or --version
* -h or --help

# Error Codes

An error code of **0** means that the program functioned as correctly, **1** can appear when checking for all files and means that
a broken/invalid URL was found in the file, and **2** means that the specified file could not be found.

To get the error code after the program has functioned, you can use:

`echo %ERRORLEVEL%`

after execution finishes.

Please note that index.txt is for test purposes only and you can modify/remove the file if you want to



