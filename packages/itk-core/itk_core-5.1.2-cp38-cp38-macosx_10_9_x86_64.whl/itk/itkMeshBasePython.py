# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKMeshPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMeshBasePython
else:
    import _itkMeshBasePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkMeshBasePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkMeshBasePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkPointSetPython
import itk.itkVectorContainerPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkPointPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkArrayPython
class itkCellInterfaceDCTI2FFULULULPF2MCULPF2(object):
    r"""


    An abstract interface for cells.

    Define an abstract interface for cells. Actual cell types derive from
    this class.

    Parameters:
    -----------

    TPixelType:  The type stored with an entity (cell, point, or
    boundary).

    TCellTraits:  Type information for cell. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI2FFULULULPF2MCULPF2

# Register itkCellInterfaceDCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceDCTI2FFULULULPF2MCULPF2)

class itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer self) -> itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer
        __init__(itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer self, itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer p) -> itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer
        __init__(itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer self, itkCellInterfaceDCTI2FFULULULPF2MCULPF2 p, bool takeOwnership) -> itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer
        """
        _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_swigregister(itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer)

class itkCellInterfaceDCTI2FFULULULPF2VCULPF2(object):
    r"""


    An abstract interface for cells.

    Define an abstract interface for cells. Actual cell types derive from
    this class.

    Parameters:
    -----------

    TPixelType:  The type stored with an entity (cell, point, or
    boundary).

    TCellTraits:  Type information for cell. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI2FFULULULPF2VCULPF2

# Register itkCellInterfaceDCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_swigregister(itkCellInterfaceDCTI2FFULULULPF2VCULPF2)

class itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer self) -> itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer
        __init__(itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer self, itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer p) -> itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer
        __init__(itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer self, itkCellInterfaceDCTI2FFULULULPF2VCULPF2 p, bool takeOwnership) -> itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer
        """
        _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_swigregister(itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer)

class itkCellInterfaceDCTI3FFULULULPF3MCULPF3(object):
    r"""


    An abstract interface for cells.

    Define an abstract interface for cells. Actual cell types derive from
    this class.

    Parameters:
    -----------

    TPixelType:  The type stored with an entity (cell, point, or
    boundary).

    TCellTraits:  Type information for cell. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI3FFULULULPF3MCULPF3

# Register itkCellInterfaceDCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceDCTI3FFULULULPF3MCULPF3)

class itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer self) -> itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer
        __init__(itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer self, itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer p) -> itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer
        __init__(itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer self, itkCellInterfaceDCTI3FFULULULPF3MCULPF3 p, bool takeOwnership) -> itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer
        """
        _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_swigregister(itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer)

class itkCellInterfaceDCTI3FFULULULPF3VCULPF3(object):
    r"""


    An abstract interface for cells.

    Define an abstract interface for cells. Actual cell types derive from
    this class.

    Parameters:
    -----------

    TPixelType:  The type stored with an entity (cell, point, or
    boundary).

    TCellTraits:  Type information for cell. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI3FFULULULPF3VCULPF3

# Register itkCellInterfaceDCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_swigregister(itkCellInterfaceDCTI3FFULULULPF3VCULPF3)

class itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer self) -> itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer
        __init__(itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer self, itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer p) -> itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer
        __init__(itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer self, itkCellInterfaceDCTI3FFULULULPF3VCULPF3 p, bool takeOwnership) -> itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer
        """
        _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_swigregister(itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer)

class itkCellInterfaceFCTI2FFULULULPF2MCULPF2(object):
    r"""


    An abstract interface for cells.

    Define an abstract interface for cells. Actual cell types derive from
    this class.

    Parameters:
    -----------

    TPixelType:  The type stored with an entity (cell, point, or
    boundary).

    TCellTraits:  Type information for cell. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI2FFULULULPF2MCULPF2

# Register itkCellInterfaceFCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceFCTI2FFULULULPF2MCULPF2)

class itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer self) -> itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer
        __init__(itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer self, itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer p) -> itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer
        __init__(itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer self, itkCellInterfaceFCTI2FFULULULPF2MCULPF2 p, bool takeOwnership) -> itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer
        """
        _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_swigregister(itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer)

class itkCellInterfaceFCTI2FFULULULPF2VCULPF2(object):
    r"""


    An abstract interface for cells.

    Define an abstract interface for cells. Actual cell types derive from
    this class.

    Parameters:
    -----------

    TPixelType:  The type stored with an entity (cell, point, or
    boundary).

    TCellTraits:  Type information for cell. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI2FFULULULPF2VCULPF2

# Register itkCellInterfaceFCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_swigregister(itkCellInterfaceFCTI2FFULULULPF2VCULPF2)

class itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer self) -> itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer
        __init__(itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer self, itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer p) -> itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer
        __init__(itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer self, itkCellInterfaceFCTI2FFULULULPF2VCULPF2 p, bool takeOwnership) -> itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer
        """
        _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_swigregister(itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer)

class itkCellInterfaceFCTI3FFULULULPF3MCULPF3(object):
    r"""


    An abstract interface for cells.

    Define an abstract interface for cells. Actual cell types derive from
    this class.

    Parameters:
    -----------

    TPixelType:  The type stored with an entity (cell, point, or
    boundary).

    TCellTraits:  Type information for cell. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI3FFULULULPF3MCULPF3

# Register itkCellInterfaceFCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceFCTI3FFULULULPF3MCULPF3)

class itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer self) -> itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer
        __init__(itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer self, itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer p) -> itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer
        __init__(itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer self, itkCellInterfaceFCTI3FFULULULPF3MCULPF3 p, bool takeOwnership) -> itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer
        """
        _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_swigregister(itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer)

class itkCellInterfaceFCTI3FFULULULPF3VCULPF3(object):
    r"""


    An abstract interface for cells.

    Define an abstract interface for cells. Actual cell types derive from
    this class.

    Parameters:
    -----------

    TPixelType:  The type stored with an entity (cell, point, or
    boundary).

    TCellTraits:  Type information for cell. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI3FFULULULPF3VCULPF3

# Register itkCellInterfaceFCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_swigregister(itkCellInterfaceFCTI3FFULULULPF3VCULPF3)

class itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer self) -> itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer
        __init__(itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer self, itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer p) -> itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer
        __init__(itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer self, itkCellInterfaceFCTI3FFULULULPF3VCULPF3 p, bool takeOwnership) -> itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer
        """
        _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_swigregister(itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer)

class itkCellInterfaceSSCTI2FFULULULPF2MCULPF2(object):
    r"""


    An abstract interface for cells.

    Define an abstract interface for cells. Actual cell types derive from
    this class.

    Parameters:
    -----------

    TPixelType:  The type stored with an entity (cell, point, or
    boundary).

    TCellTraits:  Type information for cell. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI2FFULULULPF2MCULPF2

# Register itkCellInterfaceSSCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceSSCTI2FFULULULPF2MCULPF2)

class itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer self) -> itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer
        __init__(itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer self, itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer p) -> itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer
        __init__(itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer self, itkCellInterfaceSSCTI2FFULULULPF2MCULPF2 p, bool takeOwnership) -> itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer
        """
        _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_swigregister(itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer)

class itkCellInterfaceSSCTI2FFULULULPF2VCULPF2(object):
    r"""


    An abstract interface for cells.

    Define an abstract interface for cells. Actual cell types derive from
    this class.

    Parameters:
    -----------

    TPixelType:  The type stored with an entity (cell, point, or
    boundary).

    TCellTraits:  Type information for cell. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI2FFULULULPF2VCULPF2

# Register itkCellInterfaceSSCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_swigregister(itkCellInterfaceSSCTI2FFULULULPF2VCULPF2)

class itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer self) -> itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer
        __init__(itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer self, itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer p) -> itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer
        __init__(itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer self, itkCellInterfaceSSCTI2FFULULULPF2VCULPF2 p, bool takeOwnership) -> itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer
        """
        _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_swigregister(itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer)

class itkCellInterfaceSSCTI3FFULULULPF3MCULPF3(object):
    r"""


    An abstract interface for cells.

    Define an abstract interface for cells. Actual cell types derive from
    this class.

    Parameters:
    -----------

    TPixelType:  The type stored with an entity (cell, point, or
    boundary).

    TCellTraits:  Type information for cell. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI3FFULULULPF3MCULPF3

# Register itkCellInterfaceSSCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceSSCTI3FFULULULPF3MCULPF3)

class itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer self) -> itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer
        __init__(itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer self, itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer p) -> itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer
        __init__(itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer self, itkCellInterfaceSSCTI3FFULULULPF3MCULPF3 p, bool takeOwnership) -> itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer
        """
        _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_swigregister(itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer)

class itkCellInterfaceSSCTI3FFULULULPF3VCULPF3(object):
    r"""


    An abstract interface for cells.

    Define an abstract interface for cells. Actual cell types derive from
    this class.

    Parameters:
    -----------

    TPixelType:  The type stored with an entity (cell, point, or
    boundary).

    TCellTraits:  Type information for cell. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI3FFULULULPF3VCULPF3

# Register itkCellInterfaceSSCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_swigregister(itkCellInterfaceSSCTI3FFULULULPF3VCULPF3)

class itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer self) -> itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer
        __init__(itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer self, itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer p) -> itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer
        __init__(itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer self, itkCellInterfaceSSCTI3FFULULULPF3VCULPF3 p, bool takeOwnership) -> itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer
        """
        _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_swigregister(itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer)

class itkCellInterfaceUCCTI2FFULULULPF2MCULPF2(object):
    r"""


    An abstract interface for cells.

    Define an abstract interface for cells. Actual cell types derive from
    this class.

    Parameters:
    -----------

    TPixelType:  The type stored with an entity (cell, point, or
    boundary).

    TCellTraits:  Type information for cell. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI2FFULULULPF2MCULPF2

# Register itkCellInterfaceUCCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceUCCTI2FFULULULPF2MCULPF2)

class itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer self) -> itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer
        __init__(itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer self, itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer p) -> itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer
        __init__(itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer self, itkCellInterfaceUCCTI2FFULULULPF2MCULPF2 p, bool takeOwnership) -> itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer
        """
        _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_swigregister(itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer)

class itkCellInterfaceUCCTI2FFULULULPF2VCULPF2(object):
    r"""


    An abstract interface for cells.

    Define an abstract interface for cells. Actual cell types derive from
    this class.

    Parameters:
    -----------

    TPixelType:  The type stored with an entity (cell, point, or
    boundary).

    TCellTraits:  Type information for cell. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI2FFULULULPF2VCULPF2

# Register itkCellInterfaceUCCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_swigregister(itkCellInterfaceUCCTI2FFULULULPF2VCULPF2)

class itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer self) -> itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer
        __init__(itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer self, itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer p) -> itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer
        __init__(itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer self, itkCellInterfaceUCCTI2FFULULULPF2VCULPF2 p, bool takeOwnership) -> itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer
        """
        _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_swigregister(itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer)

class itkCellInterfaceUCCTI3FFULULULPF3MCULPF3(object):
    r"""


    An abstract interface for cells.

    Define an abstract interface for cells. Actual cell types derive from
    this class.

    Parameters:
    -----------

    TPixelType:  The type stored with an entity (cell, point, or
    boundary).

    TCellTraits:  Type information for cell. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI3FFULULULPF3MCULPF3

# Register itkCellInterfaceUCCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceUCCTI3FFULULULPF3MCULPF3)

class itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer self) -> itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer
        __init__(itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer self, itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer p) -> itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer
        __init__(itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer self, itkCellInterfaceUCCTI3FFULULULPF3MCULPF3 p, bool takeOwnership) -> itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer
        """
        _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_swigregister(itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer)

class itkCellInterfaceUCCTI3FFULULULPF3VCULPF3(object):
    r"""


    An abstract interface for cells.

    Define an abstract interface for cells. Actual cell types derive from
    this class.

    Parameters:
    -----------

    TPixelType:  The type stored with an entity (cell, point, or
    boundary).

    TCellTraits:  Type information for cell. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI3FFULULULPF3VCULPF3

# Register itkCellInterfaceUCCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_swigregister(itkCellInterfaceUCCTI3FFULULULPF3VCULPF3)

class itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer self) -> itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer
        __init__(itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer self, itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer p) -> itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer
        __init__(itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer self, itkCellInterfaceUCCTI3FFULULULPF3VCULPF3 p, bool takeOwnership) -> itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer
        """
        _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_swigregister(itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer)

class itkCellInterfaceUSCTI2FFULULULPF2MCULPF2(object):
    r"""


    An abstract interface for cells.

    Define an abstract interface for cells. Actual cell types derive from
    this class.

    Parameters:
    -----------

    TPixelType:  The type stored with an entity (cell, point, or
    boundary).

    TCellTraits:  Type information for cell. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI2FFULULULPF2MCULPF2

# Register itkCellInterfaceUSCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceUSCTI2FFULULULPF2MCULPF2)

class itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer self) -> itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer
        __init__(itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer self, itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer p) -> itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer
        __init__(itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer self, itkCellInterfaceUSCTI2FFULULULPF2MCULPF2 p, bool takeOwnership) -> itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer
        """
        _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_swigregister(itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer)

class itkCellInterfaceUSCTI2FFULULULPF2VCULPF2(object):
    r"""


    An abstract interface for cells.

    Define an abstract interface for cells. Actual cell types derive from
    this class.

    Parameters:
    -----------

    TPixelType:  The type stored with an entity (cell, point, or
    boundary).

    TCellTraits:  Type information for cell. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI2FFULULULPF2VCULPF2

# Register itkCellInterfaceUSCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_swigregister(itkCellInterfaceUSCTI2FFULULULPF2VCULPF2)

class itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer self) -> itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer
        __init__(itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer self, itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer p) -> itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer
        __init__(itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer self, itkCellInterfaceUSCTI2FFULULULPF2VCULPF2 p, bool takeOwnership) -> itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer
        """
        _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_swigregister(itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer)

class itkCellInterfaceUSCTI3FFULULULPF3MCULPF3(object):
    r"""


    An abstract interface for cells.

    Define an abstract interface for cells. Actual cell types derive from
    this class.

    Parameters:
    -----------

    TPixelType:  The type stored with an entity (cell, point, or
    boundary).

    TCellTraits:  Type information for cell. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI3FFULULULPF3MCULPF3

# Register itkCellInterfaceUSCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceUSCTI3FFULULULPF3MCULPF3)

class itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer self) -> itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer
        __init__(itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer self, itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer p) -> itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer
        __init__(itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer self, itkCellInterfaceUSCTI3FFULULULPF3MCULPF3 p, bool takeOwnership) -> itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer
        """
        _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_swigregister(itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer)

class itkCellInterfaceUSCTI3FFULULULPF3VCULPF3(object):
    r"""


    An abstract interface for cells.

    Define an abstract interface for cells. Actual cell types derive from
    this class.

    Parameters:
    -----------

    TPixelType:  The type stored with an entity (cell, point, or
    boundary).

    TCellTraits:  Type information for cell. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI3FFULULULPF3VCULPF3

# Register itkCellInterfaceUSCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_swigregister(itkCellInterfaceUSCTI3FFULULULPF3VCULPF3)

class itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer self) -> itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer
        __init__(itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer self, itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer p) -> itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer
        __init__(itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer self, itkCellInterfaceUSCTI3FFULULULPF3VCULPF3 p, bool takeOwnership) -> itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer
        """
        _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_swigregister(itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer)

class itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkLightObject):
    r"""


    Abstract interface for a visitor class that can visit the cells in a
    Mesh.

    Define the abstract interface for a visitor class that can visit the
    cells in a Mesh. This follows the Visitor Design Pattern. To make this
    class easier to use, the CellInterfaceVisitorImplementation is
    provided as a templated class to implement the pure virtual functions
    of CellInterfaceVisitor. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    VisitFromCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2_VisitFromCell)
    GetCellTopologyId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2_GetCellTopologyId)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2_cast)

# Register itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2)
itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2_cast = _itkMeshBasePython.itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2_cast

class itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkLightObject):
    r"""


    Abstract interface for a visitor class that can visit the cells in a
    Mesh.

    Define the abstract interface for a visitor class that can visit the
    cells in a Mesh. This follows the Visitor Design Pattern. To make this
    class easier to use, the CellInterfaceVisitorImplementation is
    provided as a templated class to implement the pure virtual functions
    of CellInterfaceVisitor. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    VisitFromCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3_VisitFromCell)
    GetCellTopologyId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3_GetCellTopologyId)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3_cast)

# Register itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3)
itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3_cast = _itkMeshBasePython.itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3_cast

class itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkLightObject):
    r"""


    Abstract interface for a visitor class that can visit the cells in a
    Mesh.

    Define the abstract interface for a visitor class that can visit the
    cells in a Mesh. This follows the Visitor Design Pattern. To make this
    class easier to use, the CellInterfaceVisitorImplementation is
    provided as a templated class to implement the pure virtual functions
    of CellInterfaceVisitor. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    VisitFromCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2_VisitFromCell)
    GetCellTopologyId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2_GetCellTopologyId)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2_cast)

# Register itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2)
itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2_cast = _itkMeshBasePython.itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2_cast

class itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkLightObject):
    r"""


    Abstract interface for a visitor class that can visit the cells in a
    Mesh.

    Define the abstract interface for a visitor class that can visit the
    cells in a Mesh. This follows the Visitor Design Pattern. To make this
    class easier to use, the CellInterfaceVisitorImplementation is
    provided as a templated class to implement the pure virtual functions
    of CellInterfaceVisitor. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    VisitFromCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3_VisitFromCell)
    GetCellTopologyId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3_GetCellTopologyId)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3_cast)

# Register itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3)
itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3_cast = _itkMeshBasePython.itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3_cast

class itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkLightObject):
    r"""


    Abstract interface for a visitor class that can visit the cells in a
    Mesh.

    Define the abstract interface for a visitor class that can visit the
    cells in a Mesh. This follows the Visitor Design Pattern. To make this
    class easier to use, the CellInterfaceVisitorImplementation is
    provided as a templated class to implement the pure virtual functions
    of CellInterfaceVisitor. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    VisitFromCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2_VisitFromCell)
    GetCellTopologyId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2_GetCellTopologyId)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2_cast)

# Register itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2)
itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2_cast = _itkMeshBasePython.itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2_cast

class itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkLightObject):
    r"""


    Abstract interface for a visitor class that can visit the cells in a
    Mesh.

    Define the abstract interface for a visitor class that can visit the
    cells in a Mesh. This follows the Visitor Design Pattern. To make this
    class easier to use, the CellInterfaceVisitorImplementation is
    provided as a templated class to implement the pure virtual functions
    of CellInterfaceVisitor. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    VisitFromCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3_VisitFromCell)
    GetCellTopologyId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3_GetCellTopologyId)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3_cast)

# Register itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3)
itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3_cast = _itkMeshBasePython.itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3_cast

class itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkLightObject):
    r"""


    Abstract interface for a visitor class that can visit the cells in a
    Mesh.

    Define the abstract interface for a visitor class that can visit the
    cells in a Mesh. This follows the Visitor Design Pattern. To make this
    class easier to use, the CellInterfaceVisitorImplementation is
    provided as a templated class to implement the pure virtual functions
    of CellInterfaceVisitor. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    VisitFromCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2_VisitFromCell)
    GetCellTopologyId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2_GetCellTopologyId)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2_cast)

# Register itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2)
itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2_cast = _itkMeshBasePython.itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2_cast

class itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkLightObject):
    r"""


    Abstract interface for a visitor class that can visit the cells in a
    Mesh.

    Define the abstract interface for a visitor class that can visit the
    cells in a Mesh. This follows the Visitor Design Pattern. To make this
    class easier to use, the CellInterfaceVisitorImplementation is
    provided as a templated class to implement the pure virtual functions
    of CellInterfaceVisitor. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    VisitFromCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3_VisitFromCell)
    GetCellTopologyId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3_GetCellTopologyId)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3_cast)

# Register itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3)
itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3_cast = _itkMeshBasePython.itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3_cast

class itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkLightObject):
    r"""


    Abstract interface for a visitor class that can visit the cells in a
    Mesh.

    Define the abstract interface for a visitor class that can visit the
    cells in a Mesh. This follows the Visitor Design Pattern. To make this
    class easier to use, the CellInterfaceVisitorImplementation is
    provided as a templated class to implement the pure virtual functions
    of CellInterfaceVisitor. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    VisitFromCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2_VisitFromCell)
    GetCellTopologyId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2_GetCellTopologyId)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2_cast)

# Register itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2)
itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2_cast = _itkMeshBasePython.itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2_cast

class itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkLightObject):
    r"""


    Abstract interface for a visitor class that can visit the cells in a
    Mesh.

    Define the abstract interface for a visitor class that can visit the
    cells in a Mesh. This follows the Visitor Design Pattern. To make this
    class easier to use, the CellInterfaceVisitorImplementation is
    provided as a templated class to implement the pure virtual functions
    of CellInterfaceVisitor. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    VisitFromCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3_VisitFromCell)
    GetCellTopologyId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3_GetCellTopologyId)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3_cast)

# Register itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3)
itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3_cast = _itkMeshBasePython.itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3_cast

class itkCellTraitsInfo2FFULULULPF2MCULPF2(object):
    r"""Proxy of C++ itkCellTraitsInfo2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkCellTraitsInfo2FFULULULPF2MCULPF2 self) -> itkCellTraitsInfo2FFULULULPF2MCULPF2
        __init__(itkCellTraitsInfo2FFULULULPF2MCULPF2 self, itkCellTraitsInfo2FFULULULPF2MCULPF2 arg0) -> itkCellTraitsInfo2FFULULULPF2MCULPF2
        """
        _itkMeshBasePython.itkCellTraitsInfo2FFULULULPF2MCULPF2_swiginit(self, _itkMeshBasePython.new_itkCellTraitsInfo2FFULULULPF2MCULPF2(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellTraitsInfo2FFULULULPF2MCULPF2

# Register itkCellTraitsInfo2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellTraitsInfo2FFULULULPF2MCULPF2_swigregister(itkCellTraitsInfo2FFULULULPF2MCULPF2)

class itkCellTraitsInfo2FFULULULPF2VCULPF2(object):
    r"""Proxy of C++ itkCellTraitsInfo2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkCellTraitsInfo2FFULULULPF2VCULPF2 self) -> itkCellTraitsInfo2FFULULULPF2VCULPF2
        __init__(itkCellTraitsInfo2FFULULULPF2VCULPF2 self, itkCellTraitsInfo2FFULULULPF2VCULPF2 arg0) -> itkCellTraitsInfo2FFULULULPF2VCULPF2
        """
        _itkMeshBasePython.itkCellTraitsInfo2FFULULULPF2VCULPF2_swiginit(self, _itkMeshBasePython.new_itkCellTraitsInfo2FFULULULPF2VCULPF2(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellTraitsInfo2FFULULULPF2VCULPF2

# Register itkCellTraitsInfo2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellTraitsInfo2FFULULULPF2VCULPF2_swigregister(itkCellTraitsInfo2FFULULULPF2VCULPF2)

class itkCellTraitsInfo3FFULULULPF3MCULPF3(object):
    r"""Proxy of C++ itkCellTraitsInfo3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkCellTraitsInfo3FFULULULPF3MCULPF3 self) -> itkCellTraitsInfo3FFULULULPF3MCULPF3
        __init__(itkCellTraitsInfo3FFULULULPF3MCULPF3 self, itkCellTraitsInfo3FFULULULPF3MCULPF3 arg0) -> itkCellTraitsInfo3FFULULULPF3MCULPF3
        """
        _itkMeshBasePython.itkCellTraitsInfo3FFULULULPF3MCULPF3_swiginit(self, _itkMeshBasePython.new_itkCellTraitsInfo3FFULULULPF3MCULPF3(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellTraitsInfo3FFULULULPF3MCULPF3

# Register itkCellTraitsInfo3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellTraitsInfo3FFULULULPF3MCULPF3_swigregister(itkCellTraitsInfo3FFULULULPF3MCULPF3)

class itkCellTraitsInfo3FFULULULPF3VCULPF3(object):
    r"""Proxy of C++ itkCellTraitsInfo3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkCellTraitsInfo3FFULULULPF3VCULPF3 self) -> itkCellTraitsInfo3FFULULULPF3VCULPF3
        __init__(itkCellTraitsInfo3FFULULULPF3VCULPF3 self, itkCellTraitsInfo3FFULULULPF3VCULPF3 arg0) -> itkCellTraitsInfo3FFULULULPF3VCULPF3
        """
        _itkMeshBasePython.itkCellTraitsInfo3FFULULULPF3VCULPF3_swiginit(self, _itkMeshBasePython.new_itkCellTraitsInfo3FFULULULPF3VCULPF3(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellTraitsInfo3FFULULULPF3VCULPF3

# Register itkCellTraitsInfo3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellTraitsInfo3FFULULULPF3VCULPF3_swigregister(itkCellTraitsInfo3FFULULULPF3VCULPF3)


def itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_New():
    return itkMapContainerULCIDCTI2FFULULULPF2MCULPF2.New()

class itkMapContainerULCIDCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""


    A wrapper of the STL "map" container.

    Define a front-end to the STL "map" container that conforms to the
    IndexedContainerInterface. This is a full-fleged Object, so there are
    events, modification time, debug, and reference count information.

    Parameters:
    -----------

    TElementIdentifier:  A type that shall be used to index the container.
    It must have a < operator defined for ordering.

    TElement:  The element type stored in the container. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkMapContainerULCIDCTI2FFULULULPF2MCULPF2 self) -> itkMapContainerULCIDCTI2FFULULULPF2MCULPF2
        __init__(itkMapContainerULCIDCTI2FFULULULPF2MCULPF2 self, std::less< unsigned long > const & comp) -> itkMapContainerULCIDCTI2FFULULULPF2MCULPF2


        A wrapper of the STL "map" container.

        Define a front-end to the STL "map" container that conforms to the
        IndexedContainerInterface. This is a full-fleged Object, so there are
        events, modification time, debug, and reference count information.

        Parameters:
        -----------

        TElementIdentifier:  A type that shall be used to index the container.
        It must have a < operator defined for ordering.

        TElement:  The element type stored in the container. 
        """
        _itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIDCTI2FFULULULPF2MCULPF2(*args))
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIDCTI2FFULULULPF2MCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIDCTI2FFULULULPF2MCULPF2

        Create a new object of the class itkMapContainerULCIDCTI2FFULULULPF2MCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIDCTI2FFULULULPF2MCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIDCTI2FFULULULPF2MCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIDCTI2FFULULULPF2MCULPF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIDCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_swigregister(itkMapContainerULCIDCTI2FFULULULPF2MCULPF2)
itkMapContainerULCIDCTI2FFULULULPF2MCULPF2___New_orig__ = _itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2___New_orig__
itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_cast = _itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_cast


def itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_New():
    return itkMapContainerULCIDCTI3FFULULULPF3MCULPF3.New()

class itkMapContainerULCIDCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""


    A wrapper of the STL "map" container.

    Define a front-end to the STL "map" container that conforms to the
    IndexedContainerInterface. This is a full-fleged Object, so there are
    events, modification time, debug, and reference count information.

    Parameters:
    -----------

    TElementIdentifier:  A type that shall be used to index the container.
    It must have a < operator defined for ordering.

    TElement:  The element type stored in the container. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkMapContainerULCIDCTI3FFULULULPF3MCULPF3 self) -> itkMapContainerULCIDCTI3FFULULULPF3MCULPF3
        __init__(itkMapContainerULCIDCTI3FFULULULPF3MCULPF3 self, std::less< unsigned long > const & comp) -> itkMapContainerULCIDCTI3FFULULULPF3MCULPF3


        A wrapper of the STL "map" container.

        Define a front-end to the STL "map" container that conforms to the
        IndexedContainerInterface. This is a full-fleged Object, so there are
        events, modification time, debug, and reference count information.

        Parameters:
        -----------

        TElementIdentifier:  A type that shall be used to index the container.
        It must have a < operator defined for ordering.

        TElement:  The element type stored in the container. 
        """
        _itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIDCTI3FFULULULPF3MCULPF3(*args))
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIDCTI3FFULULULPF3MCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIDCTI3FFULULULPF3MCULPF3

        Create a new object of the class itkMapContainerULCIDCTI3FFULULULPF3MCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIDCTI3FFULULULPF3MCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIDCTI3FFULULULPF3MCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIDCTI3FFULULULPF3MCULPF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIDCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_swigregister(itkMapContainerULCIDCTI3FFULULULPF3MCULPF3)
itkMapContainerULCIDCTI3FFULULULPF3MCULPF3___New_orig__ = _itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3___New_orig__
itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_cast = _itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_cast


def itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_New():
    return itkMapContainerULCIFCTI2FFULULULPF2MCULPF2.New()

class itkMapContainerULCIFCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""


    A wrapper of the STL "map" container.

    Define a front-end to the STL "map" container that conforms to the
    IndexedContainerInterface. This is a full-fleged Object, so there are
    events, modification time, debug, and reference count information.

    Parameters:
    -----------

    TElementIdentifier:  A type that shall be used to index the container.
    It must have a < operator defined for ordering.

    TElement:  The element type stored in the container. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkMapContainerULCIFCTI2FFULULULPF2MCULPF2 self) -> itkMapContainerULCIFCTI2FFULULULPF2MCULPF2
        __init__(itkMapContainerULCIFCTI2FFULULULPF2MCULPF2 self, std::less< unsigned long > const & comp) -> itkMapContainerULCIFCTI2FFULULULPF2MCULPF2


        A wrapper of the STL "map" container.

        Define a front-end to the STL "map" container that conforms to the
        IndexedContainerInterface. This is a full-fleged Object, so there are
        events, modification time, debug, and reference count information.

        Parameters:
        -----------

        TElementIdentifier:  A type that shall be used to index the container.
        It must have a < operator defined for ordering.

        TElement:  The element type stored in the container. 
        """
        _itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIFCTI2FFULULULPF2MCULPF2(*args))
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIFCTI2FFULULULPF2MCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIFCTI2FFULULULPF2MCULPF2

        Create a new object of the class itkMapContainerULCIFCTI2FFULULULPF2MCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIFCTI2FFULULULPF2MCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIFCTI2FFULULULPF2MCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIFCTI2FFULULULPF2MCULPF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIFCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_swigregister(itkMapContainerULCIFCTI2FFULULULPF2MCULPF2)
itkMapContainerULCIFCTI2FFULULULPF2MCULPF2___New_orig__ = _itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2___New_orig__
itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_cast = _itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_cast


def itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_New():
    return itkMapContainerULCIFCTI3FFULULULPF3MCULPF3.New()

class itkMapContainerULCIFCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""


    A wrapper of the STL "map" container.

    Define a front-end to the STL "map" container that conforms to the
    IndexedContainerInterface. This is a full-fleged Object, so there are
    events, modification time, debug, and reference count information.

    Parameters:
    -----------

    TElementIdentifier:  A type that shall be used to index the container.
    It must have a < operator defined for ordering.

    TElement:  The element type stored in the container. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkMapContainerULCIFCTI3FFULULULPF3MCULPF3 self) -> itkMapContainerULCIFCTI3FFULULULPF3MCULPF3
        __init__(itkMapContainerULCIFCTI3FFULULULPF3MCULPF3 self, std::less< unsigned long > const & comp) -> itkMapContainerULCIFCTI3FFULULULPF3MCULPF3


        A wrapper of the STL "map" container.

        Define a front-end to the STL "map" container that conforms to the
        IndexedContainerInterface. This is a full-fleged Object, so there are
        events, modification time, debug, and reference count information.

        Parameters:
        -----------

        TElementIdentifier:  A type that shall be used to index the container.
        It must have a < operator defined for ordering.

        TElement:  The element type stored in the container. 
        """
        _itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIFCTI3FFULULULPF3MCULPF3(*args))
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIFCTI3FFULULULPF3MCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIFCTI3FFULULULPF3MCULPF3

        Create a new object of the class itkMapContainerULCIFCTI3FFULULULPF3MCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIFCTI3FFULULULPF3MCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIFCTI3FFULULULPF3MCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIFCTI3FFULULULPF3MCULPF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIFCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_swigregister(itkMapContainerULCIFCTI3FFULULULPF3MCULPF3)
itkMapContainerULCIFCTI3FFULULULPF3MCULPF3___New_orig__ = _itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3___New_orig__
itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_cast = _itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_cast


def itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_New():
    return itkMapContainerULCISSCTI2FFULULULPF2MCULPF2.New()

class itkMapContainerULCISSCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""


    A wrapper of the STL "map" container.

    Define a front-end to the STL "map" container that conforms to the
    IndexedContainerInterface. This is a full-fleged Object, so there are
    events, modification time, debug, and reference count information.

    Parameters:
    -----------

    TElementIdentifier:  A type that shall be used to index the container.
    It must have a < operator defined for ordering.

    TElement:  The element type stored in the container. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkMapContainerULCISSCTI2FFULULULPF2MCULPF2 self) -> itkMapContainerULCISSCTI2FFULULULPF2MCULPF2
        __init__(itkMapContainerULCISSCTI2FFULULULPF2MCULPF2 self, std::less< unsigned long > const & comp) -> itkMapContainerULCISSCTI2FFULULULPF2MCULPF2


        A wrapper of the STL "map" container.

        Define a front-end to the STL "map" container that conforms to the
        IndexedContainerInterface. This is a full-fleged Object, so there are
        events, modification time, debug, and reference count information.

        Parameters:
        -----------

        TElementIdentifier:  A type that shall be used to index the container.
        It must have a < operator defined for ordering.

        TElement:  The element type stored in the container. 
        """
        _itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCISSCTI2FFULULULPF2MCULPF2(*args))
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCISSCTI2FFULULULPF2MCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCISSCTI2FFULULULPF2MCULPF2

        Create a new object of the class itkMapContainerULCISSCTI2FFULULULPF2MCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCISSCTI2FFULULULPF2MCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCISSCTI2FFULULULPF2MCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCISSCTI2FFULULULPF2MCULPF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCISSCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_swigregister(itkMapContainerULCISSCTI2FFULULULPF2MCULPF2)
itkMapContainerULCISSCTI2FFULULULPF2MCULPF2___New_orig__ = _itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2___New_orig__
itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_cast = _itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_cast


def itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_New():
    return itkMapContainerULCISSCTI3FFULULULPF3MCULPF3.New()

class itkMapContainerULCISSCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""


    A wrapper of the STL "map" container.

    Define a front-end to the STL "map" container that conforms to the
    IndexedContainerInterface. This is a full-fleged Object, so there are
    events, modification time, debug, and reference count information.

    Parameters:
    -----------

    TElementIdentifier:  A type that shall be used to index the container.
    It must have a < operator defined for ordering.

    TElement:  The element type stored in the container. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkMapContainerULCISSCTI3FFULULULPF3MCULPF3 self) -> itkMapContainerULCISSCTI3FFULULULPF3MCULPF3
        __init__(itkMapContainerULCISSCTI3FFULULULPF3MCULPF3 self, std::less< unsigned long > const & comp) -> itkMapContainerULCISSCTI3FFULULULPF3MCULPF3


        A wrapper of the STL "map" container.

        Define a front-end to the STL "map" container that conforms to the
        IndexedContainerInterface. This is a full-fleged Object, so there are
        events, modification time, debug, and reference count information.

        Parameters:
        -----------

        TElementIdentifier:  A type that shall be used to index the container.
        It must have a < operator defined for ordering.

        TElement:  The element type stored in the container. 
        """
        _itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCISSCTI3FFULULULPF3MCULPF3(*args))
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCISSCTI3FFULULULPF3MCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCISSCTI3FFULULULPF3MCULPF3

        Create a new object of the class itkMapContainerULCISSCTI3FFULULULPF3MCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCISSCTI3FFULULULPF3MCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCISSCTI3FFULULULPF3MCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCISSCTI3FFULULULPF3MCULPF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCISSCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_swigregister(itkMapContainerULCISSCTI3FFULULULPF3MCULPF3)
itkMapContainerULCISSCTI3FFULULULPF3MCULPF3___New_orig__ = _itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3___New_orig__
itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_cast = _itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_cast


def itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_New():
    return itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2.New()

class itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""


    A wrapper of the STL "map" container.

    Define a front-end to the STL "map" container that conforms to the
    IndexedContainerInterface. This is a full-fleged Object, so there are
    events, modification time, debug, and reference count information.

    Parameters:
    -----------

    TElementIdentifier:  A type that shall be used to index the container.
    It must have a < operator defined for ordering.

    TElement:  The element type stored in the container. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2 self) -> itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2
        __init__(itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2 self, std::less< unsigned long > const & comp) -> itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2


        A wrapper of the STL "map" container.

        Define a front-end to the STL "map" container that conforms to the
        IndexedContainerInterface. This is a full-fleged Object, so there are
        events, modification time, debug, and reference count information.

        Parameters:
        -----------

        TElementIdentifier:  A type that shall be used to index the container.
        It must have a < operator defined for ordering.

        TElement:  The element type stored in the container. 
        """
        _itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2(*args))
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2

        Create a new object of the class itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_swigregister(itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2)
itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2___New_orig__ = _itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2___New_orig__
itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_cast = _itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_cast


def itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_New():
    return itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3.New()

class itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""


    A wrapper of the STL "map" container.

    Define a front-end to the STL "map" container that conforms to the
    IndexedContainerInterface. This is a full-fleged Object, so there are
    events, modification time, debug, and reference count information.

    Parameters:
    -----------

    TElementIdentifier:  A type that shall be used to index the container.
    It must have a < operator defined for ordering.

    TElement:  The element type stored in the container. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3 self) -> itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3
        __init__(itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3 self, std::less< unsigned long > const & comp) -> itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3


        A wrapper of the STL "map" container.

        Define a front-end to the STL "map" container that conforms to the
        IndexedContainerInterface. This is a full-fleged Object, so there are
        events, modification time, debug, and reference count information.

        Parameters:
        -----------

        TElementIdentifier:  A type that shall be used to index the container.
        It must have a < operator defined for ordering.

        TElement:  The element type stored in the container. 
        """
        _itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3(*args))
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3

        Create a new object of the class itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_swigregister(itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3)
itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3___New_orig__ = _itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3___New_orig__
itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_cast = _itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_cast


def itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_New():
    return itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2.New()

class itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""


    A wrapper of the STL "map" container.

    Define a front-end to the STL "map" container that conforms to the
    IndexedContainerInterface. This is a full-fleged Object, so there are
    events, modification time, debug, and reference count information.

    Parameters:
    -----------

    TElementIdentifier:  A type that shall be used to index the container.
    It must have a < operator defined for ordering.

    TElement:  The element type stored in the container. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2 self) -> itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2
        __init__(itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2 self, std::less< unsigned long > const & comp) -> itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2


        A wrapper of the STL "map" container.

        Define a front-end to the STL "map" container that conforms to the
        IndexedContainerInterface. This is a full-fleged Object, so there are
        events, modification time, debug, and reference count information.

        Parameters:
        -----------

        TElementIdentifier:  A type that shall be used to index the container.
        It must have a < operator defined for ordering.

        TElement:  The element type stored in the container. 
        """
        _itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2(*args))
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2

        Create a new object of the class itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_swigregister(itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2)
itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2___New_orig__ = _itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2___New_orig__
itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_cast = _itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_cast


def itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_New():
    return itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3.New()

class itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""


    A wrapper of the STL "map" container.

    Define a front-end to the STL "map" container that conforms to the
    IndexedContainerInterface. This is a full-fleged Object, so there are
    events, modification time, debug, and reference count information.

    Parameters:
    -----------

    TElementIdentifier:  A type that shall be used to index the container.
    It must have a < operator defined for ordering.

    TElement:  The element type stored in the container. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3 self) -> itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3
        __init__(itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3 self, std::less< unsigned long > const & comp) -> itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3


        A wrapper of the STL "map" container.

        Define a front-end to the STL "map" container that conforms to the
        IndexedContainerInterface. This is a full-fleged Object, so there are
        events, modification time, debug, and reference count information.

        Parameters:
        -----------

        TElementIdentifier:  A type that shall be used to index the container.
        It must have a < operator defined for ordering.

        TElement:  The element type stored in the container. 
        """
        _itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3(*args))
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3

        Create a new object of the class itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_swigregister(itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3)
itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3___New_orig__ = _itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3___New_orig__
itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_cast = _itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_cast


def itkMeshD2_New():
    return itkMeshD2.New()

class itkMeshD2(itk.itkPointSetPython.itkPointSetD2):
    r"""


    Implements the N-dimensional mesh structure.

    Overview  Mesh implements the N-dimensional mesh structure for ITK. It
    provides an API to perform operations on points, cells, boundaries,
    etc., but does not tie down the underlying implementation and storage.
    A "MeshTraits" structure is used to define the container and
    identifier types that will be used to access the mesh. See
    DefaultStaticMeshTraits for the set of type definitions needed. All
    types that are defined in the "MeshTraits" structure will have
    duplicate type alias in the resulting mesh itself.  Mesh is an
    adaptive, evolving structure. Typically points and cells are created,
    with the cells referring to their defining points. If additional
    topological information is required, then BuildCellLinks() is called
    and links from the points back to the cells that use them are created.
    This allows implicit topological information about the faces and edges
    of the cells to be determined. (For example, a "face" neighbor to a
    cell can be determined by intersection the sets of cells that use the
    points defining the face. This is an inherent assumption on the
    manifold relationship of the cells in the mesh.) In some cases, either
    because the mesh is non-manifold, because we wish to explicitly store
    information with the faces and edges of the mesh, or because
    performance requirements demand that boundaries are explicitly
    represented (the set intersection does not need to be performed); then
    Mesh can be further extended by adding explicit boundary assignments.

    Usage  Mesh has three template parameters. The first is the pixel
    type, or the type of data stored (optionally) with points, cells,
    and/or boundaries. The second is the geometric dimension of the points
    defining the mesh. This also limits the maximum topological dimension
    of the cells that can be inserted. The third template parameter is the
    "MeshTraits" structure controlling type information for the mesh.
    Most users will be happy with the defaults, and will not have to worry
    about this third argument.  One of the most important parts of using
    this mesh is how to create cells to insert into it. The cells for the
    mesh take two template parameters. The first is the pixel type, and
    should correspond exactly to that type given to the mesh. The second
    is a "CellTraits" which holds a sub-set of the "MeshTraits"
    structure definitions, and is also a member of them. Any cell which is
    to be inserted to a mesh should have MeshTraits::CellTraits as its
    second template parameter.

    Template parameters for Mesh:

    TPixelType = The type stored as data for an entity (cell, point, or
    boundary).

    TMeshTraits = Type information structure for the mesh.

    References No reference information is available.
    example{Core/Mesh/AddPointsAndEdges,Add Points And Edges}
    example{Core/Mesh/ConvertMeshToUnstructeredGrid,Convert Mesh To
    Unstructered Grid}
    example{Core/Mesh/WorkingWithPointAndCellData,Working With Point And
    Cell Data} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshD2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_SetCells)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshD2
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshD2_cast)

    def New(*args, **kargs):
        """New() -> itkMeshD2

        Create a new object of the class itkMeshD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshD2 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshD2_swigregister(itkMeshD2)
itkMeshD2___New_orig__ = _itkMeshBasePython.itkMeshD2___New_orig__
itkMeshD2_cast = _itkMeshBasePython.itkMeshD2_cast


def itkMeshD3_New():
    return itkMeshD3.New()

class itkMeshD3(itk.itkPointSetPython.itkPointSetD3):
    r"""


    Implements the N-dimensional mesh structure.

    Overview  Mesh implements the N-dimensional mesh structure for ITK. It
    provides an API to perform operations on points, cells, boundaries,
    etc., but does not tie down the underlying implementation and storage.
    A "MeshTraits" structure is used to define the container and
    identifier types that will be used to access the mesh. See
    DefaultStaticMeshTraits for the set of type definitions needed. All
    types that are defined in the "MeshTraits" structure will have
    duplicate type alias in the resulting mesh itself.  Mesh is an
    adaptive, evolving structure. Typically points and cells are created,
    with the cells referring to their defining points. If additional
    topological information is required, then BuildCellLinks() is called
    and links from the points back to the cells that use them are created.
    This allows implicit topological information about the faces and edges
    of the cells to be determined. (For example, a "face" neighbor to a
    cell can be determined by intersection the sets of cells that use the
    points defining the face. This is an inherent assumption on the
    manifold relationship of the cells in the mesh.) In some cases, either
    because the mesh is non-manifold, because we wish to explicitly store
    information with the faces and edges of the mesh, or because
    performance requirements demand that boundaries are explicitly
    represented (the set intersection does not need to be performed); then
    Mesh can be further extended by adding explicit boundary assignments.

    Usage  Mesh has three template parameters. The first is the pixel
    type, or the type of data stored (optionally) with points, cells,
    and/or boundaries. The second is the geometric dimension of the points
    defining the mesh. This also limits the maximum topological dimension
    of the cells that can be inserted. The third template parameter is the
    "MeshTraits" structure controlling type information for the mesh.
    Most users will be happy with the defaults, and will not have to worry
    about this third argument.  One of the most important parts of using
    this mesh is how to create cells to insert into it. The cells for the
    mesh take two template parameters. The first is the pixel type, and
    should correspond exactly to that type given to the mesh. The second
    is a "CellTraits" which holds a sub-set of the "MeshTraits"
    structure definitions, and is also a member of them. Any cell which is
    to be inserted to a mesh should have MeshTraits::CellTraits as its
    second template parameter.

    Template parameters for Mesh:

    TPixelType = The type stored as data for an entity (cell, point, or
    boundary).

    TMeshTraits = Type information structure for the mesh.

    References No reference information is available.
    example{Core/Mesh/AddPointsAndEdges,Add Points And Edges}
    example{Core/Mesh/ConvertMeshToUnstructeredGrid,Convert Mesh To
    Unstructered Grid}
    example{Core/Mesh/WorkingWithPointAndCellData,Working With Point And
    Cell Data} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshD3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_SetCells)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshD3
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshD3_cast)

    def New(*args, **kargs):
        """New() -> itkMeshD3

        Create a new object of the class itkMeshD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshD3 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshD3_swigregister(itkMeshD3)
itkMeshD3___New_orig__ = _itkMeshBasePython.itkMeshD3___New_orig__
itkMeshD3_cast = _itkMeshBasePython.itkMeshD3_cast


def itkMeshF2_New():
    return itkMeshF2.New()

class itkMeshF2(itk.itkPointSetPython.itkPointSetF2):
    r"""


    Implements the N-dimensional mesh structure.

    Overview  Mesh implements the N-dimensional mesh structure for ITK. It
    provides an API to perform operations on points, cells, boundaries,
    etc., but does not tie down the underlying implementation and storage.
    A "MeshTraits" structure is used to define the container and
    identifier types that will be used to access the mesh. See
    DefaultStaticMeshTraits for the set of type definitions needed. All
    types that are defined in the "MeshTraits" structure will have
    duplicate type alias in the resulting mesh itself.  Mesh is an
    adaptive, evolving structure. Typically points and cells are created,
    with the cells referring to their defining points. If additional
    topological information is required, then BuildCellLinks() is called
    and links from the points back to the cells that use them are created.
    This allows implicit topological information about the faces and edges
    of the cells to be determined. (For example, a "face" neighbor to a
    cell can be determined by intersection the sets of cells that use the
    points defining the face. This is an inherent assumption on the
    manifold relationship of the cells in the mesh.) In some cases, either
    because the mesh is non-manifold, because we wish to explicitly store
    information with the faces and edges of the mesh, or because
    performance requirements demand that boundaries are explicitly
    represented (the set intersection does not need to be performed); then
    Mesh can be further extended by adding explicit boundary assignments.

    Usage  Mesh has three template parameters. The first is the pixel
    type, or the type of data stored (optionally) with points, cells,
    and/or boundaries. The second is the geometric dimension of the points
    defining the mesh. This also limits the maximum topological dimension
    of the cells that can be inserted. The third template parameter is the
    "MeshTraits" structure controlling type information for the mesh.
    Most users will be happy with the defaults, and will not have to worry
    about this third argument.  One of the most important parts of using
    this mesh is how to create cells to insert into it. The cells for the
    mesh take two template parameters. The first is the pixel type, and
    should correspond exactly to that type given to the mesh. The second
    is a "CellTraits" which holds a sub-set of the "MeshTraits"
    structure definitions, and is also a member of them. Any cell which is
    to be inserted to a mesh should have MeshTraits::CellTraits as its
    second template parameter.

    Template parameters for Mesh:

    TPixelType = The type stored as data for an entity (cell, point, or
    boundary).

    TMeshTraits = Type information structure for the mesh.

    References No reference information is available.
    example{Core/Mesh/AddPointsAndEdges,Add Points And Edges}
    example{Core/Mesh/ConvertMeshToUnstructeredGrid,Convert Mesh To
    Unstructered Grid}
    example{Core/Mesh/WorkingWithPointAndCellData,Working With Point And
    Cell Data} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_SetCells)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshF2_cast)

    def New(*args, **kargs):
        """New() -> itkMeshF2

        Create a new object of the class itkMeshF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshF2 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshF2_swigregister(itkMeshF2)
itkMeshF2___New_orig__ = _itkMeshBasePython.itkMeshF2___New_orig__
itkMeshF2_cast = _itkMeshBasePython.itkMeshF2_cast


def itkMeshF3_New():
    return itkMeshF3.New()

class itkMeshF3(itk.itkPointSetPython.itkPointSetF3):
    r"""


    Implements the N-dimensional mesh structure.

    Overview  Mesh implements the N-dimensional mesh structure for ITK. It
    provides an API to perform operations on points, cells, boundaries,
    etc., but does not tie down the underlying implementation and storage.
    A "MeshTraits" structure is used to define the container and
    identifier types that will be used to access the mesh. See
    DefaultStaticMeshTraits for the set of type definitions needed. All
    types that are defined in the "MeshTraits" structure will have
    duplicate type alias in the resulting mesh itself.  Mesh is an
    adaptive, evolving structure. Typically points and cells are created,
    with the cells referring to their defining points. If additional
    topological information is required, then BuildCellLinks() is called
    and links from the points back to the cells that use them are created.
    This allows implicit topological information about the faces and edges
    of the cells to be determined. (For example, a "face" neighbor to a
    cell can be determined by intersection the sets of cells that use the
    points defining the face. This is an inherent assumption on the
    manifold relationship of the cells in the mesh.) In some cases, either
    because the mesh is non-manifold, because we wish to explicitly store
    information with the faces and edges of the mesh, or because
    performance requirements demand that boundaries are explicitly
    represented (the set intersection does not need to be performed); then
    Mesh can be further extended by adding explicit boundary assignments.

    Usage  Mesh has three template parameters. The first is the pixel
    type, or the type of data stored (optionally) with points, cells,
    and/or boundaries. The second is the geometric dimension of the points
    defining the mesh. This also limits the maximum topological dimension
    of the cells that can be inserted. The third template parameter is the
    "MeshTraits" structure controlling type information for the mesh.
    Most users will be happy with the defaults, and will not have to worry
    about this third argument.  One of the most important parts of using
    this mesh is how to create cells to insert into it. The cells for the
    mesh take two template parameters. The first is the pixel type, and
    should correspond exactly to that type given to the mesh. The second
    is a "CellTraits" which holds a sub-set of the "MeshTraits"
    structure definitions, and is also a member of them. Any cell which is
    to be inserted to a mesh should have MeshTraits::CellTraits as its
    second template parameter.

    Template parameters for Mesh:

    TPixelType = The type stored as data for an entity (cell, point, or
    boundary).

    TMeshTraits = Type information structure for the mesh.

    References No reference information is available.
    example{Core/Mesh/AddPointsAndEdges,Add Points And Edges}
    example{Core/Mesh/ConvertMeshToUnstructeredGrid,Convert Mesh To
    Unstructered Grid}
    example{Core/Mesh/WorkingWithPointAndCellData,Working With Point And
    Cell Data} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_SetCells)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshF3_cast)

    def New(*args, **kargs):
        """New() -> itkMeshF3

        Create a new object of the class itkMeshF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshF3 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshF3_swigregister(itkMeshF3)
itkMeshF3___New_orig__ = _itkMeshBasePython.itkMeshF3___New_orig__
itkMeshF3_cast = _itkMeshBasePython.itkMeshF3_cast


def itkMeshSS2_New():
    return itkMeshSS2.New()

class itkMeshSS2(itk.itkPointSetPython.itkPointSetSS2):
    r"""


    Implements the N-dimensional mesh structure.

    Overview  Mesh implements the N-dimensional mesh structure for ITK. It
    provides an API to perform operations on points, cells, boundaries,
    etc., but does not tie down the underlying implementation and storage.
    A "MeshTraits" structure is used to define the container and
    identifier types that will be used to access the mesh. See
    DefaultStaticMeshTraits for the set of type definitions needed. All
    types that are defined in the "MeshTraits" structure will have
    duplicate type alias in the resulting mesh itself.  Mesh is an
    adaptive, evolving structure. Typically points and cells are created,
    with the cells referring to their defining points. If additional
    topological information is required, then BuildCellLinks() is called
    and links from the points back to the cells that use them are created.
    This allows implicit topological information about the faces and edges
    of the cells to be determined. (For example, a "face" neighbor to a
    cell can be determined by intersection the sets of cells that use the
    points defining the face. This is an inherent assumption on the
    manifold relationship of the cells in the mesh.) In some cases, either
    because the mesh is non-manifold, because we wish to explicitly store
    information with the faces and edges of the mesh, or because
    performance requirements demand that boundaries are explicitly
    represented (the set intersection does not need to be performed); then
    Mesh can be further extended by adding explicit boundary assignments.

    Usage  Mesh has three template parameters. The first is the pixel
    type, or the type of data stored (optionally) with points, cells,
    and/or boundaries. The second is the geometric dimension of the points
    defining the mesh. This also limits the maximum topological dimension
    of the cells that can be inserted. The third template parameter is the
    "MeshTraits" structure controlling type information for the mesh.
    Most users will be happy with the defaults, and will not have to worry
    about this third argument.  One of the most important parts of using
    this mesh is how to create cells to insert into it. The cells for the
    mesh take two template parameters. The first is the pixel type, and
    should correspond exactly to that type given to the mesh. The second
    is a "CellTraits" which holds a sub-set of the "MeshTraits"
    structure definitions, and is also a member of them. Any cell which is
    to be inserted to a mesh should have MeshTraits::CellTraits as its
    second template parameter.

    Template parameters for Mesh:

    TPixelType = The type stored as data for an entity (cell, point, or
    boundary).

    TMeshTraits = Type information structure for the mesh.

    References No reference information is available.
    example{Core/Mesh/AddPointsAndEdges,Add Points And Edges}
    example{Core/Mesh/ConvertMeshToUnstructeredGrid,Convert Mesh To
    Unstructered Grid}
    example{Core/Mesh/WorkingWithPointAndCellData,Working With Point And
    Cell Data} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshSS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_SetCells)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshSS2
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshSS2_cast)

    def New(*args, **kargs):
        """New() -> itkMeshSS2

        Create a new object of the class itkMeshSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshSS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshSS2 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshSS2_swigregister(itkMeshSS2)
itkMeshSS2___New_orig__ = _itkMeshBasePython.itkMeshSS2___New_orig__
itkMeshSS2_cast = _itkMeshBasePython.itkMeshSS2_cast


def itkMeshSS3_New():
    return itkMeshSS3.New()

class itkMeshSS3(itk.itkPointSetPython.itkPointSetSS3):
    r"""


    Implements the N-dimensional mesh structure.

    Overview  Mesh implements the N-dimensional mesh structure for ITK. It
    provides an API to perform operations on points, cells, boundaries,
    etc., but does not tie down the underlying implementation and storage.
    A "MeshTraits" structure is used to define the container and
    identifier types that will be used to access the mesh. See
    DefaultStaticMeshTraits for the set of type definitions needed. All
    types that are defined in the "MeshTraits" structure will have
    duplicate type alias in the resulting mesh itself.  Mesh is an
    adaptive, evolving structure. Typically points and cells are created,
    with the cells referring to their defining points. If additional
    topological information is required, then BuildCellLinks() is called
    and links from the points back to the cells that use them are created.
    This allows implicit topological information about the faces and edges
    of the cells to be determined. (For example, a "face" neighbor to a
    cell can be determined by intersection the sets of cells that use the
    points defining the face. This is an inherent assumption on the
    manifold relationship of the cells in the mesh.) In some cases, either
    because the mesh is non-manifold, because we wish to explicitly store
    information with the faces and edges of the mesh, or because
    performance requirements demand that boundaries are explicitly
    represented (the set intersection does not need to be performed); then
    Mesh can be further extended by adding explicit boundary assignments.

    Usage  Mesh has three template parameters. The first is the pixel
    type, or the type of data stored (optionally) with points, cells,
    and/or boundaries. The second is the geometric dimension of the points
    defining the mesh. This also limits the maximum topological dimension
    of the cells that can be inserted. The third template parameter is the
    "MeshTraits" structure controlling type information for the mesh.
    Most users will be happy with the defaults, and will not have to worry
    about this third argument.  One of the most important parts of using
    this mesh is how to create cells to insert into it. The cells for the
    mesh take two template parameters. The first is the pixel type, and
    should correspond exactly to that type given to the mesh. The second
    is a "CellTraits" which holds a sub-set of the "MeshTraits"
    structure definitions, and is also a member of them. Any cell which is
    to be inserted to a mesh should have MeshTraits::CellTraits as its
    second template parameter.

    Template parameters for Mesh:

    TPixelType = The type stored as data for an entity (cell, point, or
    boundary).

    TMeshTraits = Type information structure for the mesh.

    References No reference information is available.
    example{Core/Mesh/AddPointsAndEdges,Add Points And Edges}
    example{Core/Mesh/ConvertMeshToUnstructeredGrid,Convert Mesh To
    Unstructered Grid}
    example{Core/Mesh/WorkingWithPointAndCellData,Working With Point And
    Cell Data} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshSS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_SetCells)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshSS3
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshSS3_cast)

    def New(*args, **kargs):
        """New() -> itkMeshSS3

        Create a new object of the class itkMeshSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshSS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshSS3 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshSS3_swigregister(itkMeshSS3)
itkMeshSS3___New_orig__ = _itkMeshBasePython.itkMeshSS3___New_orig__
itkMeshSS3_cast = _itkMeshBasePython.itkMeshSS3_cast


def itkMeshUC2_New():
    return itkMeshUC2.New()

class itkMeshUC2(itk.itkPointSetPython.itkPointSetUC2):
    r"""


    Implements the N-dimensional mesh structure.

    Overview  Mesh implements the N-dimensional mesh structure for ITK. It
    provides an API to perform operations on points, cells, boundaries,
    etc., but does not tie down the underlying implementation and storage.
    A "MeshTraits" structure is used to define the container and
    identifier types that will be used to access the mesh. See
    DefaultStaticMeshTraits for the set of type definitions needed. All
    types that are defined in the "MeshTraits" structure will have
    duplicate type alias in the resulting mesh itself.  Mesh is an
    adaptive, evolving structure. Typically points and cells are created,
    with the cells referring to their defining points. If additional
    topological information is required, then BuildCellLinks() is called
    and links from the points back to the cells that use them are created.
    This allows implicit topological information about the faces and edges
    of the cells to be determined. (For example, a "face" neighbor to a
    cell can be determined by intersection the sets of cells that use the
    points defining the face. This is an inherent assumption on the
    manifold relationship of the cells in the mesh.) In some cases, either
    because the mesh is non-manifold, because we wish to explicitly store
    information with the faces and edges of the mesh, or because
    performance requirements demand that boundaries are explicitly
    represented (the set intersection does not need to be performed); then
    Mesh can be further extended by adding explicit boundary assignments.

    Usage  Mesh has three template parameters. The first is the pixel
    type, or the type of data stored (optionally) with points, cells,
    and/or boundaries. The second is the geometric dimension of the points
    defining the mesh. This also limits the maximum topological dimension
    of the cells that can be inserted. The third template parameter is the
    "MeshTraits" structure controlling type information for the mesh.
    Most users will be happy with the defaults, and will not have to worry
    about this third argument.  One of the most important parts of using
    this mesh is how to create cells to insert into it. The cells for the
    mesh take two template parameters. The first is the pixel type, and
    should correspond exactly to that type given to the mesh. The second
    is a "CellTraits" which holds a sub-set of the "MeshTraits"
    structure definitions, and is also a member of them. Any cell which is
    to be inserted to a mesh should have MeshTraits::CellTraits as its
    second template parameter.

    Template parameters for Mesh:

    TPixelType = The type stored as data for an entity (cell, point, or
    boundary).

    TMeshTraits = Type information structure for the mesh.

    References No reference information is available.
    example{Core/Mesh/AddPointsAndEdges,Add Points And Edges}
    example{Core/Mesh/ConvertMeshToUnstructeredGrid,Convert Mesh To
    Unstructered Grid}
    example{Core/Mesh/WorkingWithPointAndCellData,Working With Point And
    Cell Data} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_SetCells)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshUC2
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMeshUC2

        Create a new object of the class itkMeshUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshUC2 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshUC2_swigregister(itkMeshUC2)
itkMeshUC2___New_orig__ = _itkMeshBasePython.itkMeshUC2___New_orig__
itkMeshUC2_cast = _itkMeshBasePython.itkMeshUC2_cast


def itkMeshUC3_New():
    return itkMeshUC3.New()

class itkMeshUC3(itk.itkPointSetPython.itkPointSetUC3):
    r"""


    Implements the N-dimensional mesh structure.

    Overview  Mesh implements the N-dimensional mesh structure for ITK. It
    provides an API to perform operations on points, cells, boundaries,
    etc., but does not tie down the underlying implementation and storage.
    A "MeshTraits" structure is used to define the container and
    identifier types that will be used to access the mesh. See
    DefaultStaticMeshTraits for the set of type definitions needed. All
    types that are defined in the "MeshTraits" structure will have
    duplicate type alias in the resulting mesh itself.  Mesh is an
    adaptive, evolving structure. Typically points and cells are created,
    with the cells referring to their defining points. If additional
    topological information is required, then BuildCellLinks() is called
    and links from the points back to the cells that use them are created.
    This allows implicit topological information about the faces and edges
    of the cells to be determined. (For example, a "face" neighbor to a
    cell can be determined by intersection the sets of cells that use the
    points defining the face. This is an inherent assumption on the
    manifold relationship of the cells in the mesh.) In some cases, either
    because the mesh is non-manifold, because we wish to explicitly store
    information with the faces and edges of the mesh, or because
    performance requirements demand that boundaries are explicitly
    represented (the set intersection does not need to be performed); then
    Mesh can be further extended by adding explicit boundary assignments.

    Usage  Mesh has three template parameters. The first is the pixel
    type, or the type of data stored (optionally) with points, cells,
    and/or boundaries. The second is the geometric dimension of the points
    defining the mesh. This also limits the maximum topological dimension
    of the cells that can be inserted. The third template parameter is the
    "MeshTraits" structure controlling type information for the mesh.
    Most users will be happy with the defaults, and will not have to worry
    about this third argument.  One of the most important parts of using
    this mesh is how to create cells to insert into it. The cells for the
    mesh take two template parameters. The first is the pixel type, and
    should correspond exactly to that type given to the mesh. The second
    is a "CellTraits" which holds a sub-set of the "MeshTraits"
    structure definitions, and is also a member of them. Any cell which is
    to be inserted to a mesh should have MeshTraits::CellTraits as its
    second template parameter.

    Template parameters for Mesh:

    TPixelType = The type stored as data for an entity (cell, point, or
    boundary).

    TMeshTraits = Type information structure for the mesh.

    References No reference information is available.
    example{Core/Mesh/AddPointsAndEdges,Add Points And Edges}
    example{Core/Mesh/ConvertMeshToUnstructeredGrid,Convert Mesh To
    Unstructered Grid}
    example{Core/Mesh/WorkingWithPointAndCellData,Working With Point And
    Cell Data} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_SetCells)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshUC3
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMeshUC3

        Create a new object of the class itkMeshUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshUC3 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshUC3_swigregister(itkMeshUC3)
itkMeshUC3___New_orig__ = _itkMeshBasePython.itkMeshUC3___New_orig__
itkMeshUC3_cast = _itkMeshBasePython.itkMeshUC3_cast


def itkMeshUS2_New():
    return itkMeshUS2.New()

class itkMeshUS2(itk.itkPointSetPython.itkPointSetUS2):
    r"""


    Implements the N-dimensional mesh structure.

    Overview  Mesh implements the N-dimensional mesh structure for ITK. It
    provides an API to perform operations on points, cells, boundaries,
    etc., but does not tie down the underlying implementation and storage.
    A "MeshTraits" structure is used to define the container and
    identifier types that will be used to access the mesh. See
    DefaultStaticMeshTraits for the set of type definitions needed. All
    types that are defined in the "MeshTraits" structure will have
    duplicate type alias in the resulting mesh itself.  Mesh is an
    adaptive, evolving structure. Typically points and cells are created,
    with the cells referring to their defining points. If additional
    topological information is required, then BuildCellLinks() is called
    and links from the points back to the cells that use them are created.
    This allows implicit topological information about the faces and edges
    of the cells to be determined. (For example, a "face" neighbor to a
    cell can be determined by intersection the sets of cells that use the
    points defining the face. This is an inherent assumption on the
    manifold relationship of the cells in the mesh.) In some cases, either
    because the mesh is non-manifold, because we wish to explicitly store
    information with the faces and edges of the mesh, or because
    performance requirements demand that boundaries are explicitly
    represented (the set intersection does not need to be performed); then
    Mesh can be further extended by adding explicit boundary assignments.

    Usage  Mesh has three template parameters. The first is the pixel
    type, or the type of data stored (optionally) with points, cells,
    and/or boundaries. The second is the geometric dimension of the points
    defining the mesh. This also limits the maximum topological dimension
    of the cells that can be inserted. The third template parameter is the
    "MeshTraits" structure controlling type information for the mesh.
    Most users will be happy with the defaults, and will not have to worry
    about this third argument.  One of the most important parts of using
    this mesh is how to create cells to insert into it. The cells for the
    mesh take two template parameters. The first is the pixel type, and
    should correspond exactly to that type given to the mesh. The second
    is a "CellTraits" which holds a sub-set of the "MeshTraits"
    structure definitions, and is also a member of them. Any cell which is
    to be inserted to a mesh should have MeshTraits::CellTraits as its
    second template parameter.

    Template parameters for Mesh:

    TPixelType = The type stored as data for an entity (cell, point, or
    boundary).

    TMeshTraits = Type information structure for the mesh.

    References No reference information is available.
    example{Core/Mesh/AddPointsAndEdges,Add Points And Edges}
    example{Core/Mesh/ConvertMeshToUnstructeredGrid,Convert Mesh To
    Unstructered Grid}
    example{Core/Mesh/WorkingWithPointAndCellData,Working With Point And
    Cell Data} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_SetCells)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshUS2
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMeshUS2

        Create a new object of the class itkMeshUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshUS2 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshUS2_swigregister(itkMeshUS2)
itkMeshUS2___New_orig__ = _itkMeshBasePython.itkMeshUS2___New_orig__
itkMeshUS2_cast = _itkMeshBasePython.itkMeshUS2_cast


def itkMeshUS3_New():
    return itkMeshUS3.New()

class itkMeshUS3(itk.itkPointSetPython.itkPointSetUS3):
    r"""


    Implements the N-dimensional mesh structure.

    Overview  Mesh implements the N-dimensional mesh structure for ITK. It
    provides an API to perform operations on points, cells, boundaries,
    etc., but does not tie down the underlying implementation and storage.
    A "MeshTraits" structure is used to define the container and
    identifier types that will be used to access the mesh. See
    DefaultStaticMeshTraits for the set of type definitions needed. All
    types that are defined in the "MeshTraits" structure will have
    duplicate type alias in the resulting mesh itself.  Mesh is an
    adaptive, evolving structure. Typically points and cells are created,
    with the cells referring to their defining points. If additional
    topological information is required, then BuildCellLinks() is called
    and links from the points back to the cells that use them are created.
    This allows implicit topological information about the faces and edges
    of the cells to be determined. (For example, a "face" neighbor to a
    cell can be determined by intersection the sets of cells that use the
    points defining the face. This is an inherent assumption on the
    manifold relationship of the cells in the mesh.) In some cases, either
    because the mesh is non-manifold, because we wish to explicitly store
    information with the faces and edges of the mesh, or because
    performance requirements demand that boundaries are explicitly
    represented (the set intersection does not need to be performed); then
    Mesh can be further extended by adding explicit boundary assignments.

    Usage  Mesh has three template parameters. The first is the pixel
    type, or the type of data stored (optionally) with points, cells,
    and/or boundaries. The second is the geometric dimension of the points
    defining the mesh. This also limits the maximum topological dimension
    of the cells that can be inserted. The third template parameter is the
    "MeshTraits" structure controlling type information for the mesh.
    Most users will be happy with the defaults, and will not have to worry
    about this third argument.  One of the most important parts of using
    this mesh is how to create cells to insert into it. The cells for the
    mesh take two template parameters. The first is the pixel type, and
    should correspond exactly to that type given to the mesh. The second
    is a "CellTraits" which holds a sub-set of the "MeshTraits"
    structure definitions, and is also a member of them. Any cell which is
    to be inserted to a mesh should have MeshTraits::CellTraits as its
    second template parameter.

    Template parameters for Mesh:

    TPixelType = The type stored as data for an entity (cell, point, or
    boundary).

    TMeshTraits = Type information structure for the mesh.

    References No reference information is available.
    example{Core/Mesh/AddPointsAndEdges,Add Points And Edges}
    example{Core/Mesh/ConvertMeshToUnstructeredGrid,Convert Mesh To
    Unstructered Grid}
    example{Core/Mesh/WorkingWithPointAndCellData,Working With Point And
    Cell Data} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_SetCells)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshUS3
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMeshUS3

        Create a new object of the class itkMeshUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshUS3 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshUS3_swigregister(itkMeshUS3)
itkMeshUS3___New_orig__ = _itkMeshBasePython.itkMeshUS3___New_orig__
itkMeshUS3_cast = _itkMeshBasePython.itkMeshUS3_cast


def itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_New():
    return itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2.New()

class itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""


    Define a front-end to the STL "vector" container that conforms to
    the IndexedContainerInterface.

    This is a full-fleged Object, so there is modification time, debug,
    and reference count information.

    Parameters:
    -----------

    TElementIdentifier:  An INTEGRAL type for use in indexing the vector.

    TElement:  The element type stored in the container.

    example{Core/Common/IterateOnAVectorContainer,Iterate On A Vector
    Container} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2

        Create a new object of the class itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_swigregister(itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2)
itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2___New_orig__ = _itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2___New_orig__
itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_cast = _itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_cast


def itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_New():
    return itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3.New()

class itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""


    Define a front-end to the STL "vector" container that conforms to
    the IndexedContainerInterface.

    This is a full-fleged Object, so there is modification time, debug,
    and reference count information.

    Parameters:
    -----------

    TElementIdentifier:  An INTEGRAL type for use in indexing the vector.

    TElement:  The element type stored in the container.

    example{Core/Common/IterateOnAVectorContainer,Iterate On A Vector
    Container} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3

        Create a new object of the class itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_swigregister(itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3)
itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3___New_orig__ = _itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3___New_orig__
itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_cast = _itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_cast


def itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_New():
    return itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2.New()

class itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""


    Define a front-end to the STL "vector" container that conforms to
    the IndexedContainerInterface.

    This is a full-fleged Object, so there is modification time, debug,
    and reference count information.

    Parameters:
    -----------

    TElementIdentifier:  An INTEGRAL type for use in indexing the vector.

    TElement:  The element type stored in the container.

    example{Core/Common/IterateOnAVectorContainer,Iterate On A Vector
    Container} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2

        Create a new object of the class itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_swigregister(itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2)
itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2___New_orig__ = _itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2___New_orig__
itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_cast = _itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_cast


def itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_New():
    return itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3.New()

class itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""


    Define a front-end to the STL "vector" container that conforms to
    the IndexedContainerInterface.

    This is a full-fleged Object, so there is modification time, debug,
    and reference count information.

    Parameters:
    -----------

    TElementIdentifier:  An INTEGRAL type for use in indexing the vector.

    TElement:  The element type stored in the container.

    example{Core/Common/IterateOnAVectorContainer,Iterate On A Vector
    Container} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3

        Create a new object of the class itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_swigregister(itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3)
itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3___New_orig__ = _itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3___New_orig__
itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_cast = _itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_cast


def itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_New():
    return itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2.New()

class itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""


    Define a front-end to the STL "vector" container that conforms to
    the IndexedContainerInterface.

    This is a full-fleged Object, so there is modification time, debug,
    and reference count information.

    Parameters:
    -----------

    TElementIdentifier:  An INTEGRAL type for use in indexing the vector.

    TElement:  The element type stored in the container.

    example{Core/Common/IterateOnAVectorContainer,Iterate On A Vector
    Container} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2

        Create a new object of the class itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_swigregister(itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2)
itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2___New_orig__ = _itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2___New_orig__
itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_cast = _itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_cast


def itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_New():
    return itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3.New()

class itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""


    Define a front-end to the STL "vector" container that conforms to
    the IndexedContainerInterface.

    This is a full-fleged Object, so there is modification time, debug,
    and reference count information.

    Parameters:
    -----------

    TElementIdentifier:  An INTEGRAL type for use in indexing the vector.

    TElement:  The element type stored in the container.

    example{Core/Common/IterateOnAVectorContainer,Iterate On A Vector
    Container} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3

        Create a new object of the class itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_swigregister(itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3)
itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3___New_orig__ = _itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3___New_orig__
itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_cast = _itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_cast


def itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_New():
    return itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2.New()

class itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""


    Define a front-end to the STL "vector" container that conforms to
    the IndexedContainerInterface.

    This is a full-fleged Object, so there is modification time, debug,
    and reference count information.

    Parameters:
    -----------

    TElementIdentifier:  An INTEGRAL type for use in indexing the vector.

    TElement:  The element type stored in the container.

    example{Core/Common/IterateOnAVectorContainer,Iterate On A Vector
    Container} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2

        Create a new object of the class itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_swigregister(itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2)
itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2___New_orig__ = _itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2___New_orig__
itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_cast = _itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_cast


def itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_New():
    return itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3.New()

class itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""


    Define a front-end to the STL "vector" container that conforms to
    the IndexedContainerInterface.

    This is a full-fleged Object, so there is modification time, debug,
    and reference count information.

    Parameters:
    -----------

    TElementIdentifier:  An INTEGRAL type for use in indexing the vector.

    TElement:  The element type stored in the container.

    example{Core/Common/IterateOnAVectorContainer,Iterate On A Vector
    Container} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3

        Create a new object of the class itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_swigregister(itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3)
itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3___New_orig__ = _itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3___New_orig__
itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_cast = _itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_cast


def itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_New():
    return itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2.New()

class itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""


    Define a front-end to the STL "vector" container that conforms to
    the IndexedContainerInterface.

    This is a full-fleged Object, so there is modification time, debug,
    and reference count information.

    Parameters:
    -----------

    TElementIdentifier:  An INTEGRAL type for use in indexing the vector.

    TElement:  The element type stored in the container.

    example{Core/Common/IterateOnAVectorContainer,Iterate On A Vector
    Container} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2

        Create a new object of the class itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_swigregister(itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2)
itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2___New_orig__ = _itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2___New_orig__
itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_cast = _itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_cast


def itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_New():
    return itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3.New()

class itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""


    Define a front-end to the STL "vector" container that conforms to
    the IndexedContainerInterface.

    This is a full-fleged Object, so there is modification time, debug,
    and reference count information.

    Parameters:
    -----------

    TElementIdentifier:  An INTEGRAL type for use in indexing the vector.

    TElement:  The element type stored in the container.

    example{Core/Common/IterateOnAVectorContainer,Iterate On A Vector
    Container} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3

        Create a new object of the class itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_swigregister(itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3)
itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3___New_orig__ = _itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3___New_orig__
itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_cast = _itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_cast



