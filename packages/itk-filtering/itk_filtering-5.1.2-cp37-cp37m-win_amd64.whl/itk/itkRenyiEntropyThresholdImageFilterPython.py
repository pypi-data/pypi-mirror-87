# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKThresholdingPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkRenyiEntropyThresholdImageFilterPython
else:
    import _itkRenyiEntropyThresholdImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkRenyiEntropyThresholdImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkRenyiEntropyThresholdImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkHistogramThresholdImageFilterPython
import itk.itkImageToHistogramFilterPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkArrayPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkHistogramPython
import itk.itkSamplePython
import itk.itkImageSinkPython
import itk.itkImagePython
import itk.itkSizePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkHistogramThresholdCalculatorPython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython

def itkRenyiEntropyThresholdImageFilterID2ISS2_New():
    return itkRenyiEntropyThresholdImageFilterID2ISS2.New()

class itkRenyiEntropyThresholdImageFilterID2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID2ISS2_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterID2ISS2
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterID2ISS2

        Create a new object of the class itkRenyiEntropyThresholdImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterID2ISS2 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID2ISS2_swigregister(itkRenyiEntropyThresholdImageFilterID2ISS2)
itkRenyiEntropyThresholdImageFilterID2ISS2___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID2ISS2___New_orig__
itkRenyiEntropyThresholdImageFilterID2ISS2_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID2ISS2_cast


def itkRenyiEntropyThresholdImageFilterID2IUC2_New():
    return itkRenyiEntropyThresholdImageFilterID2IUC2.New()

class itkRenyiEntropyThresholdImageFilterID2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID2IUC2_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterID2IUC2
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterID2IUC2

        Create a new object of the class itkRenyiEntropyThresholdImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterID2IUC2 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID2IUC2_swigregister(itkRenyiEntropyThresholdImageFilterID2IUC2)
itkRenyiEntropyThresholdImageFilterID2IUC2___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID2IUC2___New_orig__
itkRenyiEntropyThresholdImageFilterID2IUC2_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID2IUC2_cast


def itkRenyiEntropyThresholdImageFilterID2IUS2_New():
    return itkRenyiEntropyThresholdImageFilterID2IUS2.New()

class itkRenyiEntropyThresholdImageFilterID2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID2IUS2_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterID2IUS2
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterID2IUS2

        Create a new object of the class itkRenyiEntropyThresholdImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterID2IUS2 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID2IUS2_swigregister(itkRenyiEntropyThresholdImageFilterID2IUS2)
itkRenyiEntropyThresholdImageFilterID2IUS2___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID2IUS2___New_orig__
itkRenyiEntropyThresholdImageFilterID2IUS2_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID2IUS2_cast


def itkRenyiEntropyThresholdImageFilterID3ISS3_New():
    return itkRenyiEntropyThresholdImageFilterID3ISS3.New()

class itkRenyiEntropyThresholdImageFilterID3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID3ISS3_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterID3ISS3
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterID3ISS3

        Create a new object of the class itkRenyiEntropyThresholdImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterID3ISS3 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID3ISS3_swigregister(itkRenyiEntropyThresholdImageFilterID3ISS3)
itkRenyiEntropyThresholdImageFilterID3ISS3___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID3ISS3___New_orig__
itkRenyiEntropyThresholdImageFilterID3ISS3_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID3ISS3_cast


def itkRenyiEntropyThresholdImageFilterID3IUC3_New():
    return itkRenyiEntropyThresholdImageFilterID3IUC3.New()

class itkRenyiEntropyThresholdImageFilterID3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID3IUC3_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterID3IUC3
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterID3IUC3

        Create a new object of the class itkRenyiEntropyThresholdImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterID3IUC3 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID3IUC3_swigregister(itkRenyiEntropyThresholdImageFilterID3IUC3)
itkRenyiEntropyThresholdImageFilterID3IUC3___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID3IUC3___New_orig__
itkRenyiEntropyThresholdImageFilterID3IUC3_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID3IUC3_cast


def itkRenyiEntropyThresholdImageFilterID3IUS3_New():
    return itkRenyiEntropyThresholdImageFilterID3IUS3.New()

class itkRenyiEntropyThresholdImageFilterID3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID3IUS3_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterID3IUS3
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterID3IUS3

        Create a new object of the class itkRenyiEntropyThresholdImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterID3IUS3 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID3IUS3_swigregister(itkRenyiEntropyThresholdImageFilterID3IUS3)
itkRenyiEntropyThresholdImageFilterID3IUS3___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID3IUS3___New_orig__
itkRenyiEntropyThresholdImageFilterID3IUS3_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterID3IUS3_cast


def itkRenyiEntropyThresholdImageFilterIF2ISS2_New():
    return itkRenyiEntropyThresholdImageFilterIF2ISS2.New()

class itkRenyiEntropyThresholdImageFilterIF2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF2ISS2_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterIF2ISS2
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterIF2ISS2

        Create a new object of the class itkRenyiEntropyThresholdImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterIF2ISS2 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF2ISS2_swigregister(itkRenyiEntropyThresholdImageFilterIF2ISS2)
itkRenyiEntropyThresholdImageFilterIF2ISS2___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF2ISS2___New_orig__
itkRenyiEntropyThresholdImageFilterIF2ISS2_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF2ISS2_cast


def itkRenyiEntropyThresholdImageFilterIF2IUC2_New():
    return itkRenyiEntropyThresholdImageFilterIF2IUC2.New()

class itkRenyiEntropyThresholdImageFilterIF2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF2IUC2_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterIF2IUC2
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterIF2IUC2

        Create a new object of the class itkRenyiEntropyThresholdImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterIF2IUC2 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF2IUC2_swigregister(itkRenyiEntropyThresholdImageFilterIF2IUC2)
itkRenyiEntropyThresholdImageFilterIF2IUC2___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF2IUC2___New_orig__
itkRenyiEntropyThresholdImageFilterIF2IUC2_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF2IUC2_cast


def itkRenyiEntropyThresholdImageFilterIF2IUS2_New():
    return itkRenyiEntropyThresholdImageFilterIF2IUS2.New()

class itkRenyiEntropyThresholdImageFilterIF2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF2IUS2_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterIF2IUS2
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterIF2IUS2

        Create a new object of the class itkRenyiEntropyThresholdImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterIF2IUS2 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF2IUS2_swigregister(itkRenyiEntropyThresholdImageFilterIF2IUS2)
itkRenyiEntropyThresholdImageFilterIF2IUS2___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF2IUS2___New_orig__
itkRenyiEntropyThresholdImageFilterIF2IUS2_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF2IUS2_cast


def itkRenyiEntropyThresholdImageFilterIF3ISS3_New():
    return itkRenyiEntropyThresholdImageFilterIF3ISS3.New()

class itkRenyiEntropyThresholdImageFilterIF3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF3ISS3_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterIF3ISS3
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterIF3ISS3

        Create a new object of the class itkRenyiEntropyThresholdImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterIF3ISS3 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF3ISS3_swigregister(itkRenyiEntropyThresholdImageFilterIF3ISS3)
itkRenyiEntropyThresholdImageFilterIF3ISS3___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF3ISS3___New_orig__
itkRenyiEntropyThresholdImageFilterIF3ISS3_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF3ISS3_cast


def itkRenyiEntropyThresholdImageFilterIF3IUC3_New():
    return itkRenyiEntropyThresholdImageFilterIF3IUC3.New()

class itkRenyiEntropyThresholdImageFilterIF3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF3IUC3_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterIF3IUC3
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterIF3IUC3

        Create a new object of the class itkRenyiEntropyThresholdImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterIF3IUC3 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF3IUC3_swigregister(itkRenyiEntropyThresholdImageFilterIF3IUC3)
itkRenyiEntropyThresholdImageFilterIF3IUC3___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF3IUC3___New_orig__
itkRenyiEntropyThresholdImageFilterIF3IUC3_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF3IUC3_cast


def itkRenyiEntropyThresholdImageFilterIF3IUS3_New():
    return itkRenyiEntropyThresholdImageFilterIF3IUS3.New()

class itkRenyiEntropyThresholdImageFilterIF3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF3IUS3_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterIF3IUS3
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterIF3IUS3

        Create a new object of the class itkRenyiEntropyThresholdImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterIF3IUS3 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF3IUS3_swigregister(itkRenyiEntropyThresholdImageFilterIF3IUS3)
itkRenyiEntropyThresholdImageFilterIF3IUS3___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF3IUS3___New_orig__
itkRenyiEntropyThresholdImageFilterIF3IUS3_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIF3IUS3_cast


def itkRenyiEntropyThresholdImageFilterISS2ISS2_New():
    return itkRenyiEntropyThresholdImageFilterISS2ISS2.New()

class itkRenyiEntropyThresholdImageFilterISS2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS2ISS2_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterISS2ISS2

        Create a new object of the class itkRenyiEntropyThresholdImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterISS2ISS2 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS2ISS2_swigregister(itkRenyiEntropyThresholdImageFilterISS2ISS2)
itkRenyiEntropyThresholdImageFilterISS2ISS2___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS2ISS2___New_orig__
itkRenyiEntropyThresholdImageFilterISS2ISS2_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS2ISS2_cast


def itkRenyiEntropyThresholdImageFilterISS2IUC2_New():
    return itkRenyiEntropyThresholdImageFilterISS2IUC2.New()

class itkRenyiEntropyThresholdImageFilterISS2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS2IUC2_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterISS2IUC2
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterISS2IUC2

        Create a new object of the class itkRenyiEntropyThresholdImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterISS2IUC2 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS2IUC2_swigregister(itkRenyiEntropyThresholdImageFilterISS2IUC2)
itkRenyiEntropyThresholdImageFilterISS2IUC2___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS2IUC2___New_orig__
itkRenyiEntropyThresholdImageFilterISS2IUC2_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS2IUC2_cast


def itkRenyiEntropyThresholdImageFilterISS2IUS2_New():
    return itkRenyiEntropyThresholdImageFilterISS2IUS2.New()

class itkRenyiEntropyThresholdImageFilterISS2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS2IUS2_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterISS2IUS2
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterISS2IUS2

        Create a new object of the class itkRenyiEntropyThresholdImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterISS2IUS2 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS2IUS2_swigregister(itkRenyiEntropyThresholdImageFilterISS2IUS2)
itkRenyiEntropyThresholdImageFilterISS2IUS2___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS2IUS2___New_orig__
itkRenyiEntropyThresholdImageFilterISS2IUS2_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS2IUS2_cast


def itkRenyiEntropyThresholdImageFilterISS3ISS3_New():
    return itkRenyiEntropyThresholdImageFilterISS3ISS3.New()

class itkRenyiEntropyThresholdImageFilterISS3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS3ISS3_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterISS3ISS3

        Create a new object of the class itkRenyiEntropyThresholdImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterISS3ISS3 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS3ISS3_swigregister(itkRenyiEntropyThresholdImageFilterISS3ISS3)
itkRenyiEntropyThresholdImageFilterISS3ISS3___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS3ISS3___New_orig__
itkRenyiEntropyThresholdImageFilterISS3ISS3_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS3ISS3_cast


def itkRenyiEntropyThresholdImageFilterISS3IUC3_New():
    return itkRenyiEntropyThresholdImageFilterISS3IUC3.New()

class itkRenyiEntropyThresholdImageFilterISS3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS3IUC3_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterISS3IUC3
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterISS3IUC3

        Create a new object of the class itkRenyiEntropyThresholdImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterISS3IUC3 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS3IUC3_swigregister(itkRenyiEntropyThresholdImageFilterISS3IUC3)
itkRenyiEntropyThresholdImageFilterISS3IUC3___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS3IUC3___New_orig__
itkRenyiEntropyThresholdImageFilterISS3IUC3_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS3IUC3_cast


def itkRenyiEntropyThresholdImageFilterISS3IUS3_New():
    return itkRenyiEntropyThresholdImageFilterISS3IUS3.New()

class itkRenyiEntropyThresholdImageFilterISS3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS3IUS3_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterISS3IUS3
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterISS3IUS3

        Create a new object of the class itkRenyiEntropyThresholdImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterISS3IUS3 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS3IUS3_swigregister(itkRenyiEntropyThresholdImageFilterISS3IUS3)
itkRenyiEntropyThresholdImageFilterISS3IUS3___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS3IUS3___New_orig__
itkRenyiEntropyThresholdImageFilterISS3IUS3_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterISS3IUS3_cast


def itkRenyiEntropyThresholdImageFilterIUC2ISS2_New():
    return itkRenyiEntropyThresholdImageFilterIUC2ISS2.New()

class itkRenyiEntropyThresholdImageFilterIUC2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC2ISS2_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterIUC2ISS2
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterIUC2ISS2

        Create a new object of the class itkRenyiEntropyThresholdImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterIUC2ISS2 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC2ISS2_swigregister(itkRenyiEntropyThresholdImageFilterIUC2ISS2)
itkRenyiEntropyThresholdImageFilterIUC2ISS2___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC2ISS2___New_orig__
itkRenyiEntropyThresholdImageFilterIUC2ISS2_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC2ISS2_cast


def itkRenyiEntropyThresholdImageFilterIUC2IUC2_New():
    return itkRenyiEntropyThresholdImageFilterIUC2IUC2.New()

class itkRenyiEntropyThresholdImageFilterIUC2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC2IUC2_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterIUC2IUC2

        Create a new object of the class itkRenyiEntropyThresholdImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterIUC2IUC2 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC2IUC2_swigregister(itkRenyiEntropyThresholdImageFilterIUC2IUC2)
itkRenyiEntropyThresholdImageFilterIUC2IUC2___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC2IUC2___New_orig__
itkRenyiEntropyThresholdImageFilterIUC2IUC2_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC2IUC2_cast


def itkRenyiEntropyThresholdImageFilterIUC2IUS2_New():
    return itkRenyiEntropyThresholdImageFilterIUC2IUS2.New()

class itkRenyiEntropyThresholdImageFilterIUC2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC2IUS2_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterIUC2IUS2
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterIUC2IUS2

        Create a new object of the class itkRenyiEntropyThresholdImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterIUC2IUS2 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC2IUS2_swigregister(itkRenyiEntropyThresholdImageFilterIUC2IUS2)
itkRenyiEntropyThresholdImageFilterIUC2IUS2___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC2IUS2___New_orig__
itkRenyiEntropyThresholdImageFilterIUC2IUS2_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC2IUS2_cast


def itkRenyiEntropyThresholdImageFilterIUC3ISS3_New():
    return itkRenyiEntropyThresholdImageFilterIUC3ISS3.New()

class itkRenyiEntropyThresholdImageFilterIUC3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC3ISS3_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterIUC3ISS3
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterIUC3ISS3

        Create a new object of the class itkRenyiEntropyThresholdImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterIUC3ISS3 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC3ISS3_swigregister(itkRenyiEntropyThresholdImageFilterIUC3ISS3)
itkRenyiEntropyThresholdImageFilterIUC3ISS3___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC3ISS3___New_orig__
itkRenyiEntropyThresholdImageFilterIUC3ISS3_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC3ISS3_cast


def itkRenyiEntropyThresholdImageFilterIUC3IUC3_New():
    return itkRenyiEntropyThresholdImageFilterIUC3IUC3.New()

class itkRenyiEntropyThresholdImageFilterIUC3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC3IUC3_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterIUC3IUC3

        Create a new object of the class itkRenyiEntropyThresholdImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterIUC3IUC3 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC3IUC3_swigregister(itkRenyiEntropyThresholdImageFilterIUC3IUC3)
itkRenyiEntropyThresholdImageFilterIUC3IUC3___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC3IUC3___New_orig__
itkRenyiEntropyThresholdImageFilterIUC3IUC3_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC3IUC3_cast


def itkRenyiEntropyThresholdImageFilterIUC3IUS3_New():
    return itkRenyiEntropyThresholdImageFilterIUC3IUS3.New()

class itkRenyiEntropyThresholdImageFilterIUC3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC3IUS3_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterIUC3IUS3
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterIUC3IUS3

        Create a new object of the class itkRenyiEntropyThresholdImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterIUC3IUS3 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC3IUS3_swigregister(itkRenyiEntropyThresholdImageFilterIUC3IUS3)
itkRenyiEntropyThresholdImageFilterIUC3IUS3___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC3IUS3___New_orig__
itkRenyiEntropyThresholdImageFilterIUC3IUS3_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUC3IUS3_cast


def itkRenyiEntropyThresholdImageFilterIUS2ISS2_New():
    return itkRenyiEntropyThresholdImageFilterIUS2ISS2.New()

class itkRenyiEntropyThresholdImageFilterIUS2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS2ISS2_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterIUS2ISS2
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterIUS2ISS2

        Create a new object of the class itkRenyiEntropyThresholdImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterIUS2ISS2 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS2ISS2_swigregister(itkRenyiEntropyThresholdImageFilterIUS2ISS2)
itkRenyiEntropyThresholdImageFilterIUS2ISS2___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS2ISS2___New_orig__
itkRenyiEntropyThresholdImageFilterIUS2ISS2_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS2ISS2_cast


def itkRenyiEntropyThresholdImageFilterIUS2IUC2_New():
    return itkRenyiEntropyThresholdImageFilterIUS2IUC2.New()

class itkRenyiEntropyThresholdImageFilterIUS2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS2IUC2_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterIUS2IUC2
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterIUS2IUC2

        Create a new object of the class itkRenyiEntropyThresholdImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterIUS2IUC2 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS2IUC2_swigregister(itkRenyiEntropyThresholdImageFilterIUS2IUC2)
itkRenyiEntropyThresholdImageFilterIUS2IUC2___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS2IUC2___New_orig__
itkRenyiEntropyThresholdImageFilterIUS2IUC2_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS2IUC2_cast


def itkRenyiEntropyThresholdImageFilterIUS2IUS2_New():
    return itkRenyiEntropyThresholdImageFilterIUS2IUS2.New()

class itkRenyiEntropyThresholdImageFilterIUS2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS2IUS2_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterIUS2IUS2

        Create a new object of the class itkRenyiEntropyThresholdImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterIUS2IUS2 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS2IUS2_swigregister(itkRenyiEntropyThresholdImageFilterIUS2IUS2)
itkRenyiEntropyThresholdImageFilterIUS2IUS2___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS2IUS2___New_orig__
itkRenyiEntropyThresholdImageFilterIUS2IUS2_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS2IUS2_cast


def itkRenyiEntropyThresholdImageFilterIUS3ISS3_New():
    return itkRenyiEntropyThresholdImageFilterIUS3ISS3.New()

class itkRenyiEntropyThresholdImageFilterIUS3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS3ISS3_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterIUS3ISS3
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterIUS3ISS3

        Create a new object of the class itkRenyiEntropyThresholdImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterIUS3ISS3 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS3ISS3_swigregister(itkRenyiEntropyThresholdImageFilterIUS3ISS3)
itkRenyiEntropyThresholdImageFilterIUS3ISS3___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS3ISS3___New_orig__
itkRenyiEntropyThresholdImageFilterIUS3ISS3_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS3ISS3_cast


def itkRenyiEntropyThresholdImageFilterIUS3IUC3_New():
    return itkRenyiEntropyThresholdImageFilterIUS3IUC3.New()

class itkRenyiEntropyThresholdImageFilterIUS3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS3IUC3_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterIUS3IUC3
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterIUS3IUC3

        Create a new object of the class itkRenyiEntropyThresholdImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterIUS3IUC3 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS3IUC3_swigregister(itkRenyiEntropyThresholdImageFilterIUS3IUC3)
itkRenyiEntropyThresholdImageFilterIUS3IUC3___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS3IUC3___New_orig__
itkRenyiEntropyThresholdImageFilterIUS3IUC3_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS3IUC3_cast


def itkRenyiEntropyThresholdImageFilterIUS3IUS3_New():
    return itkRenyiEntropyThresholdImageFilterIUS3IUS3.New()

class itkRenyiEntropyThresholdImageFilterIUS3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3):
    r"""


    Threshold an image using the RenyiEntropy Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the RenyiEntropyThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS3IUS3_Clone)
    __swig_destroy__ = _itkRenyiEntropyThresholdImageFilterPython.delete_itkRenyiEntropyThresholdImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkRenyiEntropyThresholdImageFilterIUS3IUS3

        Create a new object of the class itkRenyiEntropyThresholdImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRenyiEntropyThresholdImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRenyiEntropyThresholdImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRenyiEntropyThresholdImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRenyiEntropyThresholdImageFilterIUS3IUS3 in _itkRenyiEntropyThresholdImageFilterPython:
_itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS3IUS3_swigregister(itkRenyiEntropyThresholdImageFilterIUS3IUS3)
itkRenyiEntropyThresholdImageFilterIUS3IUS3___New_orig__ = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS3IUS3___New_orig__
itkRenyiEntropyThresholdImageFilterIUS3IUS3_cast = _itkRenyiEntropyThresholdImageFilterPython.itkRenyiEntropyThresholdImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def renyi_entropy_threshold_image_filter(*args, **kwargs):
    """Procedural interface for RenyiEntropyThresholdImageFilter"""
    import itk
    instance = itk.RenyiEntropyThresholdImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def renyi_entropy_threshold_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.RenyiEntropyThresholdImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.RenyiEntropyThresholdImageFilter.values()[0]
    else:
        filter_object = itk.RenyiEntropyThresholdImageFilter

    renyi_entropy_threshold_image_filter.__doc__ = filter_object.__doc__
    renyi_entropy_threshold_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    renyi_entropy_threshold_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.RenyiEntropyThresholdImageFilter, itkTemplate.itkTemplate):
        renyi_entropy_threshold_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        renyi_entropy_threshold_image_filter.__doc__ += "\n"
        renyi_entropy_threshold_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        renyi_entropy_threshold_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



