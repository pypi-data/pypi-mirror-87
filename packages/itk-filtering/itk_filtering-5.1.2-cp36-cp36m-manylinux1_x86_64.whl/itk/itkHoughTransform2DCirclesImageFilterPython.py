# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageFeaturePython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkHoughTransform2DCirclesImageFilterPython
else:
    import _itkHoughTransform2DCirclesImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkHoughTransform2DCirclesImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkHoughTransform2DCirclesImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkEllipseSpatialObjectPython
import itk.itkSpatialObjectBasePython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkSpatialObjectPropertyPython
import itk.itkRGBAPixelPython
import itk.ITKCommonBasePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkPointPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkVariableLengthVectorPython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkTransformBasePython
import itk.itkArray2DPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython

def itkHoughTransform2DCirclesImageFilterDULF_New():
    return itkHoughTransform2DCirclesImageFilterDULF.New()

class itkHoughTransform2DCirclesImageFilterDULF(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2):
    r"""


    Performs the Hough Transform to find circles in a 2D image.

    This filter derives from the base class ImageToImageFilter. The input
    is an image, and all pixels above some threshold are those we want to
    consider during the process.

    This filter produces two output: 1) The accumulator array, which
    represents probability of centers. 2) The array or radii, which has
    the radius value at each coordinate point.

    When the filter finds a "correct" point, it computes the gradient at
    this point and draws a regular narrow-banded circle using the minimum
    and maximum radius given by the user, and fills in the array of radii.
    The SweepAngle value can be adjusted to improve the segmentation.

    The filter will detect ring-shaped objects in the image, but it also
    finds discs. For a disc to be found, the intensity values within the
    disc must be higher than the surrounding of the disc.

    TOutputPixelType is the pixel type of the accumulator image. An
    unsigned integer type (like 'unsigned long') is usually the best
    choice for this pixel type.

    TRadiusPixelType is the pixel type of the radius image. A floating
    point type is recommended, as the estimation of the radius involves
    floating point calculations. Usually, 'double' is the best choice for
    this pixel type. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF___New_orig__)
    Clone = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_VerifyPreconditions)
    GenerateData = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GenerateData)
    SetRadius = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_SetRadius)
    SetMinimumRadius = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_SetMinimumRadius)
    GetMinimumRadius = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GetMinimumRadius)
    SetMaximumRadius = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_SetMaximumRadius)
    GetMaximumRadius = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GetMaximumRadius)
    SetThreshold = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GetThreshold)
    SetGradientNormThreshold = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_SetGradientNormThreshold)
    GetGradientNormThreshold = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GetGradientNormThreshold)
    GetModifiableRadiusImage = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GetModifiableRadiusImage)
    GetRadiusImage = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GetRadiusImage)
    SetSigmaGradient = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_SetSigmaGradient)
    GetSigmaGradient = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GetSigmaGradient)
    GetCircles = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GetCircles)
    SetNumberOfCircles = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_SetNumberOfCircles)
    GetNumberOfCircles = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GetNumberOfCircles)
    SetDiscRadiusRatio = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_SetDiscRadiusRatio)
    GetDiscRadiusRatio = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GetDiscRadiusRatio)
    SetVariance = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_SetVariance)
    GetVariance = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GetVariance)
    SetSweepAngle = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_SetSweepAngle)
    GetSweepAngle = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GetSweepAngle)
    SetUseImageSpacing = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GetUseImageSpacing)
    IntConvertibleToOutputCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_IntConvertibleToOutputCheck
    
    InputGreaterThanDoubleCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_InputGreaterThanDoubleCheck
    
    OutputPlusIntCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_OutputPlusIntCheck
    
    OutputDividedByIntCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_OutputDividedByIntCheck
    
    __swig_destroy__ = _itkHoughTransform2DCirclesImageFilterPython.delete_itkHoughTransform2DCirclesImageFilterDULF
    cast = _swig_new_static_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_cast)

    def New(*args, **kargs):
        """New() -> itkHoughTransform2DCirclesImageFilterDULF

        Create a new object of the class itkHoughTransform2DCirclesImageFilterDULF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHoughTransform2DCirclesImageFilterDULF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHoughTransform2DCirclesImageFilterDULF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHoughTransform2DCirclesImageFilterDULF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHoughTransform2DCirclesImageFilterDULF in _itkHoughTransform2DCirclesImageFilterPython:
_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_swigregister(itkHoughTransform2DCirclesImageFilterDULF)
itkHoughTransform2DCirclesImageFilterDULF___New_orig__ = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF___New_orig__
itkHoughTransform2DCirclesImageFilterDULF_cast = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_cast


def itkHoughTransform2DCirclesImageFilterFULF_New():
    return itkHoughTransform2DCirclesImageFilterFULF.New()

class itkHoughTransform2DCirclesImageFilterFULF(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2):
    r"""


    Performs the Hough Transform to find circles in a 2D image.

    This filter derives from the base class ImageToImageFilter. The input
    is an image, and all pixels above some threshold are those we want to
    consider during the process.

    This filter produces two output: 1) The accumulator array, which
    represents probability of centers. 2) The array or radii, which has
    the radius value at each coordinate point.

    When the filter finds a "correct" point, it computes the gradient at
    this point and draws a regular narrow-banded circle using the minimum
    and maximum radius given by the user, and fills in the array of radii.
    The SweepAngle value can be adjusted to improve the segmentation.

    The filter will detect ring-shaped objects in the image, but it also
    finds discs. For a disc to be found, the intensity values within the
    disc must be higher than the surrounding of the disc.

    TOutputPixelType is the pixel type of the accumulator image. An
    unsigned integer type (like 'unsigned long') is usually the best
    choice for this pixel type.

    TRadiusPixelType is the pixel type of the radius image. A floating
    point type is recommended, as the estimation of the radius involves
    floating point calculations. Usually, 'double' is the best choice for
    this pixel type. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF___New_orig__)
    Clone = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_VerifyPreconditions)
    GenerateData = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GenerateData)
    SetRadius = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_SetRadius)
    SetMinimumRadius = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_SetMinimumRadius)
    GetMinimumRadius = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GetMinimumRadius)
    SetMaximumRadius = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_SetMaximumRadius)
    GetMaximumRadius = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GetMaximumRadius)
    SetThreshold = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GetThreshold)
    SetGradientNormThreshold = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_SetGradientNormThreshold)
    GetGradientNormThreshold = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GetGradientNormThreshold)
    GetModifiableRadiusImage = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GetModifiableRadiusImage)
    GetRadiusImage = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GetRadiusImage)
    SetSigmaGradient = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_SetSigmaGradient)
    GetSigmaGradient = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GetSigmaGradient)
    GetCircles = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GetCircles)
    SetNumberOfCircles = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_SetNumberOfCircles)
    GetNumberOfCircles = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GetNumberOfCircles)
    SetDiscRadiusRatio = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_SetDiscRadiusRatio)
    GetDiscRadiusRatio = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GetDiscRadiusRatio)
    SetVariance = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_SetVariance)
    GetVariance = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GetVariance)
    SetSweepAngle = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_SetSweepAngle)
    GetSweepAngle = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GetSweepAngle)
    SetUseImageSpacing = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GetUseImageSpacing)
    IntConvertibleToOutputCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_IntConvertibleToOutputCheck
    
    InputGreaterThanDoubleCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_InputGreaterThanDoubleCheck
    
    OutputPlusIntCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_OutputPlusIntCheck
    
    OutputDividedByIntCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_OutputDividedByIntCheck
    
    __swig_destroy__ = _itkHoughTransform2DCirclesImageFilterPython.delete_itkHoughTransform2DCirclesImageFilterFULF
    cast = _swig_new_static_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_cast)

    def New(*args, **kargs):
        """New() -> itkHoughTransform2DCirclesImageFilterFULF

        Create a new object of the class itkHoughTransform2DCirclesImageFilterFULF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHoughTransform2DCirclesImageFilterFULF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHoughTransform2DCirclesImageFilterFULF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHoughTransform2DCirclesImageFilterFULF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHoughTransform2DCirclesImageFilterFULF in _itkHoughTransform2DCirclesImageFilterPython:
_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_swigregister(itkHoughTransform2DCirclesImageFilterFULF)
itkHoughTransform2DCirclesImageFilterFULF___New_orig__ = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF___New_orig__
itkHoughTransform2DCirclesImageFilterFULF_cast = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_cast


def itkHoughTransform2DCirclesImageFilterSSULF_New():
    return itkHoughTransform2DCirclesImageFilterSSULF.New()

class itkHoughTransform2DCirclesImageFilterSSULF(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2IUL2):
    r"""


    Performs the Hough Transform to find circles in a 2D image.

    This filter derives from the base class ImageToImageFilter. The input
    is an image, and all pixels above some threshold are those we want to
    consider during the process.

    This filter produces two output: 1) The accumulator array, which
    represents probability of centers. 2) The array or radii, which has
    the radius value at each coordinate point.

    When the filter finds a "correct" point, it computes the gradient at
    this point and draws a regular narrow-banded circle using the minimum
    and maximum radius given by the user, and fills in the array of radii.
    The SweepAngle value can be adjusted to improve the segmentation.

    The filter will detect ring-shaped objects in the image, but it also
    finds discs. For a disc to be found, the intensity values within the
    disc must be higher than the surrounding of the disc.

    TOutputPixelType is the pixel type of the accumulator image. An
    unsigned integer type (like 'unsigned long') is usually the best
    choice for this pixel type.

    TRadiusPixelType is the pixel type of the radius image. A floating
    point type is recommended, as the estimation of the radius involves
    floating point calculations. Usually, 'double' is the best choice for
    this pixel type. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF___New_orig__)
    Clone = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_VerifyPreconditions)
    GenerateData = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GenerateData)
    SetRadius = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_SetRadius)
    SetMinimumRadius = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_SetMinimumRadius)
    GetMinimumRadius = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GetMinimumRadius)
    SetMaximumRadius = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_SetMaximumRadius)
    GetMaximumRadius = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GetMaximumRadius)
    SetThreshold = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GetThreshold)
    SetGradientNormThreshold = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_SetGradientNormThreshold)
    GetGradientNormThreshold = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GetGradientNormThreshold)
    GetModifiableRadiusImage = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GetModifiableRadiusImage)
    GetRadiusImage = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GetRadiusImage)
    SetSigmaGradient = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_SetSigmaGradient)
    GetSigmaGradient = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GetSigmaGradient)
    GetCircles = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GetCircles)
    SetNumberOfCircles = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_SetNumberOfCircles)
    GetNumberOfCircles = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GetNumberOfCircles)
    SetDiscRadiusRatio = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_SetDiscRadiusRatio)
    GetDiscRadiusRatio = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GetDiscRadiusRatio)
    SetVariance = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_SetVariance)
    GetVariance = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GetVariance)
    SetSweepAngle = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_SetSweepAngle)
    GetSweepAngle = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GetSweepAngle)
    SetUseImageSpacing = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GetUseImageSpacing)
    IntConvertibleToOutputCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_IntConvertibleToOutputCheck
    
    InputGreaterThanDoubleCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_InputGreaterThanDoubleCheck
    
    OutputPlusIntCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_OutputPlusIntCheck
    
    OutputDividedByIntCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_OutputDividedByIntCheck
    
    __swig_destroy__ = _itkHoughTransform2DCirclesImageFilterPython.delete_itkHoughTransform2DCirclesImageFilterSSULF
    cast = _swig_new_static_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_cast)

    def New(*args, **kargs):
        """New() -> itkHoughTransform2DCirclesImageFilterSSULF

        Create a new object of the class itkHoughTransform2DCirclesImageFilterSSULF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHoughTransform2DCirclesImageFilterSSULF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHoughTransform2DCirclesImageFilterSSULF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHoughTransform2DCirclesImageFilterSSULF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHoughTransform2DCirclesImageFilterSSULF in _itkHoughTransform2DCirclesImageFilterPython:
_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_swigregister(itkHoughTransform2DCirclesImageFilterSSULF)
itkHoughTransform2DCirclesImageFilterSSULF___New_orig__ = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF___New_orig__
itkHoughTransform2DCirclesImageFilterSSULF_cast = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_cast


def itkHoughTransform2DCirclesImageFilterUCULF_New():
    return itkHoughTransform2DCirclesImageFilterUCULF.New()

class itkHoughTransform2DCirclesImageFilterUCULF(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2):
    r"""


    Performs the Hough Transform to find circles in a 2D image.

    This filter derives from the base class ImageToImageFilter. The input
    is an image, and all pixels above some threshold are those we want to
    consider during the process.

    This filter produces two output: 1) The accumulator array, which
    represents probability of centers. 2) The array or radii, which has
    the radius value at each coordinate point.

    When the filter finds a "correct" point, it computes the gradient at
    this point and draws a regular narrow-banded circle using the minimum
    and maximum radius given by the user, and fills in the array of radii.
    The SweepAngle value can be adjusted to improve the segmentation.

    The filter will detect ring-shaped objects in the image, but it also
    finds discs. For a disc to be found, the intensity values within the
    disc must be higher than the surrounding of the disc.

    TOutputPixelType is the pixel type of the accumulator image. An
    unsigned integer type (like 'unsigned long') is usually the best
    choice for this pixel type.

    TRadiusPixelType is the pixel type of the radius image. A floating
    point type is recommended, as the estimation of the radius involves
    floating point calculations. Usually, 'double' is the best choice for
    this pixel type. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF___New_orig__)
    Clone = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_VerifyPreconditions)
    GenerateData = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GenerateData)
    SetRadius = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_SetRadius)
    SetMinimumRadius = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_SetMinimumRadius)
    GetMinimumRadius = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GetMinimumRadius)
    SetMaximumRadius = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_SetMaximumRadius)
    GetMaximumRadius = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GetMaximumRadius)
    SetThreshold = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GetThreshold)
    SetGradientNormThreshold = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_SetGradientNormThreshold)
    GetGradientNormThreshold = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GetGradientNormThreshold)
    GetModifiableRadiusImage = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GetModifiableRadiusImage)
    GetRadiusImage = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GetRadiusImage)
    SetSigmaGradient = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_SetSigmaGradient)
    GetSigmaGradient = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GetSigmaGradient)
    GetCircles = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GetCircles)
    SetNumberOfCircles = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_SetNumberOfCircles)
    GetNumberOfCircles = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GetNumberOfCircles)
    SetDiscRadiusRatio = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_SetDiscRadiusRatio)
    GetDiscRadiusRatio = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GetDiscRadiusRatio)
    SetVariance = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_SetVariance)
    GetVariance = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GetVariance)
    SetSweepAngle = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_SetSweepAngle)
    GetSweepAngle = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GetSweepAngle)
    SetUseImageSpacing = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GetUseImageSpacing)
    IntConvertibleToOutputCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_IntConvertibleToOutputCheck
    
    InputGreaterThanDoubleCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_InputGreaterThanDoubleCheck
    
    OutputPlusIntCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_OutputPlusIntCheck
    
    OutputDividedByIntCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_OutputDividedByIntCheck
    
    __swig_destroy__ = _itkHoughTransform2DCirclesImageFilterPython.delete_itkHoughTransform2DCirclesImageFilterUCULF
    cast = _swig_new_static_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_cast)

    def New(*args, **kargs):
        """New() -> itkHoughTransform2DCirclesImageFilterUCULF

        Create a new object of the class itkHoughTransform2DCirclesImageFilterUCULF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHoughTransform2DCirclesImageFilterUCULF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHoughTransform2DCirclesImageFilterUCULF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHoughTransform2DCirclesImageFilterUCULF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHoughTransform2DCirclesImageFilterUCULF in _itkHoughTransform2DCirclesImageFilterPython:
_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_swigregister(itkHoughTransform2DCirclesImageFilterUCULF)
itkHoughTransform2DCirclesImageFilterUCULF___New_orig__ = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF___New_orig__
itkHoughTransform2DCirclesImageFilterUCULF_cast = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_cast


def itkHoughTransform2DCirclesImageFilterUSULF_New():
    return itkHoughTransform2DCirclesImageFilterUSULF.New()

class itkHoughTransform2DCirclesImageFilterUSULF(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2):
    r"""


    Performs the Hough Transform to find circles in a 2D image.

    This filter derives from the base class ImageToImageFilter. The input
    is an image, and all pixels above some threshold are those we want to
    consider during the process.

    This filter produces two output: 1) The accumulator array, which
    represents probability of centers. 2) The array or radii, which has
    the radius value at each coordinate point.

    When the filter finds a "correct" point, it computes the gradient at
    this point and draws a regular narrow-banded circle using the minimum
    and maximum radius given by the user, and fills in the array of radii.
    The SweepAngle value can be adjusted to improve the segmentation.

    The filter will detect ring-shaped objects in the image, but it also
    finds discs. For a disc to be found, the intensity values within the
    disc must be higher than the surrounding of the disc.

    TOutputPixelType is the pixel type of the accumulator image. An
    unsigned integer type (like 'unsigned long') is usually the best
    choice for this pixel type.

    TRadiusPixelType is the pixel type of the radius image. A floating
    point type is recommended, as the estimation of the radius involves
    floating point calculations. Usually, 'double' is the best choice for
    this pixel type. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF___New_orig__)
    Clone = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_VerifyPreconditions)
    GenerateData = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GenerateData)
    SetRadius = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_SetRadius)
    SetMinimumRadius = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_SetMinimumRadius)
    GetMinimumRadius = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GetMinimumRadius)
    SetMaximumRadius = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_SetMaximumRadius)
    GetMaximumRadius = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GetMaximumRadius)
    SetThreshold = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GetThreshold)
    SetGradientNormThreshold = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_SetGradientNormThreshold)
    GetGradientNormThreshold = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GetGradientNormThreshold)
    GetModifiableRadiusImage = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GetModifiableRadiusImage)
    GetRadiusImage = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GetRadiusImage)
    SetSigmaGradient = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_SetSigmaGradient)
    GetSigmaGradient = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GetSigmaGradient)
    GetCircles = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GetCircles)
    SetNumberOfCircles = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_SetNumberOfCircles)
    GetNumberOfCircles = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GetNumberOfCircles)
    SetDiscRadiusRatio = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_SetDiscRadiusRatio)
    GetDiscRadiusRatio = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GetDiscRadiusRatio)
    SetVariance = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_SetVariance)
    GetVariance = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GetVariance)
    SetSweepAngle = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_SetSweepAngle)
    GetSweepAngle = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GetSweepAngle)
    SetUseImageSpacing = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GetUseImageSpacing)
    IntConvertibleToOutputCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_IntConvertibleToOutputCheck
    
    InputGreaterThanDoubleCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_InputGreaterThanDoubleCheck
    
    OutputPlusIntCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_OutputPlusIntCheck
    
    OutputDividedByIntCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_OutputDividedByIntCheck
    
    __swig_destroy__ = _itkHoughTransform2DCirclesImageFilterPython.delete_itkHoughTransform2DCirclesImageFilterUSULF
    cast = _swig_new_static_method(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_cast)

    def New(*args, **kargs):
        """New() -> itkHoughTransform2DCirclesImageFilterUSULF

        Create a new object of the class itkHoughTransform2DCirclesImageFilterUSULF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHoughTransform2DCirclesImageFilterUSULF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHoughTransform2DCirclesImageFilterUSULF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHoughTransform2DCirclesImageFilterUSULF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHoughTransform2DCirclesImageFilterUSULF in _itkHoughTransform2DCirclesImageFilterPython:
_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_swigregister(itkHoughTransform2DCirclesImageFilterUSULF)
itkHoughTransform2DCirclesImageFilterUSULF___New_orig__ = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF___New_orig__
itkHoughTransform2DCirclesImageFilterUSULF_cast = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def hough_transform2_d_circles_image_filter(*args, **kwargs):
    """Procedural interface for HoughTransform2DCirclesImageFilter"""
    import itk
    instance = itk.HoughTransform2DCirclesImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def hough_transform2_d_circles_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.HoughTransform2DCirclesImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.HoughTransform2DCirclesImageFilter.values()[0]
    else:
        filter_object = itk.HoughTransform2DCirclesImageFilter

    hough_transform2_d_circles_image_filter.__doc__ = filter_object.__doc__
    hough_transform2_d_circles_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    hough_transform2_d_circles_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.HoughTransform2DCirclesImageFilter, itkTemplate.itkTemplate):
        hough_transform2_d_circles_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        hough_transform2_d_circles_image_filter.__doc__ += "\n"
        hough_transform2_d_circles_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        hough_transform2_d_circles_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



