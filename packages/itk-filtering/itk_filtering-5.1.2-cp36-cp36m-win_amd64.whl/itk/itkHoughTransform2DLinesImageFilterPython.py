# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageFeaturePython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkHoughTransform2DLinesImageFilterPython
else:
    import _itkHoughTransform2DLinesImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkHoughTransform2DLinesImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkHoughTransform2DLinesImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkPointPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkRGBAPixelPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkLineSpatialObjectPython
import itk.itkSpatialObjectBasePython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkDiffusionTensor3DPython
import itk.itkArray2DPython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkTransformBasePython
import itk.itkSpatialObjectPropertyPython
import itk.itkLineSpatialObjectPointPython
import itk.itkSpatialObjectPointPython

def itkHoughTransform2DLinesImageFilterDD_New():
    return itkHoughTransform2DLinesImageFilterDD.New()

class itkHoughTransform2DLinesImageFilterDD(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""


    Performs the Hough Transform to find 2D straight lines in a 2D image.

    This filter derives from ImageToImageFilter. The input is an image,
    and all pixels above some threshold are those to be extracted. The
    output is the image of the accumulator. GetLines() returns a list of
    LinesSpatialObjects.

    Lines are parameterized in the form:

    $ R = x \\cos(\\theta) + y \\sin(\\theta) $ where $R$ is the
    perpendicular distance from the origin and $\\theta$ the angle with
    the normal.

    The output is the accumulator array: The first dimension (X)
    represents the distance R from the corner to the line.

    The second dimension (Y) represents the angle between the X axis and
    the normal to the line.

    The size of the array depends on the AngleAxisSize that could be set
    (500 by default) for the angle axis. The distance axis depends on the
    size of the diagonal of the input image.

    See:  LineSpatialObject 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterDD___New_orig__)
    Clone = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterDD_Clone)
    GenerateData = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterDD_GenerateData)
    SetThreshold = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterDD_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterDD_GetThreshold)
    SetAngleResolution = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterDD_SetAngleResolution)
    GetAngleResolution = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterDD_GetAngleResolution)
    Simplify = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterDD_Simplify)
    GetModifiableSimplifyAccumulator = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterDD_GetModifiableSimplifyAccumulator)
    GetSimplifyAccumulator = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterDD_GetSimplifyAccumulator)
    GetLines = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterDD_GetLines)
    SetNumberOfLines = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterDD_SetNumberOfLines)
    GetNumberOfLines = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterDD_GetNumberOfLines)
    SetDiscRadius = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterDD_SetDiscRadius)
    GetDiscRadius = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterDD_GetDiscRadius)
    SetVariance = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterDD_SetVariance)
    GetVariance = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterDD_GetVariance)
    IntConvertibleToOutputCheck = _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterDD_IntConvertibleToOutputCheck
    
    InputGreaterThanFloatCheck = _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterDD_InputGreaterThanFloatCheck
    
    OutputPlusIntCheck = _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterDD_OutputPlusIntCheck
    
    __swig_destroy__ = _itkHoughTransform2DLinesImageFilterPython.delete_itkHoughTransform2DLinesImageFilterDD
    cast = _swig_new_static_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterDD_cast)

    def New(*args, **kargs):
        """New() -> itkHoughTransform2DLinesImageFilterDD

        Create a new object of the class itkHoughTransform2DLinesImageFilterDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHoughTransform2DLinesImageFilterDD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHoughTransform2DLinesImageFilterDD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHoughTransform2DLinesImageFilterDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHoughTransform2DLinesImageFilterDD in _itkHoughTransform2DLinesImageFilterPython:
_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterDD_swigregister(itkHoughTransform2DLinesImageFilterDD)
itkHoughTransform2DLinesImageFilterDD___New_orig__ = _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterDD___New_orig__
itkHoughTransform2DLinesImageFilterDD_cast = _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterDD_cast


def itkHoughTransform2DLinesImageFilterFF_New():
    return itkHoughTransform2DLinesImageFilterFF.New()

class itkHoughTransform2DLinesImageFilterFF(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""


    Performs the Hough Transform to find 2D straight lines in a 2D image.

    This filter derives from ImageToImageFilter. The input is an image,
    and all pixels above some threshold are those to be extracted. The
    output is the image of the accumulator. GetLines() returns a list of
    LinesSpatialObjects.

    Lines are parameterized in the form:

    $ R = x \\cos(\\theta) + y \\sin(\\theta) $ where $R$ is the
    perpendicular distance from the origin and $\\theta$ the angle with
    the normal.

    The output is the accumulator array: The first dimension (X)
    represents the distance R from the corner to the line.

    The second dimension (Y) represents the angle between the X axis and
    the normal to the line.

    The size of the array depends on the AngleAxisSize that could be set
    (500 by default) for the angle axis. The distance axis depends on the
    size of the diagonal of the input image.

    See:  LineSpatialObject 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF___New_orig__)
    Clone = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_Clone)
    GenerateData = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GenerateData)
    SetThreshold = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GetThreshold)
    SetAngleResolution = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_SetAngleResolution)
    GetAngleResolution = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GetAngleResolution)
    Simplify = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_Simplify)
    GetModifiableSimplifyAccumulator = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GetModifiableSimplifyAccumulator)
    GetSimplifyAccumulator = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GetSimplifyAccumulator)
    GetLines = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GetLines)
    SetNumberOfLines = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_SetNumberOfLines)
    GetNumberOfLines = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GetNumberOfLines)
    SetDiscRadius = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_SetDiscRadius)
    GetDiscRadius = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GetDiscRadius)
    SetVariance = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_SetVariance)
    GetVariance = _swig_new_instance_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_GetVariance)
    IntConvertibleToOutputCheck = _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_IntConvertibleToOutputCheck
    
    InputGreaterThanFloatCheck = _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_InputGreaterThanFloatCheck
    
    OutputPlusIntCheck = _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_OutputPlusIntCheck
    
    __swig_destroy__ = _itkHoughTransform2DLinesImageFilterPython.delete_itkHoughTransform2DLinesImageFilterFF
    cast = _swig_new_static_method(_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_cast)

    def New(*args, **kargs):
        """New() -> itkHoughTransform2DLinesImageFilterFF

        Create a new object of the class itkHoughTransform2DLinesImageFilterFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHoughTransform2DLinesImageFilterFF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHoughTransform2DLinesImageFilterFF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHoughTransform2DLinesImageFilterFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHoughTransform2DLinesImageFilterFF in _itkHoughTransform2DLinesImageFilterPython:
_itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_swigregister(itkHoughTransform2DLinesImageFilterFF)
itkHoughTransform2DLinesImageFilterFF___New_orig__ = _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF___New_orig__
itkHoughTransform2DLinesImageFilterFF_cast = _itkHoughTransform2DLinesImageFilterPython.itkHoughTransform2DLinesImageFilterFF_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def hough_transform2_d_lines_image_filter(*args, **kwargs):
    """Procedural interface for HoughTransform2DLinesImageFilter"""
    import itk
    instance = itk.HoughTransform2DLinesImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def hough_transform2_d_lines_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.HoughTransform2DLinesImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.HoughTransform2DLinesImageFilter.values()[0]
    else:
        filter_object = itk.HoughTransform2DLinesImageFilter

    hough_transform2_d_lines_image_filter.__doc__ = filter_object.__doc__
    hough_transform2_d_lines_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    hough_transform2_d_lines_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.HoughTransform2DLinesImageFilter, itkTemplate.itkTemplate):
        hough_transform2_d_lines_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        hough_transform2_d_lines_image_filter.__doc__ += "\n"
        hough_transform2_d_lines_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        hough_transform2_d_lines_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



