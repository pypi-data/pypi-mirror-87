# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKThresholdingPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBinaryThresholdProjectionImageFilterPython
else:
    import _itkBinaryThresholdProjectionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkBinaryThresholdProjectionImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkBinaryThresholdProjectionImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.pyBasePython
import itk.stdcomplexPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.itkRGBPixelPython
import itk.itkIndexPython
import itk.ITKCommonBasePython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterBPython

def itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterID2ID2_Superclass.New()

class itkBinaryThresholdProjectionImageFilterID2ID2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterID2ID2_Superclass
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterID2ID2_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterID2ID2_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterID2ID2_Superclass)
itkBinaryThresholdProjectionImageFilterID2ID2_Superclass___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_Superclass___New_orig__
itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_cast


def itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterID3ID2_Superclass.New()

class itkBinaryThresholdProjectionImageFilterID3ID2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterID3ID2):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterID3ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterID3ID2_Superclass
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterID3ID2_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterID3ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterID3ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterID3ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterID3ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterID3ID2_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterID3ID2_Superclass)
itkBinaryThresholdProjectionImageFilterID3ID2_Superclass___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_Superclass___New_orig__
itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_cast


def itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterID3ID3_Superclass.New()

class itkBinaryThresholdProjectionImageFilterID3ID3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterID3ID3_Superclass
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterID3ID3_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterID3ID3_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterID3ID3_Superclass)
itkBinaryThresholdProjectionImageFilterID3ID3_Superclass___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_Superclass___New_orig__
itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_cast


def itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass.New()

class itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass)
itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass___New_orig__
itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_cast


def itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass.New()

class itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass)
itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass___New_orig__
itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_cast


def itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass.New()

class itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass)
itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass___New_orig__
itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_cast


def itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass.New()

class itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass)
itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass___New_orig__
itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass_cast


def itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass.New()

class itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS3ISS2):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass)
itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass___New_orig__
itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass_cast


def itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass.New()

class itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass)
itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass___New_orig__
itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass_cast


def itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass.New()

class itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass)
itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass___New_orig__
itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_cast


def itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass.New()

class itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass)
itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass___New_orig__
itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_cast


def itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass.New()

class itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass)
itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass___New_orig__
itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_cast


def itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass.New()

class itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass)
itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass___New_orig__
itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_cast


def itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass.New()

class itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass)
itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass___New_orig__
itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_cast


def itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass.New()

class itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass)
itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass___New_orig__
itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_cast


def itkBinaryThresholdProjectionImageFilterID2ID2_New():
    return itkBinaryThresholdProjectionImageFilterID2ID2.New()

class itkBinaryThresholdProjectionImageFilterID2ID2(itkBinaryThresholdProjectionImageFilterID2ID2_Superclass):
    r"""


    BinaryThreshold projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    the original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:  MedianProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MaximumProjectionImageFilter

    See:  MinimumProjectionImageFilter

    See:  StandardDeviationProjectionImageFilter

    See:  SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_GetBackgroundValue)
    SetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_SetThresholdValue)
    GetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_GetThresholdValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterID2ID2
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterID2ID2

        Create a new object of the class itkBinaryThresholdProjectionImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterID2ID2 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_swigregister(itkBinaryThresholdProjectionImageFilterID2ID2)
itkBinaryThresholdProjectionImageFilterID2ID2___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2___New_orig__
itkBinaryThresholdProjectionImageFilterID2ID2_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_cast


def itkBinaryThresholdProjectionImageFilterID3ID2_New():
    return itkBinaryThresholdProjectionImageFilterID3ID2.New()

class itkBinaryThresholdProjectionImageFilterID3ID2(itkBinaryThresholdProjectionImageFilterID3ID2_Superclass):
    r"""


    BinaryThreshold projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    the original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:  MedianProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MaximumProjectionImageFilter

    See:  MinimumProjectionImageFilter

    See:  StandardDeviationProjectionImageFilter

    See:  SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_GetBackgroundValue)
    SetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_SetThresholdValue)
    GetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_GetThresholdValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterID3ID2
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterID3ID2

        Create a new object of the class itkBinaryThresholdProjectionImageFilterID3ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterID3ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterID3ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterID3ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterID3ID2 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_swigregister(itkBinaryThresholdProjectionImageFilterID3ID2)
itkBinaryThresholdProjectionImageFilterID3ID2___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2___New_orig__
itkBinaryThresholdProjectionImageFilterID3ID2_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_cast


def itkBinaryThresholdProjectionImageFilterID3ID3_New():
    return itkBinaryThresholdProjectionImageFilterID3ID3.New()

class itkBinaryThresholdProjectionImageFilterID3ID3(itkBinaryThresholdProjectionImageFilterID3ID3_Superclass):
    r"""


    BinaryThreshold projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    the original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:  MedianProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MaximumProjectionImageFilter

    See:  MinimumProjectionImageFilter

    See:  StandardDeviationProjectionImageFilter

    See:  SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_GetBackgroundValue)
    SetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_SetThresholdValue)
    GetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_GetThresholdValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterID3ID3
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterID3ID3

        Create a new object of the class itkBinaryThresholdProjectionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterID3ID3 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_swigregister(itkBinaryThresholdProjectionImageFilterID3ID3)
itkBinaryThresholdProjectionImageFilterID3ID3___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3___New_orig__
itkBinaryThresholdProjectionImageFilterID3ID3_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_cast


def itkBinaryThresholdProjectionImageFilterIF2IF2_New():
    return itkBinaryThresholdProjectionImageFilterIF2IF2.New()

class itkBinaryThresholdProjectionImageFilterIF2IF2(itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass):
    r"""


    BinaryThreshold projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    the original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:  MedianProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MaximumProjectionImageFilter

    See:  MinimumProjectionImageFilter

    See:  StandardDeviationProjectionImageFilter

    See:  SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_GetBackgroundValue)
    SetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_SetThresholdValue)
    GetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_GetThresholdValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIF2IF2
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIF2IF2

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIF2IF2 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_swigregister(itkBinaryThresholdProjectionImageFilterIF2IF2)
itkBinaryThresholdProjectionImageFilterIF2IF2___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2___New_orig__
itkBinaryThresholdProjectionImageFilterIF2IF2_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_cast


def itkBinaryThresholdProjectionImageFilterIF3IF2_New():
    return itkBinaryThresholdProjectionImageFilterIF3IF2.New()

class itkBinaryThresholdProjectionImageFilterIF3IF2(itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass):
    r"""


    BinaryThreshold projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    the original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:  MedianProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MaximumProjectionImageFilter

    See:  MinimumProjectionImageFilter

    See:  StandardDeviationProjectionImageFilter

    See:  SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_GetBackgroundValue)
    SetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_SetThresholdValue)
    GetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_GetThresholdValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIF3IF2
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIF3IF2

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIF3IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIF3IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIF3IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIF3IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIF3IF2 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_swigregister(itkBinaryThresholdProjectionImageFilterIF3IF2)
itkBinaryThresholdProjectionImageFilterIF3IF2___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2___New_orig__
itkBinaryThresholdProjectionImageFilterIF3IF2_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_cast


def itkBinaryThresholdProjectionImageFilterIF3IF3_New():
    return itkBinaryThresholdProjectionImageFilterIF3IF3.New()

class itkBinaryThresholdProjectionImageFilterIF3IF3(itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass):
    r"""


    BinaryThreshold projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    the original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:  MedianProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MaximumProjectionImageFilter

    See:  MinimumProjectionImageFilter

    See:  StandardDeviationProjectionImageFilter

    See:  SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_GetBackgroundValue)
    SetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_SetThresholdValue)
    GetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_GetThresholdValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIF3IF3
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIF3IF3

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIF3IF3 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_swigregister(itkBinaryThresholdProjectionImageFilterIF3IF3)
itkBinaryThresholdProjectionImageFilterIF3IF3___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3___New_orig__
itkBinaryThresholdProjectionImageFilterIF3IF3_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_cast


def itkBinaryThresholdProjectionImageFilterISS2ISS2_New():
    return itkBinaryThresholdProjectionImageFilterISS2ISS2.New()

class itkBinaryThresholdProjectionImageFilterISS2ISS2(itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass):
    r"""


    BinaryThreshold projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    the original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:  MedianProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MaximumProjectionImageFilter

    See:  MinimumProjectionImageFilter

    See:  StandardDeviationProjectionImageFilter

    See:  SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_GetBackgroundValue)
    SetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_SetThresholdValue)
    GetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_GetThresholdValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterISS2ISS2

        Create a new object of the class itkBinaryThresholdProjectionImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterISS2ISS2 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_swigregister(itkBinaryThresholdProjectionImageFilterISS2ISS2)
itkBinaryThresholdProjectionImageFilterISS2ISS2___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2___New_orig__
itkBinaryThresholdProjectionImageFilterISS2ISS2_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_cast


def itkBinaryThresholdProjectionImageFilterISS3ISS2_New():
    return itkBinaryThresholdProjectionImageFilterISS3ISS2.New()

class itkBinaryThresholdProjectionImageFilterISS3ISS2(itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass):
    r"""


    BinaryThreshold projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    the original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:  MedianProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MaximumProjectionImageFilter

    See:  MinimumProjectionImageFilter

    See:  StandardDeviationProjectionImageFilter

    See:  SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_GetBackgroundValue)
    SetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_SetThresholdValue)
    GetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_GetThresholdValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterISS3ISS2
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterISS3ISS2

        Create a new object of the class itkBinaryThresholdProjectionImageFilterISS3ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterISS3ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterISS3ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterISS3ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterISS3ISS2 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_swigregister(itkBinaryThresholdProjectionImageFilterISS3ISS2)
itkBinaryThresholdProjectionImageFilterISS3ISS2___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2___New_orig__
itkBinaryThresholdProjectionImageFilterISS3ISS2_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_cast


def itkBinaryThresholdProjectionImageFilterISS3ISS3_New():
    return itkBinaryThresholdProjectionImageFilterISS3ISS3.New()

class itkBinaryThresholdProjectionImageFilterISS3ISS3(itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass):
    r"""


    BinaryThreshold projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    the original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:  MedianProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MaximumProjectionImageFilter

    See:  MinimumProjectionImageFilter

    See:  StandardDeviationProjectionImageFilter

    See:  SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_GetBackgroundValue)
    SetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_SetThresholdValue)
    GetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_GetThresholdValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterISS3ISS3

        Create a new object of the class itkBinaryThresholdProjectionImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterISS3ISS3 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_swigregister(itkBinaryThresholdProjectionImageFilterISS3ISS3)
itkBinaryThresholdProjectionImageFilterISS3ISS3___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3___New_orig__
itkBinaryThresholdProjectionImageFilterISS3ISS3_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_cast


def itkBinaryThresholdProjectionImageFilterIUC2IUC2_New():
    return itkBinaryThresholdProjectionImageFilterIUC2IUC2.New()

class itkBinaryThresholdProjectionImageFilterIUC2IUC2(itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass):
    r"""


    BinaryThreshold projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    the original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:  MedianProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MaximumProjectionImageFilter

    See:  MinimumProjectionImageFilter

    See:  StandardDeviationProjectionImageFilter

    See:  SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_GetBackgroundValue)
    SetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_SetThresholdValue)
    GetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_GetThresholdValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUC2IUC2

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUC2IUC2 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_swigregister(itkBinaryThresholdProjectionImageFilterIUC2IUC2)
itkBinaryThresholdProjectionImageFilterIUC2IUC2___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2___New_orig__
itkBinaryThresholdProjectionImageFilterIUC2IUC2_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_cast


def itkBinaryThresholdProjectionImageFilterIUC3IUC2_New():
    return itkBinaryThresholdProjectionImageFilterIUC3IUC2.New()

class itkBinaryThresholdProjectionImageFilterIUC3IUC2(itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass):
    r"""


    BinaryThreshold projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    the original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:  MedianProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MaximumProjectionImageFilter

    See:  MinimumProjectionImageFilter

    See:  StandardDeviationProjectionImageFilter

    See:  SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_GetBackgroundValue)
    SetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_SetThresholdValue)
    GetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_GetThresholdValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUC3IUC2
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUC3IUC2

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUC3IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUC3IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUC3IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUC3IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUC3IUC2 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_swigregister(itkBinaryThresholdProjectionImageFilterIUC3IUC2)
itkBinaryThresholdProjectionImageFilterIUC3IUC2___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2___New_orig__
itkBinaryThresholdProjectionImageFilterIUC3IUC2_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_cast


def itkBinaryThresholdProjectionImageFilterIUC3IUC3_New():
    return itkBinaryThresholdProjectionImageFilterIUC3IUC3.New()

class itkBinaryThresholdProjectionImageFilterIUC3IUC3(itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass):
    r"""


    BinaryThreshold projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    the original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:  MedianProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MaximumProjectionImageFilter

    See:  MinimumProjectionImageFilter

    See:  StandardDeviationProjectionImageFilter

    See:  SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_GetBackgroundValue)
    SetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_SetThresholdValue)
    GetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_GetThresholdValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUC3IUC3

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUC3IUC3 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_swigregister(itkBinaryThresholdProjectionImageFilterIUC3IUC3)
itkBinaryThresholdProjectionImageFilterIUC3IUC3___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3___New_orig__
itkBinaryThresholdProjectionImageFilterIUC3IUC3_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_cast


def itkBinaryThresholdProjectionImageFilterIUS2IUS2_New():
    return itkBinaryThresholdProjectionImageFilterIUS2IUS2.New()

class itkBinaryThresholdProjectionImageFilterIUS2IUS2(itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass):
    r"""


    BinaryThreshold projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    the original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:  MedianProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MaximumProjectionImageFilter

    See:  MinimumProjectionImageFilter

    See:  StandardDeviationProjectionImageFilter

    See:  SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_GetBackgroundValue)
    SetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_SetThresholdValue)
    GetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_GetThresholdValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUS2IUS2

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUS2IUS2 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_swigregister(itkBinaryThresholdProjectionImageFilterIUS2IUS2)
itkBinaryThresholdProjectionImageFilterIUS2IUS2___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2___New_orig__
itkBinaryThresholdProjectionImageFilterIUS2IUS2_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_cast


def itkBinaryThresholdProjectionImageFilterIUS3IUS2_New():
    return itkBinaryThresholdProjectionImageFilterIUS3IUS2.New()

class itkBinaryThresholdProjectionImageFilterIUS3IUS2(itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass):
    r"""


    BinaryThreshold projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    the original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:  MedianProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MaximumProjectionImageFilter

    See:  MinimumProjectionImageFilter

    See:  StandardDeviationProjectionImageFilter

    See:  SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_GetBackgroundValue)
    SetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_SetThresholdValue)
    GetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_GetThresholdValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUS3IUS2
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUS3IUS2

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUS3IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUS3IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUS3IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUS3IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUS3IUS2 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_swigregister(itkBinaryThresholdProjectionImageFilterIUS3IUS2)
itkBinaryThresholdProjectionImageFilterIUS3IUS2___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2___New_orig__
itkBinaryThresholdProjectionImageFilterIUS3IUS2_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_cast


def itkBinaryThresholdProjectionImageFilterIUS3IUS3_New():
    return itkBinaryThresholdProjectionImageFilterIUS3IUS3.New()

class itkBinaryThresholdProjectionImageFilterIUS3IUS3(itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass):
    r"""


    BinaryThreshold projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    the original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:  MedianProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MeanProjectionImageFilter

    See:  MaximumProjectionImageFilter

    See:  MinimumProjectionImageFilter

    See:  StandardDeviationProjectionImageFilter

    See:  SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_GetBackgroundValue)
    SetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_SetThresholdValue)
    GetThresholdValue = _swig_new_instance_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_GetThresholdValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUS3IUS3

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUS3IUS3 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_swigregister(itkBinaryThresholdProjectionImageFilterIUS3IUS3)
itkBinaryThresholdProjectionImageFilterIUS3IUS3___New_orig__ = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3___New_orig__
itkBinaryThresholdProjectionImageFilterIUS3IUS3_cast = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def projection_image_filter(*args, **kwargs):
    """Procedural interface for ProjectionImageFilter"""
    import itk
    instance = itk.ProjectionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def projection_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ProjectionImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ProjectionImageFilter.values()[0]
    else:
        filter_object = itk.ProjectionImageFilter

    projection_image_filter.__doc__ = filter_object.__doc__
    projection_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    projection_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ProjectionImageFilter, itkTemplate.itkTemplate):
        projection_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        projection_image_filter.__doc__ += "\n"
        projection_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        projection_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def binary_threshold_projection_image_filter(*args, **kwargs):
    """Procedural interface for BinaryThresholdProjectionImageFilter"""
    import itk
    instance = itk.BinaryThresholdProjectionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def binary_threshold_projection_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.BinaryThresholdProjectionImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.BinaryThresholdProjectionImageFilter.values()[0]
    else:
        filter_object = itk.BinaryThresholdProjectionImageFilter

    binary_threshold_projection_image_filter.__doc__ = filter_object.__doc__
    binary_threshold_projection_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    binary_threshold_projection_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.BinaryThresholdProjectionImageFilter, itkTemplate.itkTemplate):
        binary_threshold_projection_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        binary_threshold_projection_image_filter.__doc__ += "\n"
        binary_threshold_projection_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        binary_threshold_projection_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



