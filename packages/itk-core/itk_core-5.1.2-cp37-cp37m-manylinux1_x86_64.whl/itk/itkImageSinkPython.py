# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKCommonPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkImageSinkPython
else:
    import _itkImageSinkPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkImageSinkPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkImageSinkPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkImageToImageFilterCommonPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.stdcomplexPython
import itk.itkRGBAPixelPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
class itkImageSinkICF2(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICF2_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICF2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICF2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICF2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICF2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkICF2
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkICF2_cast)

# Register itkImageSinkICF2 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkICF2_swigregister(itkImageSinkICF2)
itkImageSinkICF2_cast = _itkImageSinkPython.itkImageSinkICF2_cast

class itkImageSinkICF3(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICF3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICF3_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICF3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICF3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICF3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICF3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkICF3
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkICF3_cast)

# Register itkImageSinkICF3 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkICF3_swigregister(itkImageSinkICF3)
itkImageSinkICF3_cast = _itkImageSinkPython.itkImageSinkICF3_cast

class itkImageSinkICVF22(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF22_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF22_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF22_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF22_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF22_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF22_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkICVF22
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkICVF22_cast)

# Register itkImageSinkICVF22 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkICVF22_swigregister(itkImageSinkICVF22)
itkImageSinkICVF22_cast = _itkImageSinkPython.itkImageSinkICVF22_cast

class itkImageSinkICVF23(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF23_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF23_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF23_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF23_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF23_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF23_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkICVF23
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkICVF23_cast)

# Register itkImageSinkICVF23 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkICVF23_swigregister(itkImageSinkICVF23)
itkImageSinkICVF23_cast = _itkImageSinkPython.itkImageSinkICVF23_cast

class itkImageSinkICVF32(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF32_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF32_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF32_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF32_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF32_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF32_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkICVF32
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkICVF32_cast)

# Register itkImageSinkICVF32 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkICVF32_swigregister(itkImageSinkICVF32)
itkImageSinkICVF32_cast = _itkImageSinkPython.itkImageSinkICVF32_cast

class itkImageSinkICVF33(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF33_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF33_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF33_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF33_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF33_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF33_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkICVF33
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkICVF33_cast)

# Register itkImageSinkICVF33 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkICVF33_swigregister(itkImageSinkICVF33)
itkImageSinkICVF33_cast = _itkImageSinkPython.itkImageSinkICVF33_cast

class itkImageSinkICVF42(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF42_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF42_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF42_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF42_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF42_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF42_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkICVF42
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkICVF42_cast)

# Register itkImageSinkICVF42 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkICVF42_swigregister(itkImageSinkICVF42)
itkImageSinkICVF42_cast = _itkImageSinkPython.itkImageSinkICVF42_cast

class itkImageSinkICVF43(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF43_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF43_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF43_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF43_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF43_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkICVF43_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkICVF43
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkICVF43_cast)

# Register itkImageSinkICVF43 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkICVF43_swigregister(itkImageSinkICVF43)
itkImageSinkICVF43_cast = _itkImageSinkPython.itkImageSinkICVF43_cast

class itkImageSinkID2(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkID2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkID2_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkID2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkID2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkID2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkID2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkID2
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkID2_cast)

# Register itkImageSinkID2 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkID2_swigregister(itkImageSinkID2)
itkImageSinkID2_cast = _itkImageSinkPython.itkImageSinkID2_cast

class itkImageSinkID3(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkID3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkID3_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkID3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkID3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkID3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkID3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkID3
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkID3_cast)

# Register itkImageSinkID3 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkID3_swigregister(itkImageSinkID3)
itkImageSinkID3_cast = _itkImageSinkPython.itkImageSinkID3_cast

class itkImageSinkIF2(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIF2_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIF2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIF2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIF2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIF2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIF2
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIF2_cast)

# Register itkImageSinkIF2 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIF2_swigregister(itkImageSinkIF2)
itkImageSinkIF2_cast = _itkImageSinkPython.itkImageSinkIF2_cast

class itkImageSinkIF3(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIF3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIF3_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIF3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIF3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIF3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIF3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIF3
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIF3_cast)

# Register itkImageSinkIF3 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIF3_swigregister(itkImageSinkIF3)
itkImageSinkIF3_cast = _itkImageSinkPython.itkImageSinkIF3_cast

class itkImageSinkIRGBAUC2(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBAUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBAUC2_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBAUC2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBAUC2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBAUC2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBAUC2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIRGBAUC2
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIRGBAUC2_cast)

# Register itkImageSinkIRGBAUC2 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIRGBAUC2_swigregister(itkImageSinkIRGBAUC2)
itkImageSinkIRGBAUC2_cast = _itkImageSinkPython.itkImageSinkIRGBAUC2_cast

class itkImageSinkIRGBAUC3(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBAUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBAUC3_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBAUC3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBAUC3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBAUC3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBAUC3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIRGBAUC3
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIRGBAUC3_cast)

# Register itkImageSinkIRGBAUC3 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIRGBAUC3_swigregister(itkImageSinkIRGBAUC3)
itkImageSinkIRGBAUC3_cast = _itkImageSinkPython.itkImageSinkIRGBAUC3_cast

class itkImageSinkIRGBUC2(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBUC2_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBUC2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBUC2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBUC2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBUC2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIRGBUC2
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIRGBUC2_cast)

# Register itkImageSinkIRGBUC2 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIRGBUC2_swigregister(itkImageSinkIRGBUC2)
itkImageSinkIRGBUC2_cast = _itkImageSinkPython.itkImageSinkIRGBUC2_cast

class itkImageSinkIRGBUC3(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBUC3_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBUC3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBUC3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBUC3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIRGBUC3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIRGBUC3
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIRGBUC3_cast)

# Register itkImageSinkIRGBUC3 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIRGBUC3_swigregister(itkImageSinkIRGBUC3)
itkImageSinkIRGBUC3_cast = _itkImageSinkPython.itkImageSinkIRGBUC3_cast

class itkImageSinkISS2(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkISS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkISS2_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkISS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkISS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkISS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkISS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkISS2
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkISS2_cast)

# Register itkImageSinkISS2 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkISS2_swigregister(itkImageSinkISS2)
itkImageSinkISS2_cast = _itkImageSinkPython.itkImageSinkISS2_cast

class itkImageSinkISS3(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkISS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkISS3_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkISS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkISS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkISS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkISS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkISS3
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkISS3_cast)

# Register itkImageSinkISS3 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkISS3_swigregister(itkImageSinkISS3)
itkImageSinkISS3_cast = _itkImageSinkPython.itkImageSinkISS3_cast

class itkImageSinkIUC2(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUC2_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUC2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUC2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUC2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUC2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIUC2
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIUC2_cast)

# Register itkImageSinkIUC2 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIUC2_swigregister(itkImageSinkIUC2)
itkImageSinkIUC2_cast = _itkImageSinkPython.itkImageSinkIUC2_cast

class itkImageSinkIUC3(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUC3_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUC3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUC3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUC3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUC3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIUC3
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIUC3_cast)

# Register itkImageSinkIUC3 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIUC3_swigregister(itkImageSinkIUC3)
itkImageSinkIUC3_cast = _itkImageSinkPython.itkImageSinkIUC3_cast

class itkImageSinkIUS2(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUS2_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIUS2
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIUS2_cast)

# Register itkImageSinkIUS2 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIUS2_swigregister(itkImageSinkIUS2)
itkImageSinkIUS2_cast = _itkImageSinkPython.itkImageSinkIUS2_cast

class itkImageSinkIUS3(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUS3_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIUS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIUS3
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIUS3_cast)

# Register itkImageSinkIUS3 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIUS3_swigregister(itkImageSinkIUS3)
itkImageSinkIUS3_cast = _itkImageSinkPython.itkImageSinkIUS3_cast

class itkImageSinkIVF22(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF22_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF22_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF22_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF22_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF22_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF22_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIVF22
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIVF22_cast)

# Register itkImageSinkIVF22 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIVF22_swigregister(itkImageSinkIVF22)
itkImageSinkIVF22_cast = _itkImageSinkPython.itkImageSinkIVF22_cast

class itkImageSinkIVF23(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF23_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF23_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF23_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF23_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF23_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF23_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIVF23
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIVF23_cast)

# Register itkImageSinkIVF23 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIVF23_swigregister(itkImageSinkIVF23)
itkImageSinkIVF23_cast = _itkImageSinkPython.itkImageSinkIVF23_cast

class itkImageSinkIVF32(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF32_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF32_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF32_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF32_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF32_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF32_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIVF32
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIVF32_cast)

# Register itkImageSinkIVF32 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIVF32_swigregister(itkImageSinkIVF32)
itkImageSinkIVF32_cast = _itkImageSinkPython.itkImageSinkIVF32_cast

class itkImageSinkIVF33(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF33_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF33_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF33_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF33_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF33_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF33_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIVF33
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIVF33_cast)

# Register itkImageSinkIVF33 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIVF33_swigregister(itkImageSinkIVF33)
itkImageSinkIVF33_cast = _itkImageSinkPython.itkImageSinkIVF33_cast

class itkImageSinkIVF42(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF42_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF42_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF42_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF42_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF42_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF42_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIVF42
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIVF42_cast)

# Register itkImageSinkIVF42 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIVF42_swigregister(itkImageSinkIVF42)
itkImageSinkIVF42_cast = _itkImageSinkPython.itkImageSinkIVF42_cast

class itkImageSinkIVF43(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF43_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF43_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF43_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF43_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF43_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkIVF43_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkIVF43
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkIVF43_cast)

# Register itkImageSinkIVF43 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkIVF43_swigregister(itkImageSinkIVF43)
itkImageSinkIVF43_cast = _itkImageSinkPython.itkImageSinkIVF43_cast

class itkImageSinkVID2(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVID2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVID2_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVID2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVID2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVID2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVID2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkVID2
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkVID2_cast)

# Register itkImageSinkVID2 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkVID2_swigregister(itkImageSinkVID2)
itkImageSinkVID2_cast = _itkImageSinkPython.itkImageSinkVID2_cast

class itkImageSinkVID3(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVID3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVID3_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVID3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVID3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVID3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVID3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkVID3
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkVID3_cast)

# Register itkImageSinkVID3 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkVID3_swigregister(itkImageSinkVID3)
itkImageSinkVID3_cast = _itkImageSinkPython.itkImageSinkVID3_cast

class itkImageSinkVIF2(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIF2_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIF2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIF2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIF2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIF2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkVIF2
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkVIF2_cast)

# Register itkImageSinkVIF2 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkVIF2_swigregister(itkImageSinkVIF2)
itkImageSinkVIF2_cast = _itkImageSinkPython.itkImageSinkVIF2_cast

class itkImageSinkVIF3(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIF3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIF3_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIF3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIF3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIF3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIF3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkVIF3
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkVIF3_cast)

# Register itkImageSinkVIF3 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkVIF3_swigregister(itkImageSinkVIF3)
itkImageSinkVIF3_cast = _itkImageSinkPython.itkImageSinkVIF3_cast

class itkImageSinkVISS2(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVISS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVISS2_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVISS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVISS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVISS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVISS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkVISS2
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkVISS2_cast)

# Register itkImageSinkVISS2 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkVISS2_swigregister(itkImageSinkVISS2)
itkImageSinkVISS2_cast = _itkImageSinkPython.itkImageSinkVISS2_cast

class itkImageSinkVISS3(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVISS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVISS3_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVISS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVISS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVISS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVISS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkVISS3
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkVISS3_cast)

# Register itkImageSinkVISS3 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkVISS3_swigregister(itkImageSinkVISS3)
itkImageSinkVISS3_cast = _itkImageSinkPython.itkImageSinkVISS3_cast

class itkImageSinkVIUC2(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUC2_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUC2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUC2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUC2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUC2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkVIUC2
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkVIUC2_cast)

# Register itkImageSinkVIUC2 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkVIUC2_swigregister(itkImageSinkVIUC2)
itkImageSinkVIUC2_cast = _itkImageSinkPython.itkImageSinkVIUC2_cast

class itkImageSinkVIUC3(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUC3_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUC3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUC3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUC3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUC3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkVIUC3
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkVIUC3_cast)

# Register itkImageSinkVIUC3 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkVIUC3_swigregister(itkImageSinkVIUC3)
itkImageSinkVIUC3_cast = _itkImageSinkPython.itkImageSinkVIUC3_cast

class itkImageSinkVIUS2(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUS2_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkVIUS2
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkVIUS2_cast)

# Register itkImageSinkVIUS2 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkVIUS2_swigregister(itkImageSinkVIUS2)
itkImageSinkVIUS2_cast = _itkImageSinkPython.itkImageSinkVIUS2_cast

class itkImageSinkVIUS3(itk.ITKCommonBasePython.itkStreamingProcessObject):
    r"""


    ImageSink is the base class for process objects which consume image
    data. This class defaults to having at least one input of the
    templated image type. The framework enables derived algorithms to
    stream the input image as it's being consumed by the algorithm.

    The framework provides multi-threading of the streamed image regions.
    The input image's pipeline is updated multiple times with the
    streaming requested regions, then the fulfilled requested region are
    split again for multi-threading.

    By default, the NumberOfStreamDivisions is 1 (no streaming). Derived
    implementations must change the access specification for this method
    to be public to expose the streaming feature. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUS3_GetInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageSinkPython.itkImageSinkVIUS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageSinkPython.delete_itkImageSinkVIUS3
    cast = _swig_new_static_method(_itkImageSinkPython.itkImageSinkVIUS3_cast)

# Register itkImageSinkVIUS3 in _itkImageSinkPython:
_itkImageSinkPython.itkImageSinkVIUS3_swigregister(itkImageSinkVIUS3)
itkImageSinkVIUS3_cast = _itkImageSinkPython.itkImageSinkVIUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def image_sink(*args, **kwargs):
    """Procedural interface for ImageSink"""
    import itk
    instance = itk.ImageSink.New(*args, **kwargs)
    return instance.__internal_call__()

def image_sink_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ImageSink, itkTemplate.itkTemplate):
        filter_object = itk.ImageSink.values()[0]
    else:
        filter_object = itk.ImageSink

    image_sink.__doc__ = filter_object.__doc__
    image_sink.__doc__ += "\n Args are Input(s) to the filter.\n"
    image_sink.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ImageSink, itkTemplate.itkTemplate):
        image_sink.__doc__ += itkHelpers.filter_args(filter_object)[0]
        image_sink.__doc__ += "\n"
        image_sink.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        image_sink.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



