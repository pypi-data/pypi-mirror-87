# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKMathematicalMorphologyPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkClosingByReconstructionImageFilterPython
else:
    import _itkClosingByReconstructionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkClosingByReconstructionImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkClosingByReconstructionImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkVectorImagePython
import itk.stdcomplexPython
import itk.itkVariableLengthVectorPython
import itk.itkImagePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkFlatStructuringElementPython
import itk.itkNeighborhoodPython
import itk.itkBoxImageFilterPython

def itkClosingByReconstructionImageFilterID2ID2SE2_New():
    return itkClosingByReconstructionImageFilterID2ID2SE2.New()

class itkClosingByReconstructionImageFilterID2ID2SE2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""


    Closing by reconstruction of an image.

    This filter is similar to the morphological closing, but contrary to
    the morphological closing, the closing by reconstruction preserves the
    shape of the components. The closing by reconstruction of an image
    "f" is defined as:

    ClosingByReconstruction(f) = ErosionByReconstruction(f, Dilation(f)).

    Closing by reconstruction not only preserves structures preserved by
    the dilation, but also levels raises the contrast of the darkest
    regions. If PreserveIntensities is on, a subsequent reconstruction by
    dilation using a marker image that is the original image for all
    unaffected pixels.

    Closing by reconstruction is described in Chapter 6.3.9 of Pierre
    Soille's book "Morphological Image Analysis: Principles and
    Applications", Second Edition, Springer, 2003.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   GrayscaleMorphologicalClosingImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID2ID2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID2ID2SE2_Clone)
    SetKernel = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID2ID2SE2_SetKernel)
    GetKernel = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID2ID2SE2_GetKernel)
    SetFullyConnected = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID2ID2SE2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID2ID2SE2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID2ID2SE2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID2ID2SE2_FullyConnectedOff)
    SetPreserveIntensities = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID2ID2SE2_SetPreserveIntensities)
    GetPreserveIntensities = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID2ID2SE2_GetPreserveIntensities)
    PreserveIntensitiesOn = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID2ID2SE2_PreserveIntensitiesOn)
    PreserveIntensitiesOff = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID2ID2SE2_PreserveIntensitiesOff)
    InputConvertibleToOutputCheck = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID2ID2SE2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkClosingByReconstructionImageFilterPython.delete_itkClosingByReconstructionImageFilterID2ID2SE2
    cast = _swig_new_static_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID2ID2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkClosingByReconstructionImageFilterID2ID2SE2

        Create a new object of the class itkClosingByReconstructionImageFilterID2ID2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClosingByReconstructionImageFilterID2ID2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClosingByReconstructionImageFilterID2ID2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClosingByReconstructionImageFilterID2ID2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClosingByReconstructionImageFilterID2ID2SE2 in _itkClosingByReconstructionImageFilterPython:
_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID2ID2SE2_swigregister(itkClosingByReconstructionImageFilterID2ID2SE2)
itkClosingByReconstructionImageFilterID2ID2SE2___New_orig__ = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID2ID2SE2___New_orig__
itkClosingByReconstructionImageFilterID2ID2SE2_cast = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID2ID2SE2_cast


def itkClosingByReconstructionImageFilterID3ID3SE3_New():
    return itkClosingByReconstructionImageFilterID3ID3SE3.New()

class itkClosingByReconstructionImageFilterID3ID3SE3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""


    Closing by reconstruction of an image.

    This filter is similar to the morphological closing, but contrary to
    the morphological closing, the closing by reconstruction preserves the
    shape of the components. The closing by reconstruction of an image
    "f" is defined as:

    ClosingByReconstruction(f) = ErosionByReconstruction(f, Dilation(f)).

    Closing by reconstruction not only preserves structures preserved by
    the dilation, but also levels raises the contrast of the darkest
    regions. If PreserveIntensities is on, a subsequent reconstruction by
    dilation using a marker image that is the original image for all
    unaffected pixels.

    Closing by reconstruction is described in Chapter 6.3.9 of Pierre
    Soille's book "Morphological Image Analysis: Principles and
    Applications", Second Edition, Springer, 2003.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   GrayscaleMorphologicalClosingImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID3ID3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID3ID3SE3_Clone)
    SetKernel = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID3ID3SE3_SetKernel)
    GetKernel = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID3ID3SE3_GetKernel)
    SetFullyConnected = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID3ID3SE3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID3ID3SE3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID3ID3SE3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID3ID3SE3_FullyConnectedOff)
    SetPreserveIntensities = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID3ID3SE3_SetPreserveIntensities)
    GetPreserveIntensities = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID3ID3SE3_GetPreserveIntensities)
    PreserveIntensitiesOn = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID3ID3SE3_PreserveIntensitiesOn)
    PreserveIntensitiesOff = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID3ID3SE3_PreserveIntensitiesOff)
    InputConvertibleToOutputCheck = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID3ID3SE3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkClosingByReconstructionImageFilterPython.delete_itkClosingByReconstructionImageFilterID3ID3SE3
    cast = _swig_new_static_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID3ID3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkClosingByReconstructionImageFilterID3ID3SE3

        Create a new object of the class itkClosingByReconstructionImageFilterID3ID3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClosingByReconstructionImageFilterID3ID3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClosingByReconstructionImageFilterID3ID3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClosingByReconstructionImageFilterID3ID3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClosingByReconstructionImageFilterID3ID3SE3 in _itkClosingByReconstructionImageFilterPython:
_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID3ID3SE3_swigregister(itkClosingByReconstructionImageFilterID3ID3SE3)
itkClosingByReconstructionImageFilterID3ID3SE3___New_orig__ = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID3ID3SE3___New_orig__
itkClosingByReconstructionImageFilterID3ID3SE3_cast = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterID3ID3SE3_cast


def itkClosingByReconstructionImageFilterIF2IF2SE2_New():
    return itkClosingByReconstructionImageFilterIF2IF2SE2.New()

class itkClosingByReconstructionImageFilterIF2IF2SE2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""


    Closing by reconstruction of an image.

    This filter is similar to the morphological closing, but contrary to
    the morphological closing, the closing by reconstruction preserves the
    shape of the components. The closing by reconstruction of an image
    "f" is defined as:

    ClosingByReconstruction(f) = ErosionByReconstruction(f, Dilation(f)).

    Closing by reconstruction not only preserves structures preserved by
    the dilation, but also levels raises the contrast of the darkest
    regions. If PreserveIntensities is on, a subsequent reconstruction by
    dilation using a marker image that is the original image for all
    unaffected pixels.

    Closing by reconstruction is described in Chapter 6.3.9 of Pierre
    Soille's book "Morphological Image Analysis: Principles and
    Applications", Second Edition, Springer, 2003.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   GrayscaleMorphologicalClosingImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF2IF2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF2IF2SE2_Clone)
    SetKernel = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF2IF2SE2_SetKernel)
    GetKernel = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF2IF2SE2_GetKernel)
    SetFullyConnected = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF2IF2SE2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF2IF2SE2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF2IF2SE2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF2IF2SE2_FullyConnectedOff)
    SetPreserveIntensities = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF2IF2SE2_SetPreserveIntensities)
    GetPreserveIntensities = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF2IF2SE2_GetPreserveIntensities)
    PreserveIntensitiesOn = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF2IF2SE2_PreserveIntensitiesOn)
    PreserveIntensitiesOff = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF2IF2SE2_PreserveIntensitiesOff)
    InputConvertibleToOutputCheck = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF2IF2SE2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkClosingByReconstructionImageFilterPython.delete_itkClosingByReconstructionImageFilterIF2IF2SE2
    cast = _swig_new_static_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF2IF2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkClosingByReconstructionImageFilterIF2IF2SE2

        Create a new object of the class itkClosingByReconstructionImageFilterIF2IF2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClosingByReconstructionImageFilterIF2IF2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClosingByReconstructionImageFilterIF2IF2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClosingByReconstructionImageFilterIF2IF2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClosingByReconstructionImageFilterIF2IF2SE2 in _itkClosingByReconstructionImageFilterPython:
_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF2IF2SE2_swigregister(itkClosingByReconstructionImageFilterIF2IF2SE2)
itkClosingByReconstructionImageFilterIF2IF2SE2___New_orig__ = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF2IF2SE2___New_orig__
itkClosingByReconstructionImageFilterIF2IF2SE2_cast = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF2IF2SE2_cast


def itkClosingByReconstructionImageFilterIF3IF3SE3_New():
    return itkClosingByReconstructionImageFilterIF3IF3SE3.New()

class itkClosingByReconstructionImageFilterIF3IF3SE3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""


    Closing by reconstruction of an image.

    This filter is similar to the morphological closing, but contrary to
    the morphological closing, the closing by reconstruction preserves the
    shape of the components. The closing by reconstruction of an image
    "f" is defined as:

    ClosingByReconstruction(f) = ErosionByReconstruction(f, Dilation(f)).

    Closing by reconstruction not only preserves structures preserved by
    the dilation, but also levels raises the contrast of the darkest
    regions. If PreserveIntensities is on, a subsequent reconstruction by
    dilation using a marker image that is the original image for all
    unaffected pixels.

    Closing by reconstruction is described in Chapter 6.3.9 of Pierre
    Soille's book "Morphological Image Analysis: Principles and
    Applications", Second Edition, Springer, 2003.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   GrayscaleMorphologicalClosingImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF3IF3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF3IF3SE3_Clone)
    SetKernel = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF3IF3SE3_SetKernel)
    GetKernel = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF3IF3SE3_GetKernel)
    SetFullyConnected = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF3IF3SE3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF3IF3SE3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF3IF3SE3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF3IF3SE3_FullyConnectedOff)
    SetPreserveIntensities = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF3IF3SE3_SetPreserveIntensities)
    GetPreserveIntensities = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF3IF3SE3_GetPreserveIntensities)
    PreserveIntensitiesOn = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF3IF3SE3_PreserveIntensitiesOn)
    PreserveIntensitiesOff = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF3IF3SE3_PreserveIntensitiesOff)
    InputConvertibleToOutputCheck = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF3IF3SE3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkClosingByReconstructionImageFilterPython.delete_itkClosingByReconstructionImageFilterIF3IF3SE3
    cast = _swig_new_static_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF3IF3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkClosingByReconstructionImageFilterIF3IF3SE3

        Create a new object of the class itkClosingByReconstructionImageFilterIF3IF3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClosingByReconstructionImageFilterIF3IF3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClosingByReconstructionImageFilterIF3IF3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClosingByReconstructionImageFilterIF3IF3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClosingByReconstructionImageFilterIF3IF3SE3 in _itkClosingByReconstructionImageFilterPython:
_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF3IF3SE3_swigregister(itkClosingByReconstructionImageFilterIF3IF3SE3)
itkClosingByReconstructionImageFilterIF3IF3SE3___New_orig__ = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF3IF3SE3___New_orig__
itkClosingByReconstructionImageFilterIF3IF3SE3_cast = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIF3IF3SE3_cast


def itkClosingByReconstructionImageFilterISS2ISS2SE2_New():
    return itkClosingByReconstructionImageFilterISS2ISS2SE2.New()

class itkClosingByReconstructionImageFilterISS2ISS2SE2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""


    Closing by reconstruction of an image.

    This filter is similar to the morphological closing, but contrary to
    the morphological closing, the closing by reconstruction preserves the
    shape of the components. The closing by reconstruction of an image
    "f" is defined as:

    ClosingByReconstruction(f) = ErosionByReconstruction(f, Dilation(f)).

    Closing by reconstruction not only preserves structures preserved by
    the dilation, but also levels raises the contrast of the darkest
    regions. If PreserveIntensities is on, a subsequent reconstruction by
    dilation using a marker image that is the original image for all
    unaffected pixels.

    Closing by reconstruction is described in Chapter 6.3.9 of Pierre
    Soille's book "Morphological Image Analysis: Principles and
    Applications", Second Edition, Springer, 2003.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   GrayscaleMorphologicalClosingImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS2ISS2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS2ISS2SE2_Clone)
    SetKernel = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS2ISS2SE2_SetKernel)
    GetKernel = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS2ISS2SE2_GetKernel)
    SetFullyConnected = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS2ISS2SE2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS2ISS2SE2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS2ISS2SE2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS2ISS2SE2_FullyConnectedOff)
    SetPreserveIntensities = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS2ISS2SE2_SetPreserveIntensities)
    GetPreserveIntensities = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS2ISS2SE2_GetPreserveIntensities)
    PreserveIntensitiesOn = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS2ISS2SE2_PreserveIntensitiesOn)
    PreserveIntensitiesOff = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS2ISS2SE2_PreserveIntensitiesOff)
    InputConvertibleToOutputCheck = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS2ISS2SE2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkClosingByReconstructionImageFilterPython.delete_itkClosingByReconstructionImageFilterISS2ISS2SE2
    cast = _swig_new_static_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS2ISS2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkClosingByReconstructionImageFilterISS2ISS2SE2

        Create a new object of the class itkClosingByReconstructionImageFilterISS2ISS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClosingByReconstructionImageFilterISS2ISS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClosingByReconstructionImageFilterISS2ISS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClosingByReconstructionImageFilterISS2ISS2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClosingByReconstructionImageFilterISS2ISS2SE2 in _itkClosingByReconstructionImageFilterPython:
_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS2ISS2SE2_swigregister(itkClosingByReconstructionImageFilterISS2ISS2SE2)
itkClosingByReconstructionImageFilterISS2ISS2SE2___New_orig__ = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS2ISS2SE2___New_orig__
itkClosingByReconstructionImageFilterISS2ISS2SE2_cast = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS2ISS2SE2_cast


def itkClosingByReconstructionImageFilterISS3ISS3SE3_New():
    return itkClosingByReconstructionImageFilterISS3ISS3SE3.New()

class itkClosingByReconstructionImageFilterISS3ISS3SE3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""


    Closing by reconstruction of an image.

    This filter is similar to the morphological closing, but contrary to
    the morphological closing, the closing by reconstruction preserves the
    shape of the components. The closing by reconstruction of an image
    "f" is defined as:

    ClosingByReconstruction(f) = ErosionByReconstruction(f, Dilation(f)).

    Closing by reconstruction not only preserves structures preserved by
    the dilation, but also levels raises the contrast of the darkest
    regions. If PreserveIntensities is on, a subsequent reconstruction by
    dilation using a marker image that is the original image for all
    unaffected pixels.

    Closing by reconstruction is described in Chapter 6.3.9 of Pierre
    Soille's book "Morphological Image Analysis: Principles and
    Applications", Second Edition, Springer, 2003.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   GrayscaleMorphologicalClosingImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS3ISS3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS3ISS3SE3_Clone)
    SetKernel = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS3ISS3SE3_SetKernel)
    GetKernel = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS3ISS3SE3_GetKernel)
    SetFullyConnected = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS3ISS3SE3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS3ISS3SE3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS3ISS3SE3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS3ISS3SE3_FullyConnectedOff)
    SetPreserveIntensities = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS3ISS3SE3_SetPreserveIntensities)
    GetPreserveIntensities = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS3ISS3SE3_GetPreserveIntensities)
    PreserveIntensitiesOn = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS3ISS3SE3_PreserveIntensitiesOn)
    PreserveIntensitiesOff = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS3ISS3SE3_PreserveIntensitiesOff)
    InputConvertibleToOutputCheck = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS3ISS3SE3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkClosingByReconstructionImageFilterPython.delete_itkClosingByReconstructionImageFilterISS3ISS3SE3
    cast = _swig_new_static_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS3ISS3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkClosingByReconstructionImageFilterISS3ISS3SE3

        Create a new object of the class itkClosingByReconstructionImageFilterISS3ISS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClosingByReconstructionImageFilterISS3ISS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClosingByReconstructionImageFilterISS3ISS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClosingByReconstructionImageFilterISS3ISS3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClosingByReconstructionImageFilterISS3ISS3SE3 in _itkClosingByReconstructionImageFilterPython:
_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS3ISS3SE3_swigregister(itkClosingByReconstructionImageFilterISS3ISS3SE3)
itkClosingByReconstructionImageFilterISS3ISS3SE3___New_orig__ = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS3ISS3SE3___New_orig__
itkClosingByReconstructionImageFilterISS3ISS3SE3_cast = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterISS3ISS3SE3_cast


def itkClosingByReconstructionImageFilterIUC2IUC2SE2_New():
    return itkClosingByReconstructionImageFilterIUC2IUC2SE2.New()

class itkClosingByReconstructionImageFilterIUC2IUC2SE2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""


    Closing by reconstruction of an image.

    This filter is similar to the morphological closing, but contrary to
    the morphological closing, the closing by reconstruction preserves the
    shape of the components. The closing by reconstruction of an image
    "f" is defined as:

    ClosingByReconstruction(f) = ErosionByReconstruction(f, Dilation(f)).

    Closing by reconstruction not only preserves structures preserved by
    the dilation, but also levels raises the contrast of the darkest
    regions. If PreserveIntensities is on, a subsequent reconstruction by
    dilation using a marker image that is the original image for all
    unaffected pixels.

    Closing by reconstruction is described in Chapter 6.3.9 of Pierre
    Soille's book "Morphological Image Analysis: Principles and
    Applications", Second Edition, Springer, 2003.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   GrayscaleMorphologicalClosingImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC2IUC2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC2IUC2SE2_Clone)
    SetKernel = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC2IUC2SE2_SetKernel)
    GetKernel = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC2IUC2SE2_GetKernel)
    SetFullyConnected = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC2IUC2SE2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC2IUC2SE2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC2IUC2SE2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC2IUC2SE2_FullyConnectedOff)
    SetPreserveIntensities = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC2IUC2SE2_SetPreserveIntensities)
    GetPreserveIntensities = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC2IUC2SE2_GetPreserveIntensities)
    PreserveIntensitiesOn = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC2IUC2SE2_PreserveIntensitiesOn)
    PreserveIntensitiesOff = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC2IUC2SE2_PreserveIntensitiesOff)
    InputConvertibleToOutputCheck = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC2IUC2SE2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkClosingByReconstructionImageFilterPython.delete_itkClosingByReconstructionImageFilterIUC2IUC2SE2
    cast = _swig_new_static_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC2IUC2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkClosingByReconstructionImageFilterIUC2IUC2SE2

        Create a new object of the class itkClosingByReconstructionImageFilterIUC2IUC2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClosingByReconstructionImageFilterIUC2IUC2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClosingByReconstructionImageFilterIUC2IUC2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClosingByReconstructionImageFilterIUC2IUC2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClosingByReconstructionImageFilterIUC2IUC2SE2 in _itkClosingByReconstructionImageFilterPython:
_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC2IUC2SE2_swigregister(itkClosingByReconstructionImageFilterIUC2IUC2SE2)
itkClosingByReconstructionImageFilterIUC2IUC2SE2___New_orig__ = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC2IUC2SE2___New_orig__
itkClosingByReconstructionImageFilterIUC2IUC2SE2_cast = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC2IUC2SE2_cast


def itkClosingByReconstructionImageFilterIUC3IUC3SE3_New():
    return itkClosingByReconstructionImageFilterIUC3IUC3SE3.New()

class itkClosingByReconstructionImageFilterIUC3IUC3SE3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""


    Closing by reconstruction of an image.

    This filter is similar to the morphological closing, but contrary to
    the morphological closing, the closing by reconstruction preserves the
    shape of the components. The closing by reconstruction of an image
    "f" is defined as:

    ClosingByReconstruction(f) = ErosionByReconstruction(f, Dilation(f)).

    Closing by reconstruction not only preserves structures preserved by
    the dilation, but also levels raises the contrast of the darkest
    regions. If PreserveIntensities is on, a subsequent reconstruction by
    dilation using a marker image that is the original image for all
    unaffected pixels.

    Closing by reconstruction is described in Chapter 6.3.9 of Pierre
    Soille's book "Morphological Image Analysis: Principles and
    Applications", Second Edition, Springer, 2003.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   GrayscaleMorphologicalClosingImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC3IUC3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC3IUC3SE3_Clone)
    SetKernel = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC3IUC3SE3_SetKernel)
    GetKernel = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC3IUC3SE3_GetKernel)
    SetFullyConnected = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC3IUC3SE3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC3IUC3SE3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC3IUC3SE3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC3IUC3SE3_FullyConnectedOff)
    SetPreserveIntensities = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC3IUC3SE3_SetPreserveIntensities)
    GetPreserveIntensities = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC3IUC3SE3_GetPreserveIntensities)
    PreserveIntensitiesOn = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC3IUC3SE3_PreserveIntensitiesOn)
    PreserveIntensitiesOff = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC3IUC3SE3_PreserveIntensitiesOff)
    InputConvertibleToOutputCheck = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC3IUC3SE3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkClosingByReconstructionImageFilterPython.delete_itkClosingByReconstructionImageFilterIUC3IUC3SE3
    cast = _swig_new_static_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC3IUC3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkClosingByReconstructionImageFilterIUC3IUC3SE3

        Create a new object of the class itkClosingByReconstructionImageFilterIUC3IUC3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClosingByReconstructionImageFilterIUC3IUC3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClosingByReconstructionImageFilterIUC3IUC3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClosingByReconstructionImageFilterIUC3IUC3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClosingByReconstructionImageFilterIUC3IUC3SE3 in _itkClosingByReconstructionImageFilterPython:
_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC3IUC3SE3_swigregister(itkClosingByReconstructionImageFilterIUC3IUC3SE3)
itkClosingByReconstructionImageFilterIUC3IUC3SE3___New_orig__ = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC3IUC3SE3___New_orig__
itkClosingByReconstructionImageFilterIUC3IUC3SE3_cast = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUC3IUC3SE3_cast


def itkClosingByReconstructionImageFilterIUS2IUS2SE2_New():
    return itkClosingByReconstructionImageFilterIUS2IUS2SE2.New()

class itkClosingByReconstructionImageFilterIUS2IUS2SE2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""


    Closing by reconstruction of an image.

    This filter is similar to the morphological closing, but contrary to
    the morphological closing, the closing by reconstruction preserves the
    shape of the components. The closing by reconstruction of an image
    "f" is defined as:

    ClosingByReconstruction(f) = ErosionByReconstruction(f, Dilation(f)).

    Closing by reconstruction not only preserves structures preserved by
    the dilation, but also levels raises the contrast of the darkest
    regions. If PreserveIntensities is on, a subsequent reconstruction by
    dilation using a marker image that is the original image for all
    unaffected pixels.

    Closing by reconstruction is described in Chapter 6.3.9 of Pierre
    Soille's book "Morphological Image Analysis: Principles and
    Applications", Second Edition, Springer, 2003.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   GrayscaleMorphologicalClosingImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS2IUS2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS2IUS2SE2_Clone)
    SetKernel = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS2IUS2SE2_SetKernel)
    GetKernel = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS2IUS2SE2_GetKernel)
    SetFullyConnected = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS2IUS2SE2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS2IUS2SE2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS2IUS2SE2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS2IUS2SE2_FullyConnectedOff)
    SetPreserveIntensities = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS2IUS2SE2_SetPreserveIntensities)
    GetPreserveIntensities = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS2IUS2SE2_GetPreserveIntensities)
    PreserveIntensitiesOn = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS2IUS2SE2_PreserveIntensitiesOn)
    PreserveIntensitiesOff = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS2IUS2SE2_PreserveIntensitiesOff)
    InputConvertibleToOutputCheck = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS2IUS2SE2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkClosingByReconstructionImageFilterPython.delete_itkClosingByReconstructionImageFilterIUS2IUS2SE2
    cast = _swig_new_static_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS2IUS2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkClosingByReconstructionImageFilterIUS2IUS2SE2

        Create a new object of the class itkClosingByReconstructionImageFilterIUS2IUS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClosingByReconstructionImageFilterIUS2IUS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClosingByReconstructionImageFilterIUS2IUS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClosingByReconstructionImageFilterIUS2IUS2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClosingByReconstructionImageFilterIUS2IUS2SE2 in _itkClosingByReconstructionImageFilterPython:
_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS2IUS2SE2_swigregister(itkClosingByReconstructionImageFilterIUS2IUS2SE2)
itkClosingByReconstructionImageFilterIUS2IUS2SE2___New_orig__ = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS2IUS2SE2___New_orig__
itkClosingByReconstructionImageFilterIUS2IUS2SE2_cast = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS2IUS2SE2_cast


def itkClosingByReconstructionImageFilterIUS3IUS3SE3_New():
    return itkClosingByReconstructionImageFilterIUS3IUS3SE3.New()

class itkClosingByReconstructionImageFilterIUS3IUS3SE3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""


    Closing by reconstruction of an image.

    This filter is similar to the morphological closing, but contrary to
    the morphological closing, the closing by reconstruction preserves the
    shape of the components. The closing by reconstruction of an image
    "f" is defined as:

    ClosingByReconstruction(f) = ErosionByReconstruction(f, Dilation(f)).

    Closing by reconstruction not only preserves structures preserved by
    the dilation, but also levels raises the contrast of the darkest
    regions. If PreserveIntensities is on, a subsequent reconstruction by
    dilation using a marker image that is the original image for all
    unaffected pixels.

    Closing by reconstruction is described in Chapter 6.3.9 of Pierre
    Soille's book "Morphological Image Analysis: Principles and
    Applications", Second Edition, Springer, 2003.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:   GrayscaleMorphologicalClosingImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS3IUS3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS3IUS3SE3_Clone)
    SetKernel = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS3IUS3SE3_SetKernel)
    GetKernel = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS3IUS3SE3_GetKernel)
    SetFullyConnected = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS3IUS3SE3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS3IUS3SE3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS3IUS3SE3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS3IUS3SE3_FullyConnectedOff)
    SetPreserveIntensities = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS3IUS3SE3_SetPreserveIntensities)
    GetPreserveIntensities = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS3IUS3SE3_GetPreserveIntensities)
    PreserveIntensitiesOn = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS3IUS3SE3_PreserveIntensitiesOn)
    PreserveIntensitiesOff = _swig_new_instance_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS3IUS3SE3_PreserveIntensitiesOff)
    InputConvertibleToOutputCheck = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS3IUS3SE3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkClosingByReconstructionImageFilterPython.delete_itkClosingByReconstructionImageFilterIUS3IUS3SE3
    cast = _swig_new_static_method(_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS3IUS3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkClosingByReconstructionImageFilterIUS3IUS3SE3

        Create a new object of the class itkClosingByReconstructionImageFilterIUS3IUS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClosingByReconstructionImageFilterIUS3IUS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClosingByReconstructionImageFilterIUS3IUS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClosingByReconstructionImageFilterIUS3IUS3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClosingByReconstructionImageFilterIUS3IUS3SE3 in _itkClosingByReconstructionImageFilterPython:
_itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS3IUS3SE3_swigregister(itkClosingByReconstructionImageFilterIUS3IUS3SE3)
itkClosingByReconstructionImageFilterIUS3IUS3SE3___New_orig__ = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS3IUS3SE3___New_orig__
itkClosingByReconstructionImageFilterIUS3IUS3SE3_cast = _itkClosingByReconstructionImageFilterPython.itkClosingByReconstructionImageFilterIUS3IUS3SE3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def closing_by_reconstruction_image_filter(*args, **kwargs):
    """Procedural interface for ClosingByReconstructionImageFilter"""
    import itk
    instance = itk.ClosingByReconstructionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def closing_by_reconstruction_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ClosingByReconstructionImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ClosingByReconstructionImageFilter.values()[0]
    else:
        filter_object = itk.ClosingByReconstructionImageFilter

    closing_by_reconstruction_image_filter.__doc__ = filter_object.__doc__
    closing_by_reconstruction_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    closing_by_reconstruction_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ClosingByReconstructionImageFilter, itkTemplate.itkTemplate):
        closing_by_reconstruction_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        closing_by_reconstruction_image_filter.__doc__ += "\n"
        closing_by_reconstruction_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        closing_by_reconstruction_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



