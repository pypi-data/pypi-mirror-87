# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageGradientPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkGradientMagnitudeRecursiveGaussianImageFilterPython
else:
    import _itkGradientMagnitudeRecursiveGaussianImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterBPython
import itk.itkImageSourcePython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.stdcomplexPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.itkRGBPixelPython
import itk.itkIndexPython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterAPython

def itkGradientMagnitudeRecursiveGaussianImageFilterID2ID2_New():
    return itkGradientMagnitudeRecursiveGaussianImageFilterID2ID2.New()

class itkGradientMagnitudeRecursiveGaussianImageFilterID2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""


    Computes the Magnitude of the Gradient of an image by convolution with
    the first derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters

    example{Filtering/ImageGradient/ComputeGradientMagnitude,Compute
    Gradient Magnitude Of Grayscale Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterID2ID2_Clone)
    SetSigma = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterID2ID2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterID2ID2_GetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterID2ID2_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterID2ID2_GetNormalizeAcrossScale)
    InputHasNumericTraitsCheck = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterID2ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.delete_itkGradientMagnitudeRecursiveGaussianImageFilterID2ID2
    cast = _swig_new_static_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkGradientMagnitudeRecursiveGaussianImageFilterID2ID2

        Create a new object of the class itkGradientMagnitudeRecursiveGaussianImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientMagnitudeRecursiveGaussianImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientMagnitudeRecursiveGaussianImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientMagnitudeRecursiveGaussianImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientMagnitudeRecursiveGaussianImageFilterID2ID2 in _itkGradientMagnitudeRecursiveGaussianImageFilterPython:
_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterID2ID2_swigregister(itkGradientMagnitudeRecursiveGaussianImageFilterID2ID2)
itkGradientMagnitudeRecursiveGaussianImageFilterID2ID2___New_orig__ = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterID2ID2___New_orig__
itkGradientMagnitudeRecursiveGaussianImageFilterID2ID2_cast = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterID2ID2_cast


def itkGradientMagnitudeRecursiveGaussianImageFilterID3ID3_New():
    return itkGradientMagnitudeRecursiveGaussianImageFilterID3ID3.New()

class itkGradientMagnitudeRecursiveGaussianImageFilterID3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""


    Computes the Magnitude of the Gradient of an image by convolution with
    the first derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters

    example{Filtering/ImageGradient/ComputeGradientMagnitude,Compute
    Gradient Magnitude Of Grayscale Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterID3ID3_Clone)
    SetSigma = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterID3ID3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterID3ID3_GetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterID3ID3_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterID3ID3_GetNormalizeAcrossScale)
    InputHasNumericTraitsCheck = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterID3ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.delete_itkGradientMagnitudeRecursiveGaussianImageFilterID3ID3
    cast = _swig_new_static_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkGradientMagnitudeRecursiveGaussianImageFilterID3ID3

        Create a new object of the class itkGradientMagnitudeRecursiveGaussianImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientMagnitudeRecursiveGaussianImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientMagnitudeRecursiveGaussianImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientMagnitudeRecursiveGaussianImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientMagnitudeRecursiveGaussianImageFilterID3ID3 in _itkGradientMagnitudeRecursiveGaussianImageFilterPython:
_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterID3ID3_swigregister(itkGradientMagnitudeRecursiveGaussianImageFilterID3ID3)
itkGradientMagnitudeRecursiveGaussianImageFilterID3ID3___New_orig__ = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterID3ID3___New_orig__
itkGradientMagnitudeRecursiveGaussianImageFilterID3ID3_cast = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterID3ID3_cast


def itkGradientMagnitudeRecursiveGaussianImageFilterIF2IF2_New():
    return itkGradientMagnitudeRecursiveGaussianImageFilterIF2IF2.New()

class itkGradientMagnitudeRecursiveGaussianImageFilterIF2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""


    Computes the Magnitude of the Gradient of an image by convolution with
    the first derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters

    example{Filtering/ImageGradient/ComputeGradientMagnitude,Compute
    Gradient Magnitude Of Grayscale Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIF2IF2_Clone)
    SetSigma = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIF2IF2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIF2IF2_GetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIF2IF2_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIF2IF2_GetNormalizeAcrossScale)
    InputHasNumericTraitsCheck = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.delete_itkGradientMagnitudeRecursiveGaussianImageFilterIF2IF2
    cast = _swig_new_static_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkGradientMagnitudeRecursiveGaussianImageFilterIF2IF2

        Create a new object of the class itkGradientMagnitudeRecursiveGaussianImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientMagnitudeRecursiveGaussianImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientMagnitudeRecursiveGaussianImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientMagnitudeRecursiveGaussianImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientMagnitudeRecursiveGaussianImageFilterIF2IF2 in _itkGradientMagnitudeRecursiveGaussianImageFilterPython:
_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIF2IF2_swigregister(itkGradientMagnitudeRecursiveGaussianImageFilterIF2IF2)
itkGradientMagnitudeRecursiveGaussianImageFilterIF2IF2___New_orig__ = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIF2IF2___New_orig__
itkGradientMagnitudeRecursiveGaussianImageFilterIF2IF2_cast = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIF2IF2_cast


def itkGradientMagnitudeRecursiveGaussianImageFilterIF3IF3_New():
    return itkGradientMagnitudeRecursiveGaussianImageFilterIF3IF3.New()

class itkGradientMagnitudeRecursiveGaussianImageFilterIF3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""


    Computes the Magnitude of the Gradient of an image by convolution with
    the first derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters

    example{Filtering/ImageGradient/ComputeGradientMagnitude,Compute
    Gradient Magnitude Of Grayscale Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIF3IF3_Clone)
    SetSigma = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIF3IF3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIF3IF3_GetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIF3IF3_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIF3IF3_GetNormalizeAcrossScale)
    InputHasNumericTraitsCheck = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.delete_itkGradientMagnitudeRecursiveGaussianImageFilterIF3IF3
    cast = _swig_new_static_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkGradientMagnitudeRecursiveGaussianImageFilterIF3IF3

        Create a new object of the class itkGradientMagnitudeRecursiveGaussianImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientMagnitudeRecursiveGaussianImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientMagnitudeRecursiveGaussianImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientMagnitudeRecursiveGaussianImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientMagnitudeRecursiveGaussianImageFilterIF3IF3 in _itkGradientMagnitudeRecursiveGaussianImageFilterPython:
_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIF3IF3_swigregister(itkGradientMagnitudeRecursiveGaussianImageFilterIF3IF3)
itkGradientMagnitudeRecursiveGaussianImageFilterIF3IF3___New_orig__ = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIF3IF3___New_orig__
itkGradientMagnitudeRecursiveGaussianImageFilterIF3IF3_cast = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIF3IF3_cast


def itkGradientMagnitudeRecursiveGaussianImageFilterISS2ISS2_New():
    return itkGradientMagnitudeRecursiveGaussianImageFilterISS2ISS2.New()

class itkGradientMagnitudeRecursiveGaussianImageFilterISS2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    r"""


    Computes the Magnitude of the Gradient of an image by convolution with
    the first derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters

    example{Filtering/ImageGradient/ComputeGradientMagnitude,Compute
    Gradient Magnitude Of Grayscale Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterISS2ISS2_Clone)
    SetSigma = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterISS2ISS2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterISS2ISS2_GetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterISS2ISS2_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterISS2ISS2_GetNormalizeAcrossScale)
    InputHasNumericTraitsCheck = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterISS2ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.delete_itkGradientMagnitudeRecursiveGaussianImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkGradientMagnitudeRecursiveGaussianImageFilterISS2ISS2

        Create a new object of the class itkGradientMagnitudeRecursiveGaussianImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientMagnitudeRecursiveGaussianImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientMagnitudeRecursiveGaussianImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientMagnitudeRecursiveGaussianImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientMagnitudeRecursiveGaussianImageFilterISS2ISS2 in _itkGradientMagnitudeRecursiveGaussianImageFilterPython:
_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterISS2ISS2_swigregister(itkGradientMagnitudeRecursiveGaussianImageFilterISS2ISS2)
itkGradientMagnitudeRecursiveGaussianImageFilterISS2ISS2___New_orig__ = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterISS2ISS2___New_orig__
itkGradientMagnitudeRecursiveGaussianImageFilterISS2ISS2_cast = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterISS2ISS2_cast


def itkGradientMagnitudeRecursiveGaussianImageFilterISS3ISS3_New():
    return itkGradientMagnitudeRecursiveGaussianImageFilterISS3ISS3.New()

class itkGradientMagnitudeRecursiveGaussianImageFilterISS3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    r"""


    Computes the Magnitude of the Gradient of an image by convolution with
    the first derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters

    example{Filtering/ImageGradient/ComputeGradientMagnitude,Compute
    Gradient Magnitude Of Grayscale Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterISS3ISS3_Clone)
    SetSigma = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterISS3ISS3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterISS3ISS3_GetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterISS3ISS3_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterISS3ISS3_GetNormalizeAcrossScale)
    InputHasNumericTraitsCheck = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterISS3ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.delete_itkGradientMagnitudeRecursiveGaussianImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkGradientMagnitudeRecursiveGaussianImageFilterISS3ISS3

        Create a new object of the class itkGradientMagnitudeRecursiveGaussianImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientMagnitudeRecursiveGaussianImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientMagnitudeRecursiveGaussianImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientMagnitudeRecursiveGaussianImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientMagnitudeRecursiveGaussianImageFilterISS3ISS3 in _itkGradientMagnitudeRecursiveGaussianImageFilterPython:
_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterISS3ISS3_swigregister(itkGradientMagnitudeRecursiveGaussianImageFilterISS3ISS3)
itkGradientMagnitudeRecursiveGaussianImageFilterISS3ISS3___New_orig__ = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterISS3ISS3___New_orig__
itkGradientMagnitudeRecursiveGaussianImageFilterISS3ISS3_cast = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterISS3ISS3_cast


def itkGradientMagnitudeRecursiveGaussianImageFilterIUC2IUC2_New():
    return itkGradientMagnitudeRecursiveGaussianImageFilterIUC2IUC2.New()

class itkGradientMagnitudeRecursiveGaussianImageFilterIUC2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    r"""


    Computes the Magnitude of the Gradient of an image by convolution with
    the first derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters

    example{Filtering/ImageGradient/ComputeGradientMagnitude,Compute
    Gradient Magnitude Of Grayscale Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUC2IUC2_Clone)
    SetSigma = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUC2IUC2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUC2IUC2_GetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUC2IUC2_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUC2IUC2_GetNormalizeAcrossScale)
    InputHasNumericTraitsCheck = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.delete_itkGradientMagnitudeRecursiveGaussianImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkGradientMagnitudeRecursiveGaussianImageFilterIUC2IUC2

        Create a new object of the class itkGradientMagnitudeRecursiveGaussianImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientMagnitudeRecursiveGaussianImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientMagnitudeRecursiveGaussianImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientMagnitudeRecursiveGaussianImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientMagnitudeRecursiveGaussianImageFilterIUC2IUC2 in _itkGradientMagnitudeRecursiveGaussianImageFilterPython:
_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUC2IUC2_swigregister(itkGradientMagnitudeRecursiveGaussianImageFilterIUC2IUC2)
itkGradientMagnitudeRecursiveGaussianImageFilterIUC2IUC2___New_orig__ = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUC2IUC2___New_orig__
itkGradientMagnitudeRecursiveGaussianImageFilterIUC2IUC2_cast = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUC2IUC2_cast


def itkGradientMagnitudeRecursiveGaussianImageFilterIUC3IUC3_New():
    return itkGradientMagnitudeRecursiveGaussianImageFilterIUC3IUC3.New()

class itkGradientMagnitudeRecursiveGaussianImageFilterIUC3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    r"""


    Computes the Magnitude of the Gradient of an image by convolution with
    the first derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters

    example{Filtering/ImageGradient/ComputeGradientMagnitude,Compute
    Gradient Magnitude Of Grayscale Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUC3IUC3_Clone)
    SetSigma = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUC3IUC3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUC3IUC3_GetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUC3IUC3_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUC3IUC3_GetNormalizeAcrossScale)
    InputHasNumericTraitsCheck = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.delete_itkGradientMagnitudeRecursiveGaussianImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkGradientMagnitudeRecursiveGaussianImageFilterIUC3IUC3

        Create a new object of the class itkGradientMagnitudeRecursiveGaussianImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientMagnitudeRecursiveGaussianImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientMagnitudeRecursiveGaussianImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientMagnitudeRecursiveGaussianImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientMagnitudeRecursiveGaussianImageFilterIUC3IUC3 in _itkGradientMagnitudeRecursiveGaussianImageFilterPython:
_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUC3IUC3_swigregister(itkGradientMagnitudeRecursiveGaussianImageFilterIUC3IUC3)
itkGradientMagnitudeRecursiveGaussianImageFilterIUC3IUC3___New_orig__ = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUC3IUC3___New_orig__
itkGradientMagnitudeRecursiveGaussianImageFilterIUC3IUC3_cast = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUC3IUC3_cast


def itkGradientMagnitudeRecursiveGaussianImageFilterIUS2IUS2_New():
    return itkGradientMagnitudeRecursiveGaussianImageFilterIUS2IUS2.New()

class itkGradientMagnitudeRecursiveGaussianImageFilterIUS2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""


    Computes the Magnitude of the Gradient of an image by convolution with
    the first derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters

    example{Filtering/ImageGradient/ComputeGradientMagnitude,Compute
    Gradient Magnitude Of Grayscale Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUS2IUS2_Clone)
    SetSigma = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUS2IUS2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUS2IUS2_GetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUS2IUS2_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUS2IUS2_GetNormalizeAcrossScale)
    InputHasNumericTraitsCheck = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.delete_itkGradientMagnitudeRecursiveGaussianImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkGradientMagnitudeRecursiveGaussianImageFilterIUS2IUS2

        Create a new object of the class itkGradientMagnitudeRecursiveGaussianImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientMagnitudeRecursiveGaussianImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientMagnitudeRecursiveGaussianImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientMagnitudeRecursiveGaussianImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientMagnitudeRecursiveGaussianImageFilterIUS2IUS2 in _itkGradientMagnitudeRecursiveGaussianImageFilterPython:
_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUS2IUS2_swigregister(itkGradientMagnitudeRecursiveGaussianImageFilterIUS2IUS2)
itkGradientMagnitudeRecursiveGaussianImageFilterIUS2IUS2___New_orig__ = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUS2IUS2___New_orig__
itkGradientMagnitudeRecursiveGaussianImageFilterIUS2IUS2_cast = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUS2IUS2_cast


def itkGradientMagnitudeRecursiveGaussianImageFilterIUS3IUS3_New():
    return itkGradientMagnitudeRecursiveGaussianImageFilterIUS3IUS3.New()

class itkGradientMagnitudeRecursiveGaussianImageFilterIUS3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""


    Computes the Magnitude of the Gradient of an image by convolution with
    the first derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters

    example{Filtering/ImageGradient/ComputeGradientMagnitude,Compute
    Gradient Magnitude Of Grayscale Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUS3IUS3_Clone)
    SetSigma = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUS3IUS3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUS3IUS3_GetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUS3IUS3_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUS3IUS3_GetNormalizeAcrossScale)
    InputHasNumericTraitsCheck = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.delete_itkGradientMagnitudeRecursiveGaussianImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkGradientMagnitudeRecursiveGaussianImageFilterIUS3IUS3

        Create a new object of the class itkGradientMagnitudeRecursiveGaussianImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientMagnitudeRecursiveGaussianImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientMagnitudeRecursiveGaussianImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientMagnitudeRecursiveGaussianImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientMagnitudeRecursiveGaussianImageFilterIUS3IUS3 in _itkGradientMagnitudeRecursiveGaussianImageFilterPython:
_itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUS3IUS3_swigregister(itkGradientMagnitudeRecursiveGaussianImageFilterIUS3IUS3)
itkGradientMagnitudeRecursiveGaussianImageFilterIUS3IUS3___New_orig__ = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUS3IUS3___New_orig__
itkGradientMagnitudeRecursiveGaussianImageFilterIUS3IUS3_cast = _itkGradientMagnitudeRecursiveGaussianImageFilterPython.itkGradientMagnitudeRecursiveGaussianImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def gradient_magnitude_recursive_gaussian_image_filter(*args, **kwargs):
    """Procedural interface for GradientMagnitudeRecursiveGaussianImageFilter"""
    import itk
    instance = itk.GradientMagnitudeRecursiveGaussianImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def gradient_magnitude_recursive_gaussian_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.GradientMagnitudeRecursiveGaussianImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.GradientMagnitudeRecursiveGaussianImageFilter.values()[0]
    else:
        filter_object = itk.GradientMagnitudeRecursiveGaussianImageFilter

    gradient_magnitude_recursive_gaussian_image_filter.__doc__ = filter_object.__doc__
    gradient_magnitude_recursive_gaussian_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    gradient_magnitude_recursive_gaussian_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.GradientMagnitudeRecursiveGaussianImageFilter, itkTemplate.itkTemplate):
        gradient_magnitude_recursive_gaussian_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        gradient_magnitude_recursive_gaussian_image_filter.__doc__ += "\n"
        gradient_magnitude_recursive_gaussian_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        gradient_magnitude_recursive_gaussian_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



