# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from aipod.rpc.proto import ai_pb2 as aipod_dot_rpc_dot_proto_dot_ai__pb2


class AIStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.initialize = channel.unary_unary(
        '/ai.AI/initialize',
        request_serializer=aipod_dot_rpc_dot_proto_dot_ai__pb2.Input.SerializeToString,
        response_deserializer=aipod_dot_rpc_dot_proto_dot_ai__pb2.Output.FromString,
        )
    self.train = channel.unary_unary(
        '/ai.AI/train',
        request_serializer=aipod_dot_rpc_dot_proto_dot_ai__pb2.Input.SerializeToString,
        response_deserializer=aipod_dot_rpc_dot_proto_dot_ai__pb2.Output.FromString,
        )
    self.predict = channel.unary_unary(
        '/ai.AI/predict',
        request_serializer=aipod_dot_rpc_dot_proto_dot_ai__pb2.Input.SerializeToString,
        response_deserializer=aipod_dot_rpc_dot_proto_dot_ai__pb2.Output.FromString,
        )
    self.log = channel.unary_unary(
        '/ai.AI/log',
        request_serializer=aipod_dot_rpc_dot_proto_dot_ai__pb2.Input.SerializeToString,
        response_deserializer=aipod_dot_rpc_dot_proto_dot_ai__pb2.Output.FromString,
        )


class AIServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def initialize(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def train(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def predict(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def log(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AIServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'initialize': grpc.unary_unary_rpc_method_handler(
          servicer.initialize,
          request_deserializer=aipod_dot_rpc_dot_proto_dot_ai__pb2.Input.FromString,
          response_serializer=aipod_dot_rpc_dot_proto_dot_ai__pb2.Output.SerializeToString,
      ),
      'train': grpc.unary_unary_rpc_method_handler(
          servicer.train,
          request_deserializer=aipod_dot_rpc_dot_proto_dot_ai__pb2.Input.FromString,
          response_serializer=aipod_dot_rpc_dot_proto_dot_ai__pb2.Output.SerializeToString,
      ),
      'predict': grpc.unary_unary_rpc_method_handler(
          servicer.predict,
          request_deserializer=aipod_dot_rpc_dot_proto_dot_ai__pb2.Input.FromString,
          response_serializer=aipod_dot_rpc_dot_proto_dot_ai__pb2.Output.SerializeToString,
      ),
      'log': grpc.unary_unary_rpc_method_handler(
          servicer.log,
          request_deserializer=aipod_dot_rpc_dot_proto_dot_ai__pb2.Input.FromString,
          response_serializer=aipod_dot_rpc_dot_proto_dot_ai__pb2.Output.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ai.AI', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
