# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageFeaturePython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMultiScaleHessianBasedMeasureImageFilterPython
else:
    import _itkMultiScaleHessianBasedMeasureImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkMultiScaleHessianBasedMeasureImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkMultiScaleHessianBasedMeasureImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageToImageFilterBPython
import itk.itkImageSourcePython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.pyBasePython
import itk.stdcomplexPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.itkRGBPixelPython
import itk.itkIndexPython
import itk.ITKCommonBasePython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterAPython
class itkMultiScaleHessianBasedMeasureImageFilterEnums(object):
    r"""Proxy of C++ itkMultiScaleHessianBasedMeasureImageFilterEnums class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SigmaStepMethod_EquispacedSigmaSteps = _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterEnums_SigmaStepMethod_EquispacedSigmaSteps
    
    SigmaStepMethod_LogarithmicSigmaSteps = _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterEnums_SigmaStepMethod_LogarithmicSigmaSteps
    

    def __init__(self, *args):
        r"""
        __init__(itkMultiScaleHessianBasedMeasureImageFilterEnums self) -> itkMultiScaleHessianBasedMeasureImageFilterEnums
        __init__(itkMultiScaleHessianBasedMeasureImageFilterEnums self, itkMultiScaleHessianBasedMeasureImageFilterEnums arg0) -> itkMultiScaleHessianBasedMeasureImageFilterEnums
        """
        _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterEnums_swiginit(self, _itkMultiScaleHessianBasedMeasureImageFilterPython.new_itkMultiScaleHessianBasedMeasureImageFilterEnums(*args))
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterEnums

# Register itkMultiScaleHessianBasedMeasureImageFilterEnums in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterEnums_swigregister(itkMultiScaleHessianBasedMeasureImageFilterEnums)


def itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_New():
    return itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2.New()

class itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""


    A filter to enhance structures using Hessian eigensystem-based
    measures in a multiscale framework.

    The filter evaluates a Hessian-based enhancement measure, such as
    vesselness or objectness, at different scale levels. The Hessian-based
    measure is computed from the Hessian image at each scale level and the
    best response is selected.

    Minimum and maximum sigma value can be set using SetMinSigma and
    SetMaxSigma methods respectively. The number of scale levels is set
    using SetNumberOfSigmaSteps method. Exponentially distributed scale
    levels are computed within the bound set by the minimum and maximum
    sigma values

    The filter computes a second output image (accessed by the
    GetScalesOutput method) containing the scales at which each pixel gave
    the best response.

    This code was contributed in the Insight Journal paper: "Generalizing
    vesselness with respect to dimensionality and shape" by Antiga
    L.https://hdl.handle.net/1926/576http://www.insight-
    journal.org/browse/publication/175

    Luca Antiga Ph.D. Medical Imaging Unit, Bioengineering Department,
    Mario Negri Institute, Italy.

    See:   HessianToObjectnessMeasureImageFilter

    See:   Hessian3DToVesselnessMeasureImageFilter

    See:  HessianSmoothed3DToVesselnessMeasureImageFilter

    See:   HessianRecursiveGaussianImageFilter

    See:  SymmetricEigenAnalysisImageFilter

    See:  SymmetricSecondRankTensor 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_Clone)
    SetSigmaMinimum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_SetSigmaMinimum)
    GetSigmaMinimum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GetSigmaMinimum)
    SetSigmaMaximum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_SetSigmaMaximum)
    GetSigmaMaximum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GetSigmaMaximum)
    SetNumberOfSigmaSteps = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_SetNumberOfSigmaSteps)
    GetNumberOfSigmaSteps = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GetNumberOfSigmaSteps)
    SetHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_SetHessianToMeasureFilter)
    GetModifiableHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GetModifiableHessianToMeasureFilter)
    GetHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GetHessianToMeasureFilter)
    SetNonNegativeHessianBasedMeasure = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_SetNonNegativeHessianBasedMeasure)
    GetNonNegativeHessianBasedMeasure = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GetNonNegativeHessianBasedMeasure)
    NonNegativeHessianBasedMeasureOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_NonNegativeHessianBasedMeasureOn)
    NonNegativeHessianBasedMeasureOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_NonNegativeHessianBasedMeasureOff)
    SetSigmaStepMethod = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_SetSigmaStepMethod)
    GetSigmaStepMethod = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GetSigmaStepMethod)
    SetSigmaStepMethodToEquispaced = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_SetSigmaStepMethodToEquispaced)
    SetSigmaStepMethodToLogarithmic = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_SetSigmaStepMethodToLogarithmic)
    GetHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GetHessianOutput)
    GetScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GetScalesOutput)
    SetGenerateScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_SetGenerateScalesOutput)
    GetGenerateScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GetGenerateScalesOutput)
    GenerateScalesOutputOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GenerateScalesOutputOn)
    GenerateScalesOutputOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GenerateScalesOutputOff)
    SetGenerateHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_SetGenerateHessianOutput)
    GetGenerateHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GetGenerateHessianOutput)
    GenerateHessianOutputOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GenerateHessianOutputOn)
    GenerateHessianOutputOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GenerateHessianOutputOff)
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2
    cast = _swig_new_static_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_cast)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2

        Create a new object of the class itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2 in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_swigregister(itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2)
itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2___New_orig__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2___New_orig__
itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_cast = _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_cast


def itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_New():
    return itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3.New()

class itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""


    A filter to enhance structures using Hessian eigensystem-based
    measures in a multiscale framework.

    The filter evaluates a Hessian-based enhancement measure, such as
    vesselness or objectness, at different scale levels. The Hessian-based
    measure is computed from the Hessian image at each scale level and the
    best response is selected.

    Minimum and maximum sigma value can be set using SetMinSigma and
    SetMaxSigma methods respectively. The number of scale levels is set
    using SetNumberOfSigmaSteps method. Exponentially distributed scale
    levels are computed within the bound set by the minimum and maximum
    sigma values

    The filter computes a second output image (accessed by the
    GetScalesOutput method) containing the scales at which each pixel gave
    the best response.

    This code was contributed in the Insight Journal paper: "Generalizing
    vesselness with respect to dimensionality and shape" by Antiga
    L.https://hdl.handle.net/1926/576http://www.insight-
    journal.org/browse/publication/175

    Luca Antiga Ph.D. Medical Imaging Unit, Bioengineering Department,
    Mario Negri Institute, Italy.

    See:   HessianToObjectnessMeasureImageFilter

    See:   Hessian3DToVesselnessMeasureImageFilter

    See:  HessianSmoothed3DToVesselnessMeasureImageFilter

    See:   HessianRecursiveGaussianImageFilter

    See:  SymmetricEigenAnalysisImageFilter

    See:  SymmetricSecondRankTensor 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_Clone)
    SetSigmaMinimum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_SetSigmaMinimum)
    GetSigmaMinimum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GetSigmaMinimum)
    SetSigmaMaximum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_SetSigmaMaximum)
    GetSigmaMaximum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GetSigmaMaximum)
    SetNumberOfSigmaSteps = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_SetNumberOfSigmaSteps)
    GetNumberOfSigmaSteps = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GetNumberOfSigmaSteps)
    SetHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_SetHessianToMeasureFilter)
    GetModifiableHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GetModifiableHessianToMeasureFilter)
    GetHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GetHessianToMeasureFilter)
    SetNonNegativeHessianBasedMeasure = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_SetNonNegativeHessianBasedMeasure)
    GetNonNegativeHessianBasedMeasure = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GetNonNegativeHessianBasedMeasure)
    NonNegativeHessianBasedMeasureOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_NonNegativeHessianBasedMeasureOn)
    NonNegativeHessianBasedMeasureOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_NonNegativeHessianBasedMeasureOff)
    SetSigmaStepMethod = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_SetSigmaStepMethod)
    GetSigmaStepMethod = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GetSigmaStepMethod)
    SetSigmaStepMethodToEquispaced = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_SetSigmaStepMethodToEquispaced)
    SetSigmaStepMethodToLogarithmic = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_SetSigmaStepMethodToLogarithmic)
    GetHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GetHessianOutput)
    GetScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GetScalesOutput)
    SetGenerateScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_SetGenerateScalesOutput)
    GetGenerateScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GetGenerateScalesOutput)
    GenerateScalesOutputOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GenerateScalesOutputOn)
    GenerateScalesOutputOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GenerateScalesOutputOff)
    SetGenerateHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_SetGenerateHessianOutput)
    GetGenerateHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GetGenerateHessianOutput)
    GenerateHessianOutputOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GenerateHessianOutputOn)
    GenerateHessianOutputOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GenerateHessianOutputOff)
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3
    cast = _swig_new_static_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_cast)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3

        Create a new object of the class itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3 in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_swigregister(itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3)
itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3___New_orig__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3___New_orig__
itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_cast = _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_cast


def itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_New():
    return itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2.New()

class itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""


    A filter to enhance structures using Hessian eigensystem-based
    measures in a multiscale framework.

    The filter evaluates a Hessian-based enhancement measure, such as
    vesselness or objectness, at different scale levels. The Hessian-based
    measure is computed from the Hessian image at each scale level and the
    best response is selected.

    Minimum and maximum sigma value can be set using SetMinSigma and
    SetMaxSigma methods respectively. The number of scale levels is set
    using SetNumberOfSigmaSteps method. Exponentially distributed scale
    levels are computed within the bound set by the minimum and maximum
    sigma values

    The filter computes a second output image (accessed by the
    GetScalesOutput method) containing the scales at which each pixel gave
    the best response.

    This code was contributed in the Insight Journal paper: "Generalizing
    vesselness with respect to dimensionality and shape" by Antiga
    L.https://hdl.handle.net/1926/576http://www.insight-
    journal.org/browse/publication/175

    Luca Antiga Ph.D. Medical Imaging Unit, Bioengineering Department,
    Mario Negri Institute, Italy.

    See:   HessianToObjectnessMeasureImageFilter

    See:   Hessian3DToVesselnessMeasureImageFilter

    See:  HessianSmoothed3DToVesselnessMeasureImageFilter

    See:   HessianRecursiveGaussianImageFilter

    See:  SymmetricEigenAnalysisImageFilter

    See:  SymmetricSecondRankTensor 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_Clone)
    SetSigmaMinimum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_SetSigmaMinimum)
    GetSigmaMinimum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GetSigmaMinimum)
    SetSigmaMaximum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_SetSigmaMaximum)
    GetSigmaMaximum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GetSigmaMaximum)
    SetNumberOfSigmaSteps = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_SetNumberOfSigmaSteps)
    GetNumberOfSigmaSteps = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GetNumberOfSigmaSteps)
    SetHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_SetHessianToMeasureFilter)
    GetModifiableHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GetModifiableHessianToMeasureFilter)
    GetHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GetHessianToMeasureFilter)
    SetNonNegativeHessianBasedMeasure = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_SetNonNegativeHessianBasedMeasure)
    GetNonNegativeHessianBasedMeasure = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GetNonNegativeHessianBasedMeasure)
    NonNegativeHessianBasedMeasureOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_NonNegativeHessianBasedMeasureOn)
    NonNegativeHessianBasedMeasureOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_NonNegativeHessianBasedMeasureOff)
    SetSigmaStepMethod = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_SetSigmaStepMethod)
    GetSigmaStepMethod = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GetSigmaStepMethod)
    SetSigmaStepMethodToEquispaced = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_SetSigmaStepMethodToEquispaced)
    SetSigmaStepMethodToLogarithmic = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_SetSigmaStepMethodToLogarithmic)
    GetHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GetHessianOutput)
    GetScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GetScalesOutput)
    SetGenerateScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_SetGenerateScalesOutput)
    GetGenerateScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GetGenerateScalesOutput)
    GenerateScalesOutputOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GenerateScalesOutputOn)
    GenerateScalesOutputOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GenerateScalesOutputOff)
    SetGenerateHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_SetGenerateHessianOutput)
    GetGenerateHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GetGenerateHessianOutput)
    GenerateHessianOutputOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GenerateHessianOutputOn)
    GenerateHessianOutputOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GenerateHessianOutputOff)
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2
    cast = _swig_new_static_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_cast)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2

        Create a new object of the class itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2 in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_swigregister(itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2)
itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2___New_orig__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2___New_orig__
itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_cast = _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_cast


def itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_New():
    return itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3.New()

class itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""


    A filter to enhance structures using Hessian eigensystem-based
    measures in a multiscale framework.

    The filter evaluates a Hessian-based enhancement measure, such as
    vesselness or objectness, at different scale levels. The Hessian-based
    measure is computed from the Hessian image at each scale level and the
    best response is selected.

    Minimum and maximum sigma value can be set using SetMinSigma and
    SetMaxSigma methods respectively. The number of scale levels is set
    using SetNumberOfSigmaSteps method. Exponentially distributed scale
    levels are computed within the bound set by the minimum and maximum
    sigma values

    The filter computes a second output image (accessed by the
    GetScalesOutput method) containing the scales at which each pixel gave
    the best response.

    This code was contributed in the Insight Journal paper: "Generalizing
    vesselness with respect to dimensionality and shape" by Antiga
    L.https://hdl.handle.net/1926/576http://www.insight-
    journal.org/browse/publication/175

    Luca Antiga Ph.D. Medical Imaging Unit, Bioengineering Department,
    Mario Negri Institute, Italy.

    See:   HessianToObjectnessMeasureImageFilter

    See:   Hessian3DToVesselnessMeasureImageFilter

    See:  HessianSmoothed3DToVesselnessMeasureImageFilter

    See:   HessianRecursiveGaussianImageFilter

    See:  SymmetricEigenAnalysisImageFilter

    See:  SymmetricSecondRankTensor 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_Clone)
    SetSigmaMinimum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_SetSigmaMinimum)
    GetSigmaMinimum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GetSigmaMinimum)
    SetSigmaMaximum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_SetSigmaMaximum)
    GetSigmaMaximum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GetSigmaMaximum)
    SetNumberOfSigmaSteps = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_SetNumberOfSigmaSteps)
    GetNumberOfSigmaSteps = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GetNumberOfSigmaSteps)
    SetHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_SetHessianToMeasureFilter)
    GetModifiableHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GetModifiableHessianToMeasureFilter)
    GetHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GetHessianToMeasureFilter)
    SetNonNegativeHessianBasedMeasure = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_SetNonNegativeHessianBasedMeasure)
    GetNonNegativeHessianBasedMeasure = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GetNonNegativeHessianBasedMeasure)
    NonNegativeHessianBasedMeasureOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_NonNegativeHessianBasedMeasureOn)
    NonNegativeHessianBasedMeasureOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_NonNegativeHessianBasedMeasureOff)
    SetSigmaStepMethod = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_SetSigmaStepMethod)
    GetSigmaStepMethod = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GetSigmaStepMethod)
    SetSigmaStepMethodToEquispaced = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_SetSigmaStepMethodToEquispaced)
    SetSigmaStepMethodToLogarithmic = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_SetSigmaStepMethodToLogarithmic)
    GetHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GetHessianOutput)
    GetScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GetScalesOutput)
    SetGenerateScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_SetGenerateScalesOutput)
    GetGenerateScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GetGenerateScalesOutput)
    GenerateScalesOutputOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GenerateScalesOutputOn)
    GenerateScalesOutputOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GenerateScalesOutputOff)
    SetGenerateHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_SetGenerateHessianOutput)
    GetGenerateHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GetGenerateHessianOutput)
    GenerateHessianOutputOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GenerateHessianOutputOn)
    GenerateHessianOutputOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GenerateHessianOutputOff)
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3
    cast = _swig_new_static_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_cast)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3

        Create a new object of the class itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3 in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_swigregister(itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3)
itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3___New_orig__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3___New_orig__
itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_cast = _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_cast


def itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_New():
    return itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2.New()

class itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""


    A filter to enhance structures using Hessian eigensystem-based
    measures in a multiscale framework.

    The filter evaluates a Hessian-based enhancement measure, such as
    vesselness or objectness, at different scale levels. The Hessian-based
    measure is computed from the Hessian image at each scale level and the
    best response is selected.

    Minimum and maximum sigma value can be set using SetMinSigma and
    SetMaxSigma methods respectively. The number of scale levels is set
    using SetNumberOfSigmaSteps method. Exponentially distributed scale
    levels are computed within the bound set by the minimum and maximum
    sigma values

    The filter computes a second output image (accessed by the
    GetScalesOutput method) containing the scales at which each pixel gave
    the best response.

    This code was contributed in the Insight Journal paper: "Generalizing
    vesselness with respect to dimensionality and shape" by Antiga
    L.https://hdl.handle.net/1926/576http://www.insight-
    journal.org/browse/publication/175

    Luca Antiga Ph.D. Medical Imaging Unit, Bioengineering Department,
    Mario Negri Institute, Italy.

    See:   HessianToObjectnessMeasureImageFilter

    See:   Hessian3DToVesselnessMeasureImageFilter

    See:  HessianSmoothed3DToVesselnessMeasureImageFilter

    See:   HessianRecursiveGaussianImageFilter

    See:  SymmetricEigenAnalysisImageFilter

    See:  SymmetricSecondRankTensor 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_Clone)
    SetSigmaMinimum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_SetSigmaMinimum)
    GetSigmaMinimum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GetSigmaMinimum)
    SetSigmaMaximum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_SetSigmaMaximum)
    GetSigmaMaximum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GetSigmaMaximum)
    SetNumberOfSigmaSteps = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_SetNumberOfSigmaSteps)
    GetNumberOfSigmaSteps = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GetNumberOfSigmaSteps)
    SetHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_SetHessianToMeasureFilter)
    GetModifiableHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GetModifiableHessianToMeasureFilter)
    GetHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GetHessianToMeasureFilter)
    SetNonNegativeHessianBasedMeasure = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_SetNonNegativeHessianBasedMeasure)
    GetNonNegativeHessianBasedMeasure = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GetNonNegativeHessianBasedMeasure)
    NonNegativeHessianBasedMeasureOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_NonNegativeHessianBasedMeasureOn)
    NonNegativeHessianBasedMeasureOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_NonNegativeHessianBasedMeasureOff)
    SetSigmaStepMethod = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_SetSigmaStepMethod)
    GetSigmaStepMethod = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GetSigmaStepMethod)
    SetSigmaStepMethodToEquispaced = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_SetSigmaStepMethodToEquispaced)
    SetSigmaStepMethodToLogarithmic = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_SetSigmaStepMethodToLogarithmic)
    GetHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GetHessianOutput)
    GetScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GetScalesOutput)
    SetGenerateScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_SetGenerateScalesOutput)
    GetGenerateScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GetGenerateScalesOutput)
    GenerateScalesOutputOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GenerateScalesOutputOn)
    GenerateScalesOutputOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GenerateScalesOutputOff)
    SetGenerateHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_SetGenerateHessianOutput)
    GetGenerateHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GetGenerateHessianOutput)
    GenerateHessianOutputOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GenerateHessianOutputOn)
    GenerateHessianOutputOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GenerateHessianOutputOff)
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2
    cast = _swig_new_static_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2

        Create a new object of the class itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2 in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_swigregister(itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2)
itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2___New_orig__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2___New_orig__
itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_cast = _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_cast


def itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_New():
    return itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3.New()

class itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""


    A filter to enhance structures using Hessian eigensystem-based
    measures in a multiscale framework.

    The filter evaluates a Hessian-based enhancement measure, such as
    vesselness or objectness, at different scale levels. The Hessian-based
    measure is computed from the Hessian image at each scale level and the
    best response is selected.

    Minimum and maximum sigma value can be set using SetMinSigma and
    SetMaxSigma methods respectively. The number of scale levels is set
    using SetNumberOfSigmaSteps method. Exponentially distributed scale
    levels are computed within the bound set by the minimum and maximum
    sigma values

    The filter computes a second output image (accessed by the
    GetScalesOutput method) containing the scales at which each pixel gave
    the best response.

    This code was contributed in the Insight Journal paper: "Generalizing
    vesselness with respect to dimensionality and shape" by Antiga
    L.https://hdl.handle.net/1926/576http://www.insight-
    journal.org/browse/publication/175

    Luca Antiga Ph.D. Medical Imaging Unit, Bioengineering Department,
    Mario Negri Institute, Italy.

    See:   HessianToObjectnessMeasureImageFilter

    See:   Hessian3DToVesselnessMeasureImageFilter

    See:  HessianSmoothed3DToVesselnessMeasureImageFilter

    See:   HessianRecursiveGaussianImageFilter

    See:  SymmetricEigenAnalysisImageFilter

    See:  SymmetricSecondRankTensor 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_Clone)
    SetSigmaMinimum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_SetSigmaMinimum)
    GetSigmaMinimum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GetSigmaMinimum)
    SetSigmaMaximum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_SetSigmaMaximum)
    GetSigmaMaximum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GetSigmaMaximum)
    SetNumberOfSigmaSteps = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_SetNumberOfSigmaSteps)
    GetNumberOfSigmaSteps = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GetNumberOfSigmaSteps)
    SetHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_SetHessianToMeasureFilter)
    GetModifiableHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GetModifiableHessianToMeasureFilter)
    GetHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GetHessianToMeasureFilter)
    SetNonNegativeHessianBasedMeasure = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_SetNonNegativeHessianBasedMeasure)
    GetNonNegativeHessianBasedMeasure = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GetNonNegativeHessianBasedMeasure)
    NonNegativeHessianBasedMeasureOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_NonNegativeHessianBasedMeasureOn)
    NonNegativeHessianBasedMeasureOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_NonNegativeHessianBasedMeasureOff)
    SetSigmaStepMethod = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_SetSigmaStepMethod)
    GetSigmaStepMethod = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GetSigmaStepMethod)
    SetSigmaStepMethodToEquispaced = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_SetSigmaStepMethodToEquispaced)
    SetSigmaStepMethodToLogarithmic = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_SetSigmaStepMethodToLogarithmic)
    GetHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GetHessianOutput)
    GetScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GetScalesOutput)
    SetGenerateScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_SetGenerateScalesOutput)
    GetGenerateScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GetGenerateScalesOutput)
    GenerateScalesOutputOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GenerateScalesOutputOn)
    GenerateScalesOutputOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GenerateScalesOutputOff)
    SetGenerateHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_SetGenerateHessianOutput)
    GetGenerateHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GetGenerateHessianOutput)
    GenerateHessianOutputOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GenerateHessianOutputOn)
    GenerateHessianOutputOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GenerateHessianOutputOff)
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3
    cast = _swig_new_static_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3

        Create a new object of the class itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3 in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_swigregister(itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3)
itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3___New_orig__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3___New_orig__
itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_cast = _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_cast


def itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_New():
    return itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2.New()

class itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""


    A filter to enhance structures using Hessian eigensystem-based
    measures in a multiscale framework.

    The filter evaluates a Hessian-based enhancement measure, such as
    vesselness or objectness, at different scale levels. The Hessian-based
    measure is computed from the Hessian image at each scale level and the
    best response is selected.

    Minimum and maximum sigma value can be set using SetMinSigma and
    SetMaxSigma methods respectively. The number of scale levels is set
    using SetNumberOfSigmaSteps method. Exponentially distributed scale
    levels are computed within the bound set by the minimum and maximum
    sigma values

    The filter computes a second output image (accessed by the
    GetScalesOutput method) containing the scales at which each pixel gave
    the best response.

    This code was contributed in the Insight Journal paper: "Generalizing
    vesselness with respect to dimensionality and shape" by Antiga
    L.https://hdl.handle.net/1926/576http://www.insight-
    journal.org/browse/publication/175

    Luca Antiga Ph.D. Medical Imaging Unit, Bioengineering Department,
    Mario Negri Institute, Italy.

    See:   HessianToObjectnessMeasureImageFilter

    See:   Hessian3DToVesselnessMeasureImageFilter

    See:  HessianSmoothed3DToVesselnessMeasureImageFilter

    See:   HessianRecursiveGaussianImageFilter

    See:  SymmetricEigenAnalysisImageFilter

    See:  SymmetricSecondRankTensor 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_Clone)
    SetSigmaMinimum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_SetSigmaMinimum)
    GetSigmaMinimum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GetSigmaMinimum)
    SetSigmaMaximum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_SetSigmaMaximum)
    GetSigmaMaximum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GetSigmaMaximum)
    SetNumberOfSigmaSteps = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_SetNumberOfSigmaSteps)
    GetNumberOfSigmaSteps = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GetNumberOfSigmaSteps)
    SetHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_SetHessianToMeasureFilter)
    GetModifiableHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GetModifiableHessianToMeasureFilter)
    GetHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GetHessianToMeasureFilter)
    SetNonNegativeHessianBasedMeasure = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_SetNonNegativeHessianBasedMeasure)
    GetNonNegativeHessianBasedMeasure = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GetNonNegativeHessianBasedMeasure)
    NonNegativeHessianBasedMeasureOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_NonNegativeHessianBasedMeasureOn)
    NonNegativeHessianBasedMeasureOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_NonNegativeHessianBasedMeasureOff)
    SetSigmaStepMethod = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_SetSigmaStepMethod)
    GetSigmaStepMethod = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GetSigmaStepMethod)
    SetSigmaStepMethodToEquispaced = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_SetSigmaStepMethodToEquispaced)
    SetSigmaStepMethodToLogarithmic = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_SetSigmaStepMethodToLogarithmic)
    GetHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GetHessianOutput)
    GetScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GetScalesOutput)
    SetGenerateScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_SetGenerateScalesOutput)
    GetGenerateScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GetGenerateScalesOutput)
    GenerateScalesOutputOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GenerateScalesOutputOn)
    GenerateScalesOutputOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GenerateScalesOutputOff)
    SetGenerateHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_SetGenerateHessianOutput)
    GetGenerateHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GetGenerateHessianOutput)
    GenerateHessianOutputOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GenerateHessianOutputOn)
    GenerateHessianOutputOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GenerateHessianOutputOff)
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2
    cast = _swig_new_static_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2

        Create a new object of the class itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2 in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_swigregister(itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2)
itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2___New_orig__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2___New_orig__
itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_cast = _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_cast


def itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_New():
    return itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3.New()

class itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""


    A filter to enhance structures using Hessian eigensystem-based
    measures in a multiscale framework.

    The filter evaluates a Hessian-based enhancement measure, such as
    vesselness or objectness, at different scale levels. The Hessian-based
    measure is computed from the Hessian image at each scale level and the
    best response is selected.

    Minimum and maximum sigma value can be set using SetMinSigma and
    SetMaxSigma methods respectively. The number of scale levels is set
    using SetNumberOfSigmaSteps method. Exponentially distributed scale
    levels are computed within the bound set by the minimum and maximum
    sigma values

    The filter computes a second output image (accessed by the
    GetScalesOutput method) containing the scales at which each pixel gave
    the best response.

    This code was contributed in the Insight Journal paper: "Generalizing
    vesselness with respect to dimensionality and shape" by Antiga
    L.https://hdl.handle.net/1926/576http://www.insight-
    journal.org/browse/publication/175

    Luca Antiga Ph.D. Medical Imaging Unit, Bioengineering Department,
    Mario Negri Institute, Italy.

    See:   HessianToObjectnessMeasureImageFilter

    See:   Hessian3DToVesselnessMeasureImageFilter

    See:  HessianSmoothed3DToVesselnessMeasureImageFilter

    See:   HessianRecursiveGaussianImageFilter

    See:  SymmetricEigenAnalysisImageFilter

    See:  SymmetricSecondRankTensor 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_Clone)
    SetSigmaMinimum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_SetSigmaMinimum)
    GetSigmaMinimum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GetSigmaMinimum)
    SetSigmaMaximum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_SetSigmaMaximum)
    GetSigmaMaximum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GetSigmaMaximum)
    SetNumberOfSigmaSteps = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_SetNumberOfSigmaSteps)
    GetNumberOfSigmaSteps = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GetNumberOfSigmaSteps)
    SetHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_SetHessianToMeasureFilter)
    GetModifiableHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GetModifiableHessianToMeasureFilter)
    GetHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GetHessianToMeasureFilter)
    SetNonNegativeHessianBasedMeasure = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_SetNonNegativeHessianBasedMeasure)
    GetNonNegativeHessianBasedMeasure = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GetNonNegativeHessianBasedMeasure)
    NonNegativeHessianBasedMeasureOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_NonNegativeHessianBasedMeasureOn)
    NonNegativeHessianBasedMeasureOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_NonNegativeHessianBasedMeasureOff)
    SetSigmaStepMethod = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_SetSigmaStepMethod)
    GetSigmaStepMethod = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GetSigmaStepMethod)
    SetSigmaStepMethodToEquispaced = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_SetSigmaStepMethodToEquispaced)
    SetSigmaStepMethodToLogarithmic = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_SetSigmaStepMethodToLogarithmic)
    GetHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GetHessianOutput)
    GetScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GetScalesOutput)
    SetGenerateScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_SetGenerateScalesOutput)
    GetGenerateScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GetGenerateScalesOutput)
    GenerateScalesOutputOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GenerateScalesOutputOn)
    GenerateScalesOutputOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GenerateScalesOutputOff)
    SetGenerateHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_SetGenerateHessianOutput)
    GetGenerateHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GetGenerateHessianOutput)
    GenerateHessianOutputOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GenerateHessianOutputOn)
    GenerateHessianOutputOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GenerateHessianOutputOff)
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3
    cast = _swig_new_static_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3

        Create a new object of the class itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3 in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_swigregister(itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3)
itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3___New_orig__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3___New_orig__
itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_cast = _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_cast


def itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_New():
    return itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2.New()

class itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""


    A filter to enhance structures using Hessian eigensystem-based
    measures in a multiscale framework.

    The filter evaluates a Hessian-based enhancement measure, such as
    vesselness or objectness, at different scale levels. The Hessian-based
    measure is computed from the Hessian image at each scale level and the
    best response is selected.

    Minimum and maximum sigma value can be set using SetMinSigma and
    SetMaxSigma methods respectively. The number of scale levels is set
    using SetNumberOfSigmaSteps method. Exponentially distributed scale
    levels are computed within the bound set by the minimum and maximum
    sigma values

    The filter computes a second output image (accessed by the
    GetScalesOutput method) containing the scales at which each pixel gave
    the best response.

    This code was contributed in the Insight Journal paper: "Generalizing
    vesselness with respect to dimensionality and shape" by Antiga
    L.https://hdl.handle.net/1926/576http://www.insight-
    journal.org/browse/publication/175

    Luca Antiga Ph.D. Medical Imaging Unit, Bioengineering Department,
    Mario Negri Institute, Italy.

    See:   HessianToObjectnessMeasureImageFilter

    See:   Hessian3DToVesselnessMeasureImageFilter

    See:  HessianSmoothed3DToVesselnessMeasureImageFilter

    See:   HessianRecursiveGaussianImageFilter

    See:  SymmetricEigenAnalysisImageFilter

    See:  SymmetricSecondRankTensor 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_Clone)
    SetSigmaMinimum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_SetSigmaMinimum)
    GetSigmaMinimum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GetSigmaMinimum)
    SetSigmaMaximum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_SetSigmaMaximum)
    GetSigmaMaximum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GetSigmaMaximum)
    SetNumberOfSigmaSteps = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_SetNumberOfSigmaSteps)
    GetNumberOfSigmaSteps = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GetNumberOfSigmaSteps)
    SetHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_SetHessianToMeasureFilter)
    GetModifiableHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GetModifiableHessianToMeasureFilter)
    GetHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GetHessianToMeasureFilter)
    SetNonNegativeHessianBasedMeasure = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_SetNonNegativeHessianBasedMeasure)
    GetNonNegativeHessianBasedMeasure = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GetNonNegativeHessianBasedMeasure)
    NonNegativeHessianBasedMeasureOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_NonNegativeHessianBasedMeasureOn)
    NonNegativeHessianBasedMeasureOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_NonNegativeHessianBasedMeasureOff)
    SetSigmaStepMethod = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_SetSigmaStepMethod)
    GetSigmaStepMethod = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GetSigmaStepMethod)
    SetSigmaStepMethodToEquispaced = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_SetSigmaStepMethodToEquispaced)
    SetSigmaStepMethodToLogarithmic = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_SetSigmaStepMethodToLogarithmic)
    GetHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GetHessianOutput)
    GetScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GetScalesOutput)
    SetGenerateScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_SetGenerateScalesOutput)
    GetGenerateScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GetGenerateScalesOutput)
    GenerateScalesOutputOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GenerateScalesOutputOn)
    GenerateScalesOutputOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GenerateScalesOutputOff)
    SetGenerateHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_SetGenerateHessianOutput)
    GetGenerateHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GetGenerateHessianOutput)
    GenerateHessianOutputOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GenerateHessianOutputOn)
    GenerateHessianOutputOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GenerateHessianOutputOff)
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2
    cast = _swig_new_static_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2

        Create a new object of the class itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2 in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_swigregister(itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2)
itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2___New_orig__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2___New_orig__
itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_cast = _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_cast


def itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_New():
    return itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3.New()

class itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""


    A filter to enhance structures using Hessian eigensystem-based
    measures in a multiscale framework.

    The filter evaluates a Hessian-based enhancement measure, such as
    vesselness or objectness, at different scale levels. The Hessian-based
    measure is computed from the Hessian image at each scale level and the
    best response is selected.

    Minimum and maximum sigma value can be set using SetMinSigma and
    SetMaxSigma methods respectively. The number of scale levels is set
    using SetNumberOfSigmaSteps method. Exponentially distributed scale
    levels are computed within the bound set by the minimum and maximum
    sigma values

    The filter computes a second output image (accessed by the
    GetScalesOutput method) containing the scales at which each pixel gave
    the best response.

    This code was contributed in the Insight Journal paper: "Generalizing
    vesselness with respect to dimensionality and shape" by Antiga
    L.https://hdl.handle.net/1926/576http://www.insight-
    journal.org/browse/publication/175

    Luca Antiga Ph.D. Medical Imaging Unit, Bioengineering Department,
    Mario Negri Institute, Italy.

    See:   HessianToObjectnessMeasureImageFilter

    See:   Hessian3DToVesselnessMeasureImageFilter

    See:  HessianSmoothed3DToVesselnessMeasureImageFilter

    See:   HessianRecursiveGaussianImageFilter

    See:  SymmetricEigenAnalysisImageFilter

    See:  SymmetricSecondRankTensor 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_Clone)
    SetSigmaMinimum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_SetSigmaMinimum)
    GetSigmaMinimum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GetSigmaMinimum)
    SetSigmaMaximum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_SetSigmaMaximum)
    GetSigmaMaximum = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GetSigmaMaximum)
    SetNumberOfSigmaSteps = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_SetNumberOfSigmaSteps)
    GetNumberOfSigmaSteps = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GetNumberOfSigmaSteps)
    SetHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_SetHessianToMeasureFilter)
    GetModifiableHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GetModifiableHessianToMeasureFilter)
    GetHessianToMeasureFilter = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GetHessianToMeasureFilter)
    SetNonNegativeHessianBasedMeasure = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_SetNonNegativeHessianBasedMeasure)
    GetNonNegativeHessianBasedMeasure = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GetNonNegativeHessianBasedMeasure)
    NonNegativeHessianBasedMeasureOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_NonNegativeHessianBasedMeasureOn)
    NonNegativeHessianBasedMeasureOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_NonNegativeHessianBasedMeasureOff)
    SetSigmaStepMethod = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_SetSigmaStepMethod)
    GetSigmaStepMethod = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GetSigmaStepMethod)
    SetSigmaStepMethodToEquispaced = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_SetSigmaStepMethodToEquispaced)
    SetSigmaStepMethodToLogarithmic = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_SetSigmaStepMethodToLogarithmic)
    GetHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GetHessianOutput)
    GetScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GetScalesOutput)
    SetGenerateScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_SetGenerateScalesOutput)
    GetGenerateScalesOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GetGenerateScalesOutput)
    GenerateScalesOutputOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GenerateScalesOutputOn)
    GenerateScalesOutputOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GenerateScalesOutputOff)
    SetGenerateHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_SetGenerateHessianOutput)
    GetGenerateHessianOutput = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GetGenerateHessianOutput)
    GenerateHessianOutputOn = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GenerateHessianOutputOn)
    GenerateHessianOutputOff = _swig_new_instance_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GenerateHessianOutputOff)
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3
    cast = _swig_new_static_method(_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3

        Create a new object of the class itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3 in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_swigregister(itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3)
itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3___New_orig__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3___New_orig__
itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_cast = _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def multi_scale_hessian_based_measure_image_filter(*args, **kwargs):
    """Procedural interface for MultiScaleHessianBasedMeasureImageFilter"""
    import itk
    instance = itk.MultiScaleHessianBasedMeasureImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def multi_scale_hessian_based_measure_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.MultiScaleHessianBasedMeasureImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.MultiScaleHessianBasedMeasureImageFilter.values()[0]
    else:
        filter_object = itk.MultiScaleHessianBasedMeasureImageFilter

    multi_scale_hessian_based_measure_image_filter.__doc__ = filter_object.__doc__
    multi_scale_hessian_based_measure_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    multi_scale_hessian_based_measure_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.MultiScaleHessianBasedMeasureImageFilter, itkTemplate.itkTemplate):
        multi_scale_hessian_based_measure_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        multi_scale_hessian_based_measure_image_filter.__doc__ += "\n"
        multi_scale_hessian_based_measure_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        multi_scale_hessian_based_measure_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



