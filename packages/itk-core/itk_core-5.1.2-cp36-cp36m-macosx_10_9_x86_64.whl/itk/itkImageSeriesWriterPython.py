# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKIOImageBasePython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkImageSeriesWriterPython
else:
    import _itkImageSeriesWriterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkImageSeriesWriterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkImageSeriesWriterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKIOImageBaseBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkImagePython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkRGBPixelPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython

def itkImageSeriesWriterICF2ICF2_New():
    return itkImageSeriesWriterICF2ICF2.New()

class itkImageSeriesWriterICF2ICF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterICF2ICF2
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterICF2ICF2

        Create a new object of the class itkImageSeriesWriterICF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterICF2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterICF2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterICF2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterICF2ICF2 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2_swigregister(itkImageSeriesWriterICF2ICF2)
itkImageSeriesWriterICF2ICF2___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2___New_orig__
itkImageSeriesWriterICF2ICF2_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterICF2ICF2_cast


def itkImageSeriesWriterICF3ICF2_New():
    return itkImageSeriesWriterICF3ICF2.New()

class itkImageSeriesWriterICF3ICF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterICF3ICF2
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterICF3ICF2

        Create a new object of the class itkImageSeriesWriterICF3ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterICF3ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterICF3ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterICF3ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterICF3ICF2 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2_swigregister(itkImageSeriesWriterICF3ICF2)
itkImageSeriesWriterICF3ICF2___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2___New_orig__
itkImageSeriesWriterICF3ICF2_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF2_cast


def itkImageSeriesWriterICF3ICF3_New():
    return itkImageSeriesWriterICF3ICF3.New()

class itkImageSeriesWriterICF3ICF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterICF3ICF3
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterICF3ICF3

        Create a new object of the class itkImageSeriesWriterICF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterICF3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterICF3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterICF3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterICF3ICF3 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3_swigregister(itkImageSeriesWriterICF3ICF3)
itkImageSeriesWriterICF3ICF3___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3___New_orig__
itkImageSeriesWriterICF3ICF3_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterICF3ICF3_cast


def itkImageSeriesWriterICVF22ICVF22_New():
    return itkImageSeriesWriterICVF22ICVF22.New()

class itkImageSeriesWriterICVF22ICVF22(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterICVF22ICVF22
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterICVF22ICVF22

        Create a new object of the class itkImageSeriesWriterICVF22ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterICVF22ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterICVF22ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterICVF22ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterICVF22ICVF22 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22_swigregister(itkImageSeriesWriterICVF22ICVF22)
itkImageSeriesWriterICVF22ICVF22___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22___New_orig__
itkImageSeriesWriterICVF22ICVF22_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterICVF22ICVF22_cast


def itkImageSeriesWriterICVF23ICVF23_New():
    return itkImageSeriesWriterICVF23ICVF23.New()

class itkImageSeriesWriterICVF23ICVF23(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterICVF23ICVF23
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterICVF23ICVF23

        Create a new object of the class itkImageSeriesWriterICVF23ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterICVF23ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterICVF23ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterICVF23ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterICVF23ICVF23 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23_swigregister(itkImageSeriesWriterICVF23ICVF23)
itkImageSeriesWriterICVF23ICVF23___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23___New_orig__
itkImageSeriesWriterICVF23ICVF23_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterICVF23ICVF23_cast


def itkImageSeriesWriterICVF32ICVF32_New():
    return itkImageSeriesWriterICVF32ICVF32.New()

class itkImageSeriesWriterICVF32ICVF32(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterICVF32ICVF32
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterICVF32ICVF32

        Create a new object of the class itkImageSeriesWriterICVF32ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterICVF32ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterICVF32ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterICVF32ICVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterICVF32ICVF32 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32_swigregister(itkImageSeriesWriterICVF32ICVF32)
itkImageSeriesWriterICVF32ICVF32___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32___New_orig__
itkImageSeriesWriterICVF32ICVF32_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterICVF32ICVF32_cast


def itkImageSeriesWriterICVF33ICVF33_New():
    return itkImageSeriesWriterICVF33ICVF33.New()

class itkImageSeriesWriterICVF33ICVF33(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterICVF33ICVF33
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterICVF33ICVF33

        Create a new object of the class itkImageSeriesWriterICVF33ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterICVF33ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterICVF33ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterICVF33ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterICVF33ICVF33 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33_swigregister(itkImageSeriesWriterICVF33ICVF33)
itkImageSeriesWriterICVF33ICVF33___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33___New_orig__
itkImageSeriesWriterICVF33ICVF33_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterICVF33ICVF33_cast


def itkImageSeriesWriterICVF42ICVF42_New():
    return itkImageSeriesWriterICVF42ICVF42.New()

class itkImageSeriesWriterICVF42ICVF42(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterICVF42ICVF42
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterICVF42ICVF42

        Create a new object of the class itkImageSeriesWriterICVF42ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterICVF42ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterICVF42ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterICVF42ICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterICVF42ICVF42 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42_swigregister(itkImageSeriesWriterICVF42ICVF42)
itkImageSeriesWriterICVF42ICVF42___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42___New_orig__
itkImageSeriesWriterICVF42ICVF42_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterICVF42ICVF42_cast


def itkImageSeriesWriterICVF43ICVF43_New():
    return itkImageSeriesWriterICVF43ICVF43.New()

class itkImageSeriesWriterICVF43ICVF43(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterICVF43ICVF43
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterICVF43ICVF43

        Create a new object of the class itkImageSeriesWriterICVF43ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterICVF43ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterICVF43ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterICVF43ICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterICVF43ICVF43 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43_swigregister(itkImageSeriesWriterICVF43ICVF43)
itkImageSeriesWriterICVF43ICVF43___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43___New_orig__
itkImageSeriesWriterICVF43ICVF43_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterICVF43ICVF43_cast


def itkImageSeriesWriterID2ID2_New():
    return itkImageSeriesWriterID2ID2.New()

class itkImageSeriesWriterID2ID2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterID2ID2
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterID2ID2

        Create a new object of the class itkImageSeriesWriterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterID2ID2 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2_swigregister(itkImageSeriesWriterID2ID2)
itkImageSeriesWriterID2ID2___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2___New_orig__
itkImageSeriesWriterID2ID2_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterID2ID2_cast


def itkImageSeriesWriterID3ID2_New():
    return itkImageSeriesWriterID3ID2.New()

class itkImageSeriesWriterID3ID2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterID3ID2
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterID3ID2

        Create a new object of the class itkImageSeriesWriterID3ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterID3ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterID3ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterID3ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterID3ID2 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2_swigregister(itkImageSeriesWriterID3ID2)
itkImageSeriesWriterID3ID2___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2___New_orig__
itkImageSeriesWriterID3ID2_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterID3ID2_cast


def itkImageSeriesWriterID3ID3_New():
    return itkImageSeriesWriterID3ID3.New()

class itkImageSeriesWriterID3ID3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterID3ID3
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterID3ID3

        Create a new object of the class itkImageSeriesWriterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterID3ID3 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3_swigregister(itkImageSeriesWriterID3ID3)
itkImageSeriesWriterID3ID3___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3___New_orig__
itkImageSeriesWriterID3ID3_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterID3ID3_cast


def itkImageSeriesWriterIF2IF2_New():
    return itkImageSeriesWriterIF2IF2.New()

class itkImageSeriesWriterIF2IF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterIF2IF2
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterIF2IF2

        Create a new object of the class itkImageSeriesWriterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterIF2IF2 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2_swigregister(itkImageSeriesWriterIF2IF2)
itkImageSeriesWriterIF2IF2___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2___New_orig__
itkImageSeriesWriterIF2IF2_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterIF2IF2_cast


def itkImageSeriesWriterIF3IF2_New():
    return itkImageSeriesWriterIF3IF2.New()

class itkImageSeriesWriterIF3IF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterIF3IF2
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterIF3IF2

        Create a new object of the class itkImageSeriesWriterIF3IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterIF3IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterIF3IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterIF3IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterIF3IF2 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2_swigregister(itkImageSeriesWriterIF3IF2)
itkImageSeriesWriterIF3IF2___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2___New_orig__
itkImageSeriesWriterIF3IF2_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF2_cast


def itkImageSeriesWriterIF3IF3_New():
    return itkImageSeriesWriterIF3IF3.New()

class itkImageSeriesWriterIF3IF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterIF3IF3
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterIF3IF3

        Create a new object of the class itkImageSeriesWriterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterIF3IF3 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3_swigregister(itkImageSeriesWriterIF3IF3)
itkImageSeriesWriterIF3IF3___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3___New_orig__
itkImageSeriesWriterIF3IF3_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterIF3IF3_cast


def itkImageSeriesWriterIRGBAUC2IRGBAUC2_New():
    return itkImageSeriesWriterIRGBAUC2IRGBAUC2.New()

class itkImageSeriesWriterIRGBAUC2IRGBAUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterIRGBAUC2IRGBAUC2
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterIRGBAUC2IRGBAUC2

        Create a new object of the class itkImageSeriesWriterIRGBAUC2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterIRGBAUC2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterIRGBAUC2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterIRGBAUC2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterIRGBAUC2IRGBAUC2 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2_swigregister(itkImageSeriesWriterIRGBAUC2IRGBAUC2)
itkImageSeriesWriterIRGBAUC2IRGBAUC2___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2___New_orig__
itkImageSeriesWriterIRGBAUC2IRGBAUC2_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC2IRGBAUC2_cast


def itkImageSeriesWriterIRGBAUC3IRGBAUC3_New():
    return itkImageSeriesWriterIRGBAUC3IRGBAUC3.New()

class itkImageSeriesWriterIRGBAUC3IRGBAUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterIRGBAUC3IRGBAUC3
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterIRGBAUC3IRGBAUC3

        Create a new object of the class itkImageSeriesWriterIRGBAUC3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterIRGBAUC3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterIRGBAUC3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterIRGBAUC3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterIRGBAUC3IRGBAUC3 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3_swigregister(itkImageSeriesWriterIRGBAUC3IRGBAUC3)
itkImageSeriesWriterIRGBAUC3IRGBAUC3___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3___New_orig__
itkImageSeriesWriterIRGBAUC3IRGBAUC3_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterIRGBAUC3IRGBAUC3_cast


def itkImageSeriesWriterIRGBUC2IRGBUC2_New():
    return itkImageSeriesWriterIRGBUC2IRGBUC2.New()

class itkImageSeriesWriterIRGBUC2IRGBUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterIRGBUC2IRGBUC2
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterIRGBUC2IRGBUC2

        Create a new object of the class itkImageSeriesWriterIRGBUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterIRGBUC2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterIRGBUC2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterIRGBUC2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterIRGBUC2IRGBUC2 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2_swigregister(itkImageSeriesWriterIRGBUC2IRGBUC2)
itkImageSeriesWriterIRGBUC2IRGBUC2___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2___New_orig__
itkImageSeriesWriterIRGBUC2IRGBUC2_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC2IRGBUC2_cast


def itkImageSeriesWriterIRGBUC3IRGBUC2_New():
    return itkImageSeriesWriterIRGBUC3IRGBUC2.New()

class itkImageSeriesWriterIRGBUC3IRGBUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterIRGBUC3IRGBUC2
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterIRGBUC3IRGBUC2

        Create a new object of the class itkImageSeriesWriterIRGBUC3IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterIRGBUC3IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterIRGBUC3IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterIRGBUC3IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterIRGBUC3IRGBUC2 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2_swigregister(itkImageSeriesWriterIRGBUC3IRGBUC2)
itkImageSeriesWriterIRGBUC3IRGBUC2___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2___New_orig__
itkImageSeriesWriterIRGBUC3IRGBUC2_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC2_cast


def itkImageSeriesWriterIRGBUC3IRGBUC3_New():
    return itkImageSeriesWriterIRGBUC3IRGBUC3.New()

class itkImageSeriesWriterIRGBUC3IRGBUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterIRGBUC3IRGBUC3
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterIRGBUC3IRGBUC3

        Create a new object of the class itkImageSeriesWriterIRGBUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterIRGBUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterIRGBUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterIRGBUC3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterIRGBUC3IRGBUC3 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3_swigregister(itkImageSeriesWriterIRGBUC3IRGBUC3)
itkImageSeriesWriterIRGBUC3IRGBUC3___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3___New_orig__
itkImageSeriesWriterIRGBUC3IRGBUC3_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterIRGBUC3IRGBUC3_cast


def itkImageSeriesWriterISS2ISS2_New():
    return itkImageSeriesWriterISS2ISS2.New()

class itkImageSeriesWriterISS2ISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterISS2ISS2
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterISS2ISS2

        Create a new object of the class itkImageSeriesWriterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterISS2ISS2 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2_swigregister(itkImageSeriesWriterISS2ISS2)
itkImageSeriesWriterISS2ISS2___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2___New_orig__
itkImageSeriesWriterISS2ISS2_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterISS2ISS2_cast


def itkImageSeriesWriterISS3ISS2_New():
    return itkImageSeriesWriterISS3ISS2.New()

class itkImageSeriesWriterISS3ISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterISS3ISS2
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterISS3ISS2

        Create a new object of the class itkImageSeriesWriterISS3ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterISS3ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterISS3ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterISS3ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterISS3ISS2 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2_swigregister(itkImageSeriesWriterISS3ISS2)
itkImageSeriesWriterISS3ISS2___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2___New_orig__
itkImageSeriesWriterISS3ISS2_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS2_cast


def itkImageSeriesWriterISS3ISS3_New():
    return itkImageSeriesWriterISS3ISS3.New()

class itkImageSeriesWriterISS3ISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterISS3ISS3
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterISS3ISS3

        Create a new object of the class itkImageSeriesWriterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterISS3ISS3 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3_swigregister(itkImageSeriesWriterISS3ISS3)
itkImageSeriesWriterISS3ISS3___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3___New_orig__
itkImageSeriesWriterISS3ISS3_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterISS3ISS3_cast


def itkImageSeriesWriterIUC2IUC2_New():
    return itkImageSeriesWriterIUC2IUC2.New()

class itkImageSeriesWriterIUC2IUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterIUC2IUC2
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterIUC2IUC2

        Create a new object of the class itkImageSeriesWriterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterIUC2IUC2 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2_swigregister(itkImageSeriesWriterIUC2IUC2)
itkImageSeriesWriterIUC2IUC2___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2___New_orig__
itkImageSeriesWriterIUC2IUC2_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterIUC2IUC2_cast


def itkImageSeriesWriterIUC3IUC2_New():
    return itkImageSeriesWriterIUC3IUC2.New()

class itkImageSeriesWriterIUC3IUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterIUC3IUC2
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterIUC3IUC2

        Create a new object of the class itkImageSeriesWriterIUC3IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterIUC3IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterIUC3IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterIUC3IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterIUC3IUC2 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2_swigregister(itkImageSeriesWriterIUC3IUC2)
itkImageSeriesWriterIUC3IUC2___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2___New_orig__
itkImageSeriesWriterIUC3IUC2_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC2_cast


def itkImageSeriesWriterIUC3IUC3_New():
    return itkImageSeriesWriterIUC3IUC3.New()

class itkImageSeriesWriterIUC3IUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterIUC3IUC3
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterIUC3IUC3

        Create a new object of the class itkImageSeriesWriterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterIUC3IUC3 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3_swigregister(itkImageSeriesWriterIUC3IUC3)
itkImageSeriesWriterIUC3IUC3___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3___New_orig__
itkImageSeriesWriterIUC3IUC3_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterIUC3IUC3_cast


def itkImageSeriesWriterIUS2IUS2_New():
    return itkImageSeriesWriterIUS2IUS2.New()

class itkImageSeriesWriterIUS2IUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterIUS2IUS2
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterIUS2IUS2

        Create a new object of the class itkImageSeriesWriterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterIUS2IUS2 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2_swigregister(itkImageSeriesWriterIUS2IUS2)
itkImageSeriesWriterIUS2IUS2___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2___New_orig__
itkImageSeriesWriterIUS2IUS2_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterIUS2IUS2_cast


def itkImageSeriesWriterIUS3IUS2_New():
    return itkImageSeriesWriterIUS3IUS2.New()

class itkImageSeriesWriterIUS3IUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterIUS3IUS2
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterIUS3IUS2

        Create a new object of the class itkImageSeriesWriterIUS3IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterIUS3IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterIUS3IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterIUS3IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterIUS3IUS2 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2_swigregister(itkImageSeriesWriterIUS3IUS2)
itkImageSeriesWriterIUS3IUS2___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2___New_orig__
itkImageSeriesWriterIUS3IUS2_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS2_cast


def itkImageSeriesWriterIUS3IUS3_New():
    return itkImageSeriesWriterIUS3IUS3.New()

class itkImageSeriesWriterIUS3IUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterIUS3IUS3
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterIUS3IUS3

        Create a new object of the class itkImageSeriesWriterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterIUS3IUS3 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3_swigregister(itkImageSeriesWriterIUS3IUS3)
itkImageSeriesWriterIUS3IUS3___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3___New_orig__
itkImageSeriesWriterIUS3IUS3_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterIUS3IUS3_cast


def itkImageSeriesWriterIVF22IVF22_New():
    return itkImageSeriesWriterIVF22IVF22.New()

class itkImageSeriesWriterIVF22IVF22(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterIVF22IVF22
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterIVF22IVF22

        Create a new object of the class itkImageSeriesWriterIVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterIVF22IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterIVF22IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterIVF22IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterIVF22IVF22 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22_swigregister(itkImageSeriesWriterIVF22IVF22)
itkImageSeriesWriterIVF22IVF22___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22___New_orig__
itkImageSeriesWriterIVF22IVF22_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterIVF22IVF22_cast


def itkImageSeriesWriterIVF23IVF23_New():
    return itkImageSeriesWriterIVF23IVF23.New()

class itkImageSeriesWriterIVF23IVF23(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterIVF23IVF23
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterIVF23IVF23

        Create a new object of the class itkImageSeriesWriterIVF23IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterIVF23IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterIVF23IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterIVF23IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterIVF23IVF23 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23_swigregister(itkImageSeriesWriterIVF23IVF23)
itkImageSeriesWriterIVF23IVF23___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23___New_orig__
itkImageSeriesWriterIVF23IVF23_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterIVF23IVF23_cast


def itkImageSeriesWriterIVF32IVF32_New():
    return itkImageSeriesWriterIVF32IVF32.New()

class itkImageSeriesWriterIVF32IVF32(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterIVF32IVF32
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterIVF32IVF32

        Create a new object of the class itkImageSeriesWriterIVF32IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterIVF32IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterIVF32IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterIVF32IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterIVF32IVF32 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32_swigregister(itkImageSeriesWriterIVF32IVF32)
itkImageSeriesWriterIVF32IVF32___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32___New_orig__
itkImageSeriesWriterIVF32IVF32_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterIVF32IVF32_cast


def itkImageSeriesWriterIVF33IVF33_New():
    return itkImageSeriesWriterIVF33IVF33.New()

class itkImageSeriesWriterIVF33IVF33(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterIVF33IVF33
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterIVF33IVF33

        Create a new object of the class itkImageSeriesWriterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterIVF33IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterIVF33IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterIVF33IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterIVF33IVF33 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33_swigregister(itkImageSeriesWriterIVF33IVF33)
itkImageSeriesWriterIVF33IVF33___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33___New_orig__
itkImageSeriesWriterIVF33IVF33_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterIVF33IVF33_cast


def itkImageSeriesWriterIVF42IVF42_New():
    return itkImageSeriesWriterIVF42IVF42.New()

class itkImageSeriesWriterIVF42IVF42(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterIVF42IVF42
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterIVF42IVF42

        Create a new object of the class itkImageSeriesWriterIVF42IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterIVF42IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterIVF42IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterIVF42IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterIVF42IVF42 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42_swigregister(itkImageSeriesWriterIVF42IVF42)
itkImageSeriesWriterIVF42IVF42___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42___New_orig__
itkImageSeriesWriterIVF42IVF42_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterIVF42IVF42_cast


def itkImageSeriesWriterIVF43IVF43_New():
    return itkImageSeriesWriterIVF43IVF43.New()

class itkImageSeriesWriterIVF43IVF43(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes image data to a series of data files.

    ImageSeriesWriter writes its input data to a series of output files.
    The writer is templated over an input image type and an output image
    type. Usually, the output image type will have fewer dimensions than
    the input image type. Each file has a name created using the
    SeriesFormat. This string is used as a sprintf argument to build a
    filename. The string should contain zero or one "%d" or equivalent.
    The "%d" is an incremental file number that starts at StartIndex and
    is incremented by IncrementIndex. Since this writer uses an internal
    instance of an ImageFileWriter, the type of file is determined by
    either the file extension or an ImageIO class if specified.

    See:   ImageFileWriter

    See:   ImageIOBase

    See:   ImageSeriesReader
    example{IO/ImageBase/Creade3DFromSeriesOf2D,Creade 3D Volume From
    Series Of 2D Images} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43_Clone)
    SetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43_SetInput)
    GetInput = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43_GetInput)
    SetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43_GetImageIO)
    Write = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43_Write)
    SetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43_SetStartIndex)
    GetStartIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43_GetStartIndex)
    SetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43_SetIncrementIndex)
    GetIncrementIndex = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43_GetIncrementIndex)
    SetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43_SetSeriesFormat)
    GetSeriesFormat = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43_GetSeriesFormat)
    SetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43_SetFileNames)
    GetFileNames = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43_GetFileNames)
    SetFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43_SetFileName)
    AddFileName = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43_AddFileName)
    SetMetaDataDictionaryArray = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43_SetMetaDataDictionaryArray)
    SetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43_UseCompressionOff)
    __swig_destroy__ = _itkImageSeriesWriterPython.delete_itkImageSeriesWriterIVF43IVF43
    cast = _swig_new_static_method(_itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43_cast)

    def New(*args, **kargs):
        """New() -> itkImageSeriesWriterIVF43IVF43

        Create a new object of the class itkImageSeriesWriterIVF43IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSeriesWriterIVF43IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSeriesWriterIVF43IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSeriesWriterIVF43IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSeriesWriterIVF43IVF43 in _itkImageSeriesWriterPython:
_itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43_swigregister(itkImageSeriesWriterIVF43IVF43)
itkImageSeriesWriterIVF43IVF43___New_orig__ = _itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43___New_orig__
itkImageSeriesWriterIVF43IVF43_cast = _itkImageSeriesWriterPython.itkImageSeriesWriterIVF43IVF43_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def image_series_writer(*args, **kwargs):
    """Procedural interface for ImageSeriesWriter"""
    import itk
    instance = itk.ImageSeriesWriter.New(*args, **kwargs)
    return instance.__internal_call__()

def image_series_writer_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ImageSeriesWriter, itkTemplate.itkTemplate):
        filter_object = itk.ImageSeriesWriter.values()[0]
    else:
        filter_object = itk.ImageSeriesWriter

    image_series_writer.__doc__ = filter_object.__doc__
    image_series_writer.__doc__ += "\n Args are Input(s) to the filter.\n"
    image_series_writer.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ImageSeriesWriter, itkTemplate.itkTemplate):
        image_series_writer.__doc__ += itkHelpers.filter_args(filter_object)[0]
        image_series_writer.__doc__ += "\n"
        image_series_writer.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        image_series_writer.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



