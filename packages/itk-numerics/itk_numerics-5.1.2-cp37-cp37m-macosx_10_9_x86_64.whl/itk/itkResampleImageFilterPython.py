# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageGridPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkResampleImageFilterPython
else:
    import _itkResampleImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkResampleImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkResampleImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkInterpolateImageFunctionPython
import itk.itkImageFunctionBasePython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkPointPython
import itk.itkRGBAPixelPython
import itk.itkCovariantVectorPython
import itk.itkFunctionBasePython
import itk.itkArrayPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkImageRegionPython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkTransformBasePython
import itk.itkDiffusionTensor3DPython
import itk.itkArray2DPython
import itk.itkOptimizerParametersPython
import itk.itkExtrapolateImageFunctionPython

def itkResampleImageFilterID2ID2_New():
    return itkResampleImageFilterID2ID2.New()

class itkResampleImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterID2ID2_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterID2ID2
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterID2ID2

        Create a new object of the class itkResampleImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterID2ID2 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterID2ID2_swigregister(itkResampleImageFilterID2ID2)
itkResampleImageFilterID2ID2___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterID2ID2___New_orig__
itkResampleImageFilterID2ID2_cast = _itkResampleImageFilterPython.itkResampleImageFilterID2ID2_cast


def itkResampleImageFilterID3ID3_New():
    return itkResampleImageFilterID3ID3.New()

class itkResampleImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterID3ID3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterID3ID3
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterID3ID3

        Create a new object of the class itkResampleImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterID3ID3 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterID3ID3_swigregister(itkResampleImageFilterID3ID3)
itkResampleImageFilterID3ID3___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterID3ID3___New_orig__
itkResampleImageFilterID3ID3_cast = _itkResampleImageFilterPython.itkResampleImageFilterID3ID3_cast


def itkResampleImageFilterIF2IF2_New():
    return itkResampleImageFilterIF2IF2.New()

class itkResampleImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIF2IF2
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIF2IF2

        Create a new object of the class itkResampleImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterIF2IF2 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_swigregister(itkResampleImageFilterIF2IF2)
itkResampleImageFilterIF2IF2___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2___New_orig__
itkResampleImageFilterIF2IF2_cast = _itkResampleImageFilterPython.itkResampleImageFilterIF2IF2_cast


def itkResampleImageFilterIF3IF3_New():
    return itkResampleImageFilterIF3IF3.New()

class itkResampleImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIF3IF3
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIF3IF3

        Create a new object of the class itkResampleImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterIF3IF3 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_swigregister(itkResampleImageFilterIF3IF3)
itkResampleImageFilterIF3IF3___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3___New_orig__
itkResampleImageFilterIF3IF3_cast = _itkResampleImageFilterPython.itkResampleImageFilterIF3IF3_cast


def itkResampleImageFilterIRGBAUC2IRGBAUC2_New():
    return itkResampleImageFilterIRGBAUC2IRGBAUC2.New()

class itkResampleImageFilterIRGBAUC2IRGBAUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIRGBAUC2IRGBAUC2
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIRGBAUC2IRGBAUC2

        Create a new object of the class itkResampleImageFilterIRGBAUC2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIRGBAUC2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIRGBAUC2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterIRGBAUC2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterIRGBAUC2IRGBAUC2 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_swigregister(itkResampleImageFilterIRGBAUC2IRGBAUC2)
itkResampleImageFilterIRGBAUC2IRGBAUC2___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2___New_orig__
itkResampleImageFilterIRGBAUC2IRGBAUC2_cast = _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC2IRGBAUC2_cast


def itkResampleImageFilterIRGBAUC3IRGBAUC3_New():
    return itkResampleImageFilterIRGBAUC3IRGBAUC3.New()

class itkResampleImageFilterIRGBAUC3IRGBAUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIRGBAUC3IRGBAUC3
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIRGBAUC3IRGBAUC3

        Create a new object of the class itkResampleImageFilterIRGBAUC3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIRGBAUC3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIRGBAUC3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterIRGBAUC3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterIRGBAUC3IRGBAUC3 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_swigregister(itkResampleImageFilterIRGBAUC3IRGBAUC3)
itkResampleImageFilterIRGBAUC3IRGBAUC3___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3___New_orig__
itkResampleImageFilterIRGBAUC3IRGBAUC3_cast = _itkResampleImageFilterPython.itkResampleImageFilterIRGBAUC3IRGBAUC3_cast


def itkResampleImageFilterIRGBUC2IRGBUC2_New():
    return itkResampleImageFilterIRGBUC2IRGBUC2.New()

class itkResampleImageFilterIRGBUC2IRGBUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIRGBUC2IRGBUC2
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIRGBUC2IRGBUC2

        Create a new object of the class itkResampleImageFilterIRGBUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIRGBUC2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIRGBUC2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterIRGBUC2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterIRGBUC2IRGBUC2 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_swigregister(itkResampleImageFilterIRGBUC2IRGBUC2)
itkResampleImageFilterIRGBUC2IRGBUC2___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2___New_orig__
itkResampleImageFilterIRGBUC2IRGBUC2_cast = _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC2IRGBUC2_cast


def itkResampleImageFilterIRGBUC3IRGBUC3_New():
    return itkResampleImageFilterIRGBUC3IRGBUC3.New()

class itkResampleImageFilterIRGBUC3IRGBUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIRGBUC3IRGBUC3
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIRGBUC3IRGBUC3

        Create a new object of the class itkResampleImageFilterIRGBUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIRGBUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIRGBUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterIRGBUC3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterIRGBUC3IRGBUC3 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_swigregister(itkResampleImageFilterIRGBUC3IRGBUC3)
itkResampleImageFilterIRGBUC3IRGBUC3___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3___New_orig__
itkResampleImageFilterIRGBUC3IRGBUC3_cast = _itkResampleImageFilterPython.itkResampleImageFilterIRGBUC3IRGBUC3_cast


def itkResampleImageFilterISS2ISS2_New():
    return itkResampleImageFilterISS2ISS2.New()

class itkResampleImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterISS2ISS2

        Create a new object of the class itkResampleImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterISS2ISS2 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_swigregister(itkResampleImageFilterISS2ISS2)
itkResampleImageFilterISS2ISS2___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2___New_orig__
itkResampleImageFilterISS2ISS2_cast = _itkResampleImageFilterPython.itkResampleImageFilterISS2ISS2_cast


def itkResampleImageFilterISS3ISS3_New():
    return itkResampleImageFilterISS3ISS3.New()

class itkResampleImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterISS3ISS3

        Create a new object of the class itkResampleImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterISS3ISS3 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_swigregister(itkResampleImageFilterISS3ISS3)
itkResampleImageFilterISS3ISS3___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3___New_orig__
itkResampleImageFilterISS3ISS3_cast = _itkResampleImageFilterPython.itkResampleImageFilterISS3ISS3_cast


def itkResampleImageFilterIUC2IUC2_New():
    return itkResampleImageFilterIUC2IUC2.New()

class itkResampleImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIUC2IUC2

        Create a new object of the class itkResampleImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterIUC2IUC2 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_swigregister(itkResampleImageFilterIUC2IUC2)
itkResampleImageFilterIUC2IUC2___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2___New_orig__
itkResampleImageFilterIUC2IUC2_cast = _itkResampleImageFilterPython.itkResampleImageFilterIUC2IUC2_cast


def itkResampleImageFilterIUC3IUC3_New():
    return itkResampleImageFilterIUC3IUC3.New()

class itkResampleImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIUC3IUC3

        Create a new object of the class itkResampleImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterIUC3IUC3 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_swigregister(itkResampleImageFilterIUC3IUC3)
itkResampleImageFilterIUC3IUC3___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3___New_orig__
itkResampleImageFilterIUC3IUC3_cast = _itkResampleImageFilterPython.itkResampleImageFilterIUC3IUC3_cast


def itkResampleImageFilterIUS2IUS2_New():
    return itkResampleImageFilterIUS2IUS2.New()

class itkResampleImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIUS2IUS2

        Create a new object of the class itkResampleImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterIUS2IUS2 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_swigregister(itkResampleImageFilterIUS2IUS2)
itkResampleImageFilterIUS2IUS2___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2___New_orig__
itkResampleImageFilterIUS2IUS2_cast = _itkResampleImageFilterPython.itkResampleImageFilterIUS2IUS2_cast


def itkResampleImageFilterIUS3IUS3_New():
    return itkResampleImageFilterIUS3IUS3.New()

class itkResampleImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIUS3IUS3

        Create a new object of the class itkResampleImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterIUS3IUS3 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_swigregister(itkResampleImageFilterIUS3IUS3)
itkResampleImageFilterIUS3IUS3___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3___New_orig__
itkResampleImageFilterIUS3IUS3_cast = _itkResampleImageFilterPython.itkResampleImageFilterIUS3IUS3_cast


def itkResampleImageFilterIVF22IVF22_New():
    return itkResampleImageFilterIVF22IVF22.New()

class itkResampleImageFilterIVF22IVF22(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIVF22IVF22
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIVF22IVF22

        Create a new object of the class itkResampleImageFilterIVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIVF22IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIVF22IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterIVF22IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterIVF22IVF22 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_swigregister(itkResampleImageFilterIVF22IVF22)
itkResampleImageFilterIVF22IVF22___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22___New_orig__
itkResampleImageFilterIVF22IVF22_cast = _itkResampleImageFilterPython.itkResampleImageFilterIVF22IVF22_cast


def itkResampleImageFilterIVF23IVF23_New():
    return itkResampleImageFilterIVF23IVF23.New()

class itkResampleImageFilterIVF23IVF23(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF23IVF23):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIVF23IVF23
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIVF23IVF23

        Create a new object of the class itkResampleImageFilterIVF23IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIVF23IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIVF23IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterIVF23IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterIVF23IVF23 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_swigregister(itkResampleImageFilterIVF23IVF23)
itkResampleImageFilterIVF23IVF23___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23___New_orig__
itkResampleImageFilterIVF23IVF23_cast = _itkResampleImageFilterPython.itkResampleImageFilterIVF23IVF23_cast


def itkResampleImageFilterIVF32IVF32_New():
    return itkResampleImageFilterIVF32IVF32.New()

class itkResampleImageFilterIVF32IVF32(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF32IVF32):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIVF32IVF32
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIVF32IVF32

        Create a new object of the class itkResampleImageFilterIVF32IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIVF32IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIVF32IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterIVF32IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterIVF32IVF32 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_swigregister(itkResampleImageFilterIVF32IVF32)
itkResampleImageFilterIVF32IVF32___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32___New_orig__
itkResampleImageFilterIVF32IVF32_cast = _itkResampleImageFilterPython.itkResampleImageFilterIVF32IVF32_cast


def itkResampleImageFilterIVF33IVF33_New():
    return itkResampleImageFilterIVF33IVF33.New()

class itkResampleImageFilterIVF33IVF33(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIVF33IVF33
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIVF33IVF33

        Create a new object of the class itkResampleImageFilterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIVF33IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIVF33IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterIVF33IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterIVF33IVF33 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_swigregister(itkResampleImageFilterIVF33IVF33)
itkResampleImageFilterIVF33IVF33___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33___New_orig__
itkResampleImageFilterIVF33IVF33_cast = _itkResampleImageFilterPython.itkResampleImageFilterIVF33IVF33_cast


def itkResampleImageFilterIVF42IVF42_New():
    return itkResampleImageFilterIVF42IVF42.New()

class itkResampleImageFilterIVF42IVF42(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF42IVF42):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIVF42IVF42
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIVF42IVF42

        Create a new object of the class itkResampleImageFilterIVF42IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIVF42IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIVF42IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterIVF42IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterIVF42IVF42 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_swigregister(itkResampleImageFilterIVF42IVF42)
itkResampleImageFilterIVF42IVF42___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42___New_orig__
itkResampleImageFilterIVF42IVF42_cast = _itkResampleImageFilterPython.itkResampleImageFilterIVF42IVF42_cast


def itkResampleImageFilterIVF43IVF43_New():
    return itkResampleImageFilterIVF43IVF43.New()

class itkResampleImageFilterIVF43IVF43(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF43IVF43):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterIVF43IVF43
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterIVF43IVF43

        Create a new object of the class itkResampleImageFilterIVF43IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterIVF43IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterIVF43IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterIVF43IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterIVF43IVF43 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_swigregister(itkResampleImageFilterIVF43IVF43)
itkResampleImageFilterIVF43IVF43___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43___New_orig__
itkResampleImageFilterIVF43IVF43_cast = _itkResampleImageFilterPython.itkResampleImageFilterIVF43IVF43_cast


def itkResampleImageFilterVID2VID2_New():
    return itkResampleImageFilterVID2VID2.New()

class itkResampleImageFilterVID2VID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterVID2VID2):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterVID2VID2
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterVID2VID2

        Create a new object of the class itkResampleImageFilterVID2VID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterVID2VID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterVID2VID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterVID2VID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterVID2VID2 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_swigregister(itkResampleImageFilterVID2VID2)
itkResampleImageFilterVID2VID2___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterVID2VID2___New_orig__
itkResampleImageFilterVID2VID2_cast = _itkResampleImageFilterPython.itkResampleImageFilterVID2VID2_cast


def itkResampleImageFilterVID3VID3_New():
    return itkResampleImageFilterVID3VID3.New()

class itkResampleImageFilterVID3VID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterVID3VID3):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterVID3VID3
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterVID3VID3

        Create a new object of the class itkResampleImageFilterVID3VID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterVID3VID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterVID3VID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterVID3VID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterVID3VID3 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_swigregister(itkResampleImageFilterVID3VID3)
itkResampleImageFilterVID3VID3___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterVID3VID3___New_orig__
itkResampleImageFilterVID3VID3_cast = _itkResampleImageFilterPython.itkResampleImageFilterVID3VID3_cast


def itkResampleImageFilterVIF2VIF2_New():
    return itkResampleImageFilterVIF2VIF2.New()

class itkResampleImageFilterVIF2VIF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterVIF2VIF2):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterVIF2VIF2
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterVIF2VIF2

        Create a new object of the class itkResampleImageFilterVIF2VIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterVIF2VIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterVIF2VIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterVIF2VIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterVIF2VIF2 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_swigregister(itkResampleImageFilterVIF2VIF2)
itkResampleImageFilterVIF2VIF2___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2___New_orig__
itkResampleImageFilterVIF2VIF2_cast = _itkResampleImageFilterPython.itkResampleImageFilterVIF2VIF2_cast


def itkResampleImageFilterVIF3VIF3_New():
    return itkResampleImageFilterVIF3VIF3.New()

class itkResampleImageFilterVIF3VIF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterVIF3VIF3):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterVIF3VIF3
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterVIF3VIF3

        Create a new object of the class itkResampleImageFilterVIF3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterVIF3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterVIF3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterVIF3VIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterVIF3VIF3 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_swigregister(itkResampleImageFilterVIF3VIF3)
itkResampleImageFilterVIF3VIF3___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3___New_orig__
itkResampleImageFilterVIF3VIF3_cast = _itkResampleImageFilterPython.itkResampleImageFilterVIF3VIF3_cast


def itkResampleImageFilterVISS2VISS2_New():
    return itkResampleImageFilterVISS2VISS2.New()

class itkResampleImageFilterVISS2VISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterVISS2VISS2):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterVISS2VISS2
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterVISS2VISS2

        Create a new object of the class itkResampleImageFilterVISS2VISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterVISS2VISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterVISS2VISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterVISS2VISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterVISS2VISS2 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_swigregister(itkResampleImageFilterVISS2VISS2)
itkResampleImageFilterVISS2VISS2___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2___New_orig__
itkResampleImageFilterVISS2VISS2_cast = _itkResampleImageFilterPython.itkResampleImageFilterVISS2VISS2_cast


def itkResampleImageFilterVISS3VISS3_New():
    return itkResampleImageFilterVISS3VISS3.New()

class itkResampleImageFilterVISS3VISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterVISS3VISS3):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterVISS3VISS3
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterVISS3VISS3

        Create a new object of the class itkResampleImageFilterVISS3VISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterVISS3VISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterVISS3VISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterVISS3VISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterVISS3VISS3 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_swigregister(itkResampleImageFilterVISS3VISS3)
itkResampleImageFilterVISS3VISS3___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3___New_orig__
itkResampleImageFilterVISS3VISS3_cast = _itkResampleImageFilterPython.itkResampleImageFilterVISS3VISS3_cast


def itkResampleImageFilterVIUC2VIUC2_New():
    return itkResampleImageFilterVIUC2VIUC2.New()

class itkResampleImageFilterVIUC2VIUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterVIUC2VIUC2):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterVIUC2VIUC2
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterVIUC2VIUC2

        Create a new object of the class itkResampleImageFilterVIUC2VIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterVIUC2VIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterVIUC2VIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterVIUC2VIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterVIUC2VIUC2 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_swigregister(itkResampleImageFilterVIUC2VIUC2)
itkResampleImageFilterVIUC2VIUC2___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2___New_orig__
itkResampleImageFilterVIUC2VIUC2_cast = _itkResampleImageFilterPython.itkResampleImageFilterVIUC2VIUC2_cast


def itkResampleImageFilterVIUC3VIUC3_New():
    return itkResampleImageFilterVIUC3VIUC3.New()

class itkResampleImageFilterVIUC3VIUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterVIUC3VIUC3):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterVIUC3VIUC3
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterVIUC3VIUC3

        Create a new object of the class itkResampleImageFilterVIUC3VIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterVIUC3VIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterVIUC3VIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterVIUC3VIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterVIUC3VIUC3 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_swigregister(itkResampleImageFilterVIUC3VIUC3)
itkResampleImageFilterVIUC3VIUC3___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3___New_orig__
itkResampleImageFilterVIUC3VIUC3_cast = _itkResampleImageFilterPython.itkResampleImageFilterVIUC3VIUC3_cast


def itkResampleImageFilterVIUS2VIUS2_New():
    return itkResampleImageFilterVIUS2VIUS2.New()

class itkResampleImageFilterVIUS2VIUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterVIUS2VIUS2):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterVIUS2VIUS2
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterVIUS2VIUS2

        Create a new object of the class itkResampleImageFilterVIUS2VIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterVIUS2VIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterVIUS2VIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterVIUS2VIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterVIUS2VIUS2 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_swigregister(itkResampleImageFilterVIUS2VIUS2)
itkResampleImageFilterVIUS2VIUS2___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2___New_orig__
itkResampleImageFilterVIUS2VIUS2_cast = _itkResampleImageFilterPython.itkResampleImageFilterVIUS2VIUS2_cast


def itkResampleImageFilterVIUS3VIUS3_New():
    return itkResampleImageFilterVIUS3VIUS3.New()

class itkResampleImageFilterVIUS3VIUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterVIUS3VIUS3):
    r"""


    Resample an image via a coordinate transform.

    ResampleImageFilter resamples an existing image through some
    coordinate transform, interpolating via some image function. The class
    is templated over the types of the input and output images.

    Note that the choice of interpolator function can be important. This
    function is set via SetInterpolator(). The default is
    LinearInterpolateImageFunction<InputImageType,
    TInterpolatorPrecisionType>, which is reasonable for ordinary medical
    images. However, some synthetic images have pixels drawn from a finite
    prescribed set. An example would be a mask indicating the segmentation
    of a brain into a small number of tissue types. For such an image, one
    does not want to interpolate between different pixel values, and so
    NearestNeighborInterpolateImageFunction< InputImageType, TCoordRep >
    would be a better choice.

    If an sample is taken from outside the image domain, the default
    behavior is to use a default pixel value. If different behavior is
    desired, an extrapolator function can be set with SetExtrapolator().

    Output information (spacing, size and direction) for the output image
    should be set. This information has the normal defaults of unit
    spacing, zero origin and identity direction. Optionally, the output
    information can be obtained from a reference image. If the reference
    image is provided and UseReferenceImage is On, then the spacing,
    origin and direction of the reference image will be used.

    Since this filter produces an image which is a different size than its
    input, it needs to override several of the methods defined in
    ProcessObject in order to properly manage the pipeline execution
    model. In particular, this filter overrides
    ProcessObject::GenerateInputRequestedRegion() and
    ProcessObject::GenerateOutputInformation().

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation. WARNING:
    For multithreading, the TransformPoint method of the user-designated
    coordinate transform must be threadsafe.
    example{Core/Transform/TranslateImage,Translate Image}
    example{Filtering/ImageGrid/UpsampleAnImage,Upsampling An Image}
    example{Filtering/ImageGrid/ResampleAnImage,Resample An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_Clone)
    VerifyPreconditions = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_VerifyPreconditions)
    SetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetTransform)
    SetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetInterpolator)
    GetModifiableInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetModifiableInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetInterpolator)
    SetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetExtrapolator)
    GetModifiableExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetModifiableExtrapolator)
    GetExtrapolator = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetExtrapolator)
    SetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetSize)
    GetSize = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetSize)
    SetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetDefaultPixelValue)
    GetDefaultPixelValue = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetDefaultPixelValue)
    SetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetOutputDirection)
    SetOutputParametersFromImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetOutputParametersFromImage)
    SetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetOutputStartIndex)
    SetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_GetUseReferenceImage)
    OutputHasNumericTraitsCheck = _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkResampleImageFilterPython.delete_itkResampleImageFilterVIUS3VIUS3
    cast = _swig_new_static_method(_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_cast)

    def New(*args, **kargs):
        """New() -> itkResampleImageFilterVIUS3VIUS3

        Create a new object of the class itkResampleImageFilterVIUS3VIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkResampleImageFilterVIUS3VIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkResampleImageFilterVIUS3VIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkResampleImageFilterVIUS3VIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkResampleImageFilterVIUS3VIUS3 in _itkResampleImageFilterPython:
_itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_swigregister(itkResampleImageFilterVIUS3VIUS3)
itkResampleImageFilterVIUS3VIUS3___New_orig__ = _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3___New_orig__
itkResampleImageFilterVIUS3VIUS3_cast = _itkResampleImageFilterPython.itkResampleImageFilterVIUS3VIUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def resample_image_filter(*args, **kwargs):
    """Procedural interface for ResampleImageFilter"""
    import itk
    instance = itk.ResampleImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def resample_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ResampleImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ResampleImageFilter.values()[0]
    else:
        filter_object = itk.ResampleImageFilter

    resample_image_filter.__doc__ = filter_object.__doc__
    resample_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    resample_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ResampleImageFilter, itkTemplate.itkTemplate):
        resample_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        resample_image_filter.__doc__ += "\n"
        resample_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        resample_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



