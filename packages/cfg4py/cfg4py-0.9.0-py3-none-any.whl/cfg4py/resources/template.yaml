logging:
  version: 1
  disable_existing_loggers: False
  formatters:
    simple:
      format: '%(asctime)s %(levelname)-1.1s %(name)s:%(funcName)s:%(lineno)s | %(message)s'
  handlers:
    console:
      class: logging.StreamHandler
      level: DEBUG
      formatter: simple
    file:
      class: logging.handlers.RotatingFileHandler
      filename: /tmp/cfg4py.log # Please modify filename here
      maxBytes: 10485760        # the size of the rotating file, in Bytes
      backupCount: 7            # how many files will be kept from purge
      encoding: utf-8
      level: INFO
      formatter: simple         # defined in `formatters` section
  #loggers:
  # define different log level for your modules
  #apscheduler:
  #    level: WARNING
  root:
    level: INFO                   # overall log level
    # remove console if u don't want to output log msg to console
    handlers: [file, console]
redis:
  - redis_py: # https://github.com/andymccurdy/redis-py
      host: localhost
      port: 6379              # default port
      db:   0                 # from 0 - 15
      password: null          # leave me alone if there's no need of password
      # if true, the response will be all converted to 'utf-8', which is not fit for binary objects
      decode_response: False
  - aioredis: # https://github.com/aio-libs/aioredis
      # schema://:password@server/db
      # connect via: redis = await aioredis.create_redis_pool(address)
      # db can be also be passed in with parameter db (in this way, don't specify db in dsn string
      # without db: redis = await aioredis.create_redis_pool('redis://:sEcRet@localhost', db=0)
      # without password: redis = await aioredis.create_redis_pool('redis://localhost/0')
      address: redis://:sEcRet@localhost/0
      password: null
      ssl: null
      encoding: null
      loop: null
      timeout: null
mysql:
  - PyMySQL: # https://github.com/PyMySQL/PyMySQL
      host: localhost
      port: 3369
      user: user
      password: password
      db: database name                  # the database name, for example, test, northwind
      # don't use utf-8, coz utf-8 in mysql is not utf-8 we all mean
      # see https://www.eversql.com/mysql-utf8-vs-utf8mb4-whats-the-difference-between-utf8-and-utf8mb4/
      # for more information
      charset: utf8mb4
postgres:
  - asyncpg: # https://github.com/MagicStack/asyncpg
      dsn: postgres://user:password@host:port/database?option=value

      host: localhost
      user: user
      password: password
      database: database name
  - psycopg2: # https://github.com/psycopg/psycopg2
      # libpq connection string format: "dbname=database user=user password=secret"
      dsn: dbname=test user=postgres password=secret
      # these dsns are also supported:
      # postgresql://host1:123,host2:456/somedb?target_session_attrs=any&application_name=myapp
      dbname: database_name
      user: user
      password: password
      host: localhost
      port: 5432
mq:
  - pika: # https://github.com/pika/pika
      # scheme://username:password@host:port/virtual_host?key=value&key=value
      # both amqp and qmqps are supported
      # query string: heartbeat, channel_max, locale, retry_delay, etc.
      url: amqp://user:password@localhost:5672/%2F

      host: localhost
      port: 5672
      exchange: default
mongodb:
  - pymongo: # https://github.com/mongodb/mongo-python-driver
      # pymongo reuse host to pass mongodb URI, which schema is:
      # scheme://user:password@host, host here can be unix domain socket
      host: mongodb://localhost:27017

      #host: localhost
      port: 27017
      document_class: dict
      tz_aware: False
      connect: True       # if True, connect immediately
      maxPoolSize: 100
      minPoolSize: 0
pip:
  - tsinghua: pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple
  - aliyun: pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/
  - tencent: pip config set global.index-url http://mirrors.cloud.tencent.com/pypi/simple
  - douban: pip config set global.index-url http://pypi.douban.com/simple/
pip_usage: "add the following to ~/.config/pip/pip/conf:\n
            [global]\n
            index-url = https://mirrors.aliyun.com/pypi/simple/\n
            [install]\n
            trusted-host=mirrors.aliyun.com

            or execute command:\n"
conda:
  - tsinghua: # 清华
      channels:
        - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/
        - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/
        - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/
        - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/
      ssl_verify: true
  - ustc: #中科大
      channels:
        - https://mirrors.ustc.edu.cn/anaconda/pkgs/main/
        - https://mirrors.ustc.edu.cn/anaconda/pkgs/free/
        - https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/
      ssl_verify: true

conda_usage: "execute command:\n
              conda config --add channels %url\n
              or edit your ~/.condarc to add the following:\n"
