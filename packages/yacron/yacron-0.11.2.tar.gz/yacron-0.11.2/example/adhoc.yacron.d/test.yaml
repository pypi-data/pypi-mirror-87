web:
  listen:
     - http://127.0.0.1:8080
     - unix:///tmp/yacron.sock

defaults:
  shell: /bin/bash

  concurrencyPolicy: Allow
  # Allow (default): allows concurrently running jobs
  # Forbid: forbids concurrent runs, skipping next run if previous hasnâ€™t finished yet
  # Replace: cancels currently running job and replaces it with a new one

  failsWhen:
    producesStdout: false
    producesStderr: true
    nonzeroReturn: true

  onPermanentFailure:
    report:
      sentry:
        dsn:
          value:
        extra:
          foo: bar
          zbr: 123
        level: warning
      mail:
        from: example@foo.com
        to: example@bar.com
        smtpHost: 127.0.0.1
        smtpPort: 10025
        subject: Cron job '{{name}}' {% if success %}completed{% else %}failed{% endif %}
        body: |
         {{stderr}}

         (exit code: {{exit_code}})

  environment:
    - key: FOO
      value: foo
    - key: BAR
      value: bar

  statsd:
    host: localhost
    port: 8125
    prefix: my.cron.jobs.prefix.test01

jobs:
  - name: test-01
    command:
      - echo
      - "foobar"
    schedule: "@reboot"
    # user: www-data
    captureStdout: true
    failsWhen:
      producesStdout: true
    onFailure:
      retry:
        maximumRetries: 3
        initialDelay: 1
        maximumDelay: 30
        backoffMultiplier: 2
    onSuccess:
      report:
        mail:
          from: example@foo.com
          to: example@bar.com, zzz@sleep.com
          smtpHost: 127.0.0.1
          smtpPort: 10025
          subject: Cron job '{{name}}' {% if success %}completed{% else %}failed{% endif %}
          body: |
           {% if stdout %}
           {{stdout}}

           (exit code: {{exit_code}})
           {% endif %}

  - name: test-02
    command: |
      echo "hello" 1>&2
      sleep 1
      echo "world"
      echo "\$FOO is: $FOO"
      echo "\$BAR is: $BAR"
      echo "\$ZBR is: $ZBR"
      exit 10
    schedule:
      minute: "*/2"
    captureStderr: true
    environment:
      - key: FOO
        value: xpto
      - key: ZBR
        value: blah

  - name: test-03
    command: |
      trap "echo '(ignoring SIGTERM)'" TERM
      echo "starting..."
      sleep 10
      echo "all done."
    schedule:
      minute: "*"
    # schedule: "* * * * *"
    captureStderr: true
    executionTimeout: 1
    killTimeout: 0.5
