# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageIntensityPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkHistogramMatchingImageFilterPython
else:
    import _itkHistogramMatchingImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkHistogramMatchingImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkHistogramMatchingImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkHistogramPython
import itk.itkSamplePython
import itk.itkArrayPython

def itkHistogramMatchingImageFilterID2ID2_New():
    return itkHistogramMatchingImageFilterID2ID2.New()

class itkHistogramMatchingImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""


    Normalize the grayscale values for a source image by matching the
    shape of the source image histogram to a reference histogram.

    HistogramMatchingImageFilter normalizes the grayscale values of a
    source image based on the grayscale values of either a reference image
    or a reference histogram. This filter uses a histogram matching
    technique where the histograms of the are matched only at a specified
    number of quantile values.

    This filter was originally designed to normalize MR images of the same
    MR protocol and same body part. The algorithm works best if background
    pixels are excluded from both the source and reference histograms. A
    simple background exclusion method is to exclude all pixels whose
    grayscale values are smaller than the mean grayscale value.
    ThresholdAtMeanIntensityOn() switches on this simple background
    exclusion method. With ThresholdAtMeanIntensityOn(), The reference
    histogram returned from this filter will expand the first and last bin
    bounds to include the minimum and maximum intensity values of the
    entire reference image, but only intensity values greater than the
    mean will be used to populate the histogram.

    The source image can be set via either SetInput() or SetSourceImage().
    The reference object used is selected with can be set via
    SetReferenceImage() or SetReferenceHistogram().

    SetNumberOfHistogramLevels() sets the number of bins used when
    creating histograms of the source and reference images.
    SetNumberOfMatchPoints() governs the number of quantile values to be
    matched.

    This filter assumes that both the source and reference are of the same
    type and that the input and output image type have the same number of
    dimension and have scalar pixel types.

    REFERENCE Laszlo G. Nyul, Jayaram K. Udupa, and Xuan Zhang, "New
    Variants of a Method of MRI Scale Standardization", IEEE Transactions
    on Medical Imaging, 19(2):143-150, 2000. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_Clone)
    SetSourceImage = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetSourceImage)
    SetReferenceImage = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetReferenceImage)
    SetReferenceHistogram = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_SetReferenceHistogram)
    GetReferenceHistogram = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetReferenceHistogram)
    SetNumberOfHistogramLevels = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_SetNumberOfHistogramLevels)
    GetNumberOfHistogramLevels = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetNumberOfHistogramLevels)
    SetNumberOfMatchPoints = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_SetNumberOfMatchPoints)
    GetNumberOfMatchPoints = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetNumberOfMatchPoints)
    SetThresholdAtMeanIntensity = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_SetThresholdAtMeanIntensity)
    GetThresholdAtMeanIntensity = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetThresholdAtMeanIntensity)
    ThresholdAtMeanIntensityOn = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_ThresholdAtMeanIntensityOn)
    ThresholdAtMeanIntensityOff = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_ThresholdAtMeanIntensityOff)
    SetGenerateReferenceHistogramFromImage = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_SetGenerateReferenceHistogramFromImage)
    GetGenerateReferenceHistogramFromImage = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetGenerateReferenceHistogramFromImage)
    GenerateReferenceHistogramFromImageOn = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GenerateReferenceHistogramFromImageOn)
    GenerateReferenceHistogramFromImageOff = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GenerateReferenceHistogramFromImageOff)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GenerateInputRequestedRegion)
    GetModifiableSourceHistogram = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetModifiableSourceHistogram)
    GetSourceHistogram = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetSourceHistogram)
    GetModifiableOutputHistogram = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetModifiableOutputHistogram)
    GetOutputHistogram = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_GetOutputHistogram)
    IntConvertibleToInputCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_IntConvertibleToInputCheck
    
    SameDimensionCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_SameDimensionCheck
    
    DoubleConvertibleToInputCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_DoubleConvertibleToInputCheck
    
    DoubleConvertibleToOutputCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_DoubleConvertibleToOutputCheck
    
    InputConvertibleToDoubleCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_InputConvertibleToDoubleCheck
    
    OutputConvertibleToDoubleCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_OutputConvertibleToDoubleCheck
    
    SameTypeCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_SameTypeCheck
    
    __swig_destroy__ = _itkHistogramMatchingImageFilterPython.delete_itkHistogramMatchingImageFilterID2ID2
    cast = _swig_new_static_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramMatchingImageFilterID2ID2

        Create a new object of the class itkHistogramMatchingImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramMatchingImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramMatchingImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramMatchingImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramMatchingImageFilterID2ID2 in _itkHistogramMatchingImageFilterPython:
_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_swigregister(itkHistogramMatchingImageFilterID2ID2)
itkHistogramMatchingImageFilterID2ID2___New_orig__ = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2___New_orig__
itkHistogramMatchingImageFilterID2ID2_cast = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID2ID2_cast


def itkHistogramMatchingImageFilterID3ID3_New():
    return itkHistogramMatchingImageFilterID3ID3.New()

class itkHistogramMatchingImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""


    Normalize the grayscale values for a source image by matching the
    shape of the source image histogram to a reference histogram.

    HistogramMatchingImageFilter normalizes the grayscale values of a
    source image based on the grayscale values of either a reference image
    or a reference histogram. This filter uses a histogram matching
    technique where the histograms of the are matched only at a specified
    number of quantile values.

    This filter was originally designed to normalize MR images of the same
    MR protocol and same body part. The algorithm works best if background
    pixels are excluded from both the source and reference histograms. A
    simple background exclusion method is to exclude all pixels whose
    grayscale values are smaller than the mean grayscale value.
    ThresholdAtMeanIntensityOn() switches on this simple background
    exclusion method. With ThresholdAtMeanIntensityOn(), The reference
    histogram returned from this filter will expand the first and last bin
    bounds to include the minimum and maximum intensity values of the
    entire reference image, but only intensity values greater than the
    mean will be used to populate the histogram.

    The source image can be set via either SetInput() or SetSourceImage().
    The reference object used is selected with can be set via
    SetReferenceImage() or SetReferenceHistogram().

    SetNumberOfHistogramLevels() sets the number of bins used when
    creating histograms of the source and reference images.
    SetNumberOfMatchPoints() governs the number of quantile values to be
    matched.

    This filter assumes that both the source and reference are of the same
    type and that the input and output image type have the same number of
    dimension and have scalar pixel types.

    REFERENCE Laszlo G. Nyul, Jayaram K. Udupa, and Xuan Zhang, "New
    Variants of a Method of MRI Scale Standardization", IEEE Transactions
    on Medical Imaging, 19(2):143-150, 2000. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_Clone)
    SetSourceImage = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetSourceImage)
    SetReferenceImage = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetReferenceImage)
    SetReferenceHistogram = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_SetReferenceHistogram)
    GetReferenceHistogram = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetReferenceHistogram)
    SetNumberOfHistogramLevels = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_SetNumberOfHistogramLevels)
    GetNumberOfHistogramLevels = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetNumberOfHistogramLevels)
    SetNumberOfMatchPoints = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_SetNumberOfMatchPoints)
    GetNumberOfMatchPoints = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetNumberOfMatchPoints)
    SetThresholdAtMeanIntensity = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_SetThresholdAtMeanIntensity)
    GetThresholdAtMeanIntensity = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetThresholdAtMeanIntensity)
    ThresholdAtMeanIntensityOn = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_ThresholdAtMeanIntensityOn)
    ThresholdAtMeanIntensityOff = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_ThresholdAtMeanIntensityOff)
    SetGenerateReferenceHistogramFromImage = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_SetGenerateReferenceHistogramFromImage)
    GetGenerateReferenceHistogramFromImage = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetGenerateReferenceHistogramFromImage)
    GenerateReferenceHistogramFromImageOn = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GenerateReferenceHistogramFromImageOn)
    GenerateReferenceHistogramFromImageOff = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GenerateReferenceHistogramFromImageOff)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GenerateInputRequestedRegion)
    GetModifiableSourceHistogram = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetModifiableSourceHistogram)
    GetSourceHistogram = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetSourceHistogram)
    GetModifiableOutputHistogram = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetModifiableOutputHistogram)
    GetOutputHistogram = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_GetOutputHistogram)
    IntConvertibleToInputCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_IntConvertibleToInputCheck
    
    SameDimensionCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_SameDimensionCheck
    
    DoubleConvertibleToInputCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_DoubleConvertibleToInputCheck
    
    DoubleConvertibleToOutputCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_DoubleConvertibleToOutputCheck
    
    InputConvertibleToDoubleCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_InputConvertibleToDoubleCheck
    
    OutputConvertibleToDoubleCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_OutputConvertibleToDoubleCheck
    
    SameTypeCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_SameTypeCheck
    
    __swig_destroy__ = _itkHistogramMatchingImageFilterPython.delete_itkHistogramMatchingImageFilterID3ID3
    cast = _swig_new_static_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramMatchingImageFilterID3ID3

        Create a new object of the class itkHistogramMatchingImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramMatchingImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramMatchingImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramMatchingImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramMatchingImageFilterID3ID3 in _itkHistogramMatchingImageFilterPython:
_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_swigregister(itkHistogramMatchingImageFilterID3ID3)
itkHistogramMatchingImageFilterID3ID3___New_orig__ = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3___New_orig__
itkHistogramMatchingImageFilterID3ID3_cast = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterID3ID3_cast


def itkHistogramMatchingImageFilterIF2IF2_New():
    return itkHistogramMatchingImageFilterIF2IF2.New()

class itkHistogramMatchingImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""


    Normalize the grayscale values for a source image by matching the
    shape of the source image histogram to a reference histogram.

    HistogramMatchingImageFilter normalizes the grayscale values of a
    source image based on the grayscale values of either a reference image
    or a reference histogram. This filter uses a histogram matching
    technique where the histograms of the are matched only at a specified
    number of quantile values.

    This filter was originally designed to normalize MR images of the same
    MR protocol and same body part. The algorithm works best if background
    pixels are excluded from both the source and reference histograms. A
    simple background exclusion method is to exclude all pixels whose
    grayscale values are smaller than the mean grayscale value.
    ThresholdAtMeanIntensityOn() switches on this simple background
    exclusion method. With ThresholdAtMeanIntensityOn(), The reference
    histogram returned from this filter will expand the first and last bin
    bounds to include the minimum and maximum intensity values of the
    entire reference image, but only intensity values greater than the
    mean will be used to populate the histogram.

    The source image can be set via either SetInput() or SetSourceImage().
    The reference object used is selected with can be set via
    SetReferenceImage() or SetReferenceHistogram().

    SetNumberOfHistogramLevels() sets the number of bins used when
    creating histograms of the source and reference images.
    SetNumberOfMatchPoints() governs the number of quantile values to be
    matched.

    This filter assumes that both the source and reference are of the same
    type and that the input and output image type have the same number of
    dimension and have scalar pixel types.

    REFERENCE Laszlo G. Nyul, Jayaram K. Udupa, and Xuan Zhang, "New
    Variants of a Method of MRI Scale Standardization", IEEE Transactions
    on Medical Imaging, 19(2):143-150, 2000. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_Clone)
    SetSourceImage = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetSourceImage)
    SetReferenceImage = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetReferenceImage)
    SetReferenceHistogram = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_SetReferenceHistogram)
    GetReferenceHistogram = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetReferenceHistogram)
    SetNumberOfHistogramLevels = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_SetNumberOfHistogramLevels)
    GetNumberOfHistogramLevels = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetNumberOfHistogramLevels)
    SetNumberOfMatchPoints = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_SetNumberOfMatchPoints)
    GetNumberOfMatchPoints = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetNumberOfMatchPoints)
    SetThresholdAtMeanIntensity = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_SetThresholdAtMeanIntensity)
    GetThresholdAtMeanIntensity = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetThresholdAtMeanIntensity)
    ThresholdAtMeanIntensityOn = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_ThresholdAtMeanIntensityOn)
    ThresholdAtMeanIntensityOff = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_ThresholdAtMeanIntensityOff)
    SetGenerateReferenceHistogramFromImage = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_SetGenerateReferenceHistogramFromImage)
    GetGenerateReferenceHistogramFromImage = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetGenerateReferenceHistogramFromImage)
    GenerateReferenceHistogramFromImageOn = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GenerateReferenceHistogramFromImageOn)
    GenerateReferenceHistogramFromImageOff = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GenerateReferenceHistogramFromImageOff)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GenerateInputRequestedRegion)
    GetModifiableSourceHistogram = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetModifiableSourceHistogram)
    GetSourceHistogram = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetSourceHistogram)
    GetModifiableOutputHistogram = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetModifiableOutputHistogram)
    GetOutputHistogram = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_GetOutputHistogram)
    IntConvertibleToInputCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_IntConvertibleToInputCheck
    
    SameDimensionCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_SameDimensionCheck
    
    DoubleConvertibleToInputCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_DoubleConvertibleToInputCheck
    
    DoubleConvertibleToOutputCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_DoubleConvertibleToOutputCheck
    
    InputConvertibleToDoubleCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_InputConvertibleToDoubleCheck
    
    OutputConvertibleToDoubleCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_OutputConvertibleToDoubleCheck
    
    SameTypeCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_SameTypeCheck
    
    __swig_destroy__ = _itkHistogramMatchingImageFilterPython.delete_itkHistogramMatchingImageFilterIF2IF2
    cast = _swig_new_static_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramMatchingImageFilterIF2IF2

        Create a new object of the class itkHistogramMatchingImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramMatchingImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramMatchingImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramMatchingImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramMatchingImageFilterIF2IF2 in _itkHistogramMatchingImageFilterPython:
_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_swigregister(itkHistogramMatchingImageFilterIF2IF2)
itkHistogramMatchingImageFilterIF2IF2___New_orig__ = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2___New_orig__
itkHistogramMatchingImageFilterIF2IF2_cast = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF2IF2_cast


def itkHistogramMatchingImageFilterIF3IF3_New():
    return itkHistogramMatchingImageFilterIF3IF3.New()

class itkHistogramMatchingImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""


    Normalize the grayscale values for a source image by matching the
    shape of the source image histogram to a reference histogram.

    HistogramMatchingImageFilter normalizes the grayscale values of a
    source image based on the grayscale values of either a reference image
    or a reference histogram. This filter uses a histogram matching
    technique where the histograms of the are matched only at a specified
    number of quantile values.

    This filter was originally designed to normalize MR images of the same
    MR protocol and same body part. The algorithm works best if background
    pixels are excluded from both the source and reference histograms. A
    simple background exclusion method is to exclude all pixels whose
    grayscale values are smaller than the mean grayscale value.
    ThresholdAtMeanIntensityOn() switches on this simple background
    exclusion method. With ThresholdAtMeanIntensityOn(), The reference
    histogram returned from this filter will expand the first and last bin
    bounds to include the minimum and maximum intensity values of the
    entire reference image, but only intensity values greater than the
    mean will be used to populate the histogram.

    The source image can be set via either SetInput() or SetSourceImage().
    The reference object used is selected with can be set via
    SetReferenceImage() or SetReferenceHistogram().

    SetNumberOfHistogramLevels() sets the number of bins used when
    creating histograms of the source and reference images.
    SetNumberOfMatchPoints() governs the number of quantile values to be
    matched.

    This filter assumes that both the source and reference are of the same
    type and that the input and output image type have the same number of
    dimension and have scalar pixel types.

    REFERENCE Laszlo G. Nyul, Jayaram K. Udupa, and Xuan Zhang, "New
    Variants of a Method of MRI Scale Standardization", IEEE Transactions
    on Medical Imaging, 19(2):143-150, 2000. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_Clone)
    SetSourceImage = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetSourceImage)
    SetReferenceImage = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetReferenceImage)
    SetReferenceHistogram = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_SetReferenceHistogram)
    GetReferenceHistogram = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetReferenceHistogram)
    SetNumberOfHistogramLevels = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_SetNumberOfHistogramLevels)
    GetNumberOfHistogramLevels = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetNumberOfHistogramLevels)
    SetNumberOfMatchPoints = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_SetNumberOfMatchPoints)
    GetNumberOfMatchPoints = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetNumberOfMatchPoints)
    SetThresholdAtMeanIntensity = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_SetThresholdAtMeanIntensity)
    GetThresholdAtMeanIntensity = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetThresholdAtMeanIntensity)
    ThresholdAtMeanIntensityOn = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_ThresholdAtMeanIntensityOn)
    ThresholdAtMeanIntensityOff = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_ThresholdAtMeanIntensityOff)
    SetGenerateReferenceHistogramFromImage = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_SetGenerateReferenceHistogramFromImage)
    GetGenerateReferenceHistogramFromImage = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetGenerateReferenceHistogramFromImage)
    GenerateReferenceHistogramFromImageOn = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GenerateReferenceHistogramFromImageOn)
    GenerateReferenceHistogramFromImageOff = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GenerateReferenceHistogramFromImageOff)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GenerateInputRequestedRegion)
    GetModifiableSourceHistogram = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetModifiableSourceHistogram)
    GetSourceHistogram = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetSourceHistogram)
    GetModifiableOutputHistogram = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetModifiableOutputHistogram)
    GetOutputHistogram = _swig_new_instance_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_GetOutputHistogram)
    IntConvertibleToInputCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_IntConvertibleToInputCheck
    
    SameDimensionCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_SameDimensionCheck
    
    DoubleConvertibleToInputCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_DoubleConvertibleToInputCheck
    
    DoubleConvertibleToOutputCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_DoubleConvertibleToOutputCheck
    
    InputConvertibleToDoubleCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_InputConvertibleToDoubleCheck
    
    OutputConvertibleToDoubleCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_OutputConvertibleToDoubleCheck
    
    SameTypeCheck = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_SameTypeCheck
    
    __swig_destroy__ = _itkHistogramMatchingImageFilterPython.delete_itkHistogramMatchingImageFilterIF3IF3
    cast = _swig_new_static_method(_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkHistogramMatchingImageFilterIF3IF3

        Create a new object of the class itkHistogramMatchingImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramMatchingImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramMatchingImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramMatchingImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramMatchingImageFilterIF3IF3 in _itkHistogramMatchingImageFilterPython:
_itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_swigregister(itkHistogramMatchingImageFilterIF3IF3)
itkHistogramMatchingImageFilterIF3IF3___New_orig__ = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3___New_orig__
itkHistogramMatchingImageFilterIF3IF3_cast = _itkHistogramMatchingImageFilterPython.itkHistogramMatchingImageFilterIF3IF3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def histogram_matching_image_filter(*args, **kwargs):
    """Procedural interface for HistogramMatchingImageFilter"""
    import itk
    instance = itk.HistogramMatchingImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def histogram_matching_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.HistogramMatchingImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.HistogramMatchingImageFilter.values()[0]
    else:
        filter_object = itk.HistogramMatchingImageFilter

    histogram_matching_image_filter.__doc__ = filter_object.__doc__
    histogram_matching_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    histogram_matching_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.HistogramMatchingImageFilter, itkTemplate.itkTemplate):
        histogram_matching_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        histogram_matching_image_filter.__doc__ += "\n"
        histogram_matching_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        histogram_matching_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



