# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageStatisticsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMeanProjectionImageFilterPython
else:
    import _itkMeanProjectionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkMeanProjectionImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkMeanProjectionImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageToImageFilterAPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkPointPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.ITKCommonBasePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterBPython

def itkMeanProjectionImageFilterID2ID2_Superclass_New():
    return itkMeanProjectionImageFilterID2ID2_Superclass.New()

class itkMeanProjectionImageFilterID2ID2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkMeanProjectionImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_Superclass_Clone)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterID2ID2_Superclass
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterID2ID2_Superclass

        Create a new object of the class itkMeanProjectionImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterID2ID2_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_Superclass_swigregister(itkMeanProjectionImageFilterID2ID2_Superclass)
itkMeanProjectionImageFilterID2ID2_Superclass___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_Superclass___New_orig__
itkMeanProjectionImageFilterID2ID2_Superclass_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_Superclass_cast


def itkMeanProjectionImageFilterID3ID2_Superclass_New():
    return itkMeanProjectionImageFilterID3ID2_Superclass.New()

class itkMeanProjectionImageFilterID3ID2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterID3ID2):
    r"""Proxy of C++ itkMeanProjectionImageFilterID3ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_Superclass_Clone)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterID3ID2_Superclass
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterID3ID2_Superclass

        Create a new object of the class itkMeanProjectionImageFilterID3ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterID3ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterID3ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterID3ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterID3ID2_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_Superclass_swigregister(itkMeanProjectionImageFilterID3ID2_Superclass)
itkMeanProjectionImageFilterID3ID2_Superclass___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_Superclass___New_orig__
itkMeanProjectionImageFilterID3ID2_Superclass_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_Superclass_cast


def itkMeanProjectionImageFilterID3ID3_Superclass_New():
    return itkMeanProjectionImageFilterID3ID3_Superclass.New()

class itkMeanProjectionImageFilterID3ID3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkMeanProjectionImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_Superclass_Clone)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterID3ID3_Superclass
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterID3ID3_Superclass

        Create a new object of the class itkMeanProjectionImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterID3ID3_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_Superclass_swigregister(itkMeanProjectionImageFilterID3ID3_Superclass)
itkMeanProjectionImageFilterID3ID3_Superclass___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_Superclass___New_orig__
itkMeanProjectionImageFilterID3ID3_Superclass_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_Superclass_cast


def itkMeanProjectionImageFilterIF2IF2_Superclass_New():
    return itkMeanProjectionImageFilterIF2IF2_Superclass.New()

class itkMeanProjectionImageFilterIF2IF2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkMeanProjectionImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_Superclass_Clone)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIF2IF2_Superclass
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIF2IF2_Superclass

        Create a new object of the class itkMeanProjectionImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIF2IF2_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_Superclass_swigregister(itkMeanProjectionImageFilterIF2IF2_Superclass)
itkMeanProjectionImageFilterIF2IF2_Superclass___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_Superclass___New_orig__
itkMeanProjectionImageFilterIF2IF2_Superclass_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_Superclass_cast


def itkMeanProjectionImageFilterIF3IF2_Superclass_New():
    return itkMeanProjectionImageFilterIF3IF2_Superclass.New()

class itkMeanProjectionImageFilterIF3IF2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2):
    r"""Proxy of C++ itkMeanProjectionImageFilterIF3IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_Superclass_Clone)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIF3IF2_Superclass
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIF3IF2_Superclass

        Create a new object of the class itkMeanProjectionImageFilterIF3IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIF3IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIF3IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIF3IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIF3IF2_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_Superclass_swigregister(itkMeanProjectionImageFilterIF3IF2_Superclass)
itkMeanProjectionImageFilterIF3IF2_Superclass___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_Superclass___New_orig__
itkMeanProjectionImageFilterIF3IF2_Superclass_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_Superclass_cast


def itkMeanProjectionImageFilterIF3IF3_Superclass_New():
    return itkMeanProjectionImageFilterIF3IF3_Superclass.New()

class itkMeanProjectionImageFilterIF3IF3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkMeanProjectionImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_Superclass_Clone)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIF3IF3_Superclass
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIF3IF3_Superclass

        Create a new object of the class itkMeanProjectionImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIF3IF3_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_Superclass_swigregister(itkMeanProjectionImageFilterIF3IF3_Superclass)
itkMeanProjectionImageFilterIF3IF3_Superclass___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_Superclass___New_orig__
itkMeanProjectionImageFilterIF3IF3_Superclass_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_Superclass_cast


def itkMeanProjectionImageFilterISS2ISS2_Superclass_New():
    return itkMeanProjectionImageFilterISS2ISS2_Superclass.New()

class itkMeanProjectionImageFilterISS2ISS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkMeanProjectionImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_Superclass_Clone)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterISS2ISS2_Superclass
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterISS2ISS2_Superclass

        Create a new object of the class itkMeanProjectionImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterISS2ISS2_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_Superclass_swigregister(itkMeanProjectionImageFilterISS2ISS2_Superclass)
itkMeanProjectionImageFilterISS2ISS2_Superclass___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_Superclass___New_orig__
itkMeanProjectionImageFilterISS2ISS2_Superclass_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_Superclass_cast


def itkMeanProjectionImageFilterISS3ISS2_Superclass_New():
    return itkMeanProjectionImageFilterISS3ISS2_Superclass.New()

class itkMeanProjectionImageFilterISS3ISS2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS3ISS2):
    r"""Proxy of C++ itkMeanProjectionImageFilterISS3ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_Superclass_Clone)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterISS3ISS2_Superclass
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterISS3ISS2_Superclass

        Create a new object of the class itkMeanProjectionImageFilterISS3ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterISS3ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterISS3ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterISS3ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterISS3ISS2_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_Superclass_swigregister(itkMeanProjectionImageFilterISS3ISS2_Superclass)
itkMeanProjectionImageFilterISS3ISS2_Superclass___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_Superclass___New_orig__
itkMeanProjectionImageFilterISS3ISS2_Superclass_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_Superclass_cast


def itkMeanProjectionImageFilterISS3ISS3_Superclass_New():
    return itkMeanProjectionImageFilterISS3ISS3_Superclass.New()

class itkMeanProjectionImageFilterISS3ISS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkMeanProjectionImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_Superclass_Clone)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterISS3ISS3_Superclass
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterISS3ISS3_Superclass

        Create a new object of the class itkMeanProjectionImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterISS3ISS3_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_Superclass_swigregister(itkMeanProjectionImageFilterISS3ISS3_Superclass)
itkMeanProjectionImageFilterISS3ISS3_Superclass___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_Superclass___New_orig__
itkMeanProjectionImageFilterISS3ISS3_Superclass_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_Superclass_cast


def itkMeanProjectionImageFilterIUC2IUC2_Superclass_New():
    return itkMeanProjectionImageFilterIUC2IUC2_Superclass.New()

class itkMeanProjectionImageFilterIUC2IUC2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkMeanProjectionImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_Superclass_Clone)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUC2IUC2_Superclass
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkMeanProjectionImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUC2IUC2_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_Superclass_swigregister(itkMeanProjectionImageFilterIUC2IUC2_Superclass)
itkMeanProjectionImageFilterIUC2IUC2_Superclass___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_Superclass___New_orig__
itkMeanProjectionImageFilterIUC2IUC2_Superclass_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_Superclass_cast


def itkMeanProjectionImageFilterIUC3IUC2_Superclass_New():
    return itkMeanProjectionImageFilterIUC3IUC2_Superclass.New()

class itkMeanProjectionImageFilterIUC3IUC2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2):
    r"""Proxy of C++ itkMeanProjectionImageFilterIUC3IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_Superclass_Clone)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUC3IUC2_Superclass
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUC3IUC2_Superclass

        Create a new object of the class itkMeanProjectionImageFilterIUC3IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUC3IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUC3IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUC3IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUC3IUC2_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_Superclass_swigregister(itkMeanProjectionImageFilterIUC3IUC2_Superclass)
itkMeanProjectionImageFilterIUC3IUC2_Superclass___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_Superclass___New_orig__
itkMeanProjectionImageFilterIUC3IUC2_Superclass_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_Superclass_cast


def itkMeanProjectionImageFilterIUC3IUC3_Superclass_New():
    return itkMeanProjectionImageFilterIUC3IUC3_Superclass.New()

class itkMeanProjectionImageFilterIUC3IUC3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkMeanProjectionImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_Superclass_Clone)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUC3IUC3_Superclass
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkMeanProjectionImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUC3IUC3_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_Superclass_swigregister(itkMeanProjectionImageFilterIUC3IUC3_Superclass)
itkMeanProjectionImageFilterIUC3IUC3_Superclass___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_Superclass___New_orig__
itkMeanProjectionImageFilterIUC3IUC3_Superclass_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_Superclass_cast


def itkMeanProjectionImageFilterIUS2IUS2_Superclass_New():
    return itkMeanProjectionImageFilterIUS2IUS2_Superclass.New()

class itkMeanProjectionImageFilterIUS2IUS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkMeanProjectionImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_Superclass_Clone)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUS2IUS2_Superclass
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkMeanProjectionImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUS2IUS2_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_Superclass_swigregister(itkMeanProjectionImageFilterIUS2IUS2_Superclass)
itkMeanProjectionImageFilterIUS2IUS2_Superclass___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_Superclass___New_orig__
itkMeanProjectionImageFilterIUS2IUS2_Superclass_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_Superclass_cast


def itkMeanProjectionImageFilterIUS3IUS2_Superclass_New():
    return itkMeanProjectionImageFilterIUS3IUS2_Superclass.New()

class itkMeanProjectionImageFilterIUS3IUS2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2):
    r"""Proxy of C++ itkMeanProjectionImageFilterIUS3IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_Superclass_Clone)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUS3IUS2_Superclass
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUS3IUS2_Superclass

        Create a new object of the class itkMeanProjectionImageFilterIUS3IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUS3IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUS3IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUS3IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUS3IUS2_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_Superclass_swigregister(itkMeanProjectionImageFilterIUS3IUS2_Superclass)
itkMeanProjectionImageFilterIUS3IUS2_Superclass___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_Superclass___New_orig__
itkMeanProjectionImageFilterIUS3IUS2_Superclass_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_Superclass_cast


def itkMeanProjectionImageFilterIUS3IUS3_Superclass_New():
    return itkMeanProjectionImageFilterIUS3IUS3_Superclass.New()

class itkMeanProjectionImageFilterIUS3IUS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkMeanProjectionImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_Superclass_Clone)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUS3IUS3_Superclass
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkMeanProjectionImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUS3IUS3_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_Superclass_swigregister(itkMeanProjectionImageFilterIUS3IUS3_Superclass)
itkMeanProjectionImageFilterIUS3IUS3_Superclass___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_Superclass___New_orig__
itkMeanProjectionImageFilterIUS3IUS3_Superclass_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_Superclass_cast


def itkMeanProjectionImageFilterID2ID2_New():
    return itkMeanProjectionImageFilterID2ID2.New()

class itkMeanProjectionImageFilterID2ID2(itkMeanProjectionImageFilterID2ID2_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterID2ID2
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterID2ID2

        Create a new object of the class itkMeanProjectionImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterID2ID2 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_swigregister(itkMeanProjectionImageFilterID2ID2)
itkMeanProjectionImageFilterID2ID2___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2___New_orig__
itkMeanProjectionImageFilterID2ID2_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_cast


def itkMeanProjectionImageFilterID3ID2_New():
    return itkMeanProjectionImageFilterID3ID2.New()

class itkMeanProjectionImageFilterID3ID2(itkMeanProjectionImageFilterID3ID2_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterID3ID2
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterID3ID2

        Create a new object of the class itkMeanProjectionImageFilterID3ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterID3ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterID3ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterID3ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterID3ID2 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_swigregister(itkMeanProjectionImageFilterID3ID2)
itkMeanProjectionImageFilterID3ID2___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2___New_orig__
itkMeanProjectionImageFilterID3ID2_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_cast


def itkMeanProjectionImageFilterID3ID3_New():
    return itkMeanProjectionImageFilterID3ID3.New()

class itkMeanProjectionImageFilterID3ID3(itkMeanProjectionImageFilterID3ID3_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterID3ID3
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterID3ID3

        Create a new object of the class itkMeanProjectionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterID3ID3 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_swigregister(itkMeanProjectionImageFilterID3ID3)
itkMeanProjectionImageFilterID3ID3___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3___New_orig__
itkMeanProjectionImageFilterID3ID3_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_cast


def itkMeanProjectionImageFilterIF2IF2_New():
    return itkMeanProjectionImageFilterIF2IF2.New()

class itkMeanProjectionImageFilterIF2IF2(itkMeanProjectionImageFilterIF2IF2_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIF2IF2
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIF2IF2

        Create a new object of the class itkMeanProjectionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIF2IF2 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_swigregister(itkMeanProjectionImageFilterIF2IF2)
itkMeanProjectionImageFilterIF2IF2___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2___New_orig__
itkMeanProjectionImageFilterIF2IF2_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_cast


def itkMeanProjectionImageFilterIF3IF2_New():
    return itkMeanProjectionImageFilterIF3IF2.New()

class itkMeanProjectionImageFilterIF3IF2(itkMeanProjectionImageFilterIF3IF2_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIF3IF2
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIF3IF2

        Create a new object of the class itkMeanProjectionImageFilterIF3IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIF3IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIF3IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIF3IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIF3IF2 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_swigregister(itkMeanProjectionImageFilterIF3IF2)
itkMeanProjectionImageFilterIF3IF2___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2___New_orig__
itkMeanProjectionImageFilterIF3IF2_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_cast


def itkMeanProjectionImageFilterIF3IF3_New():
    return itkMeanProjectionImageFilterIF3IF3.New()

class itkMeanProjectionImageFilterIF3IF3(itkMeanProjectionImageFilterIF3IF3_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIF3IF3
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIF3IF3

        Create a new object of the class itkMeanProjectionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIF3IF3 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_swigregister(itkMeanProjectionImageFilterIF3IF3)
itkMeanProjectionImageFilterIF3IF3___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3___New_orig__
itkMeanProjectionImageFilterIF3IF3_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_cast


def itkMeanProjectionImageFilterISS2ISS2_New():
    return itkMeanProjectionImageFilterISS2ISS2.New()

class itkMeanProjectionImageFilterISS2ISS2(itkMeanProjectionImageFilterISS2ISS2_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterISS2ISS2

        Create a new object of the class itkMeanProjectionImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterISS2ISS2 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_swigregister(itkMeanProjectionImageFilterISS2ISS2)
itkMeanProjectionImageFilterISS2ISS2___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2___New_orig__
itkMeanProjectionImageFilterISS2ISS2_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_cast


def itkMeanProjectionImageFilterISS3ISS2_New():
    return itkMeanProjectionImageFilterISS3ISS2.New()

class itkMeanProjectionImageFilterISS3ISS2(itkMeanProjectionImageFilterISS3ISS2_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterISS3ISS2
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterISS3ISS2

        Create a new object of the class itkMeanProjectionImageFilterISS3ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterISS3ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterISS3ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterISS3ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterISS3ISS2 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_swigregister(itkMeanProjectionImageFilterISS3ISS2)
itkMeanProjectionImageFilterISS3ISS2___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2___New_orig__
itkMeanProjectionImageFilterISS3ISS2_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_cast


def itkMeanProjectionImageFilterISS3ISS3_New():
    return itkMeanProjectionImageFilterISS3ISS3.New()

class itkMeanProjectionImageFilterISS3ISS3(itkMeanProjectionImageFilterISS3ISS3_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterISS3ISS3

        Create a new object of the class itkMeanProjectionImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterISS3ISS3 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_swigregister(itkMeanProjectionImageFilterISS3ISS3)
itkMeanProjectionImageFilterISS3ISS3___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3___New_orig__
itkMeanProjectionImageFilterISS3ISS3_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_cast


def itkMeanProjectionImageFilterIUC2IUC2_New():
    return itkMeanProjectionImageFilterIUC2IUC2.New()

class itkMeanProjectionImageFilterIUC2IUC2(itkMeanProjectionImageFilterIUC2IUC2_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUC2IUC2

        Create a new object of the class itkMeanProjectionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUC2IUC2 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_swigregister(itkMeanProjectionImageFilterIUC2IUC2)
itkMeanProjectionImageFilterIUC2IUC2___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2___New_orig__
itkMeanProjectionImageFilterIUC2IUC2_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_cast


def itkMeanProjectionImageFilterIUC3IUC2_New():
    return itkMeanProjectionImageFilterIUC3IUC2.New()

class itkMeanProjectionImageFilterIUC3IUC2(itkMeanProjectionImageFilterIUC3IUC2_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUC3IUC2
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUC3IUC2

        Create a new object of the class itkMeanProjectionImageFilterIUC3IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUC3IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUC3IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUC3IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUC3IUC2 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_swigregister(itkMeanProjectionImageFilterIUC3IUC2)
itkMeanProjectionImageFilterIUC3IUC2___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2___New_orig__
itkMeanProjectionImageFilterIUC3IUC2_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_cast


def itkMeanProjectionImageFilterIUC3IUC3_New():
    return itkMeanProjectionImageFilterIUC3IUC3.New()

class itkMeanProjectionImageFilterIUC3IUC3(itkMeanProjectionImageFilterIUC3IUC3_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUC3IUC3

        Create a new object of the class itkMeanProjectionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUC3IUC3 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_swigregister(itkMeanProjectionImageFilterIUC3IUC3)
itkMeanProjectionImageFilterIUC3IUC3___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3___New_orig__
itkMeanProjectionImageFilterIUC3IUC3_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_cast


def itkMeanProjectionImageFilterIUS2IUS2_New():
    return itkMeanProjectionImageFilterIUS2IUS2.New()

class itkMeanProjectionImageFilterIUS2IUS2(itkMeanProjectionImageFilterIUS2IUS2_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUS2IUS2

        Create a new object of the class itkMeanProjectionImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUS2IUS2 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_swigregister(itkMeanProjectionImageFilterIUS2IUS2)
itkMeanProjectionImageFilterIUS2IUS2___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2___New_orig__
itkMeanProjectionImageFilterIUS2IUS2_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_cast


def itkMeanProjectionImageFilterIUS3IUS2_New():
    return itkMeanProjectionImageFilterIUS3IUS2.New()

class itkMeanProjectionImageFilterIUS3IUS2(itkMeanProjectionImageFilterIUS3IUS2_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUS3IUS2
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUS3IUS2

        Create a new object of the class itkMeanProjectionImageFilterIUS3IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUS3IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUS3IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUS3IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUS3IUS2 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_swigregister(itkMeanProjectionImageFilterIUS3IUS2)
itkMeanProjectionImageFilterIUS3IUS2___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2___New_orig__
itkMeanProjectionImageFilterIUS3IUS2_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_cast


def itkMeanProjectionImageFilterIUS3IUS3_New():
    return itkMeanProjectionImageFilterIUS3IUS3.New()

class itkMeanProjectionImageFilterIUS3IUS3(itkMeanProjectionImageFilterIUS3IUS3_Superclass):
    r"""


    Mean projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter

    See:   BinaryProjectionImageFilter

    See:   MaximumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_Clone)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUS3IUS3

        Create a new object of the class itkMeanProjectionImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUS3IUS3 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_swigregister(itkMeanProjectionImageFilterIUS3IUS3)
itkMeanProjectionImageFilterIUS3IUS3___New_orig__ = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3___New_orig__
itkMeanProjectionImageFilterIUS3IUS3_cast = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def projection_image_filter(*args, **kwargs):
    """Procedural interface for ProjectionImageFilter"""
    import itk
    instance = itk.ProjectionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def projection_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ProjectionImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ProjectionImageFilter.values()[0]
    else:
        filter_object = itk.ProjectionImageFilter

    projection_image_filter.__doc__ = filter_object.__doc__
    projection_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    projection_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ProjectionImageFilter, itkTemplate.itkTemplate):
        projection_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        projection_image_filter.__doc__ += "\n"
        projection_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        projection_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def mean_projection_image_filter(*args, **kwargs):
    """Procedural interface for MeanProjectionImageFilter"""
    import itk
    instance = itk.MeanProjectionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def mean_projection_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.MeanProjectionImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.MeanProjectionImageFilter.values()[0]
    else:
        filter_object = itk.MeanProjectionImageFilter

    mean_projection_image_filter.__doc__ = filter_object.__doc__
    mean_projection_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    mean_projection_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.MeanProjectionImageFilter, itkTemplate.itkTemplate):
        mean_projection_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        mean_projection_image_filter.__doc__ += "\n"
        mean_projection_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        mean_projection_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



