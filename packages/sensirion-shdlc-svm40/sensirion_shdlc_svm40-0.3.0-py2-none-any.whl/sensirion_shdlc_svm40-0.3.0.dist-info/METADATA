Metadata-Version: 2.1
Name: sensirion-shdlc-svm40
Version: 0.3.0
Summary: Driver For Communicating With Sensirion SVM40 Evaluation Kit
Home-page: https://github.com/sensirion/python-shdlc-svm40
Author: Daniel Straessler
Author-email: daniel.straessler@sensirion.com
License: BSD
Keywords: sensirion shdlc driver svm40
Platform: UNKNOWN
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Topic :: System :: Hardware :: Hardware Drivers
Requires-Python: >=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4
Requires-Dist: sensirion-shdlc-driver[fwupdate] (~=0.1.5)
Requires-Dist: enum34 ; python_version < "3.4"
Provides-Extra: test
Requires-Dist: flake8 (~=3.6.0) ; extra == 'test'
Requires-Dist: mock (~=3.0.0) ; extra == 'test'
Requires-Dist: pytest (~=3.10.0) ; extra == 'test'
Requires-Dist: pytest-cov (~=2.6.0) ; extra == 'test'

sensirion-shdlc-svm40
=====================

This package contains the SHDLC driver for the SVM40 Evaluation Kit which
has a UART interface using the SHDLC protocol.

The driver provides all SHDLC commands as Python methods and handles all the
low-level things like type conversions, checksum calculation, error handling
etc.


Installation and Usage
----------------------

The user manual is available at https://sensirion.github.io/python-shdlc-svm40/.

CHANGELOG
---------

0.3.0
:::::
- Updated the commands to support new features for firmware versions >= 2.0
- ``set_compensation_temperature_offset()``: Added the option to send the
  temperature offset parameter using an integer instead of a float which is
  supported for firmware versions >= 2.0

0.2.1
:::::
- First public release
- Use ``sphinx-versioning`` to build documentation
- Fix missing ``import time`` in quick start documentation

0.2.0
:::::
- Breaking change to support version 2 hardware
- Cleanup for SHDLC interface to match similar implementations
- ``set_compensation_temperature_offset()`` will no longer write the value
  directly to the flash. Use ``store_nv_data()`` to store the values.

0.1.0
:::::
- Initial release


