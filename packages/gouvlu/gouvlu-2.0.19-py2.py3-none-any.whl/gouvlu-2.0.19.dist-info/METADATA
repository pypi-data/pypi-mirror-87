Metadata-Version: 2.1
Name: gouvlu
Version: 2.0.19
Summary: Official udata theme and extensions of the Open Data Portal of Luxembourg
Home-page: https://github.com/opendatalu/gouvlu
Author: DataPublicLu
Author-email: info@data.public.lu
License: AGPL
Keywords: udata theme gouvlu
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Programming Language :: Python
Classifier: Environment :: Web Environment
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Developers
Classifier: Topic :: System :: Software Distribution
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.7
Requires-Dist: udata (==2.5.0)
Requires-Dist: unidecode
Requires-Dist: feedparser
Requires-Dist: beautifulsoup4
Provides-Extra: test
Requires-Dist: mock (==3.0.5) ; extra == 'test'
Requires-Dist: pytest (==4.6.3) ; extra == 'test'
Requires-Dist: pytest-flask (==0.15.0) ; extra == 'test'
Requires-Dist: pytest-mock (==1.10.3) ; extra == 'test'
Requires-Dist: pytest-mock (==2.0.0) ; extra == 'test'
Requires-Dist: requests-mock (==1.7.0) ; extra == 'test'
Requires-Dist: feedgen (==0.7.0) ; extra == 'test'

gouvlu
======

`![Crowdin <https://d322cqt584bo4o.cloudfront.net/udata-gouvlu/localized.svg>`_](https://crowdin.com/project/udata-gouvlu)

Official udata theme of the Open Data Portal of Luxembourg

Usage
-----

Install the theme package in you udata environement:

.. code-block:: bash

    pip install gouvlu



Then, define the installed theme as current in you `udata.cfg`:

.. code-block:: python

    THEME = 'gouvlu'



configuration parameters
************************

Some features are optionnal and can be enabled with the following `udata.cfg` parameters

- `GOUVLU_GOVBAR = True/False`: Toggle the govbar


Development
-----------

There is a `docker-compose` configuration to get started fast.
Just run:

.. code-block:: bash

    docker-compose up



Then go to <http://localhost:7000> to connect to the development server
with live reload.

Local setup
***********

If you want to execute some development tasks like extracting the translations or running the test suite, you need to install the dependencies localy (in a virtualenv).

.. code-block:: bash

    virtualenv venv
    source venv/bin/activate
    pip install -r requirements/develop.pip



If you want to build assets, you also need node.js. The prefered way is with `nvm`_:

.. code-block:: bash

    nvm use
    npm install
    inv assets_build



Ok, you are ready, you can now execute some Development commands.

.. code-block:: bash

    inv -l
    Available tasks:

      all            Run tests, reports and packaging
      assets-build   Build static assets
      assets-watch   Build assets on change
      clean          Cleanup all build artifacts
      cover          Run tests suite with coverage
      dist           Package for distribution
      i18n           Extract translatable strings
      i18nc          Compile translations
      pydist         Perform python packaging (without compiling assets)
      qa             Run a quality report
      test           Run tests suite



Let's execute an entire build:

.. code-block:: bash

    inv



Translations
------------

This project is `translated on crowdin <https://crowdin.com/project/udata-gouvlu>`_.

To update the source string, you need to extract them with the `inv i18n` command and push the result on this repository.
Crowding will detect the new string as soon as they are available on the `master` branch.

Crowdin will submit a pull-request each time some translation is submitted by the contributors.

Releasing
---------

`gouvlu` uses `bumpr`_ to perform release.
Simply execute:

.. code-block:: bash

    # Install bumpr if not already installed
    pip install bumpr
    # Dry run to preview changes
    bumpr -dv
    # Perform release
    bumpr


Bumpr will execute test, package everything, update changelog, handle tagging and push to upstream repository...
You just have to wait for the build to succeed and your release is available.

.. _nvm: https://github.com/creationix/nvm#readme
.. _bumpr: https://bumpr.readthedocs.io/

Changelog
=========

1.1.12 (2019-05-27)
-------------------

- Nothing yet

1.1.11 (2019-05-15)
-------------------

- Nothing yet

1.1.10 (2019-05-08)
-------------------

- Nothing yet

1.1.9 (2019-05-07)
------------------

- Nothing yet

1.1.8 (2019-05-07)
------------------

- Nothing yet

1.1.7 (2018-11-13)
------------------

- Nothing yet

1.1.6 (2018-10-23)
------------------

- Nothing yet

1.1.5 (2018-10-23)
------------------

- Nothing yet

1.1.4 (2018-10-23)
------------------

- Nothing yet

1.1.3 (2018-10-22)
------------------

- Nothing yet

1.1.2 (2018-10-22)
------------------

- Use an assets manifest for improved caching `#102 <https://github.com/opendatalu/gouvlu/pull/102>`_
- Expose theme assets for udata 1.6 `#102 <https://github.com/opendatalu/gouvlu/pull/102>`_

1.1.1 (2018-09-11)
------------------

- Upgrade to udata 1.5.3

1.1.0 (2018-07-31)
------------------

- Upgrade to udata 1.4

1.0.8 (2018-07-04)
------------------

- Fix worker bug
- Update IGSS Harvester Source

1.0.7 (2018-06-27)
------------------

- Nothing yet

1.0.5 (2018-06-27)
------------------

- Add Roadmap page `#88 <https://github.com/opendatalu/gouvlu/pull/88>`_

1.0.4 (2018-05-08)
------------------

- Add CSV Harvester `#86 <https://github.com/opendatalu/gouvlu/pull/86>`_

1.0.3 (2018-04-25)
------------------

- Add the missing topics theme
- OEmbed cards theming `#80 <https://github.com/opendatalu/gouvlu/pull/80>`_
- Fix the translatable header `#81 <https://github.com/opendatalu/gouvlu/pull/81>`_

1.0.2
-----

Update udata to latest release



