# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageGridPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMirrorPadImageFilterPython
else:
    import _itkMirrorPadImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkMirrorPadImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkMirrorPadImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkPadImageFilterPython
import itk.itkPadImageFilterBasePython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterBPython
import itk.itkImageBoundaryConditionPython

def itkMirrorPadImageFilterICF2ICF2_New():
    return itkMirrorPadImageFilterICF2ICF2.New()

class itkMirrorPadImageFilterICF2ICF2(itk.itkPadImageFilterPython.itkPadImageFilterICF2ICF2):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF2ICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF2ICF2_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF2ICF2_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF2ICF2_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF2ICF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterICF2ICF2
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF2ICF2_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterICF2ICF2

        Create a new object of the class itkMirrorPadImageFilterICF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterICF2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterICF2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterICF2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterICF2ICF2 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF2ICF2_swigregister(itkMirrorPadImageFilterICF2ICF2)
itkMirrorPadImageFilterICF2ICF2___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF2ICF2___New_orig__
itkMirrorPadImageFilterICF2ICF2_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF2ICF2_cast


def itkMirrorPadImageFilterICF3ICF3_New():
    return itkMirrorPadImageFilterICF3ICF3.New()

class itkMirrorPadImageFilterICF3ICF3(itk.itkPadImageFilterPython.itkPadImageFilterICF3ICF3):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF3ICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF3ICF3_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF3ICF3_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF3ICF3_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF3ICF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterICF3ICF3
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF3ICF3_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterICF3ICF3

        Create a new object of the class itkMirrorPadImageFilterICF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterICF3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterICF3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterICF3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterICF3ICF3 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF3ICF3_swigregister(itkMirrorPadImageFilterICF3ICF3)
itkMirrorPadImageFilterICF3ICF3___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF3ICF3___New_orig__
itkMirrorPadImageFilterICF3ICF3_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF3ICF3_cast


def itkMirrorPadImageFilterICVF22ICVF22_New():
    return itkMirrorPadImageFilterICVF22ICVF22.New()

class itkMirrorPadImageFilterICVF22ICVF22(itk.itkPadImageFilterPython.itkPadImageFilterICVF22ICVF22):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF22ICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF22ICVF22_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF22ICVF22_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF22ICVF22_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF22ICVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterICVF22ICVF22
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF22ICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterICVF22ICVF22

        Create a new object of the class itkMirrorPadImageFilterICVF22ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterICVF22ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterICVF22ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterICVF22ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterICVF22ICVF22 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF22ICVF22_swigregister(itkMirrorPadImageFilterICVF22ICVF22)
itkMirrorPadImageFilterICVF22ICVF22___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF22ICVF22___New_orig__
itkMirrorPadImageFilterICVF22ICVF22_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF22ICVF22_cast


def itkMirrorPadImageFilterICVF23ICVF23_New():
    return itkMirrorPadImageFilterICVF23ICVF23.New()

class itkMirrorPadImageFilterICVF23ICVF23(itk.itkPadImageFilterPython.itkPadImageFilterICVF23ICVF23):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF23ICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF23ICVF23_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF23ICVF23_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF23ICVF23_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF23ICVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterICVF23ICVF23
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF23ICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterICVF23ICVF23

        Create a new object of the class itkMirrorPadImageFilterICVF23ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterICVF23ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterICVF23ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterICVF23ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterICVF23ICVF23 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF23ICVF23_swigregister(itkMirrorPadImageFilterICVF23ICVF23)
itkMirrorPadImageFilterICVF23ICVF23___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF23ICVF23___New_orig__
itkMirrorPadImageFilterICVF23ICVF23_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF23ICVF23_cast


def itkMirrorPadImageFilterICVF32ICVF32_New():
    return itkMirrorPadImageFilterICVF32ICVF32.New()

class itkMirrorPadImageFilterICVF32ICVF32(itk.itkPadImageFilterPython.itkPadImageFilterICVF32ICVF32):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF32ICVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF32ICVF32_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF32ICVF32_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF32ICVF32_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF32ICVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterICVF32ICVF32
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF32ICVF32_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterICVF32ICVF32

        Create a new object of the class itkMirrorPadImageFilterICVF32ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterICVF32ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterICVF32ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterICVF32ICVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterICVF32ICVF32 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF32ICVF32_swigregister(itkMirrorPadImageFilterICVF32ICVF32)
itkMirrorPadImageFilterICVF32ICVF32___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF32ICVF32___New_orig__
itkMirrorPadImageFilterICVF32ICVF32_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF32ICVF32_cast


def itkMirrorPadImageFilterICVF33ICVF33_New():
    return itkMirrorPadImageFilterICVF33ICVF33.New()

class itkMirrorPadImageFilterICVF33ICVF33(itk.itkPadImageFilterPython.itkPadImageFilterICVF33ICVF33):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF33ICVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF33ICVF33_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF33ICVF33_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF33ICVF33_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF33ICVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterICVF33ICVF33
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF33ICVF33_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterICVF33ICVF33

        Create a new object of the class itkMirrorPadImageFilterICVF33ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterICVF33ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterICVF33ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterICVF33ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterICVF33ICVF33 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF33ICVF33_swigregister(itkMirrorPadImageFilterICVF33ICVF33)
itkMirrorPadImageFilterICVF33ICVF33___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF33ICVF33___New_orig__
itkMirrorPadImageFilterICVF33ICVF33_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF33ICVF33_cast


def itkMirrorPadImageFilterICVF42ICVF42_New():
    return itkMirrorPadImageFilterICVF42ICVF42.New()

class itkMirrorPadImageFilterICVF42ICVF42(itk.itkPadImageFilterPython.itkPadImageFilterICVF42ICVF42):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF42ICVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF42ICVF42_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF42ICVF42_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF42ICVF42_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF42ICVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterICVF42ICVF42
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF42ICVF42_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterICVF42ICVF42

        Create a new object of the class itkMirrorPadImageFilterICVF42ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterICVF42ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterICVF42ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterICVF42ICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterICVF42ICVF42 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF42ICVF42_swigregister(itkMirrorPadImageFilterICVF42ICVF42)
itkMirrorPadImageFilterICVF42ICVF42___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF42ICVF42___New_orig__
itkMirrorPadImageFilterICVF42ICVF42_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF42ICVF42_cast


def itkMirrorPadImageFilterICVF43ICVF43_New():
    return itkMirrorPadImageFilterICVF43ICVF43.New()

class itkMirrorPadImageFilterICVF43ICVF43(itk.itkPadImageFilterPython.itkPadImageFilterICVF43ICVF43):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF43ICVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF43ICVF43_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF43ICVF43_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF43ICVF43_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF43ICVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterICVF43ICVF43
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF43ICVF43_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterICVF43ICVF43

        Create a new object of the class itkMirrorPadImageFilterICVF43ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterICVF43ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterICVF43ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterICVF43ICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterICVF43ICVF43 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF43ICVF43_swigregister(itkMirrorPadImageFilterICVF43ICVF43)
itkMirrorPadImageFilterICVF43ICVF43___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF43ICVF43___New_orig__
itkMirrorPadImageFilterICVF43ICVF43_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF43ICVF43_cast


def itkMirrorPadImageFilterID2ID2_New():
    return itkMirrorPadImageFilterID2ID2.New()

class itkMirrorPadImageFilterID2ID2(itk.itkPadImageFilterPython.itkPadImageFilterID2ID2):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID2ID2_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID2ID2_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID2ID2_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID2ID2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterID2ID2
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterID2ID2

        Create a new object of the class itkMirrorPadImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterID2ID2 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID2ID2_swigregister(itkMirrorPadImageFilterID2ID2)
itkMirrorPadImageFilterID2ID2___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID2ID2___New_orig__
itkMirrorPadImageFilterID2ID2_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID2ID2_cast


def itkMirrorPadImageFilterID3ID3_New():
    return itkMirrorPadImageFilterID3ID3.New()

class itkMirrorPadImageFilterID3ID3(itk.itkPadImageFilterPython.itkPadImageFilterID3ID3):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID3ID3_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID3ID3_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID3ID3_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID3ID3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterID3ID3
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterID3ID3

        Create a new object of the class itkMirrorPadImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterID3ID3 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID3ID3_swigregister(itkMirrorPadImageFilterID3ID3)
itkMirrorPadImageFilterID3ID3___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID3ID3___New_orig__
itkMirrorPadImageFilterID3ID3_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID3ID3_cast


def itkMirrorPadImageFilterIF2IF2_New():
    return itkMirrorPadImageFilterIF2IF2.New()

class itkMirrorPadImageFilterIF2IF2(itk.itkPadImageFilterPython.itkPadImageFilterIF2IF2):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF2IF2_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF2IF2_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF2IF2_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF2IF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIF2IF2
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIF2IF2

        Create a new object of the class itkMirrorPadImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIF2IF2 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF2IF2_swigregister(itkMirrorPadImageFilterIF2IF2)
itkMirrorPadImageFilterIF2IF2___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF2IF2___New_orig__
itkMirrorPadImageFilterIF2IF2_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF2IF2_cast


def itkMirrorPadImageFilterIF3IF3_New():
    return itkMirrorPadImageFilterIF3IF3.New()

class itkMirrorPadImageFilterIF3IF3(itk.itkPadImageFilterPython.itkPadImageFilterIF3IF3):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF3IF3_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF3IF3_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF3IF3_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF3IF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIF3IF3
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIF3IF3

        Create a new object of the class itkMirrorPadImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIF3IF3 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF3IF3_swigregister(itkMirrorPadImageFilterIF3IF3)
itkMirrorPadImageFilterIF3IF3___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF3IF3___New_orig__
itkMirrorPadImageFilterIF3IF3_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF3IF3_cast


def itkMirrorPadImageFilterIRGBAUC2IRGBAUC2_New():
    return itkMirrorPadImageFilterIRGBAUC2IRGBAUC2.New()

class itkMirrorPadImageFilterIRGBAUC2IRGBAUC2(itk.itkPadImageFilterPython.itkPadImageFilterIRGBAUC2IRGBAUC2):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC2IRGBAUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC2IRGBAUC2_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC2IRGBAUC2_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC2IRGBAUC2_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC2IRGBAUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIRGBAUC2IRGBAUC2
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC2IRGBAUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIRGBAUC2IRGBAUC2

        Create a new object of the class itkMirrorPadImageFilterIRGBAUC2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIRGBAUC2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIRGBAUC2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIRGBAUC2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIRGBAUC2IRGBAUC2 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC2IRGBAUC2_swigregister(itkMirrorPadImageFilterIRGBAUC2IRGBAUC2)
itkMirrorPadImageFilterIRGBAUC2IRGBAUC2___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC2IRGBAUC2___New_orig__
itkMirrorPadImageFilterIRGBAUC2IRGBAUC2_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC2IRGBAUC2_cast


def itkMirrorPadImageFilterIRGBAUC3IRGBAUC3_New():
    return itkMirrorPadImageFilterIRGBAUC3IRGBAUC3.New()

class itkMirrorPadImageFilterIRGBAUC3IRGBAUC3(itk.itkPadImageFilterPython.itkPadImageFilterIRGBAUC3IRGBAUC3):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC3IRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC3IRGBAUC3_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC3IRGBAUC3_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC3IRGBAUC3_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC3IRGBAUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIRGBAUC3IRGBAUC3
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC3IRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIRGBAUC3IRGBAUC3

        Create a new object of the class itkMirrorPadImageFilterIRGBAUC3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIRGBAUC3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIRGBAUC3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIRGBAUC3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIRGBAUC3IRGBAUC3 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC3IRGBAUC3_swigregister(itkMirrorPadImageFilterIRGBAUC3IRGBAUC3)
itkMirrorPadImageFilterIRGBAUC3IRGBAUC3___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC3IRGBAUC3___New_orig__
itkMirrorPadImageFilterIRGBAUC3IRGBAUC3_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC3IRGBAUC3_cast


def itkMirrorPadImageFilterIRGBUC2IRGBUC2_New():
    return itkMirrorPadImageFilterIRGBUC2IRGBUC2.New()

class itkMirrorPadImageFilterIRGBUC2IRGBUC2(itk.itkPadImageFilterPython.itkPadImageFilterIRGBUC2IRGBUC2):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC2IRGBUC2_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC2IRGBUC2_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC2IRGBUC2_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC2IRGBUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIRGBUC2IRGBUC2
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIRGBUC2IRGBUC2

        Create a new object of the class itkMirrorPadImageFilterIRGBUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIRGBUC2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIRGBUC2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIRGBUC2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIRGBUC2IRGBUC2 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC2IRGBUC2_swigregister(itkMirrorPadImageFilterIRGBUC2IRGBUC2)
itkMirrorPadImageFilterIRGBUC2IRGBUC2___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC2IRGBUC2___New_orig__
itkMirrorPadImageFilterIRGBUC2IRGBUC2_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC2IRGBUC2_cast


def itkMirrorPadImageFilterIRGBUC3IRGBUC3_New():
    return itkMirrorPadImageFilterIRGBUC3IRGBUC3.New()

class itkMirrorPadImageFilterIRGBUC3IRGBUC3(itk.itkPadImageFilterPython.itkPadImageFilterIRGBUC3IRGBUC3):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC3IRGBUC3_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC3IRGBUC3_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC3IRGBUC3_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC3IRGBUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIRGBUC3IRGBUC3
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIRGBUC3IRGBUC3

        Create a new object of the class itkMirrorPadImageFilterIRGBUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIRGBUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIRGBUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIRGBUC3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIRGBUC3IRGBUC3 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC3IRGBUC3_swigregister(itkMirrorPadImageFilterIRGBUC3IRGBUC3)
itkMirrorPadImageFilterIRGBUC3IRGBUC3___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC3IRGBUC3___New_orig__
itkMirrorPadImageFilterIRGBUC3IRGBUC3_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC3IRGBUC3_cast


def itkMirrorPadImageFilterISS2ISS2_New():
    return itkMirrorPadImageFilterISS2ISS2.New()

class itkMirrorPadImageFilterISS2ISS2(itk.itkPadImageFilterPython.itkPadImageFilterISS2ISS2):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS2ISS2_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS2ISS2_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS2ISS2_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS2ISS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterISS2ISS2

        Create a new object of the class itkMirrorPadImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterISS2ISS2 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS2ISS2_swigregister(itkMirrorPadImageFilterISS2ISS2)
itkMirrorPadImageFilterISS2ISS2___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS2ISS2___New_orig__
itkMirrorPadImageFilterISS2ISS2_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS2ISS2_cast


def itkMirrorPadImageFilterISS3ISS3_New():
    return itkMirrorPadImageFilterISS3ISS3.New()

class itkMirrorPadImageFilterISS3ISS3(itk.itkPadImageFilterPython.itkPadImageFilterISS3ISS3):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS3ISS3_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS3ISS3_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS3ISS3_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS3ISS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterISS3ISS3

        Create a new object of the class itkMirrorPadImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterISS3ISS3 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS3ISS3_swigregister(itkMirrorPadImageFilterISS3ISS3)
itkMirrorPadImageFilterISS3ISS3___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS3ISS3___New_orig__
itkMirrorPadImageFilterISS3ISS3_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS3ISS3_cast


def itkMirrorPadImageFilterIUC2IUC2_New():
    return itkMirrorPadImageFilterIUC2IUC2.New()

class itkMirrorPadImageFilterIUC2IUC2(itk.itkPadImageFilterPython.itkPadImageFilterIUC2IUC2):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC2IUC2_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC2IUC2_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC2IUC2_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIUC2IUC2

        Create a new object of the class itkMirrorPadImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIUC2IUC2 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC2IUC2_swigregister(itkMirrorPadImageFilterIUC2IUC2)
itkMirrorPadImageFilterIUC2IUC2___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC2IUC2___New_orig__
itkMirrorPadImageFilterIUC2IUC2_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC2IUC2_cast


def itkMirrorPadImageFilterIUC3IUC3_New():
    return itkMirrorPadImageFilterIUC3IUC3.New()

class itkMirrorPadImageFilterIUC3IUC3(itk.itkPadImageFilterPython.itkPadImageFilterIUC3IUC3):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC3IUC3_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC3IUC3_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC3IUC3_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIUC3IUC3

        Create a new object of the class itkMirrorPadImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIUC3IUC3 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC3IUC3_swigregister(itkMirrorPadImageFilterIUC3IUC3)
itkMirrorPadImageFilterIUC3IUC3___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC3IUC3___New_orig__
itkMirrorPadImageFilterIUC3IUC3_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC3IUC3_cast


def itkMirrorPadImageFilterIUS2IUS2_New():
    return itkMirrorPadImageFilterIUS2IUS2.New()

class itkMirrorPadImageFilterIUS2IUS2(itk.itkPadImageFilterPython.itkPadImageFilterIUS2IUS2):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS2IUS2_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS2IUS2_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS2IUS2_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIUS2IUS2

        Create a new object of the class itkMirrorPadImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIUS2IUS2 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS2IUS2_swigregister(itkMirrorPadImageFilterIUS2IUS2)
itkMirrorPadImageFilterIUS2IUS2___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS2IUS2___New_orig__
itkMirrorPadImageFilterIUS2IUS2_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS2IUS2_cast


def itkMirrorPadImageFilterIUS3IUS3_New():
    return itkMirrorPadImageFilterIUS3IUS3.New()

class itkMirrorPadImageFilterIUS3IUS3(itk.itkPadImageFilterPython.itkPadImageFilterIUS3IUS3):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS3IUS3_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS3IUS3_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS3IUS3_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIUS3IUS3

        Create a new object of the class itkMirrorPadImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIUS3IUS3 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS3IUS3_swigregister(itkMirrorPadImageFilterIUS3IUS3)
itkMirrorPadImageFilterIUS3IUS3___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS3IUS3___New_orig__
itkMirrorPadImageFilterIUS3IUS3_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS3IUS3_cast


def itkMirrorPadImageFilterIVF22IVF22_New():
    return itkMirrorPadImageFilterIVF22IVF22.New()

class itkMirrorPadImageFilterIVF22IVF22(itk.itkPadImageFilterPython.itkPadImageFilterIVF22IVF22):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF22IVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF22IVF22_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF22IVF22_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF22IVF22_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF22IVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIVF22IVF22
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF22IVF22_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIVF22IVF22

        Create a new object of the class itkMirrorPadImageFilterIVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIVF22IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIVF22IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIVF22IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIVF22IVF22 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF22IVF22_swigregister(itkMirrorPadImageFilterIVF22IVF22)
itkMirrorPadImageFilterIVF22IVF22___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF22IVF22___New_orig__
itkMirrorPadImageFilterIVF22IVF22_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF22IVF22_cast


def itkMirrorPadImageFilterIVF23IVF23_New():
    return itkMirrorPadImageFilterIVF23IVF23.New()

class itkMirrorPadImageFilterIVF23IVF23(itk.itkPadImageFilterPython.itkPadImageFilterIVF23IVF23):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF23IVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF23IVF23_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF23IVF23_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF23IVF23_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF23IVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIVF23IVF23
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF23IVF23_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIVF23IVF23

        Create a new object of the class itkMirrorPadImageFilterIVF23IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIVF23IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIVF23IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIVF23IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIVF23IVF23 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF23IVF23_swigregister(itkMirrorPadImageFilterIVF23IVF23)
itkMirrorPadImageFilterIVF23IVF23___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF23IVF23___New_orig__
itkMirrorPadImageFilterIVF23IVF23_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF23IVF23_cast


def itkMirrorPadImageFilterIVF32IVF32_New():
    return itkMirrorPadImageFilterIVF32IVF32.New()

class itkMirrorPadImageFilterIVF32IVF32(itk.itkPadImageFilterPython.itkPadImageFilterIVF32IVF32):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF32IVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF32IVF32_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF32IVF32_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF32IVF32_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF32IVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIVF32IVF32
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF32IVF32_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIVF32IVF32

        Create a new object of the class itkMirrorPadImageFilterIVF32IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIVF32IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIVF32IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIVF32IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIVF32IVF32 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF32IVF32_swigregister(itkMirrorPadImageFilterIVF32IVF32)
itkMirrorPadImageFilterIVF32IVF32___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF32IVF32___New_orig__
itkMirrorPadImageFilterIVF32IVF32_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF32IVF32_cast


def itkMirrorPadImageFilterIVF33IVF33_New():
    return itkMirrorPadImageFilterIVF33IVF33.New()

class itkMirrorPadImageFilterIVF33IVF33(itk.itkPadImageFilterPython.itkPadImageFilterIVF33IVF33):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF33IVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF33IVF33_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF33IVF33_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF33IVF33_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF33IVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIVF33IVF33
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF33IVF33_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIVF33IVF33

        Create a new object of the class itkMirrorPadImageFilterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIVF33IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIVF33IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIVF33IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIVF33IVF33 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF33IVF33_swigregister(itkMirrorPadImageFilterIVF33IVF33)
itkMirrorPadImageFilterIVF33IVF33___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF33IVF33___New_orig__
itkMirrorPadImageFilterIVF33IVF33_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF33IVF33_cast


def itkMirrorPadImageFilterIVF42IVF42_New():
    return itkMirrorPadImageFilterIVF42IVF42.New()

class itkMirrorPadImageFilterIVF42IVF42(itk.itkPadImageFilterPython.itkPadImageFilterIVF42IVF42):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF42IVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF42IVF42_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF42IVF42_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF42IVF42_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF42IVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIVF42IVF42
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF42IVF42_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIVF42IVF42

        Create a new object of the class itkMirrorPadImageFilterIVF42IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIVF42IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIVF42IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIVF42IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIVF42IVF42 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF42IVF42_swigregister(itkMirrorPadImageFilterIVF42IVF42)
itkMirrorPadImageFilterIVF42IVF42___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF42IVF42___New_orig__
itkMirrorPadImageFilterIVF42IVF42_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF42IVF42_cast


def itkMirrorPadImageFilterIVF43IVF43_New():
    return itkMirrorPadImageFilterIVF43IVF43.New()

class itkMirrorPadImageFilterIVF43IVF43(itk.itkPadImageFilterPython.itkPadImageFilterIVF43IVF43):
    r"""


    Increase the image size by padding with replicants of the input image
    value.

    MirrorPadImageFilter changes the image bounds of an image. Any added
    pixels are filled in with a mirrored replica of the input image. For
    instance, if the output image needs a pixel that is two pixels to the
    left of the LargestPossibleRegion of the input image, the value
    assigned will be from the pixel two pixels inside the left boundary of
    the LargestPossibleRegion. The image bounds of the output must be
    specified.

    Visual explanation of padding regions.

    This filter is implemented as a multithreaded filter. It provides a
    DynamicThreadedGenerateData() method for its implementation.

    Exponential decay in the bounds is enabled when DecayBase has to be in
    the range (0.0, 1.0]. When it is 1.0 it is disabled. The decay rate is
    based on the Manhattan distance.

    See:   WrapPadImageFilter, ConstantPadImageFilter
    example{Filtering/ImageGrid/PadAnImageByMirroring,Pad An Image By
    Mirroring} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF43IVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF43IVF43_Clone)
    GetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF43IVF43_GetDecayBase)
    SetDecayBase = _swig_new_instance_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF43IVF43_SetDecayBase)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF43IVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIVF43IVF43
    cast = _swig_new_static_method(_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF43IVF43_cast)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIVF43IVF43

        Create a new object of the class itkMirrorPadImageFilterIVF43IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIVF43IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIVF43IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIVF43IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIVF43IVF43 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF43IVF43_swigregister(itkMirrorPadImageFilterIVF43IVF43)
itkMirrorPadImageFilterIVF43IVF43___New_orig__ = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF43IVF43___New_orig__
itkMirrorPadImageFilterIVF43IVF43_cast = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF43IVF43_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def mirror_pad_image_filter(*args, **kwargs):
    """Procedural interface for MirrorPadImageFilter"""
    import itk
    instance = itk.MirrorPadImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def mirror_pad_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.MirrorPadImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.MirrorPadImageFilter.values()[0]
    else:
        filter_object = itk.MirrorPadImageFilter

    mirror_pad_image_filter.__doc__ = filter_object.__doc__
    mirror_pad_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    mirror_pad_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.MirrorPadImageFilter, itkTemplate.itkTemplate):
        mirror_pad_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        mirror_pad_image_filter.__doc__ += "\n"
        mirror_pad_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        mirror_pad_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



