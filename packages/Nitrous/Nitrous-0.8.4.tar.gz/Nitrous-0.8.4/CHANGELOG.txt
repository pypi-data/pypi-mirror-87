TurboGears Changelog
====================


1.5.1 (November 26, 2011):
--------------------------

Features
~~~~~~~~

* TurboGears now supports CherryPy 3.2 and deployment via the WSGI protocol;
  the documentation shows the integration with various WSGI enabled web servers.
* The new configuration setting ``engine.start`` can be set to False in order
  to prevent the CherryPy server from starting together with TurboGears,
  since this is not needed any more when serving TurboGears applications via
  WSGI. There is also a new setting ``engine.block`` that can be set to False
  when you want to start the CherryPy server, but not block the execution of
  the main thread. These two settings are False by default when ``environment``
  is set to ``embedded``, otherwise their default value is True.
* The ``start_server()`` method in the command module now returns the WSGI
  application so that it can be easily used in a WSGI script file.
* The new ``visit.cookie.httponly`` configuration option can be set to True
  in order to specify that the visit cookie shall only be transfered in HTTP
  requests, and shall not be accessible through JavaScript.

Fixes
~~~~~

* Added restrictions to the required packages when running with older Python
  versions, since some upstream packages do not support these Python versions
  any more. TurboGears 1.5.1 still supports all Python versions from 2.4 up
  to 2.7.
* Made ``tg.fancy_exception`` work properly with CherryPy 3.1 and higher.

Contributors (in alphabetic order)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Toshio Kuratomi, Christoph Zwerschke


1.5 (July 14, 2011):
--------------------

Changes
~~~~~~~

* Adaption of links to the new website.
* Inactive sources are now removed from the identity configuration.
* Let nested access in DataGrids return None if child items are None (#2534).
* Collect strings only from Genshi files in the templates directory.
  Otherwise, if there are HTML files which are not Genshi templates,
  tg-admin i18n collect would throw errors (SF #31). New command line option
  ``--template-dir`` for setting the name of templates directories.
* Support more variants of printing help (for commands) with tg-admin (#1072).
* The tables of a quickstarted project can now be created
  with a given prefix via a ``tg-admin quickstart`` option (#1249).
* Print requirements only once with ``tg-admin info``.
* Since the default Genshi output doctype is strict, we now also use a
  strict template doctype by default.

Fixes
~~~~~

* The paginate decorator did not work properly with newer SQLAlchemy versions
  when using column prefixes and the automatic joins did not work with older
  SQLAlchemy versions.
* Overall compatibility with SQLAlchemy 0.7.
* The identity system now works properly with SQLObject 1.1.1.
* Require suitable SQLObject version for Python 2.4.
* Overall compatibility with Python 2.7.2.
* Avoid duplicate processing of parameters at external redirects (#2451).
* ``SecureObject`` didn't proxy attribute assignments (#2535).
* Better error message when loading identity provider plugins failed.
* Made identity redirection work again and compatible with TG 1.1 (SF #24).
* Fixed a visit configuration issue reported on the mailing list.
* Properly adjusted proxy tools config settings to CherryPy 3.
* We now make sure the ``server.webpath`` setting is either empty or has
  a slash at the beginning but no slash at the end. We also make sure
  the global ``startup.webpath`` and the ``server.webpath`` setting in the
  configuration are equal (used to be different which was confusing).
* Better integration of the server.webpath setting with CherryPy.
  The trainling slash tool will work properly now (#2550).
* We now follow CherryPy 3 tools and logging which use ``login`` as request
  attribute for the user name instead of ``user_name``.
* Made the virtual path dispatcher behave better if we are running behind
  a forwarding proxy.
* ``tg-admin i18n collect`` did not find master template (SF #27).
* Removed "language" attribute from ``<script>`` tags generated by widgets.
* Fixed wrong spelling of ``identity.http_auth_realm`` in the config file.
* Removed unsupported options from command parser.
* Import simplejson from the standard library if possible.

Contributors (in alphabetic order)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Dan Callaghan, Gregor Horvath, Toshio Kuratomi, Christoph Zwerschke


1.5b2 (January 31, 2011):
-------------------------

Fixes
~~~~~

* Default identity model classes/tables have been added to the SQLAlchemy
  identity provider (#1453). These existed so far only for SQLObject.
  The test suite now also covers the SQLAlchemy identity provider.

Changes
~~~~~~~

* To avoid confusion, the ``json.py`` toplevel module of quickstarted projects
  has been renamed to ``jsonify.py``, because the Python 2.6 standard libary
  now has a package with the ``json`` name that would be hidden by the project
  package. Furthermore, the new name indicates better that this module is
  actually the project specific version of the ``turbojson.jsonify`` module.

Features
~~~~~~~~

* In addition to CherryPy 3.1.2, TurboGears 1.5b2 now supports CherryPy 3.2.

Contributors
~~~~~~~~~~~~

Christoph Zwerschke


1.5b1 (December 19, 2010):
--------------------------

TurboGears 1.5b1 includes all features, fixes and improvements available
in TurboGears 1.1.2. In addition to that, it involves the following most
noticeable changes and features and some more:

Changes
~~~~~~~

* TurboGears 1.5 is now based on CherryPy 3 instead of CherryPy 2.
  This brings much better performance and many other advantages.
  See http://www.cherrypy.org/wiki/WhatsNewIn30 for details.
  However, a lot of things have changed in CherryPy 3, and this has
  also some impact on TurboGears and its configuration settings.
  See http://docs.turbogears.org/1.5/Upgrade and
  http://www.cherrypy.org/wiki/UpgradeTo30 for the details.
* CherryPy now provides dummy request and response objects as simply
  cherrypy.request, cherrypy.response. The dummy versions of these and
  deprecated features have been removed from turbogears.testutil.
* The configuration is now separated into server configuration (also
  called site or global configuration) and application configuration.
  The former config entries apply serve-wide, while the latter entries
  only apply to specific mounted applications. You declare application
  config settoings by writing using the path as a section header.
* The config.get method is now request-aware, to ensure that the proper config
  value is returned for the current application (only important when mounting
  multiple applications).
* Requests now have a stage attribute to tell you where they are in the
  processing steps.
* The reloader is no longer monkey-patched; the reloader of CherryPy 3
  works just fine.
* ``MonkeyDecodingFilter`` has been removed. It's no longer needed now that
  the ``NestedVariablesHook`` runs after cherrypy.tools.decode.
* Visit is now implemented as a CherryPy tool instead of a filter.
* Removed startup.get_object_trail, as it's no longer being used.
* startup.SimpleWSGIServer has been removed. Use cherrypy.wsgi.CPWSGIServer
  instead.
* startup.startTurboGears and startup.stopTurboGears have been renamed
  to startup.start_turbogears and startup.stop_turbogears
* The ``SafeMultipartFilter`` was not ported from TurboGears 1.1 to 1.5, since
  it was a backport of CherryPy 3.1 functionality. You should use
  cherrypy.lib.safemime instead.
* The deprecated turbogears.feed package has been removed. You can use
  the TurboFeeds extension instead (http://pypi.python.org/pypi/TurboFeeds).

Features
~~~~~~~~

* TurboGears widgets are now using the Genshi templating engine by default,
  but you can still use Kid for page templates and widget templates. See
  http://docs.turbogears.org/1.5/WidgetTemplateEngine

Contributors (in alphabetical order)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Christopher Arndt, Sean O'Donnell, Ken Kuhlman, Mark Ramm, Bill Zingler,
Christoph Zwerschke


1.1.2 (December 19, 2010):
--------------------------

Fixes
~~~~~

* Translation with Google in the admi18n tool was broken. Switched to a more
  official anb stable Google API.
* The paginate decorator did not work properly with newer SQLAlchemy versions
  when using column prefixes.
* Fixed race condition issue with user login (#2494).
* ``SecureObject`` did not proxy CherryPy attributes (#2483).
* Fixed logging problems with multiple config files (#2490).
* Adaptions for newer versions of PEAK-Rules.

Features
~~~~~~~~

* Allow custom attrwrapper and data as list, tuple or dict in DataGrid (#2478).
* The paginate decorator automatically joins tables if necessary for sorting.
* Erroneous plugins could cause unserviceable error messages. We now output
  more informative warnings instead. Some other error messages have also been
  improved, e.g. when using JSLinks, but Kid is not installed.

Changes
~~~~~~~

* The new features and improvements in the external ``tgscheduler`` package
  that had been sourced out have been backported to  ``turbogears.scheduler``.
  Particularly, you can now get the task list, rename tasks, add tasks with
  a cron-like syntax, and the package works properly with Python 2.6 and 2.7.
* TurboGears 1.1.2 now requires the new and improved TurboJson 1.3 that also
  works with recent PEAK-Rules versions.
* The Toolbox now uses Genshi templates instead of Kid templates.
* Added Kid as requirement again, since it's still needed for widget templates
  and therefore indirectly also for i18n (#2518). Only TurboGears 1.5 will be
  fully independent of Kid, since its widgets can use Genshi templates.
* Moved getting default values from ``adjust_value()`` to ``display`` since
  this works better with inheritance (#2477).

Contributors (in alphabetical order)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Pavel Strashkin, Christoph Zwerschke


1.1.1 (March 21, 2010):
-----------------------

Fixes
~~~~~

* When collecting translatable strings (via command line or toolbox), gettext
  calls in Genshi templates had been disregarded (#732).
* It was not possible to enter Null values for optional fields using Catwalk.
  Some fixes were made to solve this, particularly for numeric fields (#760).
* Primary key strings did not work properly with Catwalk when updating (#1029).
* Better error message in Catwalk if foreign key cannot be found (#1412).
* ``SelectionField`` did not format values being rendered in template (#1314).
* ``ToscaWidget`` resources listed in the ``tg.include_widgets`` setting were
  not injected into the page header (#2025).
* Collect translatable strings from explicit gettext function calls in Genshi
  templates (#2368), and added the ``_()`` function to the template namespace.
* When mapping classes with ``__init__`` method using
  ``database.session_mapper``, you could get an `AttributeError` (#2386).
* Fixed problem when calling ``ET()`` in a Genshi templates, which is not
  necessary any more (#2390).
* A value of 0 was not output in a ``CheckBoxList`` (#2418).
* Widgets in the same module could not have the same class name (#2443).
* The methods ``quote_cookie`` and ``unquote_cookie`` in ``turbogears.util``
  used the url quoting/unquoting mechanism instead of the one used by
  the Cookie module in the standard lib. This lead to problems with WebTest
  and potentially could also cause other compatibility issues (#2446).
* The identity plugin did not work with input from nested forms (#1587).
* Fixed scheduler shutdown problem with method.sequential (#1702).
* The ``JSi18NWidget`` did not work in 1.1 and has been fixed now (r7020).
* Pagination did not work with SQLAlchemy 0.6beta1 (r6871).
* Fixed deprecation warnings for Python >= 2.6 in identity and visit modules.
* Added default MANIFEST.in to quickstart template to ensure clean builds.

Features
~~~~~~~~

* The `database.session_mapper` now takes an optional ``set_kwargs_on_init``
  parameter allowing you to suppress the automatic setting of keyword args
  as attributes for instances of the mapped class (#2386).
* Allowed nested validation schemas to be defined by nesting schema class
  definitions and allowed schema classes, not only instances, to be attached
  to form widgets (#2393).
* Lazy initialization of widget parameters is now possible (#2430).
* When a widget list is defined in the declarative way, the declared widgets
  are now kept accessible as attributes (they had been removed before, #2447).
* Compiled Kid templates are now added when building eggs (#1463).
* Added the ``tg-admin kid2genshi`` command for converting all Kid templates
  in the project into Genshi templates.

Changes
~~~~~~~

* We now set the config switch ``kid.i18n.run_template_filter`` by default to
  True if ``i18n.run_template`` filter is enabled and Kid is available (#2392).
* We now only pass string values as hidden fields in the login form, skipping
  possible file fields which cannot be passed anyway (#1761).
* Default logging methods are in place on any ``Controller``, not only on the
  ``RootController``, and ``RestMethod`` inherits from ``Controller`` now.

Contributors (in alphabetical order)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Christopher Arndt, Rick Copeland, Pavel Strashkin, Christoph Zwerschke


1.1 (October 4, 2009):
----------------------

Fixes
~~~~~

* Name error in `identity.SecureResource` when `require` attribute not set
  (r6686).
* Unit test for model bootstrap functions in standard quickstart template
  should not run when identity model can not be imported (r6692).
* When a visitor requested a page shortly before the `visit.timeout` and
  then again shortly afterwards, he could sometimes be logged of at the
  second request because the visit manager had not yet updated the database.
  This has now been fixed by first looking up visits cached in memory (#2346).
* Added 'save_on_init' as alias for 'autoadd' kwarg of database.session_mapper
  for backward-compatibility and fixed a bug occuring when mapping a class a
  second time with session_mapper (r6747).
* Genshi now adds correct doctype declarations to HTML and XHTML. By default,
  the 'strict' variant is used (#1963).
* Genshi engine now correctly changes the encoding when configured to do
  so (r6787).
* Added tests for Genshi template engine integration and separated test for
  Kid engine in `test_view.py` from engine-independent tests (r6788).

Features
~~~~~~~~

* There is a new config setting `visit.interval` allowing you to change
  the visit manager time interval for updating the visit table in the database.
  The setting must be specified in seconds; the default value is 30 seconds
  (r6751).
* The `genshi.default_doctype` configuration setting can now be a dictionary
  mapping format names to doctype names. For details see the examples in
  `app.cfg` in the default quickstart templates (r6787).

Changes
~~~~~~~

* Updated PyPI trove classifiers to give stable status and supported Python
  versions (r6691).
* PasteScript version requirement is now >= 1.7 for Python 2.6 compatibility
  (r6691).
* TurboCheetah is not installed by default anymore (but Cheetah dependency is
  pulled by PasteScipt). To install TurboGears with TurboCheetah support, use
  `easy_install TurboGears[compat]` (r6691).
* The `turbogears.feed` package is deprecated and using `FeedController` will
  issue a deprecation warning (r6695).
* The config setting `"tg.defaultview"` now has the default value `"genshi"`.
  This means that to use kid templates, one has to set `tg.defaultview = "kid"`
  in the application's configuration or prefix template names with `"kid:"`
  in the expose decorator (r6696).
* A missing or faulty dburi raises a `DatabaseConfigurationError` exception
  in most cases when trying to establish a database connection (r6714).
* Default identity provider code cleanup and aligning. Changes to
  `identity.*.encryption_algorithm` are now effective immediately (r6715).
* Identity tests now use `SqlAlchemyVisitManager` (r6716).
* Instantiating `SqlObjectVisitManager` fails correctly if visit data model
  tables can not be created (r6717).
* Loading the template engine options from the configuration was changed so
  that all options whose first part of the option name (i.e. everything before
  the first dot) matches the start of the tempalte plugin name are passed to
  the template engine when it is instantiated in `view.load_engines`. This
  means, for example, that the plugin named `"genshi"` will receive all
  `genshi.*` settings and the `"genshi-markup"` plugin will recieve those
  as well and all `genshi-markup.*` settings too (r6756).
* `expose` and `view.render` now take arbitrary keywords arguments, which are
  passed as keyword args to the `render` method of template plugins, which
  may use them as options for this rendering process. This replaces the
  `mapping` keyword arg previously supported by `expose` and `view.render` but
  which was never passed to the template renderer (r6783).
* The config setting ``genshi.encoding`` is now ``genshi.default_encoding``.
  If you used this setting and it was set to something other than `"utf-8"`,
  you need to change your configuration (r6787).
* New provisional favicon in quickstart templates. This may be replaced again
  in a 1.1 bugfix release (r6789).

Contributors (in alphabetical order)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Christopher Arndt, Christoph Zwerschke

See also the list of contributors for version 1.1rc1.


1.1rc1 (September 20, 2009):
----------------------------

Fixes
~~~~~

* Elixir quickstart model now supports transparent passwort encryption as well
  (#2047).
* Hardcode kid as template engine for feed templates (#2348).
* Rename 'commands' module in quickstarted projects to 'command' to avoid
  conflict with 'commands' module from the standard library (#2141).
* Adaption of the autocompletefield CSS file for fix #1914.
* .po header lost when merging a .pot including genshi templates (#2256).
* Lots of test fixes & improvements (r6318, r6623, r6647, r6648, r6652, r6658).
* SQLAlchemy forward compatibility fixes (r6576).
* Projects with no identity support do not include superfluous code (e.g. in
  model.py) and files (``login.css`` and ``login.html``) any more (#2049).
* Identity failures during a request to a controller exposed with
  `tg_format=json` yielded a 500 error instead of 403. Additionally, when
  no applicable controller method is found, Turbogears now returns HTTP
  status 404 (#2036).
* `tg-admin update` did not detect when a project uses Elixir and would
  overwrite the model with the standard SQLAlchemy based one (#2046).
* A "i18n merge" took the last message of the same id, while "i18n compile"
  took the last nonempty message. To make this consistent, "merge" now also
  takes the last nonempty message. (As suggested by rejoc in ticket #2258).

Features
~~~~~~~~

* Backported the TG2 templates to 1.1 (r6611).
* turbogears.database now supports its own version of a session-aware mapper,
  since the SQLAlchemy version is deprecated and will be removed in the future
  (r6638).
* Added NotAny identity predicate (#1343) and unit tests for predicates (r6311).
* Improved Number validator by adding a decimals parameter (r6316).
* Minor standard quickstart model improvements (r6617).
* Added requirements for tests to quickstart setup file (r6622).
* Instead of a plugin name you can now specify a class in dotted-path notation
  for the ``visit.manager`` config setting to use a custom visit manager
  (r6651, thanks to Nic Bellamy fro provding the idea in #2260).
* Support for JSONification of SQLAlchemy identity model objects in json.py
  of quickstarted projects plus tests (r6657).
* Many small improvements to the standard quickstart template files to enhance
  clarity and conformance to Python coding standards (r6655, r6657).
* Identity can now initiate HTTP basic authentication. Two new config settings
  `identity.http_basic_auth` and `identity.http_auth_realm` have been added for
  this purpose and are explained in the standard quickstart `app.cfg` (r6665).
* Quickstarted projects now have a unit test case for the bootstrap functions
  in model.py working for SQLObject and SQLAlchemy based model (r6673).

Changes
~~~~~~~

* SQLAlchemy version requirement is now >= 0.4.3 (r6638).
* Elixir version requirement is now >= 0.6.1 (r6640).
* Made TG 1.1 completely independent of Session.mapper, but still export it as
  database.mapper if available (r6633).
* TGTest now automatically resets turbogears.config after every test (r6568).
* Default visit manager plugin is now "sqlalchemy" instead of "sqlobject"
  (r6650).
* Identity failures again will cause a HTTP status code 403 to be returned.
  Status 401 is only returned when HTTP basic authentication is used (r6665).

Contributors (in alphabetical order)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Florent Aide, Christopher Arndt, Ken Kuhlman, Jonathan Schemoul,
Christoph Zwerschke


1.1b3 (December 3, 2008):
-------------------------

Fixes
~~~~~

* Fixed typo in the view base introduced at the last moment in b2 release.
* Added the .mak file extension to list of supported files for translation
  in admi18n. (#1795)


1.1b2 (December 2, 2008):
-------------------------

Features
~~~~~~~~

* New default quickstart template design (#1992).
* 'tg-admin quickstart' supports new '--no-identity' option to quickstart a
  project without identity non-interactively (#1218).
* The default login methods in the quickstart template now handles the case
  when session cookies are disabled by displaying a warning to the user (#1628).
* The standard quickstart templates define a new command line script entry point
  'bootstrap-<yourpkg>', which install a script to bootstrap application data.
  The corresponding function in 'commands.py' calls new code in 'model.py' to
  set up tables and optionally add a default user (r5756).
* 'turbbogears.scheduler' now supports a new type of task called 'SingleTask',
  i.e. a task which is executed only once at a specific time (#1710, Daniel
  Fetchinson & Kevin Horn).
* A new standard template variable 'tg_version' returns the version number of
  the currently running TurboGears instance (r5449).
* New config option ``safempfilter.on`` to enable the ``SafeMultipartFilter``
  (see end of 'app.cfg' in a quickstarted project for usage example) (r5666).
* New config option 'catwalk.session_dir' to set the directory where the
  CatWalk controller stores its state (r5733, Leandro Lucarella).
* New config option 'genshi.new_text_syntax' to support the new Genshi text
  template syntax (r5737, Raphael Slinckx).
* Template format 'text' and 'plain' can now be used interchangeably for Kid
  and Genshi (r5424).
* i18n now can handle Genshi templates and extract text from them (r5704,
  r5706).
* New function 'absolute_url', which wraps 'url' and returns a full absolute
  URL, including scheme and host name. Optionally uses two new config settings
  'tg.url_domain' and 'tg.url_scheme' (r5690).
* HTTP responses with status 204 (No Content) are now supported, to better
  support REST APIs (#2004, Peter Russell).
* Added the possibility to order the JS and CSS widgets by setting the
  'order' keyword argument (r5667).

Changes
~~~~~~~

* Toolbox requires tgMochiKit >= 0.2beta (r5485/r5620).
* Python 2.4 requires wsgiref >= 0.1.2 (r5446).
* PEAK-Rules requires setuptools >= 0.6c9 (#5483).
* Projects with SQLObject now require SQLObject >= 10.0.1 (#1765).
* 'tgsetup.py' now lives in the the 'tools' directory in each branch (r5466).
* Misc updates, fixes and minor improvements to the default quickstart
  templates (r5379, r5465, r5484).
* 'testutil.TGTest.tearDown' stops CherryPy server as well (r5461).
* The root element of the ``CalendarDatePicker``, ``AutoCompleteField`` and
  ``AutoCompleteTextField`` widgets have been changed from ``DIV`` to ``SPAN``
  to allow them to be used inside elements, which can not contain other
  block-level elements (e.g. ``SPAN``). A ``class`` attribute is added to the
  ``SPAN`` element, to allow it to be target by CSS rules easily (r5685).
* A new erroneousfield class is added to a rendered form when a validation
  erorr occured (r5668).
* The 'turbogears.access' logger now logs messages that conform to the combined
  log format (date was added and when remote host name is not available, logs
  the IP address) (r5725).
* If you pass fields when initializing a ``WidgetList``, these will now be
  appended to already existing fields declared in the class (before they had
  been prepended), and ``widgetField`` subclasses now inherit all the fields
  of their base class (#2014).

Fixes
~~~~~

* 'testutil' now supports SQLObject schemas with mutually referencing tables
  (r5662, thanks to Matt Wilson).
* Could not pass path as list to redirect (#2006, Peter Russel).
* Misc fixes to various modules to handle a missing ORM module gracefully and
  print a helpfull message when a user tries to start a project which needs
  an ORM and it can not be imported (r5490, r5491, r5493, r5494, r5495, r5496).
* Do not set 'forward_url' in login method when there are identity errors
  (r5507).
* Fix for broken patch for #1961.
* Having the visit tables in a secondary database did not work (#1717,
  Toshoi Kuratomi).
* Set proper 'text/plain' content type for plain-text responses (r5424).
* The default content-type for Genshi template output is now correctly set
  to 'text/html' (r5423).
* Fix deprecation warning when using ToscaWidgets by not calling
  ``retrieve_javascript/css`` on them in ``controllers._process_output``
  anymore, since tw takes care of including resources in the template output
  (r5565).
* New request filter ``turbogears.filters.SafeMultipartFilter``, which handles
  requests from semi-broken clients, which omit the trailing CRLF from
  multipart-MIME messages, e.g. Adobe Flash's ``FileReference.upload()``
  (r5666).
* 'testutil' does not choke when trying to load test configuration from a
  bogus 'config' package (r5708).
* Fix 'tg-admin update' command, which was broken due to not passing
  'elixirversion' to PasteScript (r5732).
* Correctly drop cross-referencing tables in 'testutil.DBTest.tearDown' (r5196).


Contributors (in alphabetical order)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Florent Aide, Christopher Arndt, Remi Jolin, Ken Kuhlman, Diez R. Roggisch,
Christoph Zwerschke


1.1b1 (September 8, 2008):
--------------------------

Changes
~~~~~~~

* Fixed quickstart project unit tests
* Genshi and SQLAlchemy are now the defaults.
* Testing is now powered by WebTest, a framework agnostic testing tool (#1762).
* (Repeating)FieldSet widgets do not enclose the contained form field widgets
  in a SPAN element any more (#1914).

Features
~~~~~~~~

* Added full support for multiple databases using SA (#1592).
* TGWidgets in Genshi templates automatically call ET() on display (#1355).

Fixes
~~~~~

* FieldStorage can now be optional (#1705).
* tgMochiKit version selection works again (r4107).
* FileField renders None as value now, preventing it to try and fetch an
  equally named column from the database (r4107).
* When using SQLObject, PackageHub.end() now uses connection.expireAll(), for
  added safety in a multithreaded environment. (#85).
* i18n.google_translate function is more robust and correctly decodes HTML
  entity refs (#1967, Joseph Binney)

Contributors (in alphabetical order)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Florent Aide, Christopher Arndt, Roger Demetrescu, Jorge Godoy, Paul Johnston,
Ken Kuhlman, Luke Macken, Diez R. Roggisch, Christoph Zwerschke


1.0.9 (October 16, 2009):
-------------------------

Changes
~~~~~~~

* ``turbogears.validators`` supports the new ``formencode.national`` module.
* Lists as return values of controllers are handled like generators again.
* ``tg-admin i18n collect`` supports a new option ``-e|--js-encoding`` to
  set the file encoding of the JavaScript source files (r6645).

Fixes
~~~~~

* Fixed some problems with non-ascci user names and URLs (#1130 and #2118).
* Static files were not found when project package was part of a larger
  namespace package (#12).
* Better error message if validator for option list couldn't be guessed (#978).
* Fixed Modeldesigner exception (#1109).
* Multi-level inheritance did not work in model designer (#1092).
* The PackageHub for SQLObject now only establishes a connection/transaction
  when really necessary (fixed tickets #763, #817 and #2160).
* The tgsetup script failed when ``find_link`` was set in ``.pydistutils.cfg``
  as a single string (#2098).
* A form widget that is displayed without action parameter now produces an
  empty action attribute instead of leaving it out which is invalid (#2292).
* Wrapping the ``CatWalk`` controller with ``identity.SecureObject`` did not
  protect catwalk's sub-controller ``Browser`` (#2207).
* ``tg-admin sql help`` produced an error (#2361, thanks to Izhar Firdaus).
* ``tg-admin i18n collect`` DecodingError when collecting strings from
  JavaScript files with non-ascii characters (#2183).
* Removed some obsolete code to handle deleting of related joins from CatWalk
  (#2162, thanks , Daniel Fetchinson).
* When a visitor requested a page shortly before the ``visit.timeout`` and
  then again shortly afterwards, he could sometimes be logged of at the
  second request because the visit manager had not yet updated the database.
  This has now been fixed by first looking up visits cached in memory (#2346).
* The Genshi Buffet interface is now correctly initialized with the
  ``default_encoding`` setting, not ``encoding`` (see end of #1963).
* It was not possible to enter Null values for optional fields using Catwalk.
  Some fixes were made to solve this, particularly for numeric fields (#760).
* Better error message in Catwalk if foreign key cannot be found (#1412).
* Primary key strings did not work properly with Catwalk when updating (#1029).
* Pagination did not work with SQLAlchemy >= 0.6.
* We now only pass string values as hidden fields in the login form, skipping
  possible file fields which cannot be passed anyway (#1761).
* Fixed scheduler shutdown problem with method.sequential (#1702).
* Added default MANIFEST.in to quickstart template to ensure clean builds.

Features
~~~~~~~~

* Added links to the home pages of the individual packages on the toolbox
  info page (#1155).
* TurboGears now makes internal use of the ``is_active`` property provided
  by SQLAlchemy 0.4.9 and newer.
* Compiled Kid templates are now added when building eggs (#1463).
* Allowed nested validation schemas to be defined by nesting schema class
  definitions and allowed schema classes, not only instances, to be attached
  to form widgets (#2393).

Contributors (in alphabetic order)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Peter Russell, Christoph Zwerschke, Christopher Arndt


1.0.8 (December 17, 2008):
--------------------------

Changes
~~~~~~~

* Charset parameters are now only added to content type headers when the
  respective mime type supports this (e.g. all "text" types, but not "pdf").
* Use "text/html" again instead of "application/xhtml+xml" for XHTML format,
  as was done in version 1.0.7. Though it is more standards-compliant, IE
  unfortunately does not cope with this content type, and we want to avoid
  the problems of content negotiation (see ticket #1998).
* Updated and fixed the 'tgsetup.py' script (#2053).

Fixes
~~~~~

* Passing a list of arguments to the redirect method did not work anymore since
  version 1.0.5 and is now working again (#2006).
* Solved a small problem in the login controller of quickstarted projects since
  version 1.0.5 that occurred when directly accessing a non-authorized resource.
* ``tg-admin toolbox`` ignored the ``--config`` option and adopted problematic
  config settings from the current project.
* Fixed an issue with i18n string collection when using the lang option (#2012).
* Made ``not_anonymous`` internally consistent with others predicates (#2029).
* ``tg-admin sql`` did not work with SQLAlchemy versions before 0.4.3 (#2057).
* Hidden fields are now always put in an invisible 'div' section since they
  must be contained in a block-level element to be valid (X)HTML (#2052).
* The id of widgets like datagrid could not be changed at render time (#2023).
* Improved some error messages and warnings.

Features
~~~~~~~~

* Made content type delivered for a template format configurable with the
  ``tg.format_mime_types`` setting (see problem with XHTML content above).
* TurboGears 1.0.8 now additionally includes MochiKit version 1.4.2, though
  version 1.3.1 is still used by default. You can use the newer version by
  setting ``tg.mochikit_version`` or ``tg_mochikit.version``  to '1.4' (#2018).
* Forms have got a new ``use_name`` parameter that allows setting the id
  attribute instead of the name attribute of the form, since the latter is
  deprecated in HTML and invalid in XHTML (#2052).

Contributors (in alphabetic order)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Florent Aide, Christopher Arndt, Christopher Gabriel, Eloi Notario, Peter Russel,
George Sakkis, Christophe de Vienne, Matt Wilson, Christoph Zwerschke


1.0.7 (September 15, 2008):
---------------------------

Changes
~~~~~~~

* The standard controller method handling identity.failure_url ("/login") now
  returns the proper HTTP status code "401 Unauthorized" (instead of
  "403 Forbidden") (#1787).
* The required version of SQLObject was bumped up to 0.10.1 (#1765).
* ``tgsetup.py`` installation script does not set script-dir to "/usr/local/bin"
  anymore on Unix-like systems (#1317).

Fixes
~~~~~

* The Label widget now renders ``attrs`` which had been missing from its template
  (Andy Grover) (#1964).
* The ``testutil.call_with_request`` did not work with controller methods which
  raise redirect (Felix Schwarz) (#1203).
* "tg-admin i18n" and the adm18n toolbox tool now correctly strip whitespace
  around strings collected from Kid templates so that they get translated
  properly (#1695).
* ``identity.get_failure_url`` was not backported from 1.1 branch but used in
  the identity providers (r5338).
* XHTML templates were delivered with a content type of "text/html" while it
  should be "application/xhtml+xml" (r5323, related to #1963).
* CalendarPicker was positioned wrong when scrolled in IE7 (Nick Murdoch)
  (#1875).
* Make paginate work with tg.strict_parameters=False (#1889).
* ``i18n.parse_decimal`` broke when locale is unknown (#1104).
* ``feed.FeedController.index`` now passes keyword args when redirecting to the
  feed handler methods (#1732).
* ``config.config_defaults()`` should now set ``package_dir`` correctly on all
  platforms (r5328).

Features
~~~~~~~~

None

Contributors (in alphabetic order)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Christopher Arndt, Christoph Zwerschke


1.0.6 (August 26, 2008):
------------------------

Improvements
~~~~~~~~~~~~

* Visit key can now be retrieved also from the request params (#1927).
* Added ``max_limit`` and ``max_sort`` parameters to the paginate decorator
  and deprecated ``allow_limit_override`` (#1908). Since the last version,
  TurboGears sorts in memory, if sorting with SQL is not possible. Since
  this may be costly, you can now set limits.
* TurboGears now respects the ``SCRIPT_NAME`` CGI environment variable.
  This allows better integration with ``mod_wsgi`` and other WSGI middleware
  and more flexibility than using ``sever.webpath`` (#1919).
* TurboGears now also sets ``request.path_info`` using a CherryPy filter.
  This is the same as ``request.path`` with both ``SCRIPT_NAME`` and
  ``server.webpath`` stripped off.
* Added a ``unicode_response`` attribute to the ``testutil.BrowsingSession``
  object if an encoding is specified in the Content-Type header. Tests can use
  this much more safely.
* If ``WidgetsList`` objects are passed in the controller dict, then the CSS
  and JavaScript for all the widgets in the list will be included (#5190).
* The forward/backward/goto links in the paginate data grid can now be styled,
  and the default style shows them as buttons (way easier to click).


Fixes
~~~~~

* Fixed several problems with ``server.webath`` (#1606, #1939, #1957).
* Improved the login mechanism so that you can use secure logins by setting
  ``identity.failure_url`` and ``identity.force_external_redirect``.
* url() now handles URLs with existing query strings correctly (#1862).
* Using something like kid.HTMLSerializer as template format works again.
* Fixed a problem with setuptools 0.6c9 (#1796).
* "tg-admin sql status" with SQLAlchemy wrongly complained about columns
  not being declared as Unicode.
* Catwalk got foreign key wrong for classes with camel case names.
* Fixed several problems with toolbox admi18n (#1399, #1941, #1943).

Contributors (in alphabetic order)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Florent Aide, Christopher Arndt, Ken Kuhlman, Tore Lundqvist, Christoph Zwerschke.


1.0.5 (July 1, 2008):
---------------------

Fixes and Improvements
~~~~~~~~~~~~~~~~~~~~~~

* You can now pass a couple of interesting configuration parameters to
  TurboJson (e.g. ``json.ensure_ascii=True``, and the default is now False).
* A new epydoc-based API docs generation script was added.
* The widget ``default`` value can now be a function, similar to ``options``.
* The default content type for JSON was changed from ``text/javascript``
  to ``application/json`` (#1842).
* The accept header is now reduced to a single value before it is compared
  with ``accept_format`` (#1842).
* The content type of the response is now determined from the template format
  parameter, if not otherwise specified (#1842, #1480).
* Setting ``tg_format=json`` is now allowed even when the format is already
  JSON by default (#1459).
* Small improvements in ``DataGrid``, empty headers are now allowed.
* Small improvements in the ``DataGrid`` and ``PaginateDataGrid`` templates.
* Improved ``paginate`` and made it work with the latest SQLAlchemy versions.
  Sorting now works with SQLAlchemy queries and pure Python objects, and
  nested attributes are supported.
* Table of contents and ``PaginateDataGrid`` added to the widget browser.
* ``AutoCompleteField`` now also works with the MochiKit 1.4 dev version.
* Added alternate text parameter to ImageButton for better form accessibility.
* Fixed params attribute of `JSI18NWidget`.
* Some association tables did not have primary keys when using SQLAlchemy.
* Flash messages with commas did not work on some browsers (#1164).
* The error handler did not return JSON when it had been requested from the
  original controller using ``tg_format``.
* ``tg-admin shell`` now works with "heredocs" and other cases when the
  standard input encoding is not defined.
* ``tg-admin toolbox`` did not work when ``server.socket_host`` was not
  set on some platforms (#1713).
* ``tg-admin i18n collect`` did not work with nested packages (#1779).
* A bug (#1396) made the recursion guard not work correctly and prevented
  validation to be performed more than once per request.
* Setting ``tg.defaultview='genshi'`` and ``tg.mochikit_suppress=True``
  raised an exception (#1719).
* ``format_decimal`` in i18n.format now works with ``num_places=0`` (#1647).
* The ``FeedController`` Atom 1.0 template didn't include proper author (#1730).
* The quickstarted default app.cfg file now sets the package name (#1631).
* Under rare circumstances, testutil could use a wrong module name (#1821).
* Installing ElementTree is not required any more for Python < 2.5.
* Some more small fixes and improvements of the code base and unit tests.

Contributors (in alphabetic order)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Florent Aide, Christopher Arndt, kikidonk, Diez B. Roggisch, Felix Schwarz,
Christoph Zwerschke.


1.0.4.4 (March 7, 2008):
------------------------

Changes
~~~~~~~

* ``cherrypy.request.sa_transaction`` is now always the SQLAlchemy transaction.
  In the case of SQLAlchemy >= 0.4, this had been set to the SQLAlchemy session
  before. You should't use this to explicitly commit or rollback transactions,
  use ``database.session.commit()`` or ``database.session.rollback()`` instead.
* Identities now have a ``login`` method creating the link to the visit;
  this is not done in the provider method ``validate_identity`` any more.
* TurboGears does not use a permanent visit cookie any more by default, i.e.
  the cookie will now be discarded when the browser is closed (#1729). If you
  want a permanent cookie to be used, set ``visit.cookie.permanent`` to True.
  The ``visit.timeout`` setting controls how long the cookie is valid.

Features
~~~~~~~~

* Identies now have additional ``user_id`` and ``group_ids`` attributes.
* Added an AutoCompleteTextField that can more easily replace an ordinary
  TextField in a form (the AutoCompleteField is a CompoundWidget).

Fixes
~~~~~

* Toolbox did not run on projects using Genshi (#1494).
* Toolbox loading will no more crash on a missing SQLObject import (#1620).
* The PasteScript bug mentioned in the 1.0.4.1 changelog below has been fixed
  in PasteScript 1.6.2, so TurboGears requires the new version now (#1624).
* The new config parameter ``tg.ignore_parameters`` allows ignoring other
  paramers besides ``tg_random`` when ``tg.stric_parameters`` ist set (#1653).
* FieldStorageUploadConverter didn't support ``not_empty=False`` (#1705).
* Fixed ``tg-admin shell`` encoding problems (#1714).
* Template params now always keep their given order (#1718).
* Compatibility with SQLAlchemy 0.4.3 (#1721).
* ``tg-admin shell`` now runs with Python 2.3 if you install subprocess.
* Better handling of external redirects.

Contributors (in alphabetic order)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Florent Aide, Matej Barič, Jorge Godoy, Christoph Zwerschke.


1.0.4.3 (January 31, 2008):
---------------------------

Fixes
~~~~~

* Added a new config option (app.cfg) which controls the kind of redirection
  the framework will raise in case of identity errors. By default TG used an
  internal CherryPy redirect in such cases. But the problem was that if you
  tried to use a failure url such as https://somewhere then CP raised a 404
  error and that was all. Using this new system, you can activate _external_
  redirects for identity errors by using the identity.force_external_redirect
  in app.cfg. This will permit redirecting your clients to any HTTPS url that
  is managed by an external apache or nginx rewrite rule.
* Fixed the behavior of tg.mochikit_suppress which wasn't actually working.
* Small improvements of the AutoCompleteField (Javascript clean-up;
  nicer box for auto completions and no garbage when it is empty;
  cursor jumps to end of text on update; with ``search_param = '*'``
  you can now pass all form fields to the controller; the spinner can
  now be suppressed with ``show_spinner = False``; the hidden field
  is now optional in the Javascript code so that it can be reused if you
  want to build a simpler TextField based widget; added parameter docs)

Project Updates
~~~~~~~~~~~~~~~

SQLObject version has been bumped so TG accepts 0.10.0 final.

Contributors (in alphabetic order)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Florent Aide, Diez B. Roggisch, Christoph Zwerschke.


1.0.4.2 (January 21, 2008):
---------------------------

* Lower down the dependency on PasteScript again to <1.6.
* CalendarDatePicker fixed with sane default values.

Contributors (in alphabetic order)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Florent Aide, Christoph Zwerschke.


1.0.4.1 (January 20, 2008):
---------------------------

* Lower down the dependency on PasteScript because 1.6.1 and 1.6.1.1
  break tg-admin quickstart command. We will release an updated version
  when the fix is implemented (http://trac.pythonpaste.org/pythonpaste/ticket/219).

1.0.4 (January 20, 2008):
-------------------------

* Fixed parameters encoding. A previous patch encoded all characters in the
  CherryPy parameters to make them utf-8. This comportment has been reverted
  and unit tests written to ensure CherryPy parameters we receive inside a TG
  application will alway be unicode.


1.0.4b6 (January 16, 2008):
---------------------------

Changes
~~~~~~~

* Fixed remote address inspection in the CherryPy headers because it changed
  in version 2.3.0.


1.0.4b5 (January 14, 2008):
---------------------------

Changes
~~~~~~~

* Now require CherryPy 2.3.0 as the minimum version to avoid a
  security bug in CherryPy (CVE-2008-0252), see more info here
  http://nvd.nist.gov/nvd.cfm?cvename=CVE-2008-0252.
  and here : http://www.cherrypy.org/ticket/744

1.0.4b4 (January 13, 2008):
---------------------------

Changes
~~~~~~~

* Pagination can be disabled by using ``allow_limit_override`` and
  ``tg_paginate_limit=0``, allowing all results been returned on one single
  page (#1629).

Fixes
~~~~~

* Fixed the visit cookie which was never resent to client until
  it expired(#1652).
* Fixed teardown for SQLObject tables (#1674).
* Fixed VisitFilter when Identity is on and there are list parameters (#1622).
* Paginate does a better handling of zeroed limit, avoiding ZeroDivisionError
  exception (#1629).
* Added missing logger configuration to quickstarted projects (#1630).
* Fixed pagination of empty data when a SQL with "group by" is issued (#1641).

Contributors (in alphabetic order)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Florent Aide, Toshio Kuratomi, Jan ONDREJ (SAL),  Martin Schwamberger (mschw),
Matt Wilson, Christoph Zwerschke.


1.0.4b3: (December 2, 2007):
----------------------------

Deprecations
~~~~~~~~~~~~

* Paginate ``default_order`` has been greatly improved. Use of the
  ``default_reversed`` parameter has been deprecated. It will still be used
  if it is informed, but a DeprecationWarning will be displayed.

Changes
~~~~~~~

* Introduction of tg.mochikit_suppress to prevent the inclusion of
  the shipped MochiKit 1.3.1. That allows to include custom mochikit versions.
* PaginateDataGrid template now makes use of paginate attributes to render
  the links for first/previous/next/last page (#1617).
* ``paginate.href_last`` returns a special URL that allows paginate decorator
  to compute the correct last page number at server-side (#1617).
* The ``start-<project>.py`` script in a quickstarted project is now only a
  wrapper for the ``start()`` function in a new ``commands`` module in the
  project's package. The ``setup.py`` in new project also creates a console
  script entry point for this, so easy_install can create a start script
  when the project's egg is installed. It also allows to package a default
  configuration file in the egg. For details see ticket (#1386).
* Installation of TurboGears now does not require installation of an ORM.
  Instead, a project that relies on SQLObject or SQLAlchemy will have a
  ``setup.py`` file written with the proper requirements (#1501, #1620).
* Removed the hard SQLAlchemy/SQLObject dependecies and modified quickstart
  to render the required ORM as requirement into a projects setup.py.

Features
~~~~~~~~

* Introduction of tg.mochikit_suppress to (see "Changes").
* Workaround in paginate for databases without ``OFFSET`` (#1601).
* The database module exports a mapper which is either session.mapper
  for SQLAlchemy >= 0.4, or something similar to assign_mapper
  for SQLAlchemy < 0.4, but compatible with SQLAlchemy 0.4 and Elixir.
* The ``tg-admin quickstart`` command has now an option ``-r``
  ``(--svn-repository)`` allowing automatic creation of the project in the
  specified SVN repository.
* Introduction of ``paginate.redirect_on_out_of_range`` and
  ``paginate.redirect_on_last_page``, which determine if paginate decorator
  should raise a redirect when current page is out of bound and the
  last page is requested, respectively.
* Paginate ``default_order`` can now be a string or a list of strings.
  The list of strings is used to specify the ordering of multiple columns.
  Every string starting with a dash (``-``) indicates that the column will
  have its default ordering reversed (#1618).
* turbogears.url() allows to to create an url with multiple values for the
  same key (#1456).

Fixes
~~~~~

* Fixed broken quickstart change (#1595).
* KID-template string collection for i18n fixed so that it ignores XML
  processing instructions and comments as well as script and style sections.
* Fixed SQLAlchemy and Elixir issues (#1458, #1599 and #1604).
* Fixed issues with ``tg-admin update`` on a project in SVN (#1608).
* Fix pagination of SQLAlchemy Query ordering by backrefs and synonyms'
  attributes. It also supports SQLAlchemy 0.4.1, which removed the
  ``properties`` accessor on Mapper (#1582).
* Ensure paginate links bring the same result when using ordering columns
  with a custom datagrid template (#1605).
* Fix pagination of out of bound pages (#1617).
* ``tg-admin i18n`` now supports Unicode strings in Kid templates (#1397).
* Fixed testutil to properly use the soClasses attribute in the model
  in order to pick up only the classes defined in this list and not
  the rest. Thanks to Gregor Horvath for this suggestion. (#1586).
* Fixed the command line interface to i18n collection. Command line now
  processes also the templates (#1436).
* Identity bug when using non-ASCII characters in the URL (#1598, #1407,
  #1022).

Project Updates
~~~~~~~~~~~~~~~

* TurboCheetah 1.0
* TurboJson 1.1.2
* TurboKid 1.0.4

Contributors (in alphabetic order)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Florent Aide, Christopher Arndt, Roger Demetrescu, Juan Germano, Joel Pearson,
Diez B. Roggisch, Christoph Zwerschke.


1.0.4b2 (October 27, 2007):
---------------------------

Changes
~~~~~~~

* New quickstart templates for the SQLAlchemy support.
* Better transaction support.
* Paginate decorator enhanced SQLAlchemy support.

Features
~~~~~~~~

* SQLAlchemy 0.4 is now supported, and SQLAlchemy 0.3.10 is required as a
  minimum (#1483).
* QuickStart no longer creates sqlobject-history directories for SQLAlchemy
  projects.
* "tg-admin sql" is now more powerful for SQLAlchemy (#1418).
* Paginate allows ordering by attributes from related objects (SQLAlchemy
  Query objects only) (#1582).
* JavaScript i18n-features added.

Fixes
~~~~~

* Rollback SQLAlchemy transaction if a controller method fails, and it has an
  exception_handler (#1185).
* ``sa_rwt`` (SQLAlchemy run with transaction) refactored to fix some corner
  cases.
* Fixed internal pagination ordering, avoiding a potential error when
  paginating Query objects (SQLAlchemy) and ordering by 4 or more
  columns (#1508).
* Fixed pagination of Query objects (SQLAlchemy). The first patch assumed
  that Query objects have a _query attribute which holds the query object,
  which is only true for SelectResults objects (#1434).
* Paginate now works with SQLAlchemy 0.4 (#1591).
* KID-template string collection for i18n enhanced so it matches the
  expectations of the i18n-filter.

Project Updates
~~~~~~~~~~~~~~~

* Minimum requirement for SQLAlchemy support is now 0.3.10.
* The SQLAlchemy page on our wiki contains some upgrade information:
  http://docs.turbogears.org/1.0/SQLAlchemy#id19

Contributors
~~~~~~~~~~~~

Florent Aide, Roger Demetrescu, Jonathan Hitchcock, j, Paul Johnston,
Remi Jolin, Diez B. Roggisch, Christoph Zwerschke


1.0.4b1 (September 13, 2007):
-----------------------------

Changes
~~~~~~~

* The cookies should have the same timeout as the session does, this way it
  is possible to keep users logged in for longer than the time the browser
  is running (#1406).
* SQLAlchemy 0.4 support added. The identity part and the SQLAlchemy quickstart
  model were changed to do this. For the moment only the standard SQLAlchemy
  model has been changed, the ``tbig`` is still not fully compatible with
  SQLAlchemy 0.4.

Features
~~~~~~~~

* i18n support for Javascript (for real this time).
* Allow pagination of multiple variables, simply by using the @paginate
  decorator multiple times on a particular controller.
  It maintains backwards compatibility with previous code, but introduces
  a new template variable: tg.paginates (#1410).
* Added ``-o`` ``(--sqlobject)`` option to generate SQLObject template,
  by Fred Lin.

Fixes
~~~~~

* SQLAlchemy exception handling and transaction support has been
  improved and polished.
* Added proper logging for exceptions that occured during the identity
  providers. Thoses errors were lost silently before and made it hard to
  understand from where the problem came.
* Improved support for the SQLAlchemy command line interface.

Project Updates
~~~~~~~~~~~~~~~

* A lot of unit tests have been fixed to support versions of nose
  superior to 0.9.2. Paul also took great care to add more unit tests
  to the SQLAlchemy handling in TG.
* Now require TurboKid 1.0.3 for Kid support. This will pull out the
  latest TurboKid that includes fixes for choosing the kid output format.

Contributors
~~~~~~~~~~~~

Diez B. Roggisch, j, Christoph Zwerschke, Chris Arndt, Paul Johnston, Florent Aide


1.0.3.2 (July 20, 2007):
------------------------

Fixes
~~~~~

* Genshi, while internally calling it "variable_lookup", has a Buffet Engine
  plugin that expects "lookup_errors". TG 1.0 and 1.1 look for and pass through
  only "variable_lookup", while TG 1.1 has "lookup_errors" in configuration.
  This helps in error handling with Genshi templates.
  Patch by Neil Blakey-Milner (#1444).
* Output format must not be set for other templating engines than Kid,
  and needs not be set for Kid either. Removed unnecessary imports.
  Christoph Zwerschke.
* ``tg-admin toolbox`` did not run outside a project directory.
  Christoph Zwerschke.

Contributors
~~~~~~~~~~~~

Neil Blakey-Milner, Christoph Zwerschke


1.0.3 (July 19, 2007):
----------------------

Changes
~~~~~~~

* Added support for multiple databases using SQLAlchemy (#1380 by Ian Charnas).

Features
~~~~~~~~

* Elixir quickstart by FredLin
* Adding encryption on the fly for SQLAlchemy identity on in the template as
  per mailing list discussion (#1415).
* Added slovenian translation thanks to mte (#1190).
* Japanese Calendar thanks to tmatsuo (#1395).
* Handle locales in egg creation thanks to Christoph Zwerschke

Fixes
~~~~~

* Now handles SQLAlchemy Query in addition of SelectResults which will be
  deprecated in the near future (#1434).
* Fix visit entries created more than once in the database (#1325).
* Fixed toolbox config loading during startup.
* Safari Unicode fix (patch from Simon Wittber, #1284).
* Fix for i18n for testsuites not run in the same directory as the project
* @paginate barfed if you tried to sort on a column whose data
  is generated from SQL. Thanks to Alastair (#1319).
* @paginate didn't support SQLAlchemy list properties.
  Thanks to Alastair (#1318).
* Fixed paginate href. Thanks to Alastair (#1321).
* Enable custom: plugins outside TG source tree thx to aalbrecht (#1178).

Project Updates
~~~~~~~~~~~~~~~

* Recommended version of Python is now 2.5.

Contributors
~~~~~~~~~~~~

Simon Wittber, Christopher Arndt, Christoph Zwerschke, Paul Johnston, FredLin,
jtate, Ian Charnas, Alastair Houghton, Ian Charnas, Alberto Valverde González,
Florent Aide.


1.0.2 (May 2, 2007):
--------------------

Changes
~~~~~~~

* New ``visit.cookie.secure`` config option to send cookie only over a secure
  connection (#1375 by James E. Blair).
* ``cherrypy.request`` is now available at the variables sent to every template
  (#1362 by Christoph Zwerschke).
* SQLAlchemy transaction object is now stored at ``cherrypy.request.sa_transaction`` so
  it can be accessed from the controllers. Patch at #1359 by Janzert.
* SecureResource now raises an AttributeError when no require attribute is
  present in the controller class or in the config file. Closes #1336.
  (Note: This might break some "broken" apps, fortunately a detailed exception
  is raised advising how to fix it).
* Slight quickstart CSS modification for tables.
* Add default CSS to highlight the validation error.
* Made "flash" block dynamic in quickstart.
* Session setting is moved to config/app.cfg
* command/toolbox info could list the toolbox plugins.
* Enhancement SQLAlchemy default model, use 'assign' to avoid repeatedly writing,
  thanks Christoph Zwerschke.
* Able to specify a default doctype in genshi, thanks Alastair Houghton.

Features
~~~~~~~~

* Validators now support localized error messages. Thanks to Gregor Horvath and
  updated patch #1136 by Christian Vogler.
* Python 2.5 compatible, Thanks to Florent Aide and Fred Lin (#1288).
* AutoCompleteField now accepts a take_focus parameter to focus on load.
  Thanks to Grover (#1332).

Fixes
~~~~~

* Fixed support for SQLAlchemy in paginate (#1360 by Jo Soares).
* Schemas are no longer deepcopied to prevent crashing on un-deep-copiable
  validators (#1333).
* Fixed bug in tg-admin that caused it not to operate properly on projects
  deployed as eggs. Patch from #1361 by Christoph Zwerschke.
* SQLAlchemy auto-commiting fixed in some rare circumstances where sa_rwt was
  not being called. Patch from #1267 by Paul Johnston.
* CatWalk now handles customized addRemoveName in SQLObject (#911 by Joost).
* Using base64.decodestring in visitor.py for 2.3 compatibility
  (#1279 by Paul Fisher).
* Config file in quickstarted app now has config option to load identity classes.
  Thanks to Felix Schwarz (#1255).
* Identity now supports encrypted passwords with unicode characters.
  Thanks to Felix Schwarz and Patrick Lewis (#1281).
* Minor changes to template so they work properly when ``server.webpath`` is
  not ``'\'`` thanks to "nludban" (#1213).
* Fix quickstart project tests, thanks to Christoph Zwerschke (#1289),
  Jeff Kowalczyk (#1219).
* Fix TurboGears 1.0.1 not installable with Python 2.3, thanks to "corvus" (#1264).
* Automatic creation of identity model tables for SQLAlchemy, thanks to
  Christoph Zwerschke (#1290).
* Fix DateTimeConverter, thanks to iberonesia (#1262).
* ModelDesigner now writes up-to-date model header.
* Decouple turbogears.identity.encrypt_password() from SQLObject.
* Remove ``class_mapper`` dependency from #1292, thanks to Christoph Zwerschke.

Project Updates
~~~~~~~~~~~~~~~

* ez_setup.py version to 0.6c5
* Not require cElementTree, pysqlite in Python 2.5 install
* FormEncode version to i18n aware 0.7.1
* RuleDispatch to 0.5a0.dev-r2303 for Python 2.5 support.
* Added requirement of DecoratorTools due to upgrade of PyProtocols which
  deprecates functions used in decorator.py.

Contributors
~~~~~~~~~~~~

Alberto Valverde, Fred Lin, Jorge Vargas, Joseph Tate, Elvelind Grandin,
Florent Aide, nludban, Jeff Kowalczyk, corvus, Christoph Zwerschke, iberonesia,
Alastair Houghton, Felix Schwartz, Patrcik Lewis, Grover, Paul Fisher,
Joost Moesker, Paul Johnston, Christian Vogler, Janzert, Chris Miles,
Christopher Arndt, Jo Soares, James E. Blair.


1.0.1 (January 22, 2007):
-------------------------

Changes
~~~~~~~

* ``paginate`` decorator now supports SQLAlchemy, improves sorting and fixes
  problems with CompoundWidget. Thanks to randall@tnr.cc and sbr77 (#1115).
* Catwalk now supports SQLMultipleJoin/SQLRelatedJoins.
  Thanks to Chris Arndt (#910).
* More docstring for widgets package.

Fixes
~~~~~

* Identity logout  now works properly when using ``set_identity_user`` (#1245).
  Thanks to Felix Schwarz
* Set right default encoding 'utf-8' instead of 'utf8' which broke
  XmlHttpRequest in IE. Thanks Simon King (#1248).
* Workaround for MySQLdb imcompatibilty with MySQL 4.1. Thanks to Felix Schwarz
  (#1245).
* Minor code style improvement in quickstart template (#1231).
* Redirection to default feed in ``FeedController.index()`` fixed.
  Thanks to Florent Aide (#1237).
* Fixes for FR locale in JavaScript for CalendarPicker. Thanks to Florent Aide.
* Various test case fixes. Thanks to Christoph Zwerschke, Felix Schwarz
  (#1236, #1237).
* Adapt tests to changes in Kid 0.9.4. Thanks to Jeff Hinrichs and
  Christoph Zwerschke (#1234).
* Reverted patch for #1168 which caused a RuntimeError (#1225).

Contributors
~~~~~~~~~~~~

Alberto Valverde, Jeff Hinrichs, Christoph Zwerschke, Felix Schwarz,
randall@tnr.cc, sbr77, Florent Aide, Christopher Andt, Simon King, Fred Lin


1.0 (January 03, 2007):
-----------------------

Changes
~~~~~~~

* When used with the ``--future``  option, TurboGears can now function without
  having SQLObject installed.
* "nose" is now an optional setup component.
* Now possible to pass any option (besides dburi and echo) to SQLAlchemy
  engine. Thanks to elftherios and Lee McFadden (#1215).
* Now possible to place test specific configuration in "test.cfg". Thanks to
  Tim Freund (#1177, #1214).
* Support testing the code that uses identity. Thanks to Max Ischenko and
  Felix Schwarz (#1166, #1220).
* Auto reloading speedup. Thanks to John M. Camara (#1168).

Features
~~~~~~~~

* Now possible to add variables to the root template namespace via
  turbogears.view.root_variable_providers. Thanks Arnar Birgisson (#1097).
* ``turbogears.database.run_with_transaction`` is now a
  ``MultiorderGenericFunction`` to allow easier customization (#1201).
* tg-admin now accepts ``--egg`` and ``--config`` as global options which works
  on all commands.

Fixes
~~~~~

* Fix implicit transactions for SQLAlchemy. Thanks to Lee McFadden (#1209).
* Various CSS fixes for DataGrid. Thanks Florent Aide (#1222).
* ``FeedController`` is now a Controller so ``tg.url`` works properly and fixed
  missing import in feed.py .Thanks Florent Aide (#1223, #1224).
* Looser Enum implementation taht works better with ToscaWidgets.
* Kid configuration settings were ignored under certain circumstances.
  Thanks Joost, Ksenia and Dan for the pathes (#468).
* ``validators.Number`` handles non-string input gracefully (#955).
* ``nestedVariablesFilter`` made more robust (#1068).
* Throwing an ``identity.IdentityException`` inside a controller method is now
  caught by ``identity.SecureResource`` (#1131).
* Various test case fixes. Thanks to Felix Schwarz, Joost Moesker,
  Jeff Kowalczyk (#1204, #1206, #1216, #1217).
* ``logout()`` method in SQLObjectIdentity was setting read-only property.
  Does not suppress exception anymore (#1211, #1212).

Contributors
~~~~~~~~~~~~

Alberto Valverde, Joost Moesker, John M. Camara, Dan Jacob, Arnar Birgisson,
Ksenia Marasanova, Felix Schwarz, Tim Freund, Max Ischenko, Fred Lin,
Florent Aide, Jeff Kowalczyk, elftherios, Lee McFadden, Kevin Dangoor


1.0b2 (November 30, 2006):
--------------------------

Changes
~~~~~~~

* The CalendarDatePicker widget allows a validator now.

Features
~~~~~~~~

* Introduced tgsetup.py which provides simpler installation and better
  error messages. tgsetup.py also provides a ``--future`` switch to
  get SQLAlchemy and Genshi for you.

Fixes
~~~~~

* SQLAlchemy quickstart projects with identity were missing an import
* SQLObject visit classes can be defined in your model.py
* Fixed a memory usage problem with large file uploads
* Corrected a Python 2.3 compatibility problem
* Identity + SQLAlchemy + PostgreSQL had a problem with timezones that
  has been corrected.
* JSLink now uses ``<script></script>`` instead of ``<script/>`` to avoid
  problems when used with template languages that don't serialize XHTML->HTML.
* A number of fixes and minor enhancements to the quickstart templates
* ``turbogears.url`` has a nicer default when you're not running within a
  request (ie when you're in a test)

Project Updates
~~~~~~~~~~~~~~~

* setuptools 0.6c3

Contributors
~~~~~~~~~~~~

Fred Lin, Jorge Vargas, Jorge Godoy, Alberto Valverde, Elvelind Grandin,
Lee McFadden, Max Ischenko, Joseph Tate, Matthew Bevan, Roger Demetrescu,
plus some small fixes from several others and a huge amount of
documentation work from Karl Guertin and Adam Jones (in addition to the
other contributors already mentioned).


1.0b1 (September 7, 2006):
--------------------------

Changes
~~~~~~~

* The CalendarDatePicker will no longer prefer the user's browser's language
  if a language has been explicitly specified (#1056).

Features
~~~~~~~~

* Calls to gettext inside kid templates are now detected by i18n.
* Can now pass ``tg_format`` in the output dict to override the one set by
  expose.
* Can now set the config option ``sqlalchemy.echo`` to toggle SQLAlchemy's
  query logging.
* Can now use ``field_for`` inside ``FormFieldContainer`` templates to get child
  fields by name.

Fixes
~~~~~

* You can now conveniently use non-ActiveMapper SQLAlchemy classes with
  identity (#1041).
* Identity testing is now easier because the ``DummyRequest`` now
  includes a remote_host.
* Default identity provider will be created if the request doesn't
  have one (#876).
* Swedish translation file for the calendar has been fixed (#1055).
* ``testutil.DBTest`` will only drop tables that exist (#1094).
* Added ``validate_password`` to the SQLAlchemy identity provider
  to match the SQLObject one (#1098).
* Corrected spelling at italian CalendarDatePickers' i18n files.
* Fixed a bug with BLOBCols in Model Designer.
* Exceptions raised when SQLAlchemy flushes are now dispatched with TG's
  errorhandling.
* Can now use ``format`` (plus other internal named parameters) as a controller's
  method argument name.
* The toolbox will now launch the browser to point to the same port number
  as the server is listening at.

Project Updates
~~~~~~~~~~~~~~~

* SyntaxHighlighter 1.4.0
* setuptools 0.6c2


0.9a9 (August 17, 2006):
------------------------

Features
~~~~~~~~

* tg-admin toolbox now accepts a ``--conf`` argument.
* Catwalk now provide some feedback on ajaxcalls
* The quickstarted welcome page are updated and looks much better

Fixes
~~~~~

* Adding users with Catwalk should now work
* Admi18n now works with non-ascii translation and html entities

Project Updates
~~~~~~~~~~~~~~~

* SQLObject 0.7.1dev-r1860
* PasteScript 0.9.7
* ConfigObj 4.3.2
* Nose  0.9
* TurboJson 0.9.9


0.9a8 (July 21, 2006):
----------------------

Fixes
~~~~~

* Some problems with the calendar widget that were introduced in 0.9a7
  have been addressed
* Some people have reported getting an SQLObject 0.8 dev package, which
  is not at all tested with TurboGears. The setup file for TurboGears
  will now restrict to < 0.8.

Project Updates
~~~~~~~~~~~~~~~

* Kid 0.9.3 (addresses problems that people had with comments in base
  templates)
* setuptools 0.6c1


0.9a7 (July 19, 2006)
---------------------

Backwards Incompatibilities
~~~~~~~~~~~~~~~~~~~~~~~~~~~

* Former LocalizableJSLink is now CalendarLangFile. New LocalizableJSLink is
  simpler but backwards-incompatible.
* Catwalk no longer accepts an allowHost argument.
  To restrict access to it use Identity.SecureObject instead.

Deprecations
~~~~~~~~~~~~

* Use of "entrys" is now deprecated in the FeedController. You should use
  "entries" instead.

Features
~~~~~~~~

* Syntax highlighter is used in the widget browser to make the code
  snippets look nice (#843)
* Logging configuration produces better errors and also has access to the
  RotatingFileHandler and TimedRotatingFileHandler (#866, also fixes #820)
* The ``validate`` decorator now accepts a `state_factory` parameter which
  should be a callable that returns the initial state for validation (the
  same ``state`` parameter FormEncode validators use). The final state after
  validation can be accessed at ``cherrypy.request.validation_state`` inside
  controller methods.
* ``tg-admin`` commands can state if they need to be run in a project dir.
* Toolbox now uses entrypoints so site-specific tools can be added.
* ``tg-admin shell`` now asks if it should commit changes to the database on exit.
* Widgets can be listed at the ``tg.include_widgets`` config. list to send them
  to every template (a la ``tg.mochikit_all``).
* ``DBTest`` now drops tables after each test so they don't interfere with others.
* Toolbox is now secured using Identity
* SQLAlchemy support not only works again with the latest SQLAlchemy,
  but quickstart works properly and "tg-admin sql create" now works
  for SQLAlchemy databases for the first time.

Fixes
~~~~~

* The ``sample-prod.cfg`` file had an incorrect logging configuration.
* Simplified visit queue handling which solves some mysterious bugs.
* Quickstart: ``model.py`` now includes SQLObject's requirements when identity
  is off.
* ``DateTimeConverter`` now handles dates < 1900.
* Catwalk now handles gracefully UnicodeCols.
* Quickstart: ``start-project.py`` now detects correct Python binary's path in
  the system.
* Kid's base templates are now (re)loaded properly.
* Config file selection is now smarter.
* ``tg-admin update`` now finds correct identity provider.
* Catwalk now handles InheritableSQLObjects with mixins gracefully.
* Output encoding wasn't set based on the config value under some
  circumstances (#972)

Changes
~~~~~~~

* If ``tg.empty_flash`` is True in the app's configuration, then
  ``tg_flash = None`` will be sent to the template when it's not set.
  Otherwise it will not be sent at all.
* Quickstart: Now supports Python 2.3 with PEAK's [] decorator syntax.
* ``DateTimeConverter`` validator now raises Invalid('empty') exceptions properly
  and uses the usual ``not_empty`` parameter. ``allow_empty`` is deprecated.

Contributors
~~~~~~~~~~~~

(My apologies if your name belongs here and is not!)

Roger Demetrescu, Elvelind Grandin, Rune Hansen, Sean De La Torre,
Alberto Valverde, Max Ischenko, Joseph Tate, Elvelind Grandin,
Charles Duffy, Matt Good, Ksenia Marasanova.


0.9a6 (May 9, 2006)
-------------------

Backwards Incompatibilities
~~~~~~~~~~~~~~~~~~~~~~~~~~~

* ``i18n.runTemplateFilter`` in the config file has been renamed
  ``i18n.run_template_filter`` (#796)
* For people using FastData (experimental): ``get_add_url``,
  ``get_edit_url`` and ``get_delete_url`` all are passed the row instead
  of the ID now, allowing you to use something other than the ID
  if desired.
* In widgets, if you were using a dictionary as a params be aware that now
  the dictionary is not updated at construction or display/render time but
  simply replaced with the new one.
  If you were using it to provide default attributes for your widget, take a
  look at how the TableForm does that.

Features
~~~~~~~~

* A new function, ``turbogears.util.find_precision``, to tell you
  how many decimal places of precision are required (to help
  with ``i18n.format.format_decimal`` which needs to know the
  precision).
* tg-admin info shows which eggs require TurboGears.
* In widgets, SelectionField now supports grouped options,
  SingleSelectField and MultipleSelectField widgets take advantage of this
  to provide an optgroup tag (see below).
* The Widget Browser now displays the source of the example and the
  template provided by default in the widget (to allow for easier
  complete customization) (#840, #841)
* Tabber and Syntax Highlighter widgets are now included.

The format of a grouped options list mentioned above is like the following::

    options = [(None, [(1, "a"), (2, "b")]), ("Others", [(3, "c"), (4, "d")])]

Changes
~~~~~~~

* sqlite database URIs can now be specified as ``sqlite:///c:/foo/bar`` on
  Windows, which is more natural for users. (The ``sqlite:///c|/foo/bar``
  syntax still works.)
* ValueError is raised if an InputWidget contains "." or "-", which are
  reserved for use by the widgets
* Package name is used instead of ``your_project`` in the quickstart
  logging config.

Fixes
~~~~~

* Quickstart: an exception comes up if a user logs in but is not in
  a group that is required for access. The line with
  ``if not identity.current.anonymous and identity.was_login_attempted()``
  in controllers.py or root.py needs an additional
  ``and not identity.get_identity_errors()`` condition (#834).
* Quickstart projects that used identity would generate a table called "user",
  which is invalid for some databases. The new quickstart model.py generates
  tables called ``tg_user`` (#805).
* Quickstart: there were problems with the model template for SQLAlchemy
  (#801).
* SQLAlchemy's identity provider was not selected by default when you
  quickstart a new project (#806).
* Core widgets all include WidgetDescriptions now and appear in the
  Widget Browser in the Toolbox (#727).
* Access logging to a file wasn't working correctly (#816).
* Bug fix for convert/``from_python`` for compound and repeating widgets
* User name is now encoded to the DB encoding before a query is run
  in the SQLObject identity provider.
* JSLink widgets can now specify a location
* LocalizableJSLink (and the calendar widget) now work in IE (#846).
* Added scheduler to ``turbogears.__init__.__all__`` so that references
  to it work properly.
* tg-admin info and Toolbox info commands now work properly and show
  the same information.
* Fixed a serious bug in Python 2.3 compatibility (#853).

Project Updates
~~~~~~~~~~~~~~~

* MochiKit updated to 1.3.1 (#804)

Contributors
~~~~~~~~~~~~

Max Ischenko, Claudio Martinez, Matt Good, Rune Hansen, Michele Cella,
Jorge Godoy, Alberto Valverde González, Simon Belak, Jeroen Dekkers,
Mark Ramm-Christensen, Ronald Jaramillo,
Richard Standbrook, Roger Demetrescu, Patrick Lewis, Hal Wine,
Jorge Vargas, Bob Kuehne.


0.9a5 (April 26, 2006)
----------------------

Backwards Incompatibilities
~~~~~~~~~~~~~~~~~~~~~~~~~~~

* An identity login form must have a submit button having the name
  specified in the config file (identity.form.submit).  If you have a
  commented identity.form.submit value and used the default login.kid
  file, you will need to add ``name="login"`` to the login.kid submit
  button.
* In widgets, the base Widget class no longer supports a validator.
  If you need a validator you should use the InputWidget class
* In widgets, the display and the adjust_value methods have a slightly
  different signature (if you happen to use the "convert" parameter,
  you just need to use it as a keyword parameter and not a
  positional one).
* ``decorator()`` should be applied to the function accepting the function
  being decorated ("entangle" by convention), not the caller.
* Removed keyword argument "argsink" from decorator(),
  weak_signature_decorator() should be used instead.

Deprecations
~~~~~~~~~~~~

* In widgets, ``template_vars`` in widgets are now called ``params`` and
  ``options_for`` has been renamed ``params_for``.
* In widgets, the update_data method has been renamed update_params
* Identity has moved to PEP8 style naming. Changed userId, groupId, and
  permissionId to be user_name, group_name, and permission_name.
* ``visit_id`` has been deprecated in favor of ``visit_key``.
* SQL scripts to migrate PostgreSQL and MySQL identity databases are
  available (#737).

Features
~~~~~~~~

* Dramatically improved and unified logging configuration. Config files
  can now use the options in Python's logging module for log formats
  and output.
* TurboGears now includes an enhanced version of Irmen de Jong's
  Kronos scheduler, allowing you to schedule tasks that run in
  separate threads or processes periodically.
* For Python 2.3 users, there is a convenient new decorator syntax that
  comes from Phillip Eby's PEAK (see below).
* Added a new turbogears.start_server function which will help ease
  the transition to 1.1 *and* adds the ability to use Ian Bicking's
  EvalException. You must turn on tg.fancy_exception to use it
  at this point.
* In widgets, if the widget you are using provides a default validator,
  for example a SelectionWidget, you can tweak its parameters
  by just passing a dictionary of those parameters as validator
  (for example, ``validator=dict(not_empty=True)``).
* In widgets, every attribute listed inside params now supports callables
  automatically (the attribute will be called for computation at request
  time)
* Some improvements to the ImageButton widget
* More customization hooks for CheckBoxList, RadioButtonList, TableForm
  and ListForm
* Decimals are properly jsonified (#472).
* ``datetime.date`` instances are properly jsonified (#759).
* Commas are supported in number validation (#720).
* It's now possible to determine what permissions are required for
  a given controller method (#603).

This is the equivalent of ``@expose()`` in the new syntax mentioned above::

    [expose()]
    def index(self):
        pass

Changes
~~~~~~~

* Identity model classes are now placed directly into the model.py of
  a quickstarted project. This new setup is much easier to change,
  since requirements for the identity model vary dramatically. Another
  advantage is that quickstart projects that don't need identity
  start off with cleaner code, and projects that do need identity
  need almost no additional configuration or setup.
* Quickstart projects include a "json.py" file as a home for JSON
  view code.
* i18n "scan" command has been changed to "collect" to match the
  admi18n Toolbox tool
* If you quickstart a project while in an svn checkout, files are no
  longer automatically "svn add"ed. This corrects some problems that
  people ran into with that behavior.
* The "prod.cfg" file in quickstart projects is now called
  "sample-prod.cfg" to reflect that it is just used as a sample that
  you copy to your real production servers (#762).
* The various classes used to make dictionaries look like normal
  objects have been replaced by turbogears.util.Bunch (#779).

Fixes
~~~~~

* Model Designer can now handle joins to the same table (#769).
* Unicode values sent to the turbogears.url function are utf8 encoded.
* NotEmpty validator works with CheckBoxList now (#696).
* Grid widget's css has been improved to not interact with other
  widgets (#729, thanks to mark@cyberware).
* the "self" parameter is no longer accidentally removed by validation
* tg_format is properly stripped out for JSON requests (#740).
* calendar widget language fixes (many language files needed patching)
* DataController's float columns are properly converted (#707).
* str values in Kid templates are now assumed to be utf8 rather than
  ASCII (changeable via kid.encoding) (#743).
* The flash message set on the current request takes precedence over the
  one in the cookie (#747).
* py:match was being used in the default templates in a way that would
  drop the text from the first node (#785).
* AutoCompleteField widget's only_suggest now works correctly when
  there is only one item listed (#750).
* Lots of HTML cleanup.

Project Updates
~~~~~~~~~~~~~~~

* TurboGears now uses ConfigObj 4.3.0 for configuration
* MochiKit upgraded to 1.3
* simplejson upgraded to 1.3
* CherryPy upgraded to 2.2.1
* Kid upgraded to 0.9.1
* FormEncode upgraded to 0.5.1
* PasteScript upgraded to 0.5.1

Contributors
~~~~~~~~~~~~

Alberto Valverde González, Jeff Watkins, Max Ischenko, Michele Cella,
Simon Belak, Jorge Godoy, Patrick Lewis, Jorge Vargas, Joost Moesker,
Joseph Tate, Philip Walls, Bob Ippolito, Steve Bergman, Andrey Lebedev,
Brian Beck, Roger Demetrescu.


0.9a4 (April 5, 2006)
---------------------

Features
~~~~~~~~

* TableForm and ListForm both have new CSS classes "tableform" and
  "listform" and also have odd/even classes for the rows.

Fixes
~~~~~

* The 0.9a3 quickstart template was missing important __init__.py
  files in the distributed egg.


0.9a3 (April 4, 2006)
---------------------

Changes
~~~~~~~

* FastData is no longer included with the TurboGears core package. You can
  install it with TurboGears by easy_install-ing "TurboGears[exp]" instead
  of "TurboGears".

Features
~~~~~~~~

* You can find out if login was attempted during this request by calling
  ``identity.was_login_attempted``.
* Added tg.strict_parameters option that will cause an exception to be
  raised if extra parameters are passed to a controller method (#694).

Fixes
~~~~~

* Base template (eg "master.kid") now reload automatically when changed
  (#55).
* identity.Any was missing an ``error_message`` attribute (#667).
* Identity provides a more explicit error about wrong username/password
  (#616).
* CatWalk no longer has a problem changing more than one foreign key
  label in "manage columns" (#690).
* plain_gettext is now exported from the i18n package.
* DataGrid.column fields are supported by FastDataGrid (#706).
* The ``tg_errors`` variable sent to a controller now has the correct value
  even if the controller method doesn't have keyword arguments (#698).
* DBURIs with ``notrans_`` now work properly with tg-admin sql create (#702).
* Dutch and German calendar translations have been fixed #700.

Project Updates
~~~~~~~~~~~~~~~

* setuptools 0.6a11
* CherryPy 2.2.0
* SQLObject to 0.7.1dev-r1675

Contributors
~~~~~~~~~~~~

This update brought to you by Michele Cella, Jeff Watkins, Simon Davy,
Baruch Even, Simon Belak, Claudio Martinez, Max Ischenko, Jason Chu,
Roger Demetrescu, Joost Moesker, plus Phillip Eby for setuptools
and Remi Delon and the others working on CherryPy.


0.9a2 (March 27, 2006)
----------------------

Backwards Incompatibilities
~~~~~~~~~~~~~~~~~~~~~~~~~~~

* Due to Python 2.3 issues and some additional discussion, the config
  files have gone back to an INI-style format. This means that some
  minor changes are needed if you were using the 0.9 ".py" config files,
  but no changes are required for people using 0.8 ".cfg" config files.
  See the upgrading guide for details.
* If you used CompoundWidgets in 0.9a1, "widgets" has changed to
  "member_widgets".
* If you are using a Form or a FieldSet widget you must explicitly pass
  the "fields" parameter, the first positional parameter expected
  since 0.9a2 is "name".
* If you are using a Form or a FieldSet widget with a custom template
  you must update your template accordingly to the new templates
  TG is using.

Deprecations
~~~~~~~~~~~~

* WidgetsDeclaration (introduced in 0.9a1) has been renamed WidgetsList
  for clarity.
* turbogears.config now has get() and update() functions that should
  be used in place of their cherrypy.config counterparts. This change
  was made knowing that there will be more powerful, TurboGears-specific
  configuration in TurboGears 1.1.
* The field\_for method of a Form (introduced in 0.9a1) has been
  deprecated and it's use is highly discouraged and error prone,
  use display\_field\_for or render\_field\_for instead.
* In the turbogears.view module variableProviders has been renamed
  variable_providers.
* turbogears.fastdata.formmaker's sqlwidgets function (introduced in
  0.9a1) has been renamed fields_for.

*New Features*

* Controller methods can now have multiple expose() decorators, allowing
  you to define different output formats (even with different template
  engines) that can be chosen via tg_format or the Accept header.
* New AjaxGrid widget provides a grid in JavaScript that is populated via
  an Ajax call.
* Three new base widgets to manage forms have been introduced:
  CompoundFormField, RepeatingFormField and FormFieldsContainer.
* Experimental support for SQLAlchemy. For more complicated databases
  or certain database requirements, SQLAlchemy handles the database more
  gracefully. The main database layer for TurboGears remains SQLObject
  and SQLObject is more fully supported within TurboGears. However,
  for those who need it, SQLAlchemy support is there.
* display\_field\_for and render\_field\_for are automatically added to the
  template scope of any FormFieldsContainer widget and can be used to
  easily display/render a field with the corrects value and options.
* The basis for creating repeating sets of widgets has been created
  (see RepeatingFormField and RepeatingFieldSet for an example)
* Catwalk can filter the data you see
* When using widgets, you can now have more than one form on a page
  while retaining validation sanity.
* With widgets, required fields automatically get a CSS class
* CompoundWidgets/Forms now use FormEncode schemas, which provide
  a number of additional validation options.
* AutoCompleteFields can now pass an ID back to the server when
  submitted (instead of just passing the matching search string).
* Quickstart includes a "release.py" file where you can put your
  project information (including version number). This is the
  safe mechanism for allowing your project itself to access the
  version number while your setup script also has access to the
  same information (Don't Repeat Yourself)
* Quickstart has a new "tgbig" template designed for larger projects.
  This adds a controllers package to the basic TurboGears template.
* CSSLink and CSSSource widgets now support "media"
* The AutoCompleteField now has an "only_suggest" flag which makes
  it so that the first item on the list is not automatically submitted
  when you press return. This is useful for search boxes (as opposed
  to data entry fields).
* The turbogears.startup now contains call_on_startup and call_on_shutdown
  lists. You can append callables to these to have them executed at
  the right time.
* If you are using the i18n support, the _ function (alias of the
  gettext function) is now properly mapped to lazy_gettext if
  needed, this means you can use "_" for everything.
* Added LocalizableJSLink widget that allows scripts to be chosen based
  on the user's locale.

Changes
~~~~~~~

* log\_debug\_info\_filter is now turned off by default (this is the
  CherryPy filter that lists the request time). This filter causes
  problems with things like JSON output. You can still turn it
  back on via the config file.
* Unless you specifically configure the decodingFilter yourself,
  TurboGears will automatically turn on CherryPy's decodingFilter
  (expecting utf-8 input).
* ``cherrypy.lowercase_api`` is set to True in new quickstarted projects.
  This should result in a performance boost, and requires that you use
  PEP 8 style names when calling CherryPy APIs/config values.
* Table forms now use TH tags for the field labels, making it easier to
  apply appropriate styling to the tables.
* AutoConnectHub used to support a "processConnection" (something it
  inherited from SQLObject). This is not really a supported model of
  operation, so it has been removed. If you do want to work that way,
  use SQLObject's own ConnectionHub class.
* The ``test_model`` test has been commented out from the quickstart template,
  because some projects don't have databases.

Fixes
~~~~~

* The TextArea widget now posts properly within a RemoteForm.
* Catwalk styling cleanup
* Catwalk no longer has problems with empty tables with foreign keys
* ForEach validator added to turbogears.validators namespace
* Catwalk will show related joins in the edit view
* SQLObject identity provider passwords are automatically encrypted
  (this was in 0.9a1). This didn't work properly when identity wasn't
  fully running (as in the tg-admin shell). This has been fixed.
* The AutoCompleteField turns off the browser's own autocompletion.
* A nicer error message is provided if you return something other
  than a string or a dict from your controller method.
* admi18n does a better job of grouping files in the correct folder
  when collecting strings and skips over folders like ".svn".
* The turbogears.url() function was flipping around path elements
  in the application root. Applications roots are not commonly used
  right now, but this was noticeable if you used the FeedController.
* Various fixes for CatWalk's database access (#568, #249, #213, #618).
* ModelDesigner and admi18n can find your model.py file even if you
  change your package name at quickstart time.

Project Updates
~~~~~~~~~~~~~~~

* Kid 0.9 / TurboKid 0.9.2
* CherryPy 2.2.0rc1
* PasteScript 0.5
* TurboGears' JSON output now comes from the TurboJson plugin

Contributors
~~~~~~~~~~~~

This release comes to you thanks to the work of Michele Cella,
Elvelind Grandin, Ronald Jaramillo, Simon Belak, Jeff Watkins,
Alberto Valverde González, Jason Chu, Owen Mead-Robins,
Dan Weeks, Dennis Brakhane, Heikichi Umahara, Patrick Lewis,
Joost Moesker, Roger Demetrescu, Liza Daly.


0.9a1 (February 23, 2006)
-------------------------

Backwards Incompatibilities
~~~~~~~~~~~~~~~~~~~~~~~~~~~

* turbogears.expose no longer provides JSON by default. You need to
  turn on JSON via the config file or by the allow_json parameter
  to expose.
* The server.webpath configuration variable will not only properly set
  outgoing URLs, but will also "fix" incoming URLs if TurboGears is
  running as some path underneath another webserver. If you were
  previously running a CherryPy filter to handle this, you no longer
  need to.
* Directories of static files need an absolute path. The new configuration
  file format makes it easy to provide an absolute path without
  truly being tied to that path.
* Previously, if you were using a FormEncode Schema for validation for
  an exposed method, validation would fail if a value was missing but
  the method had a default value for that parameter. Now, if that value
  is missing, the method will get called with the default just as it
  is normally called in Python.

Deprecations
~~~~~~~~~~~~

* In templates the "std" object that holds common values and functions
  has been changed to "tg".
* ``turbogears.controllers.Root`` has now become
  ``turbogears.controllers.RootController`` for clarity's sake. ``Root``
  continues to work, but its use is deprecated.
* Error handling has been greatly improved. Use of the validation_error
  method has been deprecated. It will still be called if it
  exists, but a DeprecationWarning will be displayed.
* turbogears.tests.util has been moved to turbogears.testutil
* CherryPy has switched to PEP8-style names for things. The old names
  still work. However, they are deprecated.
* ``expose(html=...)`` is now deprecated in favor for ``expose(template=...)``.
* The old config file format is deprecated in favor of the new Python
  module format.

Features
~~~~~~~~

* The TurboGears Toolbox wraps a number of useful tools in one web
  interface. The toolbox can be extended with additional tools. Run
  the Toolbox with tg-admin toolbox.
* CatWalk model/database browser is now part of the TurboGears Toolbox.
  Thanks to Ronald Jaramillo.
* There's a new "widgets" package that lets you easily create forms
  with sophisticated and dynamic behavior, all built from reusable
  components.
* Identity management and access control now provided via
  turbogears.identity module. Includes basic classes for User, Group,
  and Permission objects via turbogears.identity.model. Thanks to
  Jeff Watkins.
* There is a new internationalization package that allows you to use
  to conveniently localize your application via gettext. Thanks to
  Dan Jacob.
* Internationalization can be managed via the Toolbox (thanks to
  Ronald Jaramillo) or the command line (thanks to Max Ischenko).
* Each request is implicitly wrapped in a Transaction. This solves
  caching issues and reduces boilerplate code. It also helps codify
  a best practice so that bad data does not end up in your database.
* Error handling for a method can be specified with an error_handler
  decorator thanks to Simon Belak.
* TurboGears now has a feed object that can generate rss2.0, atom0.3
  and atom1.0 feeds
* Template encodings other than utf-8 can be selected with the new
  kid.encoding variable
* tg-admin now uses PasteScript and can now supports user specific templates
* tg-admin now have a update command
* TurboGears is now compatible with Python 2.3, thanks to Paul Clifford.
* TurboGears supports plugins for template engines, tg-admin commands
* A plugin for Cheetah templates has been released separately
* TurboGears now uses nose for testing
* Templates can now be specified relative to the current package by
  preceding the template name with ".". For example, if you have a
  controller in "yourpackage" with templates in a package under that
  package, you can use "yourpackage.templates.templatename" *or*
  ".templates.templatename". Thanks to David Bernard.
* New commands can be added to tg-admin via the turbogears.command
  entry point. Thanks to Elvelind Grandin.
* Controllers that subclass controllers.Controller (including the
  standard RootController) can automatically use positional
  parameters for the methods. This means that "/entry/MONTH/DAY/YEAR"
  can be interpreted easily by a method entry(self, month, day, year).
* MochiKit can now be included in your final HTML output by putting
  turbogears.mochikit in your output dictionary (it doesn't matter
  what the key assigned is). The advantage to doing this is that it
  helps to ensure that MochiKit is included only once, even if you're
  using widgets that require it.
* MochiKit can be enabled everywhere by setting tg.mochikit_all to
  True in your config file.
* Added new "cycle" object to std in template usage. This makes it
  easy to cycle through a number of values (and it also lets you
  retrieve the current value). This is useful for things like
  even and odd row classes, etc. Thanks to Karl Guertin.
* You can send a random value in to the controller (tg_random) that
  will be automatically thrown out to get around issues with
  Internet Explorer caching data too aggressively.
* The expose decorator has been split into input and output functions.
  expose continues to handle output, and the new validate decorator
  handles input (validation and form handling). This new setup makes it
  easier to mix in your own decorators if you need to.
* Added turbogears.redirect which wraps the cherrypy.HTTPRedirect
  exception to automatically call turbogears.url to help ensure
  properly formatted URLs. You can either call turbogears.redirect
  or "raise turbogears.redirect" if that makes the intent clearer
  to you (as happens with the existing usage of cherrypy.HTTPRedirect)
* There is a new configuration file format that are slightly specialized
  Python modules. This allows you to run Python code to determine your
  configuration.
* You can now specify that you're generating a fragment of a page
  (rather than an entire page) at expose time by passing
  fragment=True in to expose. This is useful if you want Kid to
  generate part of a page for an XMLHttpRequest, for example.
* There's a new validator, JSONValidator, that reads/writes JSON,
  which is convenient for parameters that are coming in via JSON.
* New test stuff (expand).
* There is now a tg-admin info command that shows all the version info for
  the TuboGears components.
* TurboGears now supports SQLAlchemy -- the unit-of-work is committed after
  a successful controller request. You can use the PackageEngine to load a
  dburi based on your package or the default ``sqlalchemy.dburi``.

Fixes
~~~~~

* setup.py tests for Python 2.4 (thanks to Elvelind Grandin for the
  idea and Bob Ippolito for the simplest implementation possible)
* Base templates reload automatically (thanks to David Stanek).
  (Note: This ticket has been reopened.
  Support for this is experimental until the issues are ironed out.)
* Kid no longer puts blank space in textareas.
* turbogears.flash handles unicode values properly

Project Updates
~~~~~~~~~~~~~~~

* replaced json-py with Bob Ippolito's simple_json
* the RuleDispatch package is new to TurboGears
* TurboGears has moved to CherryPy 2.2, which is not yet stable. We will
  use the most stable snapshots possible in TurboGears 0.9 releases.
* MochiKit upgraded to 1.2
* setuptools upgraded to 0.6a10

Contributors
~~~~~~~~~~~~

The following people made this release possible:

Elvelind Grandin, Ronald Jaramillo, Jeff Watkins, Dan Jacob, David Stanek,
Jared Kuolt, Paul Clifford, Lee McFadden, Michele Cella, Karl Guertin,
Max Ischenko, Mark Godfrey, Simon Belak, Jorge Godoy, Patrick Lewis,
Joey Smith, David Bernard, Simon Davy, Gary Godfrey, Jason Chu,
Liza Daly, Ryan Forsythe, Jeremy Jones, Egor Cheshkov, Claudio Martinez,
Leandro Lucarella, Bob Ippolito, Alberto Valverde González,
Brian Bockelman, Stephen Thorne, Robin Bryce, Ksenia Marasanova,
Ori Avtalion, Martina Oefelein, Ian Bicking, Rick Richardson,
Luis Bruno, Joost Moesker, Björn Lindqvist.

A special thanks to Cliff Wells of Develix for sponsoring a bug bounty!


0.8.9 (February 6, 2006)
------------------------

* Fixes a warning message that appears with each quickstart.


0.8.8 (January 10, 2006)
------------------------

* A security flaw was discovered in CherryPy's static filter. This
  TurboGears update changes the CherryPy requirement to 2.1.1.


0.8.7 (January 4, 2006)
-----------------------

This update primarily solves installation issues and is not required
otherwise.

* Quickstart corrected to properly produce egg-info directories
  (previously, directories could be created with "-" when it should
  have a "_"). Note that setuptools 0.6a9 will warn you if you have
  a - in your egg-info directory name. Just rename the directory,
  and you'll be fine.
* Installation issues that people may have had earlier are resolved
  in this setuptools update.
* version number set to 0.8.7 to reflect that this is considered the
  "stable" version of TurboGears vs. the current 0.9 code in svn.

Project Updates
~~~~~~~~~~~~~~~

* setuptools 0.6a9
* SQLObject 0.7.1dev_r1457 (updated to handle the setuptools change,
  but also includes other bugfixes)


0.8a6 (December 26, 2005)
-------------------------

* Chained validators will now cause an Invalid exception to be raised
  as appropriate.
* When validation would fail, previously an unexpected exception may
  be raised when an Invalid exception is expected
* Quickstart didn't look out for .pyo files in the same way that it did
  .pyc files.

Project Updates
~~~~~~~~~~~~~~~

* json-py updated to 3.4


0.8a5 (December 2, 2005)
------------------------

* setup has been changed to ensure that people properly
  get the CherryPy 2.1 release version.

Project Updates
~~~~~~~~~~~~~~~

* Kid updated to 0.8.0
* MochiKit updated to 1.1
* FormEncode updated to 0.4
* setuptools updated to 0.6a8


0.8a4 (October 25, 2005)
------------------------

Project Updates
~~~~~~~~~~~~~~~

* setuptools 0.6a6
* CherryPy 2.1 final
* MochiKit 1.0

Fixes
~~~~~

* On some servers, TurboGears can take a minute to start answering
  connections due to the way the OS handles incoming connections to
  ports that have nothing listening on them.


0.8a3 (October 16, 2005)
------------------------

Fixes
~~~~~

* setup.py was not using setup_requires in a productive way. This has
  been changed, so tg-admin quickstart will no longer need to
  go to the internet to function.
* ``turbogears.database.set_db_uri`` was not properly putting the setting
  in the global config section. By Robert Leftwich.
* Some people have had trouble with the url function not being able to
  find cherrypy.request.approot. This may be due to older classes that
  do not extend controllers.Root. This was not listed as a
  requirement for the URL function. The documentation for the
  url function has been updated, and the code has been updated
  to always set the approot to the top of the site at least.


0.8a2 (October 14, 2005)
------------------------

Fixes
~~~~~

* ``tg-admin quickstart`` was missing the appropriate egg-info for the sql
  commands to work properly


0.8a1 (October 12, 2005)
------------------------

Backwards Incompatibilities
~~~~~~~~~~~~~~~~~~~~~~~~~~~

* All of the ``turbogears*`` variables have been changed to ``tg_*``.
  These are ``tg_template``, ``tg_format``, ``tg_flash`` and ``tg_js``.
  (Note that ``turbogearsfmt`` has become ``tg_format`` and ``turbogearshtml``
  has become ``tg_template``.)
* The ``StringBoolean`` validator (which has moved into FormEncode proper)
  now returns strings for ``from_python``. For example, ``from_python(True)``
  now returns ``'true'``. It used to return ``True``.
* ``turbogears-admin.py`` is now called ``tg-admin`` and is automatically
  generated by setuptools.
* The ``tg-admin sql`` commands now require a properly setup .egg-info
  directory to automatically find the model classes. If the egg info
  is not properly set up, the command can fix it automatically.
* The view.render method's ``html`` parameter has been renamed ``template``
  to reflect that the templates might be for XML presentations. Most
  people don't call view.render directly.

New Features
~~~~~~~~~~~~

* There is a new PackageHub that is designed to allow different parts
  of a site to use different databases. Use of the PackageHub works
  just like the AutoConnectHub.
* Added a new function: turbogears.database.set_db_uri. This is a
  more pleasant wrapper around the CherryPy config variables that
  can be used in command line tools and the like.
* IPython is used in tg-admin shell, if it's available. By David Guaraglia.
* You can specify a default format via the new format parameter
  to expose. For example, expose(format="json") will cause the
  method to output JSON by default, even if HTML is available.
  By Elvelind Grandin.
* You can specify the Content-Type via expose. Example:
  expose(content_type="text/javascript"). By Elvelind Grandin.
* expose now has a "template" parameter that can be used in place
  of "html". This is more pleasant for non-HTML applications.
* On Macs, if you're running in development mode the server will
  be advertised via Bonjour. If you enable Bonjour bookmarks
  (via the Bookmarks Preferences tab in Safari), you'll see your
  development server show up automatically. By Bob Ippolito.
* There is now a url function that can be used to generate URLs
  conveniently and, more importantly, with an appropriate view
  of where the root of the web application is.
* Validators can now be specified with a dict (the 0.5 way) or with a
  FormEncode Schema, which provides more options. By Fabian Neumann.
* Quickstart now provides a basic static files skeleton. By
  Elvelind Grandin.
* Added config setting to determine Kid's output format (HTML/XHTML).
  By Fabian Neumann.
* In quickstart, project-start.py now takes a config file on the
  command line. By Elvelind Grandin.
* ``project-start.py`` is also made executable automatically. By
  Fabian Neumann.
* Added turbogears.tests.util.call function to allow you to call a
  controller method and get the dictionary back without processing
  to HTML or JSON. This allows you to test controller logic independent
  of presentation.

Project Updates
~~~~~~~~~~~~~~~

* setuptools updated to 0.6a5
* SQLObject updated to 0.7 final
* FormEncode updated to 0.2.3dev-r1108
* CherryPy updated to 2.1-rc2
* MochiKit updated to 0.9
* Kid updated to 0.7adev-r186

Notable Improvements in the Projects
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Kid can now generate plain text output using the PlainSerializer.

Fixes
~~~~~

* All of the sqlobject-admin commands now work through the use of
  egg metadata.
* If a template was specified in the returned dictionary from an
  exposed method, but not in the parameters to expose itself,
  that template was not applied. By Ronald Jaramillo.
* The content-type meta tag in the quickstart files is now automatically
  stripped out, because Kid's HTML serializer puts one in.
* Improved comments in the quickstart config files.
* There is a temporary hack to handle threadsafety issues with sqlite.
  This has been changed to *only* affect sqlite.
* JSON output should work for Opera now (Opera appeared to have a
  problem with the text/javascript content-type and utf-8 encoding.)
  By "Lethalman".
* All files needed for a project to install and run from an egg should
  be installed properly based on the quickstart setup script.
* The flash cookie was not always deleted. Setting the path on the
  cookie corrected this. By Nick.


0.5.1 (September 17, 2005)
--------------------------

Relaxed version requirements and changed version numbering for
included ElementTree packages to ease installation troubles.


0.5.0 (September 17, 2005)
--------------------------

* Initial public release.
