# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageIntensityPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMaskImageFilterPython
else:
    import _itkMaskImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkMaskImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkMaskImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkPointPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.ITKCommonBasePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkBinaryGeneratorImageFilterPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterBPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterAPython
import itk.itkInPlaceImageFilterBPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkArrayPython

def itkMaskImageFilterICF2ISS2ICF2_New():
    return itkMaskImageFilterICF2ISS2ICF2.New()

class itkMaskImageFilterICF2ISS2ICF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ISS2ICF2):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2ISS2ICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2ISS2ICF2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2ISS2ICF2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2ISS2ICF2_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2ISS2ICF2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2ISS2ICF2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2ISS2ICF2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2ISS2ICF2_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF2ISS2ICF2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF2ISS2ICF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICF2ISS2ICF2
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2ISS2ICF2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICF2ISS2ICF2

        Create a new object of the class itkMaskImageFilterICF2ISS2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICF2ISS2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICF2ISS2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICF2ISS2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICF2ISS2ICF2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICF2ISS2ICF2_swigregister(itkMaskImageFilterICF2ISS2ICF2)
itkMaskImageFilterICF2ISS2ICF2___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterICF2ISS2ICF2___New_orig__
itkMaskImageFilterICF2ISS2ICF2_cast = _itkMaskImageFilterPython.itkMaskImageFilterICF2ISS2ICF2_cast


def itkMaskImageFilterICF2IUC2ICF2_New():
    return itkMaskImageFilterICF2IUC2ICF2.New()

class itkMaskImageFilterICF2IUC2ICF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUC2ICF2):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2IUC2ICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2IUC2ICF2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2IUC2ICF2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2IUC2ICF2_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2IUC2ICF2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2IUC2ICF2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2IUC2ICF2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2IUC2ICF2_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF2IUC2ICF2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF2IUC2ICF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICF2IUC2ICF2
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2IUC2ICF2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICF2IUC2ICF2

        Create a new object of the class itkMaskImageFilterICF2IUC2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICF2IUC2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICF2IUC2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICF2IUC2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICF2IUC2ICF2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICF2IUC2ICF2_swigregister(itkMaskImageFilterICF2IUC2ICF2)
itkMaskImageFilterICF2IUC2ICF2___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterICF2IUC2ICF2___New_orig__
itkMaskImageFilterICF2IUC2ICF2_cast = _itkMaskImageFilterPython.itkMaskImageFilterICF2IUC2ICF2_cast


def itkMaskImageFilterICF2IUS2ICF2_New():
    return itkMaskImageFilterICF2IUS2ICF2.New()

class itkMaskImageFilterICF2IUS2ICF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUS2ICF2):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2IUS2ICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2IUS2ICF2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2IUS2ICF2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2IUS2ICF2_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2IUS2ICF2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2IUS2ICF2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2IUS2ICF2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2IUS2ICF2_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF2IUS2ICF2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF2IUS2ICF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICF2IUS2ICF2
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICF2IUS2ICF2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICF2IUS2ICF2

        Create a new object of the class itkMaskImageFilterICF2IUS2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICF2IUS2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICF2IUS2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICF2IUS2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICF2IUS2ICF2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICF2IUS2ICF2_swigregister(itkMaskImageFilterICF2IUS2ICF2)
itkMaskImageFilterICF2IUS2ICF2___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterICF2IUS2ICF2___New_orig__
itkMaskImageFilterICF2IUS2ICF2_cast = _itkMaskImageFilterPython.itkMaskImageFilterICF2IUS2ICF2_cast


def itkMaskImageFilterICF3ISS3ICF3_New():
    return itkMaskImageFilterICF3ISS3ICF3.New()

class itkMaskImageFilterICF3ISS3ICF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ISS3ICF3):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3ISS3ICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3ISS3ICF3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3ISS3ICF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3ISS3ICF3_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3ISS3ICF3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3ISS3ICF3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3ISS3ICF3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3ISS3ICF3_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF3ISS3ICF3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF3ISS3ICF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICF3ISS3ICF3
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3ISS3ICF3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICF3ISS3ICF3

        Create a new object of the class itkMaskImageFilterICF3ISS3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICF3ISS3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICF3ISS3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICF3ISS3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICF3ISS3ICF3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICF3ISS3ICF3_swigregister(itkMaskImageFilterICF3ISS3ICF3)
itkMaskImageFilterICF3ISS3ICF3___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterICF3ISS3ICF3___New_orig__
itkMaskImageFilterICF3ISS3ICF3_cast = _itkMaskImageFilterPython.itkMaskImageFilterICF3ISS3ICF3_cast


def itkMaskImageFilterICF3IUC3ICF3_New():
    return itkMaskImageFilterICF3IUC3ICF3.New()

class itkMaskImageFilterICF3IUC3ICF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUC3ICF3):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3IUC3ICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3IUC3ICF3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3IUC3ICF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3IUC3ICF3_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3IUC3ICF3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3IUC3ICF3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3IUC3ICF3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3IUC3ICF3_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF3IUC3ICF3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF3IUC3ICF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICF3IUC3ICF3
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3IUC3ICF3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICF3IUC3ICF3

        Create a new object of the class itkMaskImageFilterICF3IUC3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICF3IUC3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICF3IUC3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICF3IUC3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICF3IUC3ICF3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICF3IUC3ICF3_swigregister(itkMaskImageFilterICF3IUC3ICF3)
itkMaskImageFilterICF3IUC3ICF3___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterICF3IUC3ICF3___New_orig__
itkMaskImageFilterICF3IUC3ICF3_cast = _itkMaskImageFilterPython.itkMaskImageFilterICF3IUC3ICF3_cast


def itkMaskImageFilterICF3IUS3ICF3_New():
    return itkMaskImageFilterICF3IUS3ICF3.New()

class itkMaskImageFilterICF3IUS3ICF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUS3ICF3):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3IUS3ICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3IUS3ICF3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3IUS3ICF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3IUS3ICF3_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3IUS3ICF3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3IUS3ICF3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3IUS3ICF3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3IUS3ICF3_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF3IUS3ICF3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF3IUS3ICF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICF3IUS3ICF3
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICF3IUS3ICF3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICF3IUS3ICF3

        Create a new object of the class itkMaskImageFilterICF3IUS3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICF3IUS3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICF3IUS3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICF3IUS3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICF3IUS3ICF3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICF3IUS3ICF3_swigregister(itkMaskImageFilterICF3IUS3ICF3)
itkMaskImageFilterICF3IUS3ICF3___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterICF3IUS3ICF3___New_orig__
itkMaskImageFilterICF3IUS3ICF3_cast = _itkMaskImageFilterPython.itkMaskImageFilterICF3IUS3ICF3_cast


def itkMaskImageFilterICVF22ISS2ICVF22_New():
    return itkMaskImageFilterICVF22ISS2ICVF22.New()

class itkMaskImageFilterICVF22ISS2ICVF22(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22ISS2ICVF22):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22ISS2ICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22ISS2ICVF22_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22ISS2ICVF22_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22ISS2ICVF22_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22ISS2ICVF22_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22ISS2ICVF22_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22ISS2ICVF22_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22ISS2ICVF22_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF22ISS2ICVF22_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF22ISS2ICVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF22ISS2ICVF22
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22ISS2ICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF22ISS2ICVF22

        Create a new object of the class itkMaskImageFilterICVF22ISS2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF22ISS2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF22ISS2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF22ISS2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF22ISS2ICVF22 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF22ISS2ICVF22_swigregister(itkMaskImageFilterICVF22ISS2ICVF22)
itkMaskImageFilterICVF22ISS2ICVF22___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterICVF22ISS2ICVF22___New_orig__
itkMaskImageFilterICVF22ISS2ICVF22_cast = _itkMaskImageFilterPython.itkMaskImageFilterICVF22ISS2ICVF22_cast


def itkMaskImageFilterICVF22IUC2ICVF22_New():
    return itkMaskImageFilterICVF22IUC2ICVF22.New()

class itkMaskImageFilterICVF22IUC2ICVF22(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUC2ICVF22):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22IUC2ICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22IUC2ICVF22_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22IUC2ICVF22_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22IUC2ICVF22_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22IUC2ICVF22_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22IUC2ICVF22_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22IUC2ICVF22_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22IUC2ICVF22_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUC2ICVF22_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUC2ICVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF22IUC2ICVF22
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22IUC2ICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF22IUC2ICVF22

        Create a new object of the class itkMaskImageFilterICVF22IUC2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF22IUC2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF22IUC2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF22IUC2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF22IUC2ICVF22 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF22IUC2ICVF22_swigregister(itkMaskImageFilterICVF22IUC2ICVF22)
itkMaskImageFilterICVF22IUC2ICVF22___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUC2ICVF22___New_orig__
itkMaskImageFilterICVF22IUC2ICVF22_cast = _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUC2ICVF22_cast


def itkMaskImageFilterICVF22IUS2ICVF22_New():
    return itkMaskImageFilterICVF22IUS2ICVF22.New()

class itkMaskImageFilterICVF22IUS2ICVF22(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUS2ICVF22):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22IUS2ICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22IUS2ICVF22_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22IUS2ICVF22_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22IUS2ICVF22_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22IUS2ICVF22_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22IUS2ICVF22_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22IUS2ICVF22_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22IUS2ICVF22_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUS2ICVF22_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUS2ICVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF22IUS2ICVF22
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF22IUS2ICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF22IUS2ICVF22

        Create a new object of the class itkMaskImageFilterICVF22IUS2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF22IUS2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF22IUS2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF22IUS2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF22IUS2ICVF22 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF22IUS2ICVF22_swigregister(itkMaskImageFilterICVF22IUS2ICVF22)
itkMaskImageFilterICVF22IUS2ICVF22___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUS2ICVF22___New_orig__
itkMaskImageFilterICVF22IUS2ICVF22_cast = _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUS2ICVF22_cast


def itkMaskImageFilterICVF23ISS3ICVF23_New():
    return itkMaskImageFilterICVF23ISS3ICVF23.New()

class itkMaskImageFilterICVF23ISS3ICVF23(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23ISS3ICVF23):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23ISS3ICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23ISS3ICVF23_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23ISS3ICVF23_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23ISS3ICVF23_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23ISS3ICVF23_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23ISS3ICVF23_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23ISS3ICVF23_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23ISS3ICVF23_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF23ISS3ICVF23_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF23ISS3ICVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF23ISS3ICVF23
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23ISS3ICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF23ISS3ICVF23

        Create a new object of the class itkMaskImageFilterICVF23ISS3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF23ISS3ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF23ISS3ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF23ISS3ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF23ISS3ICVF23 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF23ISS3ICVF23_swigregister(itkMaskImageFilterICVF23ISS3ICVF23)
itkMaskImageFilterICVF23ISS3ICVF23___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterICVF23ISS3ICVF23___New_orig__
itkMaskImageFilterICVF23ISS3ICVF23_cast = _itkMaskImageFilterPython.itkMaskImageFilterICVF23ISS3ICVF23_cast


def itkMaskImageFilterICVF23IUC3ICVF23_New():
    return itkMaskImageFilterICVF23IUC3ICVF23.New()

class itkMaskImageFilterICVF23IUC3ICVF23(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUC3ICVF23):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23IUC3ICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23IUC3ICVF23_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23IUC3ICVF23_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23IUC3ICVF23_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23IUC3ICVF23_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23IUC3ICVF23_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23IUC3ICVF23_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23IUC3ICVF23_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUC3ICVF23_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUC3ICVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF23IUC3ICVF23
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23IUC3ICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF23IUC3ICVF23

        Create a new object of the class itkMaskImageFilterICVF23IUC3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF23IUC3ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF23IUC3ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF23IUC3ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF23IUC3ICVF23 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF23IUC3ICVF23_swigregister(itkMaskImageFilterICVF23IUC3ICVF23)
itkMaskImageFilterICVF23IUC3ICVF23___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUC3ICVF23___New_orig__
itkMaskImageFilterICVF23IUC3ICVF23_cast = _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUC3ICVF23_cast


def itkMaskImageFilterICVF23IUS3ICVF23_New():
    return itkMaskImageFilterICVF23IUS3ICVF23.New()

class itkMaskImageFilterICVF23IUS3ICVF23(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUS3ICVF23):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23IUS3ICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23IUS3ICVF23_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23IUS3ICVF23_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23IUS3ICVF23_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23IUS3ICVF23_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23IUS3ICVF23_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23IUS3ICVF23_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23IUS3ICVF23_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUS3ICVF23_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUS3ICVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF23IUS3ICVF23
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF23IUS3ICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF23IUS3ICVF23

        Create a new object of the class itkMaskImageFilterICVF23IUS3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF23IUS3ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF23IUS3ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF23IUS3ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF23IUS3ICVF23 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF23IUS3ICVF23_swigregister(itkMaskImageFilterICVF23IUS3ICVF23)
itkMaskImageFilterICVF23IUS3ICVF23___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUS3ICVF23___New_orig__
itkMaskImageFilterICVF23IUS3ICVF23_cast = _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUS3ICVF23_cast


def itkMaskImageFilterICVF32ISS2ICVF32_New():
    return itkMaskImageFilterICVF32ISS2ICVF32.New()

class itkMaskImageFilterICVF32ISS2ICVF32(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32ISS2ICVF32):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32ISS2ICVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32ISS2ICVF32_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32ISS2ICVF32_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32ISS2ICVF32_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32ISS2ICVF32_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32ISS2ICVF32_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32ISS2ICVF32_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32ISS2ICVF32_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF32ISS2ICVF32_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF32ISS2ICVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF32ISS2ICVF32
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32ISS2ICVF32_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF32ISS2ICVF32

        Create a new object of the class itkMaskImageFilterICVF32ISS2ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF32ISS2ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF32ISS2ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF32ISS2ICVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF32ISS2ICVF32 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF32ISS2ICVF32_swigregister(itkMaskImageFilterICVF32ISS2ICVF32)
itkMaskImageFilterICVF32ISS2ICVF32___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterICVF32ISS2ICVF32___New_orig__
itkMaskImageFilterICVF32ISS2ICVF32_cast = _itkMaskImageFilterPython.itkMaskImageFilterICVF32ISS2ICVF32_cast


def itkMaskImageFilterICVF32IUC2ICVF32_New():
    return itkMaskImageFilterICVF32IUC2ICVF32.New()

class itkMaskImageFilterICVF32IUC2ICVF32(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUC2ICVF32):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32IUC2ICVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32IUC2ICVF32_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32IUC2ICVF32_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32IUC2ICVF32_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32IUC2ICVF32_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32IUC2ICVF32_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32IUC2ICVF32_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32IUC2ICVF32_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUC2ICVF32_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUC2ICVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF32IUC2ICVF32
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32IUC2ICVF32_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF32IUC2ICVF32

        Create a new object of the class itkMaskImageFilterICVF32IUC2ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF32IUC2ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF32IUC2ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF32IUC2ICVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF32IUC2ICVF32 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF32IUC2ICVF32_swigregister(itkMaskImageFilterICVF32IUC2ICVF32)
itkMaskImageFilterICVF32IUC2ICVF32___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUC2ICVF32___New_orig__
itkMaskImageFilterICVF32IUC2ICVF32_cast = _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUC2ICVF32_cast


def itkMaskImageFilterICVF32IUS2ICVF32_New():
    return itkMaskImageFilterICVF32IUS2ICVF32.New()

class itkMaskImageFilterICVF32IUS2ICVF32(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUS2ICVF32):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32IUS2ICVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32IUS2ICVF32_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32IUS2ICVF32_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32IUS2ICVF32_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32IUS2ICVF32_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32IUS2ICVF32_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32IUS2ICVF32_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32IUS2ICVF32_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUS2ICVF32_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUS2ICVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF32IUS2ICVF32
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF32IUS2ICVF32_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF32IUS2ICVF32

        Create a new object of the class itkMaskImageFilterICVF32IUS2ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF32IUS2ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF32IUS2ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF32IUS2ICVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF32IUS2ICVF32 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF32IUS2ICVF32_swigregister(itkMaskImageFilterICVF32IUS2ICVF32)
itkMaskImageFilterICVF32IUS2ICVF32___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUS2ICVF32___New_orig__
itkMaskImageFilterICVF32IUS2ICVF32_cast = _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUS2ICVF32_cast


def itkMaskImageFilterICVF33ISS3ICVF33_New():
    return itkMaskImageFilterICVF33ISS3ICVF33.New()

class itkMaskImageFilterICVF33ISS3ICVF33(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33ISS3ICVF33):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33ISS3ICVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33ISS3ICVF33_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33ISS3ICVF33_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33ISS3ICVF33_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33ISS3ICVF33_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33ISS3ICVF33_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33ISS3ICVF33_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33ISS3ICVF33_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF33ISS3ICVF33_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF33ISS3ICVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF33ISS3ICVF33
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33ISS3ICVF33_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF33ISS3ICVF33

        Create a new object of the class itkMaskImageFilterICVF33ISS3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF33ISS3ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF33ISS3ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF33ISS3ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF33ISS3ICVF33 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF33ISS3ICVF33_swigregister(itkMaskImageFilterICVF33ISS3ICVF33)
itkMaskImageFilterICVF33ISS3ICVF33___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterICVF33ISS3ICVF33___New_orig__
itkMaskImageFilterICVF33ISS3ICVF33_cast = _itkMaskImageFilterPython.itkMaskImageFilterICVF33ISS3ICVF33_cast


def itkMaskImageFilterICVF33IUC3ICVF33_New():
    return itkMaskImageFilterICVF33IUC3ICVF33.New()

class itkMaskImageFilterICVF33IUC3ICVF33(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUC3ICVF33):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33IUC3ICVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33IUC3ICVF33_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33IUC3ICVF33_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33IUC3ICVF33_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33IUC3ICVF33_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33IUC3ICVF33_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33IUC3ICVF33_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33IUC3ICVF33_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUC3ICVF33_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUC3ICVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF33IUC3ICVF33
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33IUC3ICVF33_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF33IUC3ICVF33

        Create a new object of the class itkMaskImageFilterICVF33IUC3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF33IUC3ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF33IUC3ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF33IUC3ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF33IUC3ICVF33 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF33IUC3ICVF33_swigregister(itkMaskImageFilterICVF33IUC3ICVF33)
itkMaskImageFilterICVF33IUC3ICVF33___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUC3ICVF33___New_orig__
itkMaskImageFilterICVF33IUC3ICVF33_cast = _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUC3ICVF33_cast


def itkMaskImageFilterICVF33IUS3ICVF33_New():
    return itkMaskImageFilterICVF33IUS3ICVF33.New()

class itkMaskImageFilterICVF33IUS3ICVF33(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUS3ICVF33):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33IUS3ICVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33IUS3ICVF33_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33IUS3ICVF33_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33IUS3ICVF33_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33IUS3ICVF33_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33IUS3ICVF33_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33IUS3ICVF33_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33IUS3ICVF33_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUS3ICVF33_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUS3ICVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF33IUS3ICVF33
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF33IUS3ICVF33_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF33IUS3ICVF33

        Create a new object of the class itkMaskImageFilterICVF33IUS3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF33IUS3ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF33IUS3ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF33IUS3ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF33IUS3ICVF33 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF33IUS3ICVF33_swigregister(itkMaskImageFilterICVF33IUS3ICVF33)
itkMaskImageFilterICVF33IUS3ICVF33___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUS3ICVF33___New_orig__
itkMaskImageFilterICVF33IUS3ICVF33_cast = _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUS3ICVF33_cast


def itkMaskImageFilterICVF42ISS2ICVF42_New():
    return itkMaskImageFilterICVF42ISS2ICVF42.New()

class itkMaskImageFilterICVF42ISS2ICVF42(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42ISS2ICVF42):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42ISS2ICVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42ISS2ICVF42_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42ISS2ICVF42_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42ISS2ICVF42_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42ISS2ICVF42_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42ISS2ICVF42_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42ISS2ICVF42_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42ISS2ICVF42_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF42ISS2ICVF42_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF42ISS2ICVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF42ISS2ICVF42
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42ISS2ICVF42_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF42ISS2ICVF42

        Create a new object of the class itkMaskImageFilterICVF42ISS2ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF42ISS2ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF42ISS2ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF42ISS2ICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF42ISS2ICVF42 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF42ISS2ICVF42_swigregister(itkMaskImageFilterICVF42ISS2ICVF42)
itkMaskImageFilterICVF42ISS2ICVF42___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterICVF42ISS2ICVF42___New_orig__
itkMaskImageFilterICVF42ISS2ICVF42_cast = _itkMaskImageFilterPython.itkMaskImageFilterICVF42ISS2ICVF42_cast


def itkMaskImageFilterICVF42IUC2ICVF42_New():
    return itkMaskImageFilterICVF42IUC2ICVF42.New()

class itkMaskImageFilterICVF42IUC2ICVF42(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUC2ICVF42):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42IUC2ICVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42IUC2ICVF42_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42IUC2ICVF42_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42IUC2ICVF42_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42IUC2ICVF42_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42IUC2ICVF42_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42IUC2ICVF42_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42IUC2ICVF42_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUC2ICVF42_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUC2ICVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF42IUC2ICVF42
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42IUC2ICVF42_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF42IUC2ICVF42

        Create a new object of the class itkMaskImageFilterICVF42IUC2ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF42IUC2ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF42IUC2ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF42IUC2ICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF42IUC2ICVF42 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF42IUC2ICVF42_swigregister(itkMaskImageFilterICVF42IUC2ICVF42)
itkMaskImageFilterICVF42IUC2ICVF42___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUC2ICVF42___New_orig__
itkMaskImageFilterICVF42IUC2ICVF42_cast = _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUC2ICVF42_cast


def itkMaskImageFilterICVF42IUS2ICVF42_New():
    return itkMaskImageFilterICVF42IUS2ICVF42.New()

class itkMaskImageFilterICVF42IUS2ICVF42(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUS2ICVF42):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42IUS2ICVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42IUS2ICVF42_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42IUS2ICVF42_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42IUS2ICVF42_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42IUS2ICVF42_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42IUS2ICVF42_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42IUS2ICVF42_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42IUS2ICVF42_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUS2ICVF42_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUS2ICVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF42IUS2ICVF42
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF42IUS2ICVF42_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF42IUS2ICVF42

        Create a new object of the class itkMaskImageFilterICVF42IUS2ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF42IUS2ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF42IUS2ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF42IUS2ICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF42IUS2ICVF42 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF42IUS2ICVF42_swigregister(itkMaskImageFilterICVF42IUS2ICVF42)
itkMaskImageFilterICVF42IUS2ICVF42___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUS2ICVF42___New_orig__
itkMaskImageFilterICVF42IUS2ICVF42_cast = _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUS2ICVF42_cast


def itkMaskImageFilterICVF43ISS3ICVF43_New():
    return itkMaskImageFilterICVF43ISS3ICVF43.New()

class itkMaskImageFilterICVF43ISS3ICVF43(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43ISS3ICVF43):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43ISS3ICVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43ISS3ICVF43_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43ISS3ICVF43_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43ISS3ICVF43_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43ISS3ICVF43_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43ISS3ICVF43_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43ISS3ICVF43_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43ISS3ICVF43_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF43ISS3ICVF43_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF43ISS3ICVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF43ISS3ICVF43
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43ISS3ICVF43_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF43ISS3ICVF43

        Create a new object of the class itkMaskImageFilterICVF43ISS3ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF43ISS3ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF43ISS3ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF43ISS3ICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF43ISS3ICVF43 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF43ISS3ICVF43_swigregister(itkMaskImageFilterICVF43ISS3ICVF43)
itkMaskImageFilterICVF43ISS3ICVF43___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterICVF43ISS3ICVF43___New_orig__
itkMaskImageFilterICVF43ISS3ICVF43_cast = _itkMaskImageFilterPython.itkMaskImageFilterICVF43ISS3ICVF43_cast


def itkMaskImageFilterICVF43IUC3ICVF43_New():
    return itkMaskImageFilterICVF43IUC3ICVF43.New()

class itkMaskImageFilterICVF43IUC3ICVF43(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUC3ICVF43):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43IUC3ICVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43IUC3ICVF43_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43IUC3ICVF43_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43IUC3ICVF43_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43IUC3ICVF43_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43IUC3ICVF43_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43IUC3ICVF43_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43IUC3ICVF43_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUC3ICVF43_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUC3ICVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF43IUC3ICVF43
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43IUC3ICVF43_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF43IUC3ICVF43

        Create a new object of the class itkMaskImageFilterICVF43IUC3ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF43IUC3ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF43IUC3ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF43IUC3ICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF43IUC3ICVF43 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF43IUC3ICVF43_swigregister(itkMaskImageFilterICVF43IUC3ICVF43)
itkMaskImageFilterICVF43IUC3ICVF43___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUC3ICVF43___New_orig__
itkMaskImageFilterICVF43IUC3ICVF43_cast = _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUC3ICVF43_cast


def itkMaskImageFilterICVF43IUS3ICVF43_New():
    return itkMaskImageFilterICVF43IUS3ICVF43.New()

class itkMaskImageFilterICVF43IUS3ICVF43(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUS3ICVF43):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43IUS3ICVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43IUS3ICVF43_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43IUS3ICVF43_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43IUS3ICVF43_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43IUS3ICVF43_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43IUS3ICVF43_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43IUS3ICVF43_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43IUS3ICVF43_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUS3ICVF43_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUS3ICVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF43IUS3ICVF43
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterICVF43IUS3ICVF43_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF43IUS3ICVF43

        Create a new object of the class itkMaskImageFilterICVF43IUS3ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF43IUS3ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF43IUS3ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF43IUS3ICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF43IUS3ICVF43 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF43IUS3ICVF43_swigregister(itkMaskImageFilterICVF43IUS3ICVF43)
itkMaskImageFilterICVF43IUS3ICVF43___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUS3ICVF43___New_orig__
itkMaskImageFilterICVF43IUS3ICVF43_cast = _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUS3ICVF43_cast


def itkMaskImageFilterID2ISS2ID2_New():
    return itkMaskImageFilterID2ISS2ID2.New()

class itkMaskImageFilterID2ISS2ID2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ID2):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterID2ISS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID2ISS2ID2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID2ISS2ID2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID2ISS2ID2_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID2ISS2ID2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID2ISS2ID2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID2ISS2ID2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID2ISS2ID2_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterID2ISS2ID2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterID2ISS2ID2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterID2ISS2ID2
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterID2ISS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterID2ISS2ID2

        Create a new object of the class itkMaskImageFilterID2ISS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterID2ISS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterID2ISS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterID2ISS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterID2ISS2ID2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterID2ISS2ID2_swigregister(itkMaskImageFilterID2ISS2ID2)
itkMaskImageFilterID2ISS2ID2___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterID2ISS2ID2___New_orig__
itkMaskImageFilterID2ISS2ID2_cast = _itkMaskImageFilterPython.itkMaskImageFilterID2ISS2ID2_cast


def itkMaskImageFilterID2IUC2ID2_New():
    return itkMaskImageFilterID2IUC2ID2.New()

class itkMaskImageFilterID2IUC2ID2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ID2):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterID2IUC2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID2IUC2ID2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID2IUC2ID2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID2IUC2ID2_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID2IUC2ID2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID2IUC2ID2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID2IUC2ID2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID2IUC2ID2_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterID2IUC2ID2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterID2IUC2ID2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterID2IUC2ID2
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterID2IUC2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterID2IUC2ID2

        Create a new object of the class itkMaskImageFilterID2IUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterID2IUC2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterID2IUC2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterID2IUC2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterID2IUC2ID2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterID2IUC2ID2_swigregister(itkMaskImageFilterID2IUC2ID2)
itkMaskImageFilterID2IUC2ID2___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterID2IUC2ID2___New_orig__
itkMaskImageFilterID2IUC2ID2_cast = _itkMaskImageFilterPython.itkMaskImageFilterID2IUC2ID2_cast


def itkMaskImageFilterID2IUS2ID2_New():
    return itkMaskImageFilterID2IUS2ID2.New()

class itkMaskImageFilterID2IUS2ID2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ID2):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterID2IUS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID2IUS2ID2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID2IUS2ID2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID2IUS2ID2_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID2IUS2ID2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID2IUS2ID2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID2IUS2ID2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID2IUS2ID2_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterID2IUS2ID2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterID2IUS2ID2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterID2IUS2ID2
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterID2IUS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterID2IUS2ID2

        Create a new object of the class itkMaskImageFilterID2IUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterID2IUS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterID2IUS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterID2IUS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterID2IUS2ID2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterID2IUS2ID2_swigregister(itkMaskImageFilterID2IUS2ID2)
itkMaskImageFilterID2IUS2ID2___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterID2IUS2ID2___New_orig__
itkMaskImageFilterID2IUS2ID2_cast = _itkMaskImageFilterPython.itkMaskImageFilterID2IUS2ID2_cast


def itkMaskImageFilterID3ISS3ID3_New():
    return itkMaskImageFilterID3ISS3ID3.New()

class itkMaskImageFilterID3ISS3ID3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ID3):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterID3ISS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID3ISS3ID3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID3ISS3ID3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID3ISS3ID3_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID3ISS3ID3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID3ISS3ID3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID3ISS3ID3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID3ISS3ID3_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterID3ISS3ID3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterID3ISS3ID3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterID3ISS3ID3
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterID3ISS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterID3ISS3ID3

        Create a new object of the class itkMaskImageFilterID3ISS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterID3ISS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterID3ISS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterID3ISS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterID3ISS3ID3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterID3ISS3ID3_swigregister(itkMaskImageFilterID3ISS3ID3)
itkMaskImageFilterID3ISS3ID3___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterID3ISS3ID3___New_orig__
itkMaskImageFilterID3ISS3ID3_cast = _itkMaskImageFilterPython.itkMaskImageFilterID3ISS3ID3_cast


def itkMaskImageFilterID3IUC3ID3_New():
    return itkMaskImageFilterID3IUC3ID3.New()

class itkMaskImageFilterID3IUC3ID3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ID3):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterID3IUC3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID3IUC3ID3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID3IUC3ID3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID3IUC3ID3_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID3IUC3ID3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID3IUC3ID3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID3IUC3ID3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID3IUC3ID3_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterID3IUC3ID3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterID3IUC3ID3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterID3IUC3ID3
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterID3IUC3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterID3IUC3ID3

        Create a new object of the class itkMaskImageFilterID3IUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterID3IUC3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterID3IUC3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterID3IUC3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterID3IUC3ID3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterID3IUC3ID3_swigregister(itkMaskImageFilterID3IUC3ID3)
itkMaskImageFilterID3IUC3ID3___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterID3IUC3ID3___New_orig__
itkMaskImageFilterID3IUC3ID3_cast = _itkMaskImageFilterPython.itkMaskImageFilterID3IUC3ID3_cast


def itkMaskImageFilterID3IUS3ID3_New():
    return itkMaskImageFilterID3IUS3ID3.New()

class itkMaskImageFilterID3IUS3ID3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ID3):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterID3IUS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID3IUS3ID3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID3IUS3ID3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID3IUS3ID3_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID3IUS3ID3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID3IUS3ID3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID3IUS3ID3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterID3IUS3ID3_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterID3IUS3ID3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterID3IUS3ID3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterID3IUS3ID3
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterID3IUS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterID3IUS3ID3

        Create a new object of the class itkMaskImageFilterID3IUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterID3IUS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterID3IUS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterID3IUS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterID3IUS3ID3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterID3IUS3ID3_swigregister(itkMaskImageFilterID3IUS3ID3)
itkMaskImageFilterID3IUS3ID3___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterID3IUS3ID3___New_orig__
itkMaskImageFilterID3IUS3ID3_cast = _itkMaskImageFilterPython.itkMaskImageFilterID3IUS3ID3_cast


def itkMaskImageFilterIF2ISS2IF2_New():
    return itkMaskImageFilterIF2ISS2IF2.New()

class itkMaskImageFilterIF2ISS2IF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IF2):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2ISS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2ISS2IF2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2ISS2IF2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2ISS2IF2_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2ISS2IF2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2ISS2IF2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2ISS2IF2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2ISS2IF2_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF2ISS2IF2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF2ISS2IF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIF2ISS2IF2
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2ISS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIF2ISS2IF2

        Create a new object of the class itkMaskImageFilterIF2ISS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIF2ISS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIF2ISS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIF2ISS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIF2ISS2IF2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIF2ISS2IF2_swigregister(itkMaskImageFilterIF2ISS2IF2)
itkMaskImageFilterIF2ISS2IF2___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIF2ISS2IF2___New_orig__
itkMaskImageFilterIF2ISS2IF2_cast = _itkMaskImageFilterPython.itkMaskImageFilterIF2ISS2IF2_cast


def itkMaskImageFilterIF2IUC2IF2_New():
    return itkMaskImageFilterIF2IUC2IF2.New()

class itkMaskImageFilterIF2IUC2IF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IF2):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2IUC2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2IUC2IF2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2IUC2IF2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2IUC2IF2_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2IUC2IF2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2IUC2IF2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2IUC2IF2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2IUC2IF2_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF2IUC2IF2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF2IUC2IF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIF2IUC2IF2
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2IUC2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIF2IUC2IF2

        Create a new object of the class itkMaskImageFilterIF2IUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIF2IUC2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIF2IUC2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIF2IUC2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIF2IUC2IF2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIF2IUC2IF2_swigregister(itkMaskImageFilterIF2IUC2IF2)
itkMaskImageFilterIF2IUC2IF2___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIF2IUC2IF2___New_orig__
itkMaskImageFilterIF2IUC2IF2_cast = _itkMaskImageFilterPython.itkMaskImageFilterIF2IUC2IF2_cast


def itkMaskImageFilterIF2IUS2IF2_New():
    return itkMaskImageFilterIF2IUS2IF2.New()

class itkMaskImageFilterIF2IUS2IF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IF2):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2IUS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2IUS2IF2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2IUS2IF2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2IUS2IF2_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2IUS2IF2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2IUS2IF2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2IUS2IF2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2IUS2IF2_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF2IUS2IF2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF2IUS2IF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIF2IUS2IF2
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIF2IUS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIF2IUS2IF2

        Create a new object of the class itkMaskImageFilterIF2IUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIF2IUS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIF2IUS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIF2IUS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIF2IUS2IF2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIF2IUS2IF2_swigregister(itkMaskImageFilterIF2IUS2IF2)
itkMaskImageFilterIF2IUS2IF2___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIF2IUS2IF2___New_orig__
itkMaskImageFilterIF2IUS2IF2_cast = _itkMaskImageFilterPython.itkMaskImageFilterIF2IUS2IF2_cast


def itkMaskImageFilterIF3ISS3IF3_New():
    return itkMaskImageFilterIF3ISS3IF3.New()

class itkMaskImageFilterIF3ISS3IF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IF3):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3ISS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3ISS3IF3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3ISS3IF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3ISS3IF3_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3ISS3IF3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3ISS3IF3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3ISS3IF3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3ISS3IF3_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF3ISS3IF3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF3ISS3IF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIF3ISS3IF3
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3ISS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIF3ISS3IF3

        Create a new object of the class itkMaskImageFilterIF3ISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIF3ISS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIF3ISS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIF3ISS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIF3ISS3IF3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIF3ISS3IF3_swigregister(itkMaskImageFilterIF3ISS3IF3)
itkMaskImageFilterIF3ISS3IF3___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIF3ISS3IF3___New_orig__
itkMaskImageFilterIF3ISS3IF3_cast = _itkMaskImageFilterPython.itkMaskImageFilterIF3ISS3IF3_cast


def itkMaskImageFilterIF3IUC3IF3_New():
    return itkMaskImageFilterIF3IUC3IF3.New()

class itkMaskImageFilterIF3IUC3IF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IF3):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3IUC3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3IUC3IF3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3IUC3IF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3IUC3IF3_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3IUC3IF3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3IUC3IF3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3IUC3IF3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3IUC3IF3_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF3IUC3IF3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF3IUC3IF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIF3IUC3IF3
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3IUC3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIF3IUC3IF3

        Create a new object of the class itkMaskImageFilterIF3IUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIF3IUC3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIF3IUC3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIF3IUC3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIF3IUC3IF3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIF3IUC3IF3_swigregister(itkMaskImageFilterIF3IUC3IF3)
itkMaskImageFilterIF3IUC3IF3___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIF3IUC3IF3___New_orig__
itkMaskImageFilterIF3IUC3IF3_cast = _itkMaskImageFilterPython.itkMaskImageFilterIF3IUC3IF3_cast


def itkMaskImageFilterIF3IUS3IF3_New():
    return itkMaskImageFilterIF3IUS3IF3.New()

class itkMaskImageFilterIF3IUS3IF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IF3):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3IUS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3IUS3IF3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3IUS3IF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3IUS3IF3_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3IUS3IF3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3IUS3IF3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3IUS3IF3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3IUS3IF3_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF3IUS3IF3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF3IUS3IF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIF3IUS3IF3
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIF3IUS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIF3IUS3IF3

        Create a new object of the class itkMaskImageFilterIF3IUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIF3IUS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIF3IUS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIF3IUS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIF3IUS3IF3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIF3IUS3IF3_swigregister(itkMaskImageFilterIF3IUS3IF3)
itkMaskImageFilterIF3IUS3IF3___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIF3IUS3IF3___New_orig__
itkMaskImageFilterIF3IUS3IF3_cast = _itkMaskImageFilterPython.itkMaskImageFilterIF3IUS3IF3_cast


def itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_New():
    return itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2.New()

class itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2

        Create a new object of the class itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_swigregister(itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2)
itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2___New_orig__
itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_cast = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_cast


def itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_New():
    return itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2.New()

class itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2

        Create a new object of the class itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_swigregister(itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2)
itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2___New_orig__
itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_cast = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_cast


def itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_New():
    return itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2.New()

class itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2

        Create a new object of the class itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_swigregister(itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2)
itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2___New_orig__
itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_cast = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_cast


def itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_New():
    return itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3.New()

class itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3

        Create a new object of the class itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_swigregister(itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3)
itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3___New_orig__
itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_cast = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_cast


def itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_New():
    return itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3.New()

class itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3

        Create a new object of the class itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_swigregister(itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3)
itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3___New_orig__
itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_cast = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_cast


def itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_New():
    return itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3.New()

class itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3

        Create a new object of the class itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_swigregister(itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3)
itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3___New_orig__
itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_cast = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_cast


def itkMaskImageFilterIRGBUC2ISS2IRGBUC2_New():
    return itkMaskImageFilterIRGBUC2ISS2IRGBUC2.New()

class itkMaskImageFilterIRGBUC2ISS2IRGBUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2ISS2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2ISS2IRGBUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2ISS2IRGBUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2ISS2IRGBUC2_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2ISS2IRGBUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2ISS2IRGBUC2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2ISS2IRGBUC2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2ISS2IRGBUC2_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2ISS2IRGBUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2ISS2IRGBUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBUC2ISS2IRGBUC2
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2ISS2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBUC2ISS2IRGBUC2

        Create a new object of the class itkMaskImageFilterIRGBUC2ISS2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBUC2ISS2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBUC2ISS2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBUC2ISS2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBUC2ISS2IRGBUC2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2ISS2IRGBUC2_swigregister(itkMaskImageFilterIRGBUC2ISS2IRGBUC2)
itkMaskImageFilterIRGBUC2ISS2IRGBUC2___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2ISS2IRGBUC2___New_orig__
itkMaskImageFilterIRGBUC2ISS2IRGBUC2_cast = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2ISS2IRGBUC2_cast


def itkMaskImageFilterIRGBUC2IUC2IRGBUC2_New():
    return itkMaskImageFilterIRGBUC2IUC2IRGBUC2.New()

class itkMaskImageFilterIRGBUC2IUC2IRGBUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUC2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUC2IRGBUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUC2IRGBUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUC2IRGBUC2_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUC2IRGBUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUC2IRGBUC2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUC2IRGBUC2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUC2IRGBUC2_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUC2IRGBUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUC2IRGBUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBUC2IUC2IRGBUC2
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUC2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBUC2IUC2IRGBUC2

        Create a new object of the class itkMaskImageFilterIRGBUC2IUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBUC2IUC2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBUC2IUC2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBUC2IUC2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBUC2IUC2IRGBUC2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUC2IRGBUC2_swigregister(itkMaskImageFilterIRGBUC2IUC2IRGBUC2)
itkMaskImageFilterIRGBUC2IUC2IRGBUC2___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUC2IRGBUC2___New_orig__
itkMaskImageFilterIRGBUC2IUC2IRGBUC2_cast = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUC2IRGBUC2_cast


def itkMaskImageFilterIRGBUC2IUS2IRGBUC2_New():
    return itkMaskImageFilterIRGBUC2IUS2IRGBUC2.New()

class itkMaskImageFilterIRGBUC2IUS2IRGBUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUS2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUS2IRGBUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUS2IRGBUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUS2IRGBUC2_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUS2IRGBUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUS2IRGBUC2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUS2IRGBUC2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUS2IRGBUC2_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUS2IRGBUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUS2IRGBUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBUC2IUS2IRGBUC2
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUS2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBUC2IUS2IRGBUC2

        Create a new object of the class itkMaskImageFilterIRGBUC2IUS2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBUC2IUS2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBUC2IUS2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBUC2IUS2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBUC2IUS2IRGBUC2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUS2IRGBUC2_swigregister(itkMaskImageFilterIRGBUC2IUS2IRGBUC2)
itkMaskImageFilterIRGBUC2IUS2IRGBUC2___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUS2IRGBUC2___New_orig__
itkMaskImageFilterIRGBUC2IUS2IRGBUC2_cast = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUS2IRGBUC2_cast


def itkMaskImageFilterIRGBUC3ISS3IRGBUC3_New():
    return itkMaskImageFilterIRGBUC3ISS3IRGBUC3.New()

class itkMaskImageFilterIRGBUC3ISS3IRGBUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3ISS3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3ISS3IRGBUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3ISS3IRGBUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3ISS3IRGBUC3_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3ISS3IRGBUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3ISS3IRGBUC3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3ISS3IRGBUC3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3ISS3IRGBUC3_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3ISS3IRGBUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3ISS3IRGBUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBUC3ISS3IRGBUC3
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3ISS3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBUC3ISS3IRGBUC3

        Create a new object of the class itkMaskImageFilterIRGBUC3ISS3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBUC3ISS3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBUC3ISS3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBUC3ISS3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBUC3ISS3IRGBUC3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3ISS3IRGBUC3_swigregister(itkMaskImageFilterIRGBUC3ISS3IRGBUC3)
itkMaskImageFilterIRGBUC3ISS3IRGBUC3___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3ISS3IRGBUC3___New_orig__
itkMaskImageFilterIRGBUC3ISS3IRGBUC3_cast = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3ISS3IRGBUC3_cast


def itkMaskImageFilterIRGBUC3IUC3IRGBUC3_New():
    return itkMaskImageFilterIRGBUC3IUC3IRGBUC3.New()

class itkMaskImageFilterIRGBUC3IUC3IRGBUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUC3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUC3IRGBUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUC3IRGBUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUC3IRGBUC3_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUC3IRGBUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUC3IRGBUC3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUC3IRGBUC3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUC3IRGBUC3_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUC3IRGBUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUC3IRGBUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBUC3IUC3IRGBUC3
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUC3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBUC3IUC3IRGBUC3

        Create a new object of the class itkMaskImageFilterIRGBUC3IUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBUC3IUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBUC3IUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBUC3IUC3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBUC3IUC3IRGBUC3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUC3IRGBUC3_swigregister(itkMaskImageFilterIRGBUC3IUC3IRGBUC3)
itkMaskImageFilterIRGBUC3IUC3IRGBUC3___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUC3IRGBUC3___New_orig__
itkMaskImageFilterIRGBUC3IUC3IRGBUC3_cast = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUC3IRGBUC3_cast


def itkMaskImageFilterIRGBUC3IUS3IRGBUC3_New():
    return itkMaskImageFilterIRGBUC3IUS3IRGBUC3.New()

class itkMaskImageFilterIRGBUC3IUS3IRGBUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUS3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUS3IRGBUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUS3IRGBUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUS3IRGBUC3_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUS3IRGBUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUS3IRGBUC3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUS3IRGBUC3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUS3IRGBUC3_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUS3IRGBUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUS3IRGBUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBUC3IUS3IRGBUC3
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUS3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBUC3IUS3IRGBUC3

        Create a new object of the class itkMaskImageFilterIRGBUC3IUS3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBUC3IUS3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBUC3IUS3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBUC3IUS3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBUC3IUS3IRGBUC3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUS3IRGBUC3_swigregister(itkMaskImageFilterIRGBUC3IUS3IRGBUC3)
itkMaskImageFilterIRGBUC3IUS3IRGBUC3___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUS3IRGBUC3___New_orig__
itkMaskImageFilterIRGBUC3IUS3IRGBUC3_cast = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUS3IRGBUC3_cast


def itkMaskImageFilterISS2ISS2ISS2_New():
    return itkMaskImageFilterISS2ISS2ISS2.New()

class itkMaskImageFilterISS2ISS2ISS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2ISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2ISS2ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2ISS2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2ISS2ISS2_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2ISS2ISS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2ISS2ISS2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2ISS2ISS2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2ISS2ISS2_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS2ISS2ISS2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS2ISS2ISS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterISS2ISS2ISS2
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2ISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterISS2ISS2ISS2

        Create a new object of the class itkMaskImageFilterISS2ISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterISS2ISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterISS2ISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterISS2ISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterISS2ISS2ISS2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterISS2ISS2ISS2_swigregister(itkMaskImageFilterISS2ISS2ISS2)
itkMaskImageFilterISS2ISS2ISS2___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterISS2ISS2ISS2___New_orig__
itkMaskImageFilterISS2ISS2ISS2_cast = _itkMaskImageFilterPython.itkMaskImageFilterISS2ISS2ISS2_cast


def itkMaskImageFilterISS2IUC2ISS2_New():
    return itkMaskImageFilterISS2IUC2ISS2.New()

class itkMaskImageFilterISS2IUC2ISS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ISS2):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2IUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2IUC2ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2IUC2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2IUC2ISS2_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2IUC2ISS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2IUC2ISS2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2IUC2ISS2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2IUC2ISS2_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS2IUC2ISS2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS2IUC2ISS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterISS2IUC2ISS2
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2IUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterISS2IUC2ISS2

        Create a new object of the class itkMaskImageFilterISS2IUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterISS2IUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterISS2IUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterISS2IUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterISS2IUC2ISS2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterISS2IUC2ISS2_swigregister(itkMaskImageFilterISS2IUC2ISS2)
itkMaskImageFilterISS2IUC2ISS2___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterISS2IUC2ISS2___New_orig__
itkMaskImageFilterISS2IUC2ISS2_cast = _itkMaskImageFilterPython.itkMaskImageFilterISS2IUC2ISS2_cast


def itkMaskImageFilterISS2IUS2ISS2_New():
    return itkMaskImageFilterISS2IUS2ISS2.New()

class itkMaskImageFilterISS2IUS2ISS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ISS2):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2IUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2IUS2ISS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2IUS2ISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2IUS2ISS2_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2IUS2ISS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2IUS2ISS2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2IUS2ISS2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2IUS2ISS2_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS2IUS2ISS2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS2IUS2ISS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterISS2IUS2ISS2
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterISS2IUS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterISS2IUS2ISS2

        Create a new object of the class itkMaskImageFilterISS2IUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterISS2IUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterISS2IUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterISS2IUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterISS2IUS2ISS2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterISS2IUS2ISS2_swigregister(itkMaskImageFilterISS2IUS2ISS2)
itkMaskImageFilterISS2IUS2ISS2___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterISS2IUS2ISS2___New_orig__
itkMaskImageFilterISS2IUS2ISS2_cast = _itkMaskImageFilterPython.itkMaskImageFilterISS2IUS2ISS2_cast


def itkMaskImageFilterISS3ISS3ISS3_New():
    return itkMaskImageFilterISS3ISS3ISS3.New()

class itkMaskImageFilterISS3ISS3ISS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3ISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3ISS3ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3ISS3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3ISS3ISS3_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3ISS3ISS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3ISS3ISS3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3ISS3ISS3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3ISS3ISS3_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS3ISS3ISS3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS3ISS3ISS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterISS3ISS3ISS3
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3ISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterISS3ISS3ISS3

        Create a new object of the class itkMaskImageFilterISS3ISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterISS3ISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterISS3ISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterISS3ISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterISS3ISS3ISS3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterISS3ISS3ISS3_swigregister(itkMaskImageFilterISS3ISS3ISS3)
itkMaskImageFilterISS3ISS3ISS3___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterISS3ISS3ISS3___New_orig__
itkMaskImageFilterISS3ISS3ISS3_cast = _itkMaskImageFilterPython.itkMaskImageFilterISS3ISS3ISS3_cast


def itkMaskImageFilterISS3IUC3ISS3_New():
    return itkMaskImageFilterISS3IUC3ISS3.New()

class itkMaskImageFilterISS3IUC3ISS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ISS3):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3IUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3IUC3ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3IUC3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3IUC3ISS3_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3IUC3ISS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3IUC3ISS3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3IUC3ISS3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3IUC3ISS3_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS3IUC3ISS3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS3IUC3ISS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterISS3IUC3ISS3
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3IUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterISS3IUC3ISS3

        Create a new object of the class itkMaskImageFilterISS3IUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterISS3IUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterISS3IUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterISS3IUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterISS3IUC3ISS3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterISS3IUC3ISS3_swigregister(itkMaskImageFilterISS3IUC3ISS3)
itkMaskImageFilterISS3IUC3ISS3___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterISS3IUC3ISS3___New_orig__
itkMaskImageFilterISS3IUC3ISS3_cast = _itkMaskImageFilterPython.itkMaskImageFilterISS3IUC3ISS3_cast


def itkMaskImageFilterISS3IUS3ISS3_New():
    return itkMaskImageFilterISS3IUS3ISS3.New()

class itkMaskImageFilterISS3IUS3ISS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ISS3):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3IUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3IUS3ISS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3IUS3ISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3IUS3ISS3_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3IUS3ISS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3IUS3ISS3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3IUS3ISS3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3IUS3ISS3_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS3IUS3ISS3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS3IUS3ISS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterISS3IUS3ISS3
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterISS3IUS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterISS3IUS3ISS3

        Create a new object of the class itkMaskImageFilterISS3IUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterISS3IUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterISS3IUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterISS3IUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterISS3IUS3ISS3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterISS3IUS3ISS3_swigregister(itkMaskImageFilterISS3IUS3ISS3)
itkMaskImageFilterISS3IUS3ISS3___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterISS3IUS3ISS3___New_orig__
itkMaskImageFilterISS3IUS3ISS3_cast = _itkMaskImageFilterPython.itkMaskImageFilterISS3IUS3ISS3_cast


def itkMaskImageFilterIUC2ISS2IUC2_New():
    return itkMaskImageFilterIUC2ISS2IUC2.New()

class itkMaskImageFilterIUC2ISS2IUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUC2):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2ISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2ISS2IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2ISS2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2ISS2IUC2_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2ISS2IUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2ISS2IUC2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2ISS2IUC2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2ISS2IUC2_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC2ISS2IUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC2ISS2IUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUC2ISS2IUC2
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2ISS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUC2ISS2IUC2

        Create a new object of the class itkMaskImageFilterIUC2ISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUC2ISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUC2ISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUC2ISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUC2ISS2IUC2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUC2ISS2IUC2_swigregister(itkMaskImageFilterIUC2ISS2IUC2)
itkMaskImageFilterIUC2ISS2IUC2___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIUC2ISS2IUC2___New_orig__
itkMaskImageFilterIUC2ISS2IUC2_cast = _itkMaskImageFilterPython.itkMaskImageFilterIUC2ISS2IUC2_cast


def itkMaskImageFilterIUC2IUC2IUC2_New():
    return itkMaskImageFilterIUC2IUC2IUC2.New()

class itkMaskImageFilterIUC2IUC2IUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2IUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2IUC2IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2IUC2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2IUC2IUC2_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2IUC2IUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2IUC2IUC2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2IUC2IUC2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2IUC2IUC2_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUC2IUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUC2IUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUC2IUC2IUC2
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2IUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUC2IUC2IUC2

        Create a new object of the class itkMaskImageFilterIUC2IUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUC2IUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUC2IUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUC2IUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUC2IUC2IUC2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUC2IUC2IUC2_swigregister(itkMaskImageFilterIUC2IUC2IUC2)
itkMaskImageFilterIUC2IUC2IUC2___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUC2IUC2___New_orig__
itkMaskImageFilterIUC2IUC2IUC2_cast = _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUC2IUC2_cast


def itkMaskImageFilterIUC2IUS2IUC2_New():
    return itkMaskImageFilterIUC2IUS2IUC2.New()

class itkMaskImageFilterIUC2IUS2IUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUC2):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2IUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2IUS2IUC2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2IUS2IUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2IUS2IUC2_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2IUS2IUC2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2IUS2IUC2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2IUS2IUC2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2IUS2IUC2_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUS2IUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUS2IUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUC2IUS2IUC2
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC2IUS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUC2IUS2IUC2

        Create a new object of the class itkMaskImageFilterIUC2IUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUC2IUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUC2IUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUC2IUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUC2IUS2IUC2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUC2IUS2IUC2_swigregister(itkMaskImageFilterIUC2IUS2IUC2)
itkMaskImageFilterIUC2IUS2IUC2___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUS2IUC2___New_orig__
itkMaskImageFilterIUC2IUS2IUC2_cast = _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUS2IUC2_cast


def itkMaskImageFilterIUC3ISS3IUC3_New():
    return itkMaskImageFilterIUC3ISS3IUC3.New()

class itkMaskImageFilterIUC3ISS3IUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUC3):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3ISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3ISS3IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3ISS3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3ISS3IUC3_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3ISS3IUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3ISS3IUC3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3ISS3IUC3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3ISS3IUC3_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC3ISS3IUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC3ISS3IUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUC3ISS3IUC3
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3ISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUC3ISS3IUC3

        Create a new object of the class itkMaskImageFilterIUC3ISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUC3ISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUC3ISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUC3ISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUC3ISS3IUC3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUC3ISS3IUC3_swigregister(itkMaskImageFilterIUC3ISS3IUC3)
itkMaskImageFilterIUC3ISS3IUC3___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIUC3ISS3IUC3___New_orig__
itkMaskImageFilterIUC3ISS3IUC3_cast = _itkMaskImageFilterPython.itkMaskImageFilterIUC3ISS3IUC3_cast


def itkMaskImageFilterIUC3IUC3IUC3_New():
    return itkMaskImageFilterIUC3IUC3IUC3.New()

class itkMaskImageFilterIUC3IUC3IUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3IUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3IUC3IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3IUC3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3IUC3IUC3_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3IUC3IUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3IUC3IUC3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3IUC3IUC3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3IUC3IUC3_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUC3IUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUC3IUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUC3IUC3IUC3
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3IUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUC3IUC3IUC3

        Create a new object of the class itkMaskImageFilterIUC3IUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUC3IUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUC3IUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUC3IUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUC3IUC3IUC3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUC3IUC3IUC3_swigregister(itkMaskImageFilterIUC3IUC3IUC3)
itkMaskImageFilterIUC3IUC3IUC3___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUC3IUC3___New_orig__
itkMaskImageFilterIUC3IUC3IUC3_cast = _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUC3IUC3_cast


def itkMaskImageFilterIUC3IUS3IUC3_New():
    return itkMaskImageFilterIUC3IUS3IUC3.New()

class itkMaskImageFilterIUC3IUS3IUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUC3):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3IUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3IUS3IUC3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3IUS3IUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3IUS3IUC3_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3IUS3IUC3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3IUS3IUC3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3IUS3IUC3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3IUS3IUC3_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUS3IUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUS3IUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUC3IUS3IUC3
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIUC3IUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUC3IUS3IUC3

        Create a new object of the class itkMaskImageFilterIUC3IUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUC3IUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUC3IUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUC3IUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUC3IUS3IUC3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUC3IUS3IUC3_swigregister(itkMaskImageFilterIUC3IUS3IUC3)
itkMaskImageFilterIUC3IUS3IUC3___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUS3IUC3___New_orig__
itkMaskImageFilterIUC3IUS3IUC3_cast = _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUS3IUC3_cast


def itkMaskImageFilterIUS2ISS2IUS2_New():
    return itkMaskImageFilterIUS2ISS2IUS2.New()

class itkMaskImageFilterIUS2ISS2IUS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUS2):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2ISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2ISS2IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2ISS2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2ISS2IUS2_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2ISS2IUS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2ISS2IUS2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2ISS2IUS2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2ISS2IUS2_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS2ISS2IUS2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS2ISS2IUS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUS2ISS2IUS2
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2ISS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUS2ISS2IUS2

        Create a new object of the class itkMaskImageFilterIUS2ISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUS2ISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUS2ISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUS2ISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUS2ISS2IUS2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUS2ISS2IUS2_swigregister(itkMaskImageFilterIUS2ISS2IUS2)
itkMaskImageFilterIUS2ISS2IUS2___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIUS2ISS2IUS2___New_orig__
itkMaskImageFilterIUS2ISS2IUS2_cast = _itkMaskImageFilterPython.itkMaskImageFilterIUS2ISS2IUS2_cast


def itkMaskImageFilterIUS2IUC2IUS2_New():
    return itkMaskImageFilterIUS2IUC2IUS2.New()

class itkMaskImageFilterIUS2IUC2IUS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUS2):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2IUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2IUC2IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2IUC2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2IUC2IUS2_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2IUC2IUS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2IUC2IUS2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2IUC2IUS2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2IUC2IUS2_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUC2IUS2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUC2IUS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUS2IUC2IUS2
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2IUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUS2IUC2IUS2

        Create a new object of the class itkMaskImageFilterIUS2IUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUS2IUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUS2IUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUS2IUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUS2IUC2IUS2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUS2IUC2IUS2_swigregister(itkMaskImageFilterIUS2IUC2IUS2)
itkMaskImageFilterIUS2IUC2IUS2___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUC2IUS2___New_orig__
itkMaskImageFilterIUS2IUC2IUS2_cast = _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUC2IUS2_cast


def itkMaskImageFilterIUS2IUS2IUS2_New():
    return itkMaskImageFilterIUS2IUS2IUS2.New()

class itkMaskImageFilterIUS2IUS2IUS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2IUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2IUS2IUS2_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2IUS2IUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2IUS2IUS2_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2IUS2IUS2_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2IUS2IUS2_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2IUS2IUS2_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2IUS2IUS2_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUS2IUS2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUS2IUS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUS2IUS2IUS2
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS2IUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUS2IUS2IUS2

        Create a new object of the class itkMaskImageFilterIUS2IUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUS2IUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUS2IUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUS2IUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUS2IUS2IUS2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUS2IUS2IUS2_swigregister(itkMaskImageFilterIUS2IUS2IUS2)
itkMaskImageFilterIUS2IUS2IUS2___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUS2IUS2___New_orig__
itkMaskImageFilterIUS2IUS2IUS2_cast = _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUS2IUS2_cast


def itkMaskImageFilterIUS3ISS3IUS3_New():
    return itkMaskImageFilterIUS3ISS3IUS3.New()

class itkMaskImageFilterIUS3ISS3IUS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUS3):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3ISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3ISS3IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3ISS3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3ISS3IUS3_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3ISS3IUS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3ISS3IUS3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3ISS3IUS3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3ISS3IUS3_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS3ISS3IUS3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS3ISS3IUS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUS3ISS3IUS3
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3ISS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUS3ISS3IUS3

        Create a new object of the class itkMaskImageFilterIUS3ISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUS3ISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUS3ISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUS3ISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUS3ISS3IUS3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUS3ISS3IUS3_swigregister(itkMaskImageFilterIUS3ISS3IUS3)
itkMaskImageFilterIUS3ISS3IUS3___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIUS3ISS3IUS3___New_orig__
itkMaskImageFilterIUS3ISS3IUS3_cast = _itkMaskImageFilterPython.itkMaskImageFilterIUS3ISS3IUS3_cast


def itkMaskImageFilterIUS3IUC3IUS3_New():
    return itkMaskImageFilterIUS3IUC3IUS3.New()

class itkMaskImageFilterIUS3IUC3IUS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUS3):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3IUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3IUC3IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3IUC3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3IUC3IUS3_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3IUC3IUS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3IUC3IUS3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3IUC3IUS3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3IUC3IUS3_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUC3IUS3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUC3IUS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUS3IUC3IUS3
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3IUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUS3IUC3IUS3

        Create a new object of the class itkMaskImageFilterIUS3IUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUS3IUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUS3IUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUS3IUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUS3IUC3IUS3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUS3IUC3IUS3_swigregister(itkMaskImageFilterIUS3IUC3IUS3)
itkMaskImageFilterIUS3IUC3IUS3___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUC3IUS3___New_orig__
itkMaskImageFilterIUS3IUC3IUS3_cast = _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUC3IUS3_cast


def itkMaskImageFilterIUS3IUS3IUS3_New():
    return itkMaskImageFilterIUS3IUS3IUS3.New()

class itkMaskImageFilterIUS3IUS3IUS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3IUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3IUS3IUS3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3IUS3IUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3IUS3IUS3_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3IUS3IUS3_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3IUS3IUS3_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3IUS3IUS3_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3IUS3IUS3_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUS3IUS3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUS3IUS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUS3IUS3IUS3
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIUS3IUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUS3IUS3IUS3

        Create a new object of the class itkMaskImageFilterIUS3IUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUS3IUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUS3IUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUS3IUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUS3IUS3IUS3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUS3IUS3IUS3_swigregister(itkMaskImageFilterIUS3IUS3IUS3)
itkMaskImageFilterIUS3IUS3IUS3___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUS3IUS3___New_orig__
itkMaskImageFilterIUS3IUS3IUS3_cast = _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUS3IUS3_cast


def itkMaskImageFilterIVF22ISS2IVF22_New():
    return itkMaskImageFilterIVF22ISS2IVF22.New()

class itkMaskImageFilterIVF22ISS2IVF22(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22ISS2IVF22):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22ISS2IVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22ISS2IVF22_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22ISS2IVF22_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22ISS2IVF22_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22ISS2IVF22_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22ISS2IVF22_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22ISS2IVF22_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22ISS2IVF22_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF22ISS2IVF22_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF22ISS2IVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF22ISS2IVF22
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22ISS2IVF22_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF22ISS2IVF22

        Create a new object of the class itkMaskImageFilterIVF22ISS2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF22ISS2IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF22ISS2IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF22ISS2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF22ISS2IVF22 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF22ISS2IVF22_swigregister(itkMaskImageFilterIVF22ISS2IVF22)
itkMaskImageFilterIVF22ISS2IVF22___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIVF22ISS2IVF22___New_orig__
itkMaskImageFilterIVF22ISS2IVF22_cast = _itkMaskImageFilterPython.itkMaskImageFilterIVF22ISS2IVF22_cast


def itkMaskImageFilterIVF22IUC2IVF22_New():
    return itkMaskImageFilterIVF22IUC2IVF22.New()

class itkMaskImageFilterIVF22IUC2IVF22(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUC2IVF22):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22IUC2IVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22IUC2IVF22_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22IUC2IVF22_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22IUC2IVF22_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22IUC2IVF22_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22IUC2IVF22_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22IUC2IVF22_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22IUC2IVF22_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUC2IVF22_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUC2IVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF22IUC2IVF22
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22IUC2IVF22_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF22IUC2IVF22

        Create a new object of the class itkMaskImageFilterIVF22IUC2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF22IUC2IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF22IUC2IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF22IUC2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF22IUC2IVF22 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF22IUC2IVF22_swigregister(itkMaskImageFilterIVF22IUC2IVF22)
itkMaskImageFilterIVF22IUC2IVF22___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUC2IVF22___New_orig__
itkMaskImageFilterIVF22IUC2IVF22_cast = _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUC2IVF22_cast


def itkMaskImageFilterIVF22IUS2IVF22_New():
    return itkMaskImageFilterIVF22IUS2IVF22.New()

class itkMaskImageFilterIVF22IUS2IVF22(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUS2IVF22):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22IUS2IVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22IUS2IVF22_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22IUS2IVF22_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22IUS2IVF22_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22IUS2IVF22_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22IUS2IVF22_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22IUS2IVF22_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22IUS2IVF22_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUS2IVF22_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUS2IVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF22IUS2IVF22
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF22IUS2IVF22_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF22IUS2IVF22

        Create a new object of the class itkMaskImageFilterIVF22IUS2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF22IUS2IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF22IUS2IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF22IUS2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF22IUS2IVF22 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF22IUS2IVF22_swigregister(itkMaskImageFilterIVF22IUS2IVF22)
itkMaskImageFilterIVF22IUS2IVF22___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUS2IVF22___New_orig__
itkMaskImageFilterIVF22IUS2IVF22_cast = _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUS2IVF22_cast


def itkMaskImageFilterIVF23ISS3IVF23_New():
    return itkMaskImageFilterIVF23ISS3IVF23.New()

class itkMaskImageFilterIVF23ISS3IVF23(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23ISS3IVF23):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23ISS3IVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23ISS3IVF23_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23ISS3IVF23_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23ISS3IVF23_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23ISS3IVF23_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23ISS3IVF23_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23ISS3IVF23_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23ISS3IVF23_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF23ISS3IVF23_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF23ISS3IVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF23ISS3IVF23
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23ISS3IVF23_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF23ISS3IVF23

        Create a new object of the class itkMaskImageFilterIVF23ISS3IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF23ISS3IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF23ISS3IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF23ISS3IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF23ISS3IVF23 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF23ISS3IVF23_swigregister(itkMaskImageFilterIVF23ISS3IVF23)
itkMaskImageFilterIVF23ISS3IVF23___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIVF23ISS3IVF23___New_orig__
itkMaskImageFilterIVF23ISS3IVF23_cast = _itkMaskImageFilterPython.itkMaskImageFilterIVF23ISS3IVF23_cast


def itkMaskImageFilterIVF23IUC3IVF23_New():
    return itkMaskImageFilterIVF23IUC3IVF23.New()

class itkMaskImageFilterIVF23IUC3IVF23(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUC3IVF23):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23IUC3IVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23IUC3IVF23_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23IUC3IVF23_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23IUC3IVF23_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23IUC3IVF23_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23IUC3IVF23_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23IUC3IVF23_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23IUC3IVF23_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUC3IVF23_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUC3IVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF23IUC3IVF23
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23IUC3IVF23_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF23IUC3IVF23

        Create a new object of the class itkMaskImageFilterIVF23IUC3IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF23IUC3IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF23IUC3IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF23IUC3IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF23IUC3IVF23 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF23IUC3IVF23_swigregister(itkMaskImageFilterIVF23IUC3IVF23)
itkMaskImageFilterIVF23IUC3IVF23___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUC3IVF23___New_orig__
itkMaskImageFilterIVF23IUC3IVF23_cast = _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUC3IVF23_cast


def itkMaskImageFilterIVF23IUS3IVF23_New():
    return itkMaskImageFilterIVF23IUS3IVF23.New()

class itkMaskImageFilterIVF23IUS3IVF23(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUS3IVF23):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23IUS3IVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23IUS3IVF23_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23IUS3IVF23_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23IUS3IVF23_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23IUS3IVF23_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23IUS3IVF23_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23IUS3IVF23_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23IUS3IVF23_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUS3IVF23_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUS3IVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF23IUS3IVF23
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF23IUS3IVF23_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF23IUS3IVF23

        Create a new object of the class itkMaskImageFilterIVF23IUS3IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF23IUS3IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF23IUS3IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF23IUS3IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF23IUS3IVF23 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF23IUS3IVF23_swigregister(itkMaskImageFilterIVF23IUS3IVF23)
itkMaskImageFilterIVF23IUS3IVF23___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUS3IVF23___New_orig__
itkMaskImageFilterIVF23IUS3IVF23_cast = _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUS3IVF23_cast


def itkMaskImageFilterIVF32ISS2IVF32_New():
    return itkMaskImageFilterIVF32ISS2IVF32.New()

class itkMaskImageFilterIVF32ISS2IVF32(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32ISS2IVF32):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32ISS2IVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32ISS2IVF32_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32ISS2IVF32_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32ISS2IVF32_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32ISS2IVF32_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32ISS2IVF32_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32ISS2IVF32_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32ISS2IVF32_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF32ISS2IVF32_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF32ISS2IVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF32ISS2IVF32
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32ISS2IVF32_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF32ISS2IVF32

        Create a new object of the class itkMaskImageFilterIVF32ISS2IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF32ISS2IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF32ISS2IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF32ISS2IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF32ISS2IVF32 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF32ISS2IVF32_swigregister(itkMaskImageFilterIVF32ISS2IVF32)
itkMaskImageFilterIVF32ISS2IVF32___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIVF32ISS2IVF32___New_orig__
itkMaskImageFilterIVF32ISS2IVF32_cast = _itkMaskImageFilterPython.itkMaskImageFilterIVF32ISS2IVF32_cast


def itkMaskImageFilterIVF32IUC2IVF32_New():
    return itkMaskImageFilterIVF32IUC2IVF32.New()

class itkMaskImageFilterIVF32IUC2IVF32(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUC2IVF32):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32IUC2IVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32IUC2IVF32_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32IUC2IVF32_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32IUC2IVF32_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32IUC2IVF32_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32IUC2IVF32_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32IUC2IVF32_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32IUC2IVF32_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUC2IVF32_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUC2IVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF32IUC2IVF32
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32IUC2IVF32_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF32IUC2IVF32

        Create a new object of the class itkMaskImageFilterIVF32IUC2IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF32IUC2IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF32IUC2IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF32IUC2IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF32IUC2IVF32 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF32IUC2IVF32_swigregister(itkMaskImageFilterIVF32IUC2IVF32)
itkMaskImageFilterIVF32IUC2IVF32___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUC2IVF32___New_orig__
itkMaskImageFilterIVF32IUC2IVF32_cast = _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUC2IVF32_cast


def itkMaskImageFilterIVF32IUS2IVF32_New():
    return itkMaskImageFilterIVF32IUS2IVF32.New()

class itkMaskImageFilterIVF32IUS2IVF32(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUS2IVF32):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32IUS2IVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32IUS2IVF32_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32IUS2IVF32_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32IUS2IVF32_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32IUS2IVF32_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32IUS2IVF32_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32IUS2IVF32_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32IUS2IVF32_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUS2IVF32_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUS2IVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF32IUS2IVF32
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF32IUS2IVF32_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF32IUS2IVF32

        Create a new object of the class itkMaskImageFilterIVF32IUS2IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF32IUS2IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF32IUS2IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF32IUS2IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF32IUS2IVF32 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF32IUS2IVF32_swigregister(itkMaskImageFilterIVF32IUS2IVF32)
itkMaskImageFilterIVF32IUS2IVF32___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUS2IVF32___New_orig__
itkMaskImageFilterIVF32IUS2IVF32_cast = _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUS2IVF32_cast


def itkMaskImageFilterIVF33ISS3IVF33_New():
    return itkMaskImageFilterIVF33ISS3IVF33.New()

class itkMaskImageFilterIVF33ISS3IVF33(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33ISS3IVF33):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33ISS3IVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33ISS3IVF33_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33ISS3IVF33_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33ISS3IVF33_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33ISS3IVF33_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33ISS3IVF33_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33ISS3IVF33_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33ISS3IVF33_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF33ISS3IVF33_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF33ISS3IVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF33ISS3IVF33
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33ISS3IVF33_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF33ISS3IVF33

        Create a new object of the class itkMaskImageFilterIVF33ISS3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF33ISS3IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF33ISS3IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF33ISS3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF33ISS3IVF33 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF33ISS3IVF33_swigregister(itkMaskImageFilterIVF33ISS3IVF33)
itkMaskImageFilterIVF33ISS3IVF33___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIVF33ISS3IVF33___New_orig__
itkMaskImageFilterIVF33ISS3IVF33_cast = _itkMaskImageFilterPython.itkMaskImageFilterIVF33ISS3IVF33_cast


def itkMaskImageFilterIVF33IUC3IVF33_New():
    return itkMaskImageFilterIVF33IUC3IVF33.New()

class itkMaskImageFilterIVF33IUC3IVF33(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUC3IVF33):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33IUC3IVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33IUC3IVF33_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33IUC3IVF33_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33IUC3IVF33_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33IUC3IVF33_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33IUC3IVF33_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33IUC3IVF33_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33IUC3IVF33_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUC3IVF33_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUC3IVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF33IUC3IVF33
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33IUC3IVF33_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF33IUC3IVF33

        Create a new object of the class itkMaskImageFilterIVF33IUC3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF33IUC3IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF33IUC3IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF33IUC3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF33IUC3IVF33 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF33IUC3IVF33_swigregister(itkMaskImageFilterIVF33IUC3IVF33)
itkMaskImageFilterIVF33IUC3IVF33___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUC3IVF33___New_orig__
itkMaskImageFilterIVF33IUC3IVF33_cast = _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUC3IVF33_cast


def itkMaskImageFilterIVF33IUS3IVF33_New():
    return itkMaskImageFilterIVF33IUS3IVF33.New()

class itkMaskImageFilterIVF33IUS3IVF33(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUS3IVF33):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33IUS3IVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33IUS3IVF33_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33IUS3IVF33_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33IUS3IVF33_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33IUS3IVF33_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33IUS3IVF33_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33IUS3IVF33_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33IUS3IVF33_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUS3IVF33_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUS3IVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF33IUS3IVF33
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF33IUS3IVF33_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF33IUS3IVF33

        Create a new object of the class itkMaskImageFilterIVF33IUS3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF33IUS3IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF33IUS3IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF33IUS3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF33IUS3IVF33 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF33IUS3IVF33_swigregister(itkMaskImageFilterIVF33IUS3IVF33)
itkMaskImageFilterIVF33IUS3IVF33___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUS3IVF33___New_orig__
itkMaskImageFilterIVF33IUS3IVF33_cast = _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUS3IVF33_cast


def itkMaskImageFilterIVF42ISS2IVF42_New():
    return itkMaskImageFilterIVF42ISS2IVF42.New()

class itkMaskImageFilterIVF42ISS2IVF42(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42ISS2IVF42):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42ISS2IVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42ISS2IVF42_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42ISS2IVF42_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42ISS2IVF42_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42ISS2IVF42_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42ISS2IVF42_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42ISS2IVF42_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42ISS2IVF42_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF42ISS2IVF42_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF42ISS2IVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF42ISS2IVF42
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42ISS2IVF42_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF42ISS2IVF42

        Create a new object of the class itkMaskImageFilterIVF42ISS2IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF42ISS2IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF42ISS2IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF42ISS2IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF42ISS2IVF42 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF42ISS2IVF42_swigregister(itkMaskImageFilterIVF42ISS2IVF42)
itkMaskImageFilterIVF42ISS2IVF42___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIVF42ISS2IVF42___New_orig__
itkMaskImageFilterIVF42ISS2IVF42_cast = _itkMaskImageFilterPython.itkMaskImageFilterIVF42ISS2IVF42_cast


def itkMaskImageFilterIVF42IUC2IVF42_New():
    return itkMaskImageFilterIVF42IUC2IVF42.New()

class itkMaskImageFilterIVF42IUC2IVF42(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUC2IVF42):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42IUC2IVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42IUC2IVF42_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42IUC2IVF42_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42IUC2IVF42_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42IUC2IVF42_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42IUC2IVF42_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42IUC2IVF42_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42IUC2IVF42_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUC2IVF42_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUC2IVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF42IUC2IVF42
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42IUC2IVF42_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF42IUC2IVF42

        Create a new object of the class itkMaskImageFilterIVF42IUC2IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF42IUC2IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF42IUC2IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF42IUC2IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF42IUC2IVF42 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF42IUC2IVF42_swigregister(itkMaskImageFilterIVF42IUC2IVF42)
itkMaskImageFilterIVF42IUC2IVF42___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUC2IVF42___New_orig__
itkMaskImageFilterIVF42IUC2IVF42_cast = _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUC2IVF42_cast


def itkMaskImageFilterIVF42IUS2IVF42_New():
    return itkMaskImageFilterIVF42IUS2IVF42.New()

class itkMaskImageFilterIVF42IUS2IVF42(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUS2IVF42):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42IUS2IVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42IUS2IVF42_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42IUS2IVF42_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42IUS2IVF42_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42IUS2IVF42_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42IUS2IVF42_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42IUS2IVF42_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42IUS2IVF42_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUS2IVF42_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUS2IVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF42IUS2IVF42
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF42IUS2IVF42_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF42IUS2IVF42

        Create a new object of the class itkMaskImageFilterIVF42IUS2IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF42IUS2IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF42IUS2IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF42IUS2IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF42IUS2IVF42 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF42IUS2IVF42_swigregister(itkMaskImageFilterIVF42IUS2IVF42)
itkMaskImageFilterIVF42IUS2IVF42___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUS2IVF42___New_orig__
itkMaskImageFilterIVF42IUS2IVF42_cast = _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUS2IVF42_cast


def itkMaskImageFilterIVF43ISS3IVF43_New():
    return itkMaskImageFilterIVF43ISS3IVF43.New()

class itkMaskImageFilterIVF43ISS3IVF43(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43ISS3IVF43):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43ISS3IVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43ISS3IVF43_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43ISS3IVF43_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43ISS3IVF43_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43ISS3IVF43_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43ISS3IVF43_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43ISS3IVF43_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43ISS3IVF43_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF43ISS3IVF43_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF43ISS3IVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF43ISS3IVF43
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43ISS3IVF43_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF43ISS3IVF43

        Create a new object of the class itkMaskImageFilterIVF43ISS3IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF43ISS3IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF43ISS3IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF43ISS3IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF43ISS3IVF43 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF43ISS3IVF43_swigregister(itkMaskImageFilterIVF43ISS3IVF43)
itkMaskImageFilterIVF43ISS3IVF43___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIVF43ISS3IVF43___New_orig__
itkMaskImageFilterIVF43ISS3IVF43_cast = _itkMaskImageFilterPython.itkMaskImageFilterIVF43ISS3IVF43_cast


def itkMaskImageFilterIVF43IUC3IVF43_New():
    return itkMaskImageFilterIVF43IUC3IVF43.New()

class itkMaskImageFilterIVF43IUC3IVF43(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUC3IVF43):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43IUC3IVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43IUC3IVF43_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43IUC3IVF43_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43IUC3IVF43_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43IUC3IVF43_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43IUC3IVF43_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43IUC3IVF43_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43IUC3IVF43_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUC3IVF43_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUC3IVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF43IUC3IVF43
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43IUC3IVF43_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF43IUC3IVF43

        Create a new object of the class itkMaskImageFilterIVF43IUC3IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF43IUC3IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF43IUC3IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF43IUC3IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF43IUC3IVF43 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF43IUC3IVF43_swigregister(itkMaskImageFilterIVF43IUC3IVF43)
itkMaskImageFilterIVF43IUC3IVF43___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUC3IVF43___New_orig__
itkMaskImageFilterIVF43IUC3IVF43_cast = _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUC3IVF43_cast


def itkMaskImageFilterIVF43IUS3IVF43_New():
    return itkMaskImageFilterIVF43IUS3IVF43.New()

class itkMaskImageFilterIVF43IUS3IVF43(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUS3IVF43):
    r"""


    Mask an image with a mask.

    This class is templated over the types of the input image type, the
    mask image type and the type of the output image. Numeric conversions
    (castings) are done by the C++ defaults.

    The pixel type of the input 2 image must have a valid definition of
    the operator != with zero. This condition is required because
    internally this filter will perform the operation

    The pixel from the input 1 is cast to the pixel type of the output
    image.

    Note that the input and the mask images must be of the same size.

    WARNING:  Any pixel value other than masking value (0 by default) will
    not be masked out.

    See:   MaskNegatedImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43IUS3IVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43IUS3IVF43_Clone)
    SetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43IUS3IVF43_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43IUS3IVF43_GetMaskImage)
    SetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43IUS3IVF43_SetOutsideValue)
    GetOutsideValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43IUS3IVF43_GetOutsideValue)
    SetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43IUS3IVF43_SetMaskingValue)
    GetMaskingValue = _swig_new_instance_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43IUS3IVF43_GetMaskingValue)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUS3IVF43_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUS3IVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF43IUS3IVF43
    cast = _swig_new_static_method(_itkMaskImageFilterPython.itkMaskImageFilterIVF43IUS3IVF43_cast)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF43IUS3IVF43

        Create a new object of the class itkMaskImageFilterIVF43IUS3IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF43IUS3IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF43IUS3IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF43IUS3IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF43IUS3IVF43 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF43IUS3IVF43_swigregister(itkMaskImageFilterIVF43IUS3IVF43)
itkMaskImageFilterIVF43IUS3IVF43___New_orig__ = _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUS3IVF43___New_orig__
itkMaskImageFilterIVF43IUS3IVF43_cast = _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUS3IVF43_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def mask_image_filter(*args, **kwargs):
    """Procedural interface for MaskImageFilter"""
    import itk
    instance = itk.MaskImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def mask_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.MaskImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.MaskImageFilter.values()[0]
    else:
        filter_object = itk.MaskImageFilter

    mask_image_filter.__doc__ = filter_object.__doc__
    mask_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    mask_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.MaskImageFilter, itkTemplate.itkTemplate):
        mask_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        mask_image_filter.__doc__ += "\n"
        mask_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        mask_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



