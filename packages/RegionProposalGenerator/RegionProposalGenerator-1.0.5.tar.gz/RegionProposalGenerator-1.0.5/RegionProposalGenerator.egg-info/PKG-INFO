Metadata-Version: 1.2
Name: RegionProposalGenerator
Version: 1.0.5
Summary: An educational module for generating region proposals for object detection
Home-page: https://engineering.purdue.edu/kak/distRPG/RegionProposalGenerator-1.0.5.html
Author: Avinash Kak
Author-email: kak@purdue.edu
Maintainer: Avinash Kak
Maintainer-email: kak@purdue.edu
License: Python Software Foundation License
Download-URL: https://engineering.purdue.edu/kak/distRPG/RegionProposalGenerator-1.0.5.tar.gz
Description: 
        
        Consult the module API page at
        
              https://engineering.purdue.edu/kak/distRPG/RegionProposalGenerator-1.0.5.html
        
        for all information related to this module, including information related
        to the latest changes to the code.  The page at the URL shown above lists
        all of the module functionality you can invoke in your own code.
        
        ::
        
                from RegionProposalGenerator import *
        
                rpg = RegionProposalGenerator(
                               ###  The first 6 options affect only the graph-based part of the algo
                               sigma = 1.0,
                               max_iterations = 40,
                               kay = 0.05,
                               image_normalization_required = True,
                               image_size_reduction_factor = 4,
                               min_size_for_graph_based_blobs = 4,
                               ###  The next 4 options affect only the Selective Search part of the algo
                               color_homogeneity_thresh = [20,20,20],
                               gray_var_thresh = 16000,           
                               texture_homogeneity_thresh = 120,
                               max_num_blobs_expected = 8,
                      )
                
                image_name = "images/mondrian.jpg"
                segmented_graph,color_map = rpg.graph_based_segmentation(image_name)
                rpg.visualize_segmentation_in_pseudocolor(segmented_graph[0], color_map, "graph_based" )
                merged_blobs, color_map = rpg.selective_search_for_region_proposals( segmented_graph, image_name )
                rpg.visualize_segmentation_with_mean_gray(merged_blobs, "ss_based_segmentation_in_bw" )
        
                  
Keywords: o,b,j,e,c,t, ,d,e,t,e,c,t,i,o,n,,, ,i,m,a,g,e, ,s,e,g,m,e,n,t,a,t,i,o,n,,, ,c,o,m,p,u,t,e,r, ,v,i,s,i,o,n
Platform: A
Platform: l
Platform: l
Platform:  
Platform: p
Platform: l
Platform: a
Platform: t
Platform: f
Platform: o
Platform: r
Platform: m
Platform: s
Classifier: Topic :: Scientific/Engineering :: Image Recognition
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.8
