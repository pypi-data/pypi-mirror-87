# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: blickfeld/data/scanline.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from ..data import point_pb2 as blickfeld_dot_data_dot_point__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='blickfeld/data/scanline.proto',
  package='blickfeld.protocol.data',
  syntax='proto2',
  serialized_options=None,
  serialized_pb=_b('\n\x1d\x62lickfeld/data/scanline.proto\x12\x17\x62lickfeld.protocol.data\x1a\x1a\x62lickfeld/data/point.proto\"q\n\x08Scanline\x12\n\n\x02id\x18\x01 \x01(\x04\x12\x10\n\x08\x66rame_id\x18\x02 \x01(\x04\x12.\n\x06points\x18\x03 \x03(\x0b\x32\x1e.blickfeld.protocol.data.Point\x12\x17\n\x0fstart_offset_ns\x18\x04 \x01(\x04')
  ,
  dependencies=[blickfeld_dot_data_dot_point__pb2.DESCRIPTOR,])




_SCANLINE = _descriptor.Descriptor(
  name='Scanline',
  full_name='blickfeld.protocol.data.Scanline',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='blickfeld.protocol.data.Scanline.id', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='frame_id', full_name='blickfeld.protocol.data.Scanline.frame_id', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='points', full_name='blickfeld.protocol.data.Scanline.points', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='start_offset_ns', full_name='blickfeld.protocol.data.Scanline.start_offset_ns', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=86,
  serialized_end=199,
)

_SCANLINE.fields_by_name['points'].message_type = blickfeld_dot_data_dot_point__pb2._POINT
DESCRIPTOR.message_types_by_name['Scanline'] = _SCANLINE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Scanline = _reflection.GeneratedProtocolMessageType('Scanline', (_message.Message,), dict(
  DESCRIPTOR = _SCANLINE,
  __module__ = 'blickfeld.data.scanline_pb2'
  # @@protoc_insertion_point(class_scope:blickfeld.protocol.data.Scanline)
  ))
_sym_db.RegisterMessage(Scanline)


# @@protoc_insertion_point(module_scope)
