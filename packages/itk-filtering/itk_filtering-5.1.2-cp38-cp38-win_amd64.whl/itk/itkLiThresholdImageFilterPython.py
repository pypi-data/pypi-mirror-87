# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKThresholdingPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkLiThresholdImageFilterPython
else:
    import _itkLiThresholdImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkLiThresholdImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkLiThresholdImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkHistogramThresholdImageFilterPython
import itk.itkImageToHistogramFilterPython
import itk.itkHistogramPython
import itk.itkSamplePython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.ITKCommonBasePython
import itk.itkArrayPython
import itk.itkImageSinkPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImagePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkHistogramThresholdCalculatorPython

def itkLiThresholdImageFilterID2ISS2_New():
    return itkLiThresholdImageFilterID2ISS2.New()

class itkLiThresholdImageFilterID2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2ISS2_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterID2ISS2
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterID2ISS2

        Create a new object of the class itkLiThresholdImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterID2ISS2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2ISS2_swigregister(itkLiThresholdImageFilterID2ISS2)
itkLiThresholdImageFilterID2ISS2___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2ISS2___New_orig__
itkLiThresholdImageFilterID2ISS2_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2ISS2_cast


def itkLiThresholdImageFilterID2IUC2_New():
    return itkLiThresholdImageFilterID2IUC2.New()

class itkLiThresholdImageFilterID2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2IUC2_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterID2IUC2
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterID2IUC2

        Create a new object of the class itkLiThresholdImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterID2IUC2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2IUC2_swigregister(itkLiThresholdImageFilterID2IUC2)
itkLiThresholdImageFilterID2IUC2___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2IUC2___New_orig__
itkLiThresholdImageFilterID2IUC2_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2IUC2_cast


def itkLiThresholdImageFilterID2IUS2_New():
    return itkLiThresholdImageFilterID2IUS2.New()

class itkLiThresholdImageFilterID2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2IUS2_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterID2IUS2
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterID2IUS2

        Create a new object of the class itkLiThresholdImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterID2IUS2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2IUS2_swigregister(itkLiThresholdImageFilterID2IUS2)
itkLiThresholdImageFilterID2IUS2___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2IUS2___New_orig__
itkLiThresholdImageFilterID2IUS2_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2IUS2_cast


def itkLiThresholdImageFilterID3ISS3_New():
    return itkLiThresholdImageFilterID3ISS3.New()

class itkLiThresholdImageFilterID3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3ISS3_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterID3ISS3
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterID3ISS3

        Create a new object of the class itkLiThresholdImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterID3ISS3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3ISS3_swigregister(itkLiThresholdImageFilterID3ISS3)
itkLiThresholdImageFilterID3ISS3___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3ISS3___New_orig__
itkLiThresholdImageFilterID3ISS3_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3ISS3_cast


def itkLiThresholdImageFilterID3IUC3_New():
    return itkLiThresholdImageFilterID3IUC3.New()

class itkLiThresholdImageFilterID3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3IUC3_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterID3IUC3
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterID3IUC3

        Create a new object of the class itkLiThresholdImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterID3IUC3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3IUC3_swigregister(itkLiThresholdImageFilterID3IUC3)
itkLiThresholdImageFilterID3IUC3___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3IUC3___New_orig__
itkLiThresholdImageFilterID3IUC3_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3IUC3_cast


def itkLiThresholdImageFilterID3IUS3_New():
    return itkLiThresholdImageFilterID3IUS3.New()

class itkLiThresholdImageFilterID3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3IUS3_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterID3IUS3
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterID3IUS3

        Create a new object of the class itkLiThresholdImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterID3IUS3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3IUS3_swigregister(itkLiThresholdImageFilterID3IUS3)
itkLiThresholdImageFilterID3IUS3___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3IUS3___New_orig__
itkLiThresholdImageFilterID3IUS3_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3IUS3_cast


def itkLiThresholdImageFilterIF2ISS2_New():
    return itkLiThresholdImageFilterIF2ISS2.New()

class itkLiThresholdImageFilterIF2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2ISS2_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIF2ISS2
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIF2ISS2

        Create a new object of the class itkLiThresholdImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIF2ISS2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2ISS2_swigregister(itkLiThresholdImageFilterIF2ISS2)
itkLiThresholdImageFilterIF2ISS2___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2ISS2___New_orig__
itkLiThresholdImageFilterIF2ISS2_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2ISS2_cast


def itkLiThresholdImageFilterIF2IUC2_New():
    return itkLiThresholdImageFilterIF2IUC2.New()

class itkLiThresholdImageFilterIF2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2IUC2_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIF2IUC2
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIF2IUC2

        Create a new object of the class itkLiThresholdImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIF2IUC2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2IUC2_swigregister(itkLiThresholdImageFilterIF2IUC2)
itkLiThresholdImageFilterIF2IUC2___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2IUC2___New_orig__
itkLiThresholdImageFilterIF2IUC2_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2IUC2_cast


def itkLiThresholdImageFilterIF2IUS2_New():
    return itkLiThresholdImageFilterIF2IUS2.New()

class itkLiThresholdImageFilterIF2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2IUS2_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIF2IUS2
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIF2IUS2

        Create a new object of the class itkLiThresholdImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIF2IUS2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2IUS2_swigregister(itkLiThresholdImageFilterIF2IUS2)
itkLiThresholdImageFilterIF2IUS2___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2IUS2___New_orig__
itkLiThresholdImageFilterIF2IUS2_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2IUS2_cast


def itkLiThresholdImageFilterIF3ISS3_New():
    return itkLiThresholdImageFilterIF3ISS3.New()

class itkLiThresholdImageFilterIF3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3ISS3_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIF3ISS3
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIF3ISS3

        Create a new object of the class itkLiThresholdImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIF3ISS3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3ISS3_swigregister(itkLiThresholdImageFilterIF3ISS3)
itkLiThresholdImageFilterIF3ISS3___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3ISS3___New_orig__
itkLiThresholdImageFilterIF3ISS3_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3ISS3_cast


def itkLiThresholdImageFilterIF3IUC3_New():
    return itkLiThresholdImageFilterIF3IUC3.New()

class itkLiThresholdImageFilterIF3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3IUC3_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIF3IUC3
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIF3IUC3

        Create a new object of the class itkLiThresholdImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIF3IUC3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3IUC3_swigregister(itkLiThresholdImageFilterIF3IUC3)
itkLiThresholdImageFilterIF3IUC3___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3IUC3___New_orig__
itkLiThresholdImageFilterIF3IUC3_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3IUC3_cast


def itkLiThresholdImageFilterIF3IUS3_New():
    return itkLiThresholdImageFilterIF3IUS3.New()

class itkLiThresholdImageFilterIF3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3IUS3_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIF3IUS3
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIF3IUS3

        Create a new object of the class itkLiThresholdImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIF3IUS3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3IUS3_swigregister(itkLiThresholdImageFilterIF3IUS3)
itkLiThresholdImageFilterIF3IUS3___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3IUS3___New_orig__
itkLiThresholdImageFilterIF3IUS3_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3IUS3_cast


def itkLiThresholdImageFilterISS2ISS2_New():
    return itkLiThresholdImageFilterISS2ISS2.New()

class itkLiThresholdImageFilterISS2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2ISS2_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterISS2ISS2

        Create a new object of the class itkLiThresholdImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterISS2ISS2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2ISS2_swigregister(itkLiThresholdImageFilterISS2ISS2)
itkLiThresholdImageFilterISS2ISS2___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2ISS2___New_orig__
itkLiThresholdImageFilterISS2ISS2_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2ISS2_cast


def itkLiThresholdImageFilterISS2IUC2_New():
    return itkLiThresholdImageFilterISS2IUC2.New()

class itkLiThresholdImageFilterISS2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2IUC2_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterISS2IUC2
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterISS2IUC2

        Create a new object of the class itkLiThresholdImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterISS2IUC2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2IUC2_swigregister(itkLiThresholdImageFilterISS2IUC2)
itkLiThresholdImageFilterISS2IUC2___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2IUC2___New_orig__
itkLiThresholdImageFilterISS2IUC2_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2IUC2_cast


def itkLiThresholdImageFilterISS2IUS2_New():
    return itkLiThresholdImageFilterISS2IUS2.New()

class itkLiThresholdImageFilterISS2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2IUS2_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterISS2IUS2
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterISS2IUS2

        Create a new object of the class itkLiThresholdImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterISS2IUS2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2IUS2_swigregister(itkLiThresholdImageFilterISS2IUS2)
itkLiThresholdImageFilterISS2IUS2___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2IUS2___New_orig__
itkLiThresholdImageFilterISS2IUS2_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2IUS2_cast


def itkLiThresholdImageFilterISS3ISS3_New():
    return itkLiThresholdImageFilterISS3ISS3.New()

class itkLiThresholdImageFilterISS3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3ISS3_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterISS3ISS3

        Create a new object of the class itkLiThresholdImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterISS3ISS3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3ISS3_swigregister(itkLiThresholdImageFilterISS3ISS3)
itkLiThresholdImageFilterISS3ISS3___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3ISS3___New_orig__
itkLiThresholdImageFilterISS3ISS3_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3ISS3_cast


def itkLiThresholdImageFilterISS3IUC3_New():
    return itkLiThresholdImageFilterISS3IUC3.New()

class itkLiThresholdImageFilterISS3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3IUC3_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterISS3IUC3
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterISS3IUC3

        Create a new object of the class itkLiThresholdImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterISS3IUC3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3IUC3_swigregister(itkLiThresholdImageFilterISS3IUC3)
itkLiThresholdImageFilterISS3IUC3___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3IUC3___New_orig__
itkLiThresholdImageFilterISS3IUC3_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3IUC3_cast


def itkLiThresholdImageFilterISS3IUS3_New():
    return itkLiThresholdImageFilterISS3IUS3.New()

class itkLiThresholdImageFilterISS3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3IUS3_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterISS3IUS3
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterISS3IUS3

        Create a new object of the class itkLiThresholdImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterISS3IUS3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3IUS3_swigregister(itkLiThresholdImageFilterISS3IUS3)
itkLiThresholdImageFilterISS3IUS3___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3IUS3___New_orig__
itkLiThresholdImageFilterISS3IUS3_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3IUS3_cast


def itkLiThresholdImageFilterIUC2ISS2_New():
    return itkLiThresholdImageFilterIUC2ISS2.New()

class itkLiThresholdImageFilterIUC2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2ISS2_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUC2ISS2
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUC2ISS2

        Create a new object of the class itkLiThresholdImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUC2ISS2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2ISS2_swigregister(itkLiThresholdImageFilterIUC2ISS2)
itkLiThresholdImageFilterIUC2ISS2___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2ISS2___New_orig__
itkLiThresholdImageFilterIUC2ISS2_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2ISS2_cast


def itkLiThresholdImageFilterIUC2IUC2_New():
    return itkLiThresholdImageFilterIUC2IUC2.New()

class itkLiThresholdImageFilterIUC2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2IUC2_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUC2IUC2

        Create a new object of the class itkLiThresholdImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUC2IUC2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2IUC2_swigregister(itkLiThresholdImageFilterIUC2IUC2)
itkLiThresholdImageFilterIUC2IUC2___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2IUC2___New_orig__
itkLiThresholdImageFilterIUC2IUC2_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2IUC2_cast


def itkLiThresholdImageFilterIUC2IUS2_New():
    return itkLiThresholdImageFilterIUC2IUS2.New()

class itkLiThresholdImageFilterIUC2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2IUS2_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUC2IUS2
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUC2IUS2

        Create a new object of the class itkLiThresholdImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUC2IUS2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2IUS2_swigregister(itkLiThresholdImageFilterIUC2IUS2)
itkLiThresholdImageFilterIUC2IUS2___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2IUS2___New_orig__
itkLiThresholdImageFilterIUC2IUS2_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2IUS2_cast


def itkLiThresholdImageFilterIUC3ISS3_New():
    return itkLiThresholdImageFilterIUC3ISS3.New()

class itkLiThresholdImageFilterIUC3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3ISS3_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUC3ISS3
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUC3ISS3

        Create a new object of the class itkLiThresholdImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUC3ISS3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3ISS3_swigregister(itkLiThresholdImageFilterIUC3ISS3)
itkLiThresholdImageFilterIUC3ISS3___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3ISS3___New_orig__
itkLiThresholdImageFilterIUC3ISS3_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3ISS3_cast


def itkLiThresholdImageFilterIUC3IUC3_New():
    return itkLiThresholdImageFilterIUC3IUC3.New()

class itkLiThresholdImageFilterIUC3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3IUC3_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUC3IUC3

        Create a new object of the class itkLiThresholdImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUC3IUC3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3IUC3_swigregister(itkLiThresholdImageFilterIUC3IUC3)
itkLiThresholdImageFilterIUC3IUC3___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3IUC3___New_orig__
itkLiThresholdImageFilterIUC3IUC3_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3IUC3_cast


def itkLiThresholdImageFilterIUC3IUS3_New():
    return itkLiThresholdImageFilterIUC3IUS3.New()

class itkLiThresholdImageFilterIUC3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3IUS3_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUC3IUS3
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUC3IUS3

        Create a new object of the class itkLiThresholdImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUC3IUS3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3IUS3_swigregister(itkLiThresholdImageFilterIUC3IUS3)
itkLiThresholdImageFilterIUC3IUS3___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3IUS3___New_orig__
itkLiThresholdImageFilterIUC3IUS3_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3IUS3_cast


def itkLiThresholdImageFilterIUS2ISS2_New():
    return itkLiThresholdImageFilterIUS2ISS2.New()

class itkLiThresholdImageFilterIUS2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2ISS2_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUS2ISS2
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUS2ISS2

        Create a new object of the class itkLiThresholdImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUS2ISS2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2ISS2_swigregister(itkLiThresholdImageFilterIUS2ISS2)
itkLiThresholdImageFilterIUS2ISS2___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2ISS2___New_orig__
itkLiThresholdImageFilterIUS2ISS2_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2ISS2_cast


def itkLiThresholdImageFilterIUS2IUC2_New():
    return itkLiThresholdImageFilterIUS2IUC2.New()

class itkLiThresholdImageFilterIUS2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2IUC2_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUS2IUC2
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUS2IUC2

        Create a new object of the class itkLiThresholdImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUS2IUC2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2IUC2_swigregister(itkLiThresholdImageFilterIUS2IUC2)
itkLiThresholdImageFilterIUS2IUC2___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2IUC2___New_orig__
itkLiThresholdImageFilterIUS2IUC2_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2IUC2_cast


def itkLiThresholdImageFilterIUS2IUS2_New():
    return itkLiThresholdImageFilterIUS2IUS2.New()

class itkLiThresholdImageFilterIUS2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2IUS2_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUS2IUS2

        Create a new object of the class itkLiThresholdImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUS2IUS2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2IUS2_swigregister(itkLiThresholdImageFilterIUS2IUS2)
itkLiThresholdImageFilterIUS2IUS2___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2IUS2___New_orig__
itkLiThresholdImageFilterIUS2IUS2_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2IUS2_cast


def itkLiThresholdImageFilterIUS3ISS3_New():
    return itkLiThresholdImageFilterIUS3ISS3.New()

class itkLiThresholdImageFilterIUS3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3ISS3_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUS3ISS3
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUS3ISS3

        Create a new object of the class itkLiThresholdImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUS3ISS3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3ISS3_swigregister(itkLiThresholdImageFilterIUS3ISS3)
itkLiThresholdImageFilterIUS3ISS3___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3ISS3___New_orig__
itkLiThresholdImageFilterIUS3ISS3_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3ISS3_cast


def itkLiThresholdImageFilterIUS3IUC3_New():
    return itkLiThresholdImageFilterIUS3IUC3.New()

class itkLiThresholdImageFilterIUS3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3IUC3_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUS3IUC3
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUS3IUC3

        Create a new object of the class itkLiThresholdImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUS3IUC3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3IUC3_swigregister(itkLiThresholdImageFilterIUS3IUC3)
itkLiThresholdImageFilterIUS3IUC3___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3IUC3___New_orig__
itkLiThresholdImageFilterIUS3IUC3_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3IUC3_cast


def itkLiThresholdImageFilterIUS3IUS3_New():
    return itkLiThresholdImageFilterIUS3IUS3.New()

class itkLiThresholdImageFilterIUS3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3):
    r"""


    Threshold an image using the Li Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the LiThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter
    {Filtering/Thresholding/DemonstrateThresholdAlgorithms,Demonstrate
    Available Threshold Algorithms} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3IUS3_Clone)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUS3IUS3

        Create a new object of the class itkLiThresholdImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUS3IUS3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3IUS3_swigregister(itkLiThresholdImageFilterIUS3IUS3)
itkLiThresholdImageFilterIUS3IUS3___New_orig__ = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3IUS3___New_orig__
itkLiThresholdImageFilterIUS3IUS3_cast = _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def li_threshold_image_filter(*args, **kwargs):
    """Procedural interface for LiThresholdImageFilter"""
    import itk
    instance = itk.LiThresholdImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def li_threshold_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.LiThresholdImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.LiThresholdImageFilter.values()[0]
    else:
        filter_object = itk.LiThresholdImageFilter

    li_threshold_image_filter.__doc__ = filter_object.__doc__
    li_threshold_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    li_threshold_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.LiThresholdImageFilter, itkTemplate.itkTemplate):
        li_threshold_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        li_threshold_image_filter.__doc__ += "\n"
        li_threshold_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        li_threshold_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



