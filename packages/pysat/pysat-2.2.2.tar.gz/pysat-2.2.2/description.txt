The Python Satellite Data Analysis Toolkit (pysat) is a package providing a simple and flexible interface
for downloading, loading, cleaning, managing, processing, and analyzing scientific 
measurements. Though pysat was initially designed for in-situ
satellite based measurements it aims to support all instruments in space science.

Main Features
-------------
- Instrument independent analysis routines.
- Instrument object providing an interface for downloading and analyzing a wide variety of science data sets.
  - Uses pandas for the underlying data structure; capable of handling the many forms scientific measurements take in a consistent manner.
  - Science data pipeline tasks of identifying files, loading, cleaning, and modifying data sets are built into the instrument object.
  - Supports metadata consistent with the netCDF CF-1.6 standard. Each variable has a name, long name, and units. Note units are informational only.
- Simplifies data management
  - Iterator support for loading data by day/file/orbit, independent of data storage details.
  - Orbits are calculated on the fly from loaded data and span day breaks.
  - Iterate over custom seasons
- Supports rigorous time-series calculations that require spin up/down time across day/file breaks. 
- Includes helper functions to reduce the barrier in adding new science instruments to pysat

Documentation
---------------------
`Full Documentation <http://pysat.readthedocs.io/en/latest/>`_

`JGR-Space Physics Publication <https://doi.org/10.1029/2018JA025297>`_

Optional External Requirements
------------------------------
For data in netCDF format:

- netCDF3 files may be loaded using SciPy alone

- For netCDF4 files, Unidata netCDF libraries in C are required, along with
- netCDF4 python package