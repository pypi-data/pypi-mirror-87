# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKSpatialObjectsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSpatialObjectBasePython
else:
    import _itkSpatialObjectBasePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkSpatialObjectBasePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkSpatialObjectBasePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkSpatialObjectPropertyPython
import itk.itkRGBAPixelPython
import itk.ITKCommonBasePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkPointPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkVariableLengthVectorPython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkTransformBasePython
import itk.itkArray2DPython
class listitkSpatialObject2_Pointer(object):
    r"""Proxy of C++ std::list< itkSpatialObject2_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer___nonzero__)
    __bool__ = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer___bool__)
    __len__ = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer___len__)
    __getslice__ = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer___getslice__)
    __setslice__ = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer___setslice__)
    __delslice__ = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer___delslice__)
    __delitem__ = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer___delitem__)
    __getitem__ = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer___getitem__)
    __setitem__ = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer___setitem__)
    pop = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer_pop)
    append = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer_append)
    empty = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer_empty)
    size = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer_size)
    swap = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer_swap)
    begin = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer_begin)
    end = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer_end)
    rbegin = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer_rbegin)
    rend = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer_rend)
    clear = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer_clear)
    get_allocator = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer_get_allocator)
    pop_back = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer_pop_back)
    erase = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer_erase)

    def __init__(self, *args):
        r"""
        __init__(listitkSpatialObject2_Pointer self) -> listitkSpatialObject2_Pointer
        __init__(listitkSpatialObject2_Pointer self, listitkSpatialObject2_Pointer other) -> listitkSpatialObject2_Pointer
        __init__(listitkSpatialObject2_Pointer self, std::list< itkSpatialObject2_Pointer >::size_type size) -> listitkSpatialObject2_Pointer
        __init__(listitkSpatialObject2_Pointer self, std::list< itkSpatialObject2_Pointer >::size_type size, std::list< itkSpatialObject2_Pointer >::value_type const & value) -> listitkSpatialObject2_Pointer
        """
        _itkSpatialObjectBasePython.listitkSpatialObject2_Pointer_swiginit(self, _itkSpatialObjectBasePython.new_listitkSpatialObject2_Pointer(*args))
    push_back = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer_push_back)
    front = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer_front)
    back = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer_back)
    assign = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer_assign)
    resize = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer_resize)
    insert = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer_insert)
    pop_front = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer_pop_front)
    push_front = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer_push_front)
    reverse = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer_reverse)
    __swig_destroy__ = _itkSpatialObjectBasePython.delete_listitkSpatialObject2_Pointer

# Register listitkSpatialObject2_Pointer in _itkSpatialObjectBasePython:
_itkSpatialObjectBasePython.listitkSpatialObject2_Pointer_swigregister(listitkSpatialObject2_Pointer)

class listitkSpatialObject3_Pointer(object):
    r"""Proxy of C++ std::list< itkSpatialObject3_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer___nonzero__)
    __bool__ = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer___bool__)
    __len__ = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer___len__)
    __getslice__ = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer___getslice__)
    __setslice__ = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer___setslice__)
    __delslice__ = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer___delslice__)
    __delitem__ = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer___delitem__)
    __getitem__ = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer___getitem__)
    __setitem__ = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer___setitem__)
    pop = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer_pop)
    append = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer_append)
    empty = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer_empty)
    size = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer_size)
    swap = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer_swap)
    begin = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer_begin)
    end = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer_end)
    rbegin = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer_rbegin)
    rend = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer_rend)
    clear = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer_clear)
    get_allocator = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer_get_allocator)
    pop_back = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer_pop_back)
    erase = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer_erase)

    def __init__(self, *args):
        r"""
        __init__(listitkSpatialObject3_Pointer self) -> listitkSpatialObject3_Pointer
        __init__(listitkSpatialObject3_Pointer self, listitkSpatialObject3_Pointer other) -> listitkSpatialObject3_Pointer
        __init__(listitkSpatialObject3_Pointer self, std::list< itkSpatialObject3_Pointer >::size_type size) -> listitkSpatialObject3_Pointer
        __init__(listitkSpatialObject3_Pointer self, std::list< itkSpatialObject3_Pointer >::size_type size, std::list< itkSpatialObject3_Pointer >::value_type const & value) -> listitkSpatialObject3_Pointer
        """
        _itkSpatialObjectBasePython.listitkSpatialObject3_Pointer_swiginit(self, _itkSpatialObjectBasePython.new_listitkSpatialObject3_Pointer(*args))
    push_back = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer_push_back)
    front = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer_front)
    back = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer_back)
    assign = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer_assign)
    resize = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer_resize)
    insert = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer_insert)
    pop_front = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer_pop_front)
    push_front = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer_push_front)
    reverse = _swig_new_instance_method(_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer_reverse)
    __swig_destroy__ = _itkSpatialObjectBasePython.delete_listitkSpatialObject3_Pointer

# Register listitkSpatialObject3_Pointer in _itkSpatialObjectBasePython:
_itkSpatialObjectBasePython.listitkSpatialObject3_Pointer_swigregister(listitkSpatialObject3_Pointer)

class itkMetaEvent_Superclass(object):
    r"""Proxy of C++ itkMetaEvent_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkSpatialObjectBasePython.delete_itkMetaEvent_Superclass
    SetCurrentIteration = _swig_new_instance_method(_itkSpatialObjectBasePython.itkMetaEvent_Superclass_SetCurrentIteration)
    StartReading = _swig_new_instance_method(_itkSpatialObjectBasePython.itkMetaEvent_Superclass_StartReading)
    StopReading = _swig_new_instance_method(_itkSpatialObjectBasePython.itkMetaEvent_Superclass_StopReading)

    def __init__(self, *args):
        r"""
        __init__(itkMetaEvent_Superclass self) -> itkMetaEvent_Superclass
        __init__(itkMetaEvent_Superclass self, itkMetaEvent_Superclass arg0) -> itkMetaEvent_Superclass
        """
        _itkSpatialObjectBasePython.itkMetaEvent_Superclass_swiginit(self, _itkSpatialObjectBasePython.new_itkMetaEvent_Superclass(*args))

# Register itkMetaEvent_Superclass in _itkSpatialObjectBasePython:
_itkSpatialObjectBasePython.itkMetaEvent_Superclass_swigregister(itkMetaEvent_Superclass)


def itkSpatialObject2_New():
    return itkSpatialObject2.New()

class itkSpatialObject2(itk.ITKCommonBasePython.itkDataObject):
    r"""


    Implementation of the composite pattern.

    The purpose of this class is to implement the composite pattern
    [Design Patterns, Gamma, 1995] within itk, so that it becomes easy to
    create an environment containing objects within a scene, and to
    manipulate the environment as a whole or any of its component objects.
    An object has a list of transformations to transform object
    coordinates to the corresponding coordinates in the real world
    coordinate system, and a list of inverse transformation to go
    backward. Any spatial objects can be plugged to a spatial object as
    children. To implement your own spatial object, you need to derive
    from the following class, which requires the definition of just a few
    pure virtual functions. Examples of such functions are
    ValueAtInWorldSpace(), IsEvaluableAtInWorldSpace(), and
    IsInsideInWorldSpace(), each of which has a meaning specific to each
    particular object type. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetMaximumDepth = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetMaximumDepth)
    GetObjectDimension = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetObjectDimension)
    __New_orig__ = _swig_new_static_method(_itkSpatialObjectBasePython.itkSpatialObject2___New_orig__)
    Clone = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_Clone)
    SetId = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_SetId)
    GetId = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetId)
    SetTypeName = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_SetTypeName)
    GetTypeName = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetTypeName)
    GetClassNameAndDimension = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetClassNameAndDimension)
    Clear = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_Clear)
    SetProperty = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_SetProperty)
    GetProperty = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetProperty)
    GetMyMTime = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetMyMTime)
    SetObjectToWorldTransform = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_SetObjectToWorldTransform)
    GetModifiableObjectToWorldTransform = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetModifiableObjectToWorldTransform)
    GetObjectToWorldTransform = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetObjectToWorldTransform)
    GetObjectToWorldTransformInverse = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetObjectToWorldTransformInverse)
    SetObjectToParentTransform = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_SetObjectToParentTransform)
    GetModifiableObjectToParentTransform = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetModifiableObjectToParentTransform)
    GetObjectToParentTransform = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetObjectToParentTransform)
    GetObjectToParentTransformInverse = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetObjectToParentTransformInverse)
    ComputeObjectToParentTransform = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_ComputeObjectToParentTransform)
    IsInsideInObjectSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_IsInsideInObjectSpace)
    ValueAtInObjectSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_ValueAtInObjectSpace)
    IsEvaluableAtInObjectSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_IsEvaluableAtInObjectSpace)
    IsInsideChildrenInObjectSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_IsInsideChildrenInObjectSpace)
    ValueAtChildrenInObjectSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_ValueAtChildrenInObjectSpace)
    IsEvaluableAtChildrenInObjectSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_IsEvaluableAtChildrenInObjectSpace)
    SetDefaultInsideValue = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_SetDefaultInsideValue)
    GetDefaultInsideValue = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetDefaultInsideValue)
    SetDefaultOutsideValue = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_SetDefaultOutsideValue)
    GetDefaultOutsideValue = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetDefaultOutsideValue)
    ValueAtInWorldSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_ValueAtInWorldSpace)
    IsInsideInWorldSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_IsInsideInWorldSpace)
    IsEvaluableAtInWorldSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_IsEvaluableAtInWorldSpace)
    DerivativeAtInObjectSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_DerivativeAtInObjectSpace)
    DerivativeAtInWorldSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_DerivativeAtInWorldSpace)
    SetParent = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_SetParent)
    HasParent = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_HasParent)
    GetParent = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetParent)
    SetParentId = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_SetParentId)
    GetParentId = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetParentId)
    SetChildren = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_SetChildren)
    AddChild = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_AddChild)
    RemoveChild = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_RemoveChild)
    RemoveAllChildren = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_RemoveAllChildren)
    GetChildren = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetChildren)
    AddChildrenToList = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_AddChildrenToList)
    GetNumberOfChildren = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetNumberOfChildren)
    GetObjectById = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetObjectById)
    FixParentChildHierarchyUsingParentIds = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_FixParentChildHierarchyUsingParentIds)
    CheckIdValidity = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_CheckIdValidity)
    FixIdValidity = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_FixIdValidity)
    GetNextAvailableId = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetNextAvailableId)
    GetMyBoundingBoxInObjectSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetMyBoundingBoxInObjectSpace)
    GetMyBoundingBoxInWorldSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetMyBoundingBoxInWorldSpace)
    ComputeFamilyBoundingBox = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_ComputeFamilyBoundingBox)
    GetFamilyBoundingBoxInObjectSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetFamilyBoundingBoxInObjectSpace)
    GetFamilyBoundingBoxInWorldSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetFamilyBoundingBoxInWorldSpace)
    SetLargestPossibleRegion = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_SetLargestPossibleRegion)
    GetLargestPossibleRegion = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetLargestPossibleRegion)
    SetBufferedRegion = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_SetBufferedRegion)
    GetBufferedRegion = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetBufferedRegion)
    SetRequestedRegion = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_SetRequestedRegion)
    GetRequestedRegion = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_GetRequestedRegion)
    Evaluate = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject2_Evaluate)
    __swig_destroy__ = _itkSpatialObjectBasePython.delete_itkSpatialObject2
    cast = _swig_new_static_method(_itkSpatialObjectBasePython.itkSpatialObject2_cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObject2

        Create a new object of the class itkSpatialObject2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObject2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpatialObject2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpatialObject2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpatialObject2 in _itkSpatialObjectBasePython:
_itkSpatialObjectBasePython.itkSpatialObject2_swigregister(itkSpatialObject2)
itkSpatialObject2___New_orig__ = _itkSpatialObjectBasePython.itkSpatialObject2___New_orig__
itkSpatialObject2_cast = _itkSpatialObjectBasePython.itkSpatialObject2_cast


def itkSpatialObject3_New():
    return itkSpatialObject3.New()

class itkSpatialObject3(itk.ITKCommonBasePython.itkDataObject):
    r"""


    Implementation of the composite pattern.

    The purpose of this class is to implement the composite pattern
    [Design Patterns, Gamma, 1995] within itk, so that it becomes easy to
    create an environment containing objects within a scene, and to
    manipulate the environment as a whole or any of its component objects.
    An object has a list of transformations to transform object
    coordinates to the corresponding coordinates in the real world
    coordinate system, and a list of inverse transformation to go
    backward. Any spatial objects can be plugged to a spatial object as
    children. To implement your own spatial object, you need to derive
    from the following class, which requires the definition of just a few
    pure virtual functions. Examples of such functions are
    ValueAtInWorldSpace(), IsEvaluableAtInWorldSpace(), and
    IsInsideInWorldSpace(), each of which has a meaning specific to each
    particular object type. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetMaximumDepth = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetMaximumDepth)
    GetObjectDimension = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetObjectDimension)
    __New_orig__ = _swig_new_static_method(_itkSpatialObjectBasePython.itkSpatialObject3___New_orig__)
    Clone = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_Clone)
    SetId = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_SetId)
    GetId = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetId)
    SetTypeName = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_SetTypeName)
    GetTypeName = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetTypeName)
    GetClassNameAndDimension = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetClassNameAndDimension)
    Clear = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_Clear)
    SetProperty = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_SetProperty)
    GetProperty = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetProperty)
    GetMyMTime = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetMyMTime)
    SetObjectToWorldTransform = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_SetObjectToWorldTransform)
    GetModifiableObjectToWorldTransform = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetModifiableObjectToWorldTransform)
    GetObjectToWorldTransform = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetObjectToWorldTransform)
    GetObjectToWorldTransformInverse = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetObjectToWorldTransformInverse)
    SetObjectToParentTransform = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_SetObjectToParentTransform)
    GetModifiableObjectToParentTransform = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetModifiableObjectToParentTransform)
    GetObjectToParentTransform = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetObjectToParentTransform)
    GetObjectToParentTransformInverse = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetObjectToParentTransformInverse)
    ComputeObjectToParentTransform = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_ComputeObjectToParentTransform)
    IsInsideInObjectSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_IsInsideInObjectSpace)
    ValueAtInObjectSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_ValueAtInObjectSpace)
    IsEvaluableAtInObjectSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_IsEvaluableAtInObjectSpace)
    IsInsideChildrenInObjectSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_IsInsideChildrenInObjectSpace)
    ValueAtChildrenInObjectSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_ValueAtChildrenInObjectSpace)
    IsEvaluableAtChildrenInObjectSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_IsEvaluableAtChildrenInObjectSpace)
    SetDefaultInsideValue = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_SetDefaultInsideValue)
    GetDefaultInsideValue = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetDefaultInsideValue)
    SetDefaultOutsideValue = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_SetDefaultOutsideValue)
    GetDefaultOutsideValue = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetDefaultOutsideValue)
    ValueAtInWorldSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_ValueAtInWorldSpace)
    IsInsideInWorldSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_IsInsideInWorldSpace)
    IsEvaluableAtInWorldSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_IsEvaluableAtInWorldSpace)
    DerivativeAtInObjectSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_DerivativeAtInObjectSpace)
    DerivativeAtInWorldSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_DerivativeAtInWorldSpace)
    SetParent = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_SetParent)
    HasParent = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_HasParent)
    GetParent = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetParent)
    SetParentId = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_SetParentId)
    GetParentId = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetParentId)
    SetChildren = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_SetChildren)
    AddChild = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_AddChild)
    RemoveChild = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_RemoveChild)
    RemoveAllChildren = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_RemoveAllChildren)
    GetChildren = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetChildren)
    AddChildrenToList = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_AddChildrenToList)
    GetNumberOfChildren = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetNumberOfChildren)
    GetObjectById = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetObjectById)
    FixParentChildHierarchyUsingParentIds = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_FixParentChildHierarchyUsingParentIds)
    CheckIdValidity = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_CheckIdValidity)
    FixIdValidity = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_FixIdValidity)
    GetNextAvailableId = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetNextAvailableId)
    GetMyBoundingBoxInObjectSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetMyBoundingBoxInObjectSpace)
    GetMyBoundingBoxInWorldSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetMyBoundingBoxInWorldSpace)
    ComputeFamilyBoundingBox = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_ComputeFamilyBoundingBox)
    GetFamilyBoundingBoxInObjectSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetFamilyBoundingBoxInObjectSpace)
    GetFamilyBoundingBoxInWorldSpace = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetFamilyBoundingBoxInWorldSpace)
    SetLargestPossibleRegion = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_SetLargestPossibleRegion)
    GetLargestPossibleRegion = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetLargestPossibleRegion)
    SetBufferedRegion = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_SetBufferedRegion)
    GetBufferedRegion = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetBufferedRegion)
    SetRequestedRegion = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_SetRequestedRegion)
    GetRequestedRegion = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_GetRequestedRegion)
    Evaluate = _swig_new_instance_method(_itkSpatialObjectBasePython.itkSpatialObject3_Evaluate)
    __swig_destroy__ = _itkSpatialObjectBasePython.delete_itkSpatialObject3
    cast = _swig_new_static_method(_itkSpatialObjectBasePython.itkSpatialObject3_cast)

    def New(*args, **kargs):
        """New() -> itkSpatialObject3

        Create a new object of the class itkSpatialObject3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObject3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpatialObject3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpatialObject3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpatialObject3 in _itkSpatialObjectBasePython:
_itkSpatialObjectBasePython.itkSpatialObject3_swigregister(itkSpatialObject3)
itkSpatialObject3___New_orig__ = _itkSpatialObjectBasePython.itkSpatialObject3___New_orig__
itkSpatialObject3_cast = _itkSpatialObjectBasePython.itkSpatialObject3_cast

class itkMetaEvent(itkMetaEvent_Superclass):
    r"""


    Event abstract class.

    The itk::MetaEvent inherits from the MetaEvent that is provided by the
    MetaIO/src/metaEvent.h class. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkSpatialObjectBasePython.delete_itkMetaEvent

    def __init__(self, *args):
        r"""
        __init__(itkMetaEvent self) -> itkMetaEvent
        __init__(itkMetaEvent self, itkMetaEvent arg0) -> itkMetaEvent


        Event abstract class.

        The itk::MetaEvent inherits from the MetaEvent that is provided by the
        MetaIO/src/metaEvent.h class. 
        """
        _itkSpatialObjectBasePython.itkMetaEvent_swiginit(self, _itkSpatialObjectBasePython.new_itkMetaEvent(*args))

# Register itkMetaEvent in _itkSpatialObjectBasePython:
_itkSpatialObjectBasePython.itkMetaEvent_swigregister(itkMetaEvent)



