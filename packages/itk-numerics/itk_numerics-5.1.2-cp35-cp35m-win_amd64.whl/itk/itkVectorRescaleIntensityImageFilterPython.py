# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageIntensityPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkVectorRescaleIntensityImageFilterPython
else:
    import _itkVectorRescaleIntensityImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkVectorRescaleIntensityImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkVectorRescaleIntensityImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.stdcomplexPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterBPython

def itkVectorRescaleIntensityImageFilterIVF22IVF22_Superclass_New():
    return itkVectorRescaleIntensityImageFilterIVF22IVF22_Superclass.New()

class itkVectorRescaleIntensityImageFilterIVF22IVF22_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22IVF22):
    r"""Proxy of C++ itkVectorRescaleIntensityImageFilterIVF22IVF22_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF22IVF22_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF22IVF22_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF22IVF22_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF22IVF22_Superclass_SetFunctor)
    __swig_destroy__ = _itkVectorRescaleIntensityImageFilterPython.delete_itkVectorRescaleIntensityImageFilterIVF22IVF22_Superclass
    cast = _swig_new_static_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF22IVF22_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorRescaleIntensityImageFilterIVF22IVF22_Superclass

        Create a new object of the class itkVectorRescaleIntensityImageFilterIVF22IVF22_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorRescaleIntensityImageFilterIVF22IVF22_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorRescaleIntensityImageFilterIVF22IVF22_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorRescaleIntensityImageFilterIVF22IVF22_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorRescaleIntensityImageFilterIVF22IVF22_Superclass in _itkVectorRescaleIntensityImageFilterPython:
_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF22IVF22_Superclass_swigregister(itkVectorRescaleIntensityImageFilterIVF22IVF22_Superclass)
itkVectorRescaleIntensityImageFilterIVF22IVF22_Superclass___New_orig__ = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF22IVF22_Superclass___New_orig__
itkVectorRescaleIntensityImageFilterIVF22IVF22_Superclass_cast = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF22IVF22_Superclass_cast


def itkVectorRescaleIntensityImageFilterIVF23IVF23_Superclass_New():
    return itkVectorRescaleIntensityImageFilterIVF23IVF23_Superclass.New()

class itkVectorRescaleIntensityImageFilterIVF23IVF23_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF23IVF23):
    r"""Proxy of C++ itkVectorRescaleIntensityImageFilterIVF23IVF23_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF23IVF23_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF23IVF23_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF23IVF23_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF23IVF23_Superclass_SetFunctor)
    __swig_destroy__ = _itkVectorRescaleIntensityImageFilterPython.delete_itkVectorRescaleIntensityImageFilterIVF23IVF23_Superclass
    cast = _swig_new_static_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF23IVF23_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorRescaleIntensityImageFilterIVF23IVF23_Superclass

        Create a new object of the class itkVectorRescaleIntensityImageFilterIVF23IVF23_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorRescaleIntensityImageFilterIVF23IVF23_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorRescaleIntensityImageFilterIVF23IVF23_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorRescaleIntensityImageFilterIVF23IVF23_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorRescaleIntensityImageFilterIVF23IVF23_Superclass in _itkVectorRescaleIntensityImageFilterPython:
_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF23IVF23_Superclass_swigregister(itkVectorRescaleIntensityImageFilterIVF23IVF23_Superclass)
itkVectorRescaleIntensityImageFilterIVF23IVF23_Superclass___New_orig__ = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF23IVF23_Superclass___New_orig__
itkVectorRescaleIntensityImageFilterIVF23IVF23_Superclass_cast = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF23IVF23_Superclass_cast


def itkVectorRescaleIntensityImageFilterIVF32IVF32_Superclass_New():
    return itkVectorRescaleIntensityImageFilterIVF32IVF32_Superclass.New()

class itkVectorRescaleIntensityImageFilterIVF32IVF32_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF32IVF32):
    r"""Proxy of C++ itkVectorRescaleIntensityImageFilterIVF32IVF32_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF32IVF32_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF32IVF32_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF32IVF32_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF32IVF32_Superclass_SetFunctor)
    __swig_destroy__ = _itkVectorRescaleIntensityImageFilterPython.delete_itkVectorRescaleIntensityImageFilterIVF32IVF32_Superclass
    cast = _swig_new_static_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF32IVF32_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorRescaleIntensityImageFilterIVF32IVF32_Superclass

        Create a new object of the class itkVectorRescaleIntensityImageFilterIVF32IVF32_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorRescaleIntensityImageFilterIVF32IVF32_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorRescaleIntensityImageFilterIVF32IVF32_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorRescaleIntensityImageFilterIVF32IVF32_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorRescaleIntensityImageFilterIVF32IVF32_Superclass in _itkVectorRescaleIntensityImageFilterPython:
_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF32IVF32_Superclass_swigregister(itkVectorRescaleIntensityImageFilterIVF32IVF32_Superclass)
itkVectorRescaleIntensityImageFilterIVF32IVF32_Superclass___New_orig__ = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF32IVF32_Superclass___New_orig__
itkVectorRescaleIntensityImageFilterIVF32IVF32_Superclass_cast = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF32IVF32_Superclass_cast


def itkVectorRescaleIntensityImageFilterIVF33IVF33_Superclass_New():
    return itkVectorRescaleIntensityImageFilterIVF33IVF33_Superclass.New()

class itkVectorRescaleIntensityImageFilterIVF33IVF33_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33IVF33):
    r"""Proxy of C++ itkVectorRescaleIntensityImageFilterIVF33IVF33_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF33IVF33_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF33IVF33_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF33IVF33_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF33IVF33_Superclass_SetFunctor)
    __swig_destroy__ = _itkVectorRescaleIntensityImageFilterPython.delete_itkVectorRescaleIntensityImageFilterIVF33IVF33_Superclass
    cast = _swig_new_static_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF33IVF33_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorRescaleIntensityImageFilterIVF33IVF33_Superclass

        Create a new object of the class itkVectorRescaleIntensityImageFilterIVF33IVF33_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorRescaleIntensityImageFilterIVF33IVF33_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorRescaleIntensityImageFilterIVF33IVF33_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorRescaleIntensityImageFilterIVF33IVF33_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorRescaleIntensityImageFilterIVF33IVF33_Superclass in _itkVectorRescaleIntensityImageFilterPython:
_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF33IVF33_Superclass_swigregister(itkVectorRescaleIntensityImageFilterIVF33IVF33_Superclass)
itkVectorRescaleIntensityImageFilterIVF33IVF33_Superclass___New_orig__ = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF33IVF33_Superclass___New_orig__
itkVectorRescaleIntensityImageFilterIVF33IVF33_Superclass_cast = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF33IVF33_Superclass_cast


def itkVectorRescaleIntensityImageFilterIVF42IVF42_Superclass_New():
    return itkVectorRescaleIntensityImageFilterIVF42IVF42_Superclass.New()

class itkVectorRescaleIntensityImageFilterIVF42IVF42_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF42IVF42):
    r"""Proxy of C++ itkVectorRescaleIntensityImageFilterIVF42IVF42_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF42IVF42_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF42IVF42_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF42IVF42_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF42IVF42_Superclass_SetFunctor)
    __swig_destroy__ = _itkVectorRescaleIntensityImageFilterPython.delete_itkVectorRescaleIntensityImageFilterIVF42IVF42_Superclass
    cast = _swig_new_static_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF42IVF42_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorRescaleIntensityImageFilterIVF42IVF42_Superclass

        Create a new object of the class itkVectorRescaleIntensityImageFilterIVF42IVF42_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorRescaleIntensityImageFilterIVF42IVF42_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorRescaleIntensityImageFilterIVF42IVF42_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorRescaleIntensityImageFilterIVF42IVF42_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorRescaleIntensityImageFilterIVF42IVF42_Superclass in _itkVectorRescaleIntensityImageFilterPython:
_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF42IVF42_Superclass_swigregister(itkVectorRescaleIntensityImageFilterIVF42IVF42_Superclass)
itkVectorRescaleIntensityImageFilterIVF42IVF42_Superclass___New_orig__ = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF42IVF42_Superclass___New_orig__
itkVectorRescaleIntensityImageFilterIVF42IVF42_Superclass_cast = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF42IVF42_Superclass_cast


def itkVectorRescaleIntensityImageFilterIVF43IVF43_Superclass_New():
    return itkVectorRescaleIntensityImageFilterIVF43IVF43_Superclass.New()

class itkVectorRescaleIntensityImageFilterIVF43IVF43_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF43IVF43):
    r"""Proxy of C++ itkVectorRescaleIntensityImageFilterIVF43IVF43_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF43IVF43_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF43IVF43_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF43IVF43_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF43IVF43_Superclass_SetFunctor)
    __swig_destroy__ = _itkVectorRescaleIntensityImageFilterPython.delete_itkVectorRescaleIntensityImageFilterIVF43IVF43_Superclass
    cast = _swig_new_static_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF43IVF43_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkVectorRescaleIntensityImageFilterIVF43IVF43_Superclass

        Create a new object of the class itkVectorRescaleIntensityImageFilterIVF43IVF43_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorRescaleIntensityImageFilterIVF43IVF43_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorRescaleIntensityImageFilterIVF43IVF43_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorRescaleIntensityImageFilterIVF43IVF43_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorRescaleIntensityImageFilterIVF43IVF43_Superclass in _itkVectorRescaleIntensityImageFilterPython:
_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF43IVF43_Superclass_swigregister(itkVectorRescaleIntensityImageFilterIVF43IVF43_Superclass)
itkVectorRescaleIntensityImageFilterIVF43IVF43_Superclass___New_orig__ = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF43IVF43_Superclass___New_orig__
itkVectorRescaleIntensityImageFilterIVF43IVF43_Superclass_cast = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF43IVF43_Superclass_cast


def itkVectorRescaleIntensityImageFilterIVF22IVF22_New():
    return itkVectorRescaleIntensityImageFilterIVF22IVF22.New()

class itkVectorRescaleIntensityImageFilterIVF22IVF22(itkVectorRescaleIntensityImageFilterIVF22IVF22_Superclass):
    r"""


    Applies a linear transformation to the magnitude of pixel vectors in a
    vector Image.

    VectorRescaleIntensityImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the maximum
    magnitude value of the vectors in the pixels that the output image
    should have.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter
    {Filtering/ImageIntensity/TransformVectorValuedImagePixels,Transform
    Magnitude Of Vector Valued Image Pixels} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF22IVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF22IVF22_Clone)
    SetOutputMaximumMagnitude = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF22IVF22_SetOutputMaximumMagnitude)
    GetOutputMaximumMagnitude = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF22IVF22_GetOutputMaximumMagnitude)
    GetScale = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF22IVF22_GetScale)
    GetShift = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF22IVF22_GetShift)
    GetInputMaximumMagnitude = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF22IVF22_GetInputMaximumMagnitude)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF22IVF22_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF22IVF22_PrintSelf)
    InputHasNumericTraitsCheck = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF22IVF22_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF22IVF22_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorRescaleIntensityImageFilterPython.delete_itkVectorRescaleIntensityImageFilterIVF22IVF22
    cast = _swig_new_static_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF22IVF22_cast)

    def New(*args, **kargs):
        """New() -> itkVectorRescaleIntensityImageFilterIVF22IVF22

        Create a new object of the class itkVectorRescaleIntensityImageFilterIVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorRescaleIntensityImageFilterIVF22IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorRescaleIntensityImageFilterIVF22IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorRescaleIntensityImageFilterIVF22IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorRescaleIntensityImageFilterIVF22IVF22 in _itkVectorRescaleIntensityImageFilterPython:
_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF22IVF22_swigregister(itkVectorRescaleIntensityImageFilterIVF22IVF22)
itkVectorRescaleIntensityImageFilterIVF22IVF22___New_orig__ = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF22IVF22___New_orig__
itkVectorRescaleIntensityImageFilterIVF22IVF22_cast = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF22IVF22_cast


def itkVectorRescaleIntensityImageFilterIVF23IVF23_New():
    return itkVectorRescaleIntensityImageFilterIVF23IVF23.New()

class itkVectorRescaleIntensityImageFilterIVF23IVF23(itkVectorRescaleIntensityImageFilterIVF23IVF23_Superclass):
    r"""


    Applies a linear transformation to the magnitude of pixel vectors in a
    vector Image.

    VectorRescaleIntensityImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the maximum
    magnitude value of the vectors in the pixels that the output image
    should have.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter
    {Filtering/ImageIntensity/TransformVectorValuedImagePixels,Transform
    Magnitude Of Vector Valued Image Pixels} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF23IVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF23IVF23_Clone)
    SetOutputMaximumMagnitude = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF23IVF23_SetOutputMaximumMagnitude)
    GetOutputMaximumMagnitude = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF23IVF23_GetOutputMaximumMagnitude)
    GetScale = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF23IVF23_GetScale)
    GetShift = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF23IVF23_GetShift)
    GetInputMaximumMagnitude = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF23IVF23_GetInputMaximumMagnitude)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF23IVF23_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF23IVF23_PrintSelf)
    InputHasNumericTraitsCheck = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF23IVF23_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF23IVF23_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorRescaleIntensityImageFilterPython.delete_itkVectorRescaleIntensityImageFilterIVF23IVF23
    cast = _swig_new_static_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF23IVF23_cast)

    def New(*args, **kargs):
        """New() -> itkVectorRescaleIntensityImageFilterIVF23IVF23

        Create a new object of the class itkVectorRescaleIntensityImageFilterIVF23IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorRescaleIntensityImageFilterIVF23IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorRescaleIntensityImageFilterIVF23IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorRescaleIntensityImageFilterIVF23IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorRescaleIntensityImageFilterIVF23IVF23 in _itkVectorRescaleIntensityImageFilterPython:
_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF23IVF23_swigregister(itkVectorRescaleIntensityImageFilterIVF23IVF23)
itkVectorRescaleIntensityImageFilterIVF23IVF23___New_orig__ = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF23IVF23___New_orig__
itkVectorRescaleIntensityImageFilterIVF23IVF23_cast = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF23IVF23_cast


def itkVectorRescaleIntensityImageFilterIVF32IVF32_New():
    return itkVectorRescaleIntensityImageFilterIVF32IVF32.New()

class itkVectorRescaleIntensityImageFilterIVF32IVF32(itkVectorRescaleIntensityImageFilterIVF32IVF32_Superclass):
    r"""


    Applies a linear transformation to the magnitude of pixel vectors in a
    vector Image.

    VectorRescaleIntensityImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the maximum
    magnitude value of the vectors in the pixels that the output image
    should have.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter
    {Filtering/ImageIntensity/TransformVectorValuedImagePixels,Transform
    Magnitude Of Vector Valued Image Pixels} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF32IVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF32IVF32_Clone)
    SetOutputMaximumMagnitude = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF32IVF32_SetOutputMaximumMagnitude)
    GetOutputMaximumMagnitude = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF32IVF32_GetOutputMaximumMagnitude)
    GetScale = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF32IVF32_GetScale)
    GetShift = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF32IVF32_GetShift)
    GetInputMaximumMagnitude = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF32IVF32_GetInputMaximumMagnitude)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF32IVF32_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF32IVF32_PrintSelf)
    InputHasNumericTraitsCheck = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF32IVF32_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF32IVF32_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorRescaleIntensityImageFilterPython.delete_itkVectorRescaleIntensityImageFilterIVF32IVF32
    cast = _swig_new_static_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF32IVF32_cast)

    def New(*args, **kargs):
        """New() -> itkVectorRescaleIntensityImageFilterIVF32IVF32

        Create a new object of the class itkVectorRescaleIntensityImageFilterIVF32IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorRescaleIntensityImageFilterIVF32IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorRescaleIntensityImageFilterIVF32IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorRescaleIntensityImageFilterIVF32IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorRescaleIntensityImageFilterIVF32IVF32 in _itkVectorRescaleIntensityImageFilterPython:
_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF32IVF32_swigregister(itkVectorRescaleIntensityImageFilterIVF32IVF32)
itkVectorRescaleIntensityImageFilterIVF32IVF32___New_orig__ = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF32IVF32___New_orig__
itkVectorRescaleIntensityImageFilterIVF32IVF32_cast = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF32IVF32_cast


def itkVectorRescaleIntensityImageFilterIVF33IVF33_New():
    return itkVectorRescaleIntensityImageFilterIVF33IVF33.New()

class itkVectorRescaleIntensityImageFilterIVF33IVF33(itkVectorRescaleIntensityImageFilterIVF33IVF33_Superclass):
    r"""


    Applies a linear transformation to the magnitude of pixel vectors in a
    vector Image.

    VectorRescaleIntensityImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the maximum
    magnitude value of the vectors in the pixels that the output image
    should have.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter
    {Filtering/ImageIntensity/TransformVectorValuedImagePixels,Transform
    Magnitude Of Vector Valued Image Pixels} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF33IVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF33IVF33_Clone)
    SetOutputMaximumMagnitude = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF33IVF33_SetOutputMaximumMagnitude)
    GetOutputMaximumMagnitude = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF33IVF33_GetOutputMaximumMagnitude)
    GetScale = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF33IVF33_GetScale)
    GetShift = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF33IVF33_GetShift)
    GetInputMaximumMagnitude = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF33IVF33_GetInputMaximumMagnitude)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF33IVF33_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF33IVF33_PrintSelf)
    InputHasNumericTraitsCheck = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF33IVF33_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF33IVF33_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorRescaleIntensityImageFilterPython.delete_itkVectorRescaleIntensityImageFilterIVF33IVF33
    cast = _swig_new_static_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF33IVF33_cast)

    def New(*args, **kargs):
        """New() -> itkVectorRescaleIntensityImageFilterIVF33IVF33

        Create a new object of the class itkVectorRescaleIntensityImageFilterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorRescaleIntensityImageFilterIVF33IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorRescaleIntensityImageFilterIVF33IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorRescaleIntensityImageFilterIVF33IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorRescaleIntensityImageFilterIVF33IVF33 in _itkVectorRescaleIntensityImageFilterPython:
_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF33IVF33_swigregister(itkVectorRescaleIntensityImageFilterIVF33IVF33)
itkVectorRescaleIntensityImageFilterIVF33IVF33___New_orig__ = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF33IVF33___New_orig__
itkVectorRescaleIntensityImageFilterIVF33IVF33_cast = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF33IVF33_cast


def itkVectorRescaleIntensityImageFilterIVF42IVF42_New():
    return itkVectorRescaleIntensityImageFilterIVF42IVF42.New()

class itkVectorRescaleIntensityImageFilterIVF42IVF42(itkVectorRescaleIntensityImageFilterIVF42IVF42_Superclass):
    r"""


    Applies a linear transformation to the magnitude of pixel vectors in a
    vector Image.

    VectorRescaleIntensityImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the maximum
    magnitude value of the vectors in the pixels that the output image
    should have.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter
    {Filtering/ImageIntensity/TransformVectorValuedImagePixels,Transform
    Magnitude Of Vector Valued Image Pixels} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF42IVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF42IVF42_Clone)
    SetOutputMaximumMagnitude = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF42IVF42_SetOutputMaximumMagnitude)
    GetOutputMaximumMagnitude = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF42IVF42_GetOutputMaximumMagnitude)
    GetScale = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF42IVF42_GetScale)
    GetShift = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF42IVF42_GetShift)
    GetInputMaximumMagnitude = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF42IVF42_GetInputMaximumMagnitude)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF42IVF42_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF42IVF42_PrintSelf)
    InputHasNumericTraitsCheck = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF42IVF42_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF42IVF42_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorRescaleIntensityImageFilterPython.delete_itkVectorRescaleIntensityImageFilterIVF42IVF42
    cast = _swig_new_static_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF42IVF42_cast)

    def New(*args, **kargs):
        """New() -> itkVectorRescaleIntensityImageFilterIVF42IVF42

        Create a new object of the class itkVectorRescaleIntensityImageFilterIVF42IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorRescaleIntensityImageFilterIVF42IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorRescaleIntensityImageFilterIVF42IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorRescaleIntensityImageFilterIVF42IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorRescaleIntensityImageFilterIVF42IVF42 in _itkVectorRescaleIntensityImageFilterPython:
_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF42IVF42_swigregister(itkVectorRescaleIntensityImageFilterIVF42IVF42)
itkVectorRescaleIntensityImageFilterIVF42IVF42___New_orig__ = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF42IVF42___New_orig__
itkVectorRescaleIntensityImageFilterIVF42IVF42_cast = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF42IVF42_cast


def itkVectorRescaleIntensityImageFilterIVF43IVF43_New():
    return itkVectorRescaleIntensityImageFilterIVF43IVF43.New()

class itkVectorRescaleIntensityImageFilterIVF43IVF43(itkVectorRescaleIntensityImageFilterIVF43IVF43_Superclass):
    r"""


    Applies a linear transformation to the magnitude of pixel vectors in a
    vector Image.

    VectorRescaleIntensityImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the maximum
    magnitude value of the vectors in the pixels that the output image
    should have.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    See:   RescaleIntensityImageFilter
    {Filtering/ImageIntensity/TransformVectorValuedImagePixels,Transform
    Magnitude Of Vector Valued Image Pixels} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF43IVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF43IVF43_Clone)
    SetOutputMaximumMagnitude = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF43IVF43_SetOutputMaximumMagnitude)
    GetOutputMaximumMagnitude = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF43IVF43_GetOutputMaximumMagnitude)
    GetScale = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF43IVF43_GetScale)
    GetShift = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF43IVF43_GetShift)
    GetInputMaximumMagnitude = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF43IVF43_GetInputMaximumMagnitude)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF43IVF43_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF43IVF43_PrintSelf)
    InputHasNumericTraitsCheck = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF43IVF43_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF43IVF43_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorRescaleIntensityImageFilterPython.delete_itkVectorRescaleIntensityImageFilterIVF43IVF43
    cast = _swig_new_static_method(_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF43IVF43_cast)

    def New(*args, **kargs):
        """New() -> itkVectorRescaleIntensityImageFilterIVF43IVF43

        Create a new object of the class itkVectorRescaleIntensityImageFilterIVF43IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorRescaleIntensityImageFilterIVF43IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorRescaleIntensityImageFilterIVF43IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorRescaleIntensityImageFilterIVF43IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorRescaleIntensityImageFilterIVF43IVF43 in _itkVectorRescaleIntensityImageFilterPython:
_itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF43IVF43_swigregister(itkVectorRescaleIntensityImageFilterIVF43IVF43)
itkVectorRescaleIntensityImageFilterIVF43IVF43___New_orig__ = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF43IVF43___New_orig__
itkVectorRescaleIntensityImageFilterIVF43IVF43_cast = _itkVectorRescaleIntensityImageFilterPython.itkVectorRescaleIntensityImageFilterIVF43IVF43_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def vector_rescale_intensity_image_filter(*args, **kwargs):
    """Procedural interface for VectorRescaleIntensityImageFilter"""
    import itk
    instance = itk.VectorRescaleIntensityImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def vector_rescale_intensity_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.VectorRescaleIntensityImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.VectorRescaleIntensityImageFilter.values()[0]
    else:
        filter_object = itk.VectorRescaleIntensityImageFilter

    vector_rescale_intensity_image_filter.__doc__ = filter_object.__doc__
    vector_rescale_intensity_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    vector_rescale_intensity_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.VectorRescaleIntensityImageFilter, itkTemplate.itkTemplate):
        vector_rescale_intensity_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        vector_rescale_intensity_image_filter.__doc__ += "\n"
        vector_rescale_intensity_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        vector_rescale_intensity_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def unary_functor_image_filter(*args, **kwargs):
    """Procedural interface for UnaryFunctorImageFilter"""
    import itk
    instance = itk.UnaryFunctorImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def unary_functor_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.UnaryFunctorImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.UnaryFunctorImageFilter.values()[0]
    else:
        filter_object = itk.UnaryFunctorImageFilter

    unary_functor_image_filter.__doc__ = filter_object.__doc__
    unary_functor_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    unary_functor_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.UnaryFunctorImageFilter, itkTemplate.itkTemplate):
        unary_functor_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        unary_functor_image_filter.__doc__ += "\n"
        unary_functor_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        unary_functor_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



