on:
  create:
    tags:
      - v*
#  push:
#    branches: [ master ]

name: Upload Release Asset

jobs:

  build_mac:
    name: Build .app file
    runs-on: macOS-latest
    steps:
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project
        run: |
          python -m pip install --upgrade pip
          pip install shipsnake
          shipsnake -y build ${{ steps.get_version.outputs.VERSION }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
      - run: |
          hub release edit -a app.dmg -m "" ${{ steps.get_version.outputs.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build_win:
    name: Build .exe file
    runs-on: windows-latest
    steps:
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project
        run: |
          python -m pip install --upgrade pip
          pip install shipsnake
          shipsnake -y build ${{ steps.get_version.outputs.VERSION }}
      - run: |
          hub release edit -a app.dmg -m "" ${{ steps.get_version.outputs.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
