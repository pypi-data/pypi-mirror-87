# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageFeaturePython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkUnsharpMaskImageFilterPython
else:
    import _itkUnsharpMaskImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkUnsharpMaskImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkUnsharpMaskImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageToImageFilterAPython
import itk.itkImagePython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkPointPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.ITKCommonBasePython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython

def itkUnsharpMaskImageFilterID2ID2_New():
    return itkUnsharpMaskImageFilterID2ID2.New()

class itkUnsharpMaskImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""


    Edge enhancement filter.

    This filter subtracts a smoothed version of the image from the image
    to achieve the edge enhancing effect.https://en.wikipedia.org/w/index.
    php?title=Unsharp_masking&oldid=75048
    6803#Photographic_unsharp_masking

    It has configurable amount, radius (sigma) and threshold, and whether
    to clamp the resulting values to the range of output type.

    Formula: sharpened=original+[abs(original-blurred)-threshold]*amount

    If clamping is turned off (it is on by default), casting to output
    pixel format is done using C++ defaults, meaning that values are not
    clamped but rather wrap around e.g. 260 -> 4 (unsigned char).

    See:  ImageToImageFilter

    See:  SmoothingRecursiveGaussianImageFilter

    See:  RescaleIntensityImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_Clone)
    SameDimensionCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_SameDimensionCheck
    
    InputHasNumericTraitsCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_InputHasNumericTraitsCheck
    
    InternalTypeIsFloatingPoint = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_InternalTypeIsFloatingPoint
    
    SetSigmas = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_SetSigmas)
    GetSigmas = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_GetSigmas)
    SetSigma = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_SetSigma)
    SetAmount = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_SetAmount)
    GetAmount = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_GetAmount)
    SetThreshold = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_GetThreshold)
    SetClamp = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_SetClamp)
    GetClamp = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_GetClamp)
    ClampOn = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_ClampOn)
    ClampOff = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_ClampOff)
    __swig_destroy__ = _itkUnsharpMaskImageFilterPython.delete_itkUnsharpMaskImageFilterID2ID2
    cast = _swig_new_static_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkUnsharpMaskImageFilterID2ID2

        Create a new object of the class itkUnsharpMaskImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnsharpMaskImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkUnsharpMaskImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkUnsharpMaskImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkUnsharpMaskImageFilterID2ID2 in _itkUnsharpMaskImageFilterPython:
_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_swigregister(itkUnsharpMaskImageFilterID2ID2)
itkUnsharpMaskImageFilterID2ID2___New_orig__ = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2___New_orig__
itkUnsharpMaskImageFilterID2ID2_cast = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID2ID2_cast


def itkUnsharpMaskImageFilterID3ID3_New():
    return itkUnsharpMaskImageFilterID3ID3.New()

class itkUnsharpMaskImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""


    Edge enhancement filter.

    This filter subtracts a smoothed version of the image from the image
    to achieve the edge enhancing effect.https://en.wikipedia.org/w/index.
    php?title=Unsharp_masking&oldid=75048
    6803#Photographic_unsharp_masking

    It has configurable amount, radius (sigma) and threshold, and whether
    to clamp the resulting values to the range of output type.

    Formula: sharpened=original+[abs(original-blurred)-threshold]*amount

    If clamping is turned off (it is on by default), casting to output
    pixel format is done using C++ defaults, meaning that values are not
    clamped but rather wrap around e.g. 260 -> 4 (unsigned char).

    See:  ImageToImageFilter

    See:  SmoothingRecursiveGaussianImageFilter

    See:  RescaleIntensityImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_Clone)
    SameDimensionCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_SameDimensionCheck
    
    InputHasNumericTraitsCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_InputHasNumericTraitsCheck
    
    InternalTypeIsFloatingPoint = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_InternalTypeIsFloatingPoint
    
    SetSigmas = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_SetSigmas)
    GetSigmas = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_GetSigmas)
    SetSigma = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_SetSigma)
    SetAmount = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_SetAmount)
    GetAmount = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_GetAmount)
    SetThreshold = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_GetThreshold)
    SetClamp = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_SetClamp)
    GetClamp = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_GetClamp)
    ClampOn = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_ClampOn)
    ClampOff = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_ClampOff)
    __swig_destroy__ = _itkUnsharpMaskImageFilterPython.delete_itkUnsharpMaskImageFilterID3ID3
    cast = _swig_new_static_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkUnsharpMaskImageFilterID3ID3

        Create a new object of the class itkUnsharpMaskImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnsharpMaskImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkUnsharpMaskImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkUnsharpMaskImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkUnsharpMaskImageFilterID3ID3 in _itkUnsharpMaskImageFilterPython:
_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_swigregister(itkUnsharpMaskImageFilterID3ID3)
itkUnsharpMaskImageFilterID3ID3___New_orig__ = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3___New_orig__
itkUnsharpMaskImageFilterID3ID3_cast = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterID3ID3_cast


def itkUnsharpMaskImageFilterIF2IF2_New():
    return itkUnsharpMaskImageFilterIF2IF2.New()

class itkUnsharpMaskImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""


    Edge enhancement filter.

    This filter subtracts a smoothed version of the image from the image
    to achieve the edge enhancing effect.https://en.wikipedia.org/w/index.
    php?title=Unsharp_masking&oldid=75048
    6803#Photographic_unsharp_masking

    It has configurable amount, radius (sigma) and threshold, and whether
    to clamp the resulting values to the range of output type.

    Formula: sharpened=original+[abs(original-blurred)-threshold]*amount

    If clamping is turned off (it is on by default), casting to output
    pixel format is done using C++ defaults, meaning that values are not
    clamped but rather wrap around e.g. 260 -> 4 (unsigned char).

    See:  ImageToImageFilter

    See:  SmoothingRecursiveGaussianImageFilter

    See:  RescaleIntensityImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_Clone)
    SameDimensionCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_SameDimensionCheck
    
    InputHasNumericTraitsCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    InternalTypeIsFloatingPoint = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_InternalTypeIsFloatingPoint
    
    SetSigmas = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_SetSigmas)
    GetSigmas = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_GetSigmas)
    SetSigma = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_SetSigma)
    SetAmount = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_SetAmount)
    GetAmount = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_GetAmount)
    SetThreshold = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_GetThreshold)
    SetClamp = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_SetClamp)
    GetClamp = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_GetClamp)
    ClampOn = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_ClampOn)
    ClampOff = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_ClampOff)
    __swig_destroy__ = _itkUnsharpMaskImageFilterPython.delete_itkUnsharpMaskImageFilterIF2IF2
    cast = _swig_new_static_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkUnsharpMaskImageFilterIF2IF2

        Create a new object of the class itkUnsharpMaskImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnsharpMaskImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkUnsharpMaskImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkUnsharpMaskImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkUnsharpMaskImageFilterIF2IF2 in _itkUnsharpMaskImageFilterPython:
_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_swigregister(itkUnsharpMaskImageFilterIF2IF2)
itkUnsharpMaskImageFilterIF2IF2___New_orig__ = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2___New_orig__
itkUnsharpMaskImageFilterIF2IF2_cast = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF2IF2_cast


def itkUnsharpMaskImageFilterIF3IF3_New():
    return itkUnsharpMaskImageFilterIF3IF3.New()

class itkUnsharpMaskImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""


    Edge enhancement filter.

    This filter subtracts a smoothed version of the image from the image
    to achieve the edge enhancing effect.https://en.wikipedia.org/w/index.
    php?title=Unsharp_masking&oldid=75048
    6803#Photographic_unsharp_masking

    It has configurable amount, radius (sigma) and threshold, and whether
    to clamp the resulting values to the range of output type.

    Formula: sharpened=original+[abs(original-blurred)-threshold]*amount

    If clamping is turned off (it is on by default), casting to output
    pixel format is done using C++ defaults, meaning that values are not
    clamped but rather wrap around e.g. 260 -> 4 (unsigned char).

    See:  ImageToImageFilter

    See:  SmoothingRecursiveGaussianImageFilter

    See:  RescaleIntensityImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_Clone)
    SameDimensionCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_SameDimensionCheck
    
    InputHasNumericTraitsCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    InternalTypeIsFloatingPoint = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_InternalTypeIsFloatingPoint
    
    SetSigmas = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_SetSigmas)
    GetSigmas = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_GetSigmas)
    SetSigma = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_SetSigma)
    SetAmount = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_SetAmount)
    GetAmount = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_GetAmount)
    SetThreshold = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_GetThreshold)
    SetClamp = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_SetClamp)
    GetClamp = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_GetClamp)
    ClampOn = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_ClampOn)
    ClampOff = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_ClampOff)
    __swig_destroy__ = _itkUnsharpMaskImageFilterPython.delete_itkUnsharpMaskImageFilterIF3IF3
    cast = _swig_new_static_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkUnsharpMaskImageFilterIF3IF3

        Create a new object of the class itkUnsharpMaskImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnsharpMaskImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkUnsharpMaskImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkUnsharpMaskImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkUnsharpMaskImageFilterIF3IF3 in _itkUnsharpMaskImageFilterPython:
_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_swigregister(itkUnsharpMaskImageFilterIF3IF3)
itkUnsharpMaskImageFilterIF3IF3___New_orig__ = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3___New_orig__
itkUnsharpMaskImageFilterIF3IF3_cast = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIF3IF3_cast


def itkUnsharpMaskImageFilterISS2ISS2_New():
    return itkUnsharpMaskImageFilterISS2ISS2.New()

class itkUnsharpMaskImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""


    Edge enhancement filter.

    This filter subtracts a smoothed version of the image from the image
    to achieve the edge enhancing effect.https://en.wikipedia.org/w/index.
    php?title=Unsharp_masking&oldid=75048
    6803#Photographic_unsharp_masking

    It has configurable amount, radius (sigma) and threshold, and whether
    to clamp the resulting values to the range of output type.

    Formula: sharpened=original+[abs(original-blurred)-threshold]*amount

    If clamping is turned off (it is on by default), casting to output
    pixel format is done using C++ defaults, meaning that values are not
    clamped but rather wrap around e.g. 260 -> 4 (unsigned char).

    See:  ImageToImageFilter

    See:  SmoothingRecursiveGaussianImageFilter

    See:  RescaleIntensityImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_Clone)
    SameDimensionCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_SameDimensionCheck
    
    InputHasNumericTraitsCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_InputHasNumericTraitsCheck
    
    InternalTypeIsFloatingPoint = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_InternalTypeIsFloatingPoint
    
    SetSigmas = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_SetSigmas)
    GetSigmas = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_GetSigmas)
    SetSigma = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_SetSigma)
    SetAmount = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_SetAmount)
    GetAmount = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_GetAmount)
    SetThreshold = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_GetThreshold)
    SetClamp = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_SetClamp)
    GetClamp = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_GetClamp)
    ClampOn = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_ClampOn)
    ClampOff = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_ClampOff)
    __swig_destroy__ = _itkUnsharpMaskImageFilterPython.delete_itkUnsharpMaskImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkUnsharpMaskImageFilterISS2ISS2

        Create a new object of the class itkUnsharpMaskImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnsharpMaskImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkUnsharpMaskImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkUnsharpMaskImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkUnsharpMaskImageFilterISS2ISS2 in _itkUnsharpMaskImageFilterPython:
_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_swigregister(itkUnsharpMaskImageFilterISS2ISS2)
itkUnsharpMaskImageFilterISS2ISS2___New_orig__ = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2___New_orig__
itkUnsharpMaskImageFilterISS2ISS2_cast = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS2ISS2_cast


def itkUnsharpMaskImageFilterISS3ISS3_New():
    return itkUnsharpMaskImageFilterISS3ISS3.New()

class itkUnsharpMaskImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""


    Edge enhancement filter.

    This filter subtracts a smoothed version of the image from the image
    to achieve the edge enhancing effect.https://en.wikipedia.org/w/index.
    php?title=Unsharp_masking&oldid=75048
    6803#Photographic_unsharp_masking

    It has configurable amount, radius (sigma) and threshold, and whether
    to clamp the resulting values to the range of output type.

    Formula: sharpened=original+[abs(original-blurred)-threshold]*amount

    If clamping is turned off (it is on by default), casting to output
    pixel format is done using C++ defaults, meaning that values are not
    clamped but rather wrap around e.g. 260 -> 4 (unsigned char).

    See:  ImageToImageFilter

    See:  SmoothingRecursiveGaussianImageFilter

    See:  RescaleIntensityImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_Clone)
    SameDimensionCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_SameDimensionCheck
    
    InputHasNumericTraitsCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_InputHasNumericTraitsCheck
    
    InternalTypeIsFloatingPoint = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_InternalTypeIsFloatingPoint
    
    SetSigmas = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_SetSigmas)
    GetSigmas = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_GetSigmas)
    SetSigma = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_SetSigma)
    SetAmount = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_SetAmount)
    GetAmount = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_GetAmount)
    SetThreshold = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_GetThreshold)
    SetClamp = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_SetClamp)
    GetClamp = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_GetClamp)
    ClampOn = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_ClampOn)
    ClampOff = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_ClampOff)
    __swig_destroy__ = _itkUnsharpMaskImageFilterPython.delete_itkUnsharpMaskImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkUnsharpMaskImageFilterISS3ISS3

        Create a new object of the class itkUnsharpMaskImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnsharpMaskImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkUnsharpMaskImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkUnsharpMaskImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkUnsharpMaskImageFilterISS3ISS3 in _itkUnsharpMaskImageFilterPython:
_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_swigregister(itkUnsharpMaskImageFilterISS3ISS3)
itkUnsharpMaskImageFilterISS3ISS3___New_orig__ = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3___New_orig__
itkUnsharpMaskImageFilterISS3ISS3_cast = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterISS3ISS3_cast


def itkUnsharpMaskImageFilterIUC2IUC2_New():
    return itkUnsharpMaskImageFilterIUC2IUC2.New()

class itkUnsharpMaskImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""


    Edge enhancement filter.

    This filter subtracts a smoothed version of the image from the image
    to achieve the edge enhancing effect.https://en.wikipedia.org/w/index.
    php?title=Unsharp_masking&oldid=75048
    6803#Photographic_unsharp_masking

    It has configurable amount, radius (sigma) and threshold, and whether
    to clamp the resulting values to the range of output type.

    Formula: sharpened=original+[abs(original-blurred)-threshold]*amount

    If clamping is turned off (it is on by default), casting to output
    pixel format is done using C++ defaults, meaning that values are not
    clamped but rather wrap around e.g. 260 -> 4 (unsigned char).

    See:  ImageToImageFilter

    See:  SmoothingRecursiveGaussianImageFilter

    See:  RescaleIntensityImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_Clone)
    SameDimensionCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_SameDimensionCheck
    
    InputHasNumericTraitsCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    
    InternalTypeIsFloatingPoint = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_InternalTypeIsFloatingPoint
    
    SetSigmas = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_SetSigmas)
    GetSigmas = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_GetSigmas)
    SetSigma = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_SetSigma)
    SetAmount = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_SetAmount)
    GetAmount = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_GetAmount)
    SetThreshold = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_GetThreshold)
    SetClamp = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_SetClamp)
    GetClamp = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_GetClamp)
    ClampOn = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_ClampOn)
    ClampOff = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_ClampOff)
    __swig_destroy__ = _itkUnsharpMaskImageFilterPython.delete_itkUnsharpMaskImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkUnsharpMaskImageFilterIUC2IUC2

        Create a new object of the class itkUnsharpMaskImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnsharpMaskImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkUnsharpMaskImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkUnsharpMaskImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkUnsharpMaskImageFilterIUC2IUC2 in _itkUnsharpMaskImageFilterPython:
_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_swigregister(itkUnsharpMaskImageFilterIUC2IUC2)
itkUnsharpMaskImageFilterIUC2IUC2___New_orig__ = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2___New_orig__
itkUnsharpMaskImageFilterIUC2IUC2_cast = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC2IUC2_cast


def itkUnsharpMaskImageFilterIUC3IUC3_New():
    return itkUnsharpMaskImageFilterIUC3IUC3.New()

class itkUnsharpMaskImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""


    Edge enhancement filter.

    This filter subtracts a smoothed version of the image from the image
    to achieve the edge enhancing effect.https://en.wikipedia.org/w/index.
    php?title=Unsharp_masking&oldid=75048
    6803#Photographic_unsharp_masking

    It has configurable amount, radius (sigma) and threshold, and whether
    to clamp the resulting values to the range of output type.

    Formula: sharpened=original+[abs(original-blurred)-threshold]*amount

    If clamping is turned off (it is on by default), casting to output
    pixel format is done using C++ defaults, meaning that values are not
    clamped but rather wrap around e.g. 260 -> 4 (unsigned char).

    See:  ImageToImageFilter

    See:  SmoothingRecursiveGaussianImageFilter

    See:  RescaleIntensityImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_Clone)
    SameDimensionCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_SameDimensionCheck
    
    InputHasNumericTraitsCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    
    InternalTypeIsFloatingPoint = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_InternalTypeIsFloatingPoint
    
    SetSigmas = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_SetSigmas)
    GetSigmas = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_GetSigmas)
    SetSigma = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_SetSigma)
    SetAmount = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_SetAmount)
    GetAmount = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_GetAmount)
    SetThreshold = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_GetThreshold)
    SetClamp = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_SetClamp)
    GetClamp = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_GetClamp)
    ClampOn = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_ClampOn)
    ClampOff = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_ClampOff)
    __swig_destroy__ = _itkUnsharpMaskImageFilterPython.delete_itkUnsharpMaskImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkUnsharpMaskImageFilterIUC3IUC3

        Create a new object of the class itkUnsharpMaskImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnsharpMaskImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkUnsharpMaskImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkUnsharpMaskImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkUnsharpMaskImageFilterIUC3IUC3 in _itkUnsharpMaskImageFilterPython:
_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_swigregister(itkUnsharpMaskImageFilterIUC3IUC3)
itkUnsharpMaskImageFilterIUC3IUC3___New_orig__ = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3___New_orig__
itkUnsharpMaskImageFilterIUC3IUC3_cast = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUC3IUC3_cast


def itkUnsharpMaskImageFilterIUS2IUS2_New():
    return itkUnsharpMaskImageFilterIUS2IUS2.New()

class itkUnsharpMaskImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""


    Edge enhancement filter.

    This filter subtracts a smoothed version of the image from the image
    to achieve the edge enhancing effect.https://en.wikipedia.org/w/index.
    php?title=Unsharp_masking&oldid=75048
    6803#Photographic_unsharp_masking

    It has configurable amount, radius (sigma) and threshold, and whether
    to clamp the resulting values to the range of output type.

    Formula: sharpened=original+[abs(original-blurred)-threshold]*amount

    If clamping is turned off (it is on by default), casting to output
    pixel format is done using C++ defaults, meaning that values are not
    clamped but rather wrap around e.g. 260 -> 4 (unsigned char).

    See:  ImageToImageFilter

    See:  SmoothingRecursiveGaussianImageFilter

    See:  RescaleIntensityImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_Clone)
    SameDimensionCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_SameDimensionCheck
    
    InputHasNumericTraitsCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    
    InternalTypeIsFloatingPoint = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_InternalTypeIsFloatingPoint
    
    SetSigmas = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_SetSigmas)
    GetSigmas = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_GetSigmas)
    SetSigma = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_SetSigma)
    SetAmount = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_SetAmount)
    GetAmount = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_GetAmount)
    SetThreshold = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_GetThreshold)
    SetClamp = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_SetClamp)
    GetClamp = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_GetClamp)
    ClampOn = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_ClampOn)
    ClampOff = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_ClampOff)
    __swig_destroy__ = _itkUnsharpMaskImageFilterPython.delete_itkUnsharpMaskImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkUnsharpMaskImageFilterIUS2IUS2

        Create a new object of the class itkUnsharpMaskImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnsharpMaskImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkUnsharpMaskImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkUnsharpMaskImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkUnsharpMaskImageFilterIUS2IUS2 in _itkUnsharpMaskImageFilterPython:
_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_swigregister(itkUnsharpMaskImageFilterIUS2IUS2)
itkUnsharpMaskImageFilterIUS2IUS2___New_orig__ = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2___New_orig__
itkUnsharpMaskImageFilterIUS2IUS2_cast = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS2IUS2_cast


def itkUnsharpMaskImageFilterIUS3IUS3_New():
    return itkUnsharpMaskImageFilterIUS3IUS3.New()

class itkUnsharpMaskImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""


    Edge enhancement filter.

    This filter subtracts a smoothed version of the image from the image
    to achieve the edge enhancing effect.https://en.wikipedia.org/w/index.
    php?title=Unsharp_masking&oldid=75048
    6803#Photographic_unsharp_masking

    It has configurable amount, radius (sigma) and threshold, and whether
    to clamp the resulting values to the range of output type.

    Formula: sharpened=original+[abs(original-blurred)-threshold]*amount

    If clamping is turned off (it is on by default), casting to output
    pixel format is done using C++ defaults, meaning that values are not
    clamped but rather wrap around e.g. 260 -> 4 (unsigned char).

    See:  ImageToImageFilter

    See:  SmoothingRecursiveGaussianImageFilter

    See:  RescaleIntensityImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_Clone)
    SameDimensionCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_SameDimensionCheck
    
    InputHasNumericTraitsCheck = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    
    InternalTypeIsFloatingPoint = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_InternalTypeIsFloatingPoint
    
    SetSigmas = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_SetSigmas)
    GetSigmas = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_GetSigmas)
    SetSigma = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_SetSigma)
    SetAmount = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_SetAmount)
    GetAmount = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_GetAmount)
    SetThreshold = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_GetThreshold)
    SetClamp = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_SetClamp)
    GetClamp = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_GetClamp)
    ClampOn = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_ClampOn)
    ClampOff = _swig_new_instance_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_ClampOff)
    __swig_destroy__ = _itkUnsharpMaskImageFilterPython.delete_itkUnsharpMaskImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkUnsharpMaskImageFilterIUS3IUS3

        Create a new object of the class itkUnsharpMaskImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkUnsharpMaskImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkUnsharpMaskImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkUnsharpMaskImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkUnsharpMaskImageFilterIUS3IUS3 in _itkUnsharpMaskImageFilterPython:
_itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_swigregister(itkUnsharpMaskImageFilterIUS3IUS3)
itkUnsharpMaskImageFilterIUS3IUS3___New_orig__ = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3___New_orig__
itkUnsharpMaskImageFilterIUS3IUS3_cast = _itkUnsharpMaskImageFilterPython.itkUnsharpMaskImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def unsharp_mask_image_filter(*args, **kwargs):
    """Procedural interface for UnsharpMaskImageFilter"""
    import itk
    instance = itk.UnsharpMaskImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def unsharp_mask_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.UnsharpMaskImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.UnsharpMaskImageFilter.values()[0]
    else:
        filter_object = itk.UnsharpMaskImageFilter

    unsharp_mask_image_filter.__doc__ = filter_object.__doc__
    unsharp_mask_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    unsharp_mask_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.UnsharpMaskImageFilter, itkTemplate.itkTemplate):
        unsharp_mask_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        unsharp_mask_image_filter.__doc__ += "\n"
        unsharp_mask_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        unsharp_mask_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



