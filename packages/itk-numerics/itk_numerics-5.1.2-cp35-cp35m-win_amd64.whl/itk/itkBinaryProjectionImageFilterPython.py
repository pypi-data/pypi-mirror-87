# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageStatisticsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBinaryProjectionImageFilterPython
else:
    import _itkBinaryProjectionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkBinaryProjectionImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkBinaryProjectionImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.stdcomplexPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterBPython

def itkBinaryProjectionImageFilterID2ID2_Superclass_New():
    return itkBinaryProjectionImageFilterID2ID2_Superclass.New()

class itkBinaryProjectionImageFilterID2ID2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkBinaryProjectionImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterID2ID2_Superclass
    cast = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterID2ID2_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterID2ID2_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass_swigregister(itkBinaryProjectionImageFilterID2ID2_Superclass)
itkBinaryProjectionImageFilterID2ID2_Superclass___New_orig__ = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass___New_orig__
itkBinaryProjectionImageFilterID2ID2_Superclass_cast = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass_cast


def itkBinaryProjectionImageFilterID3ID3_Superclass_New():
    return itkBinaryProjectionImageFilterID3ID3_Superclass.New()

class itkBinaryProjectionImageFilterID3ID3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkBinaryProjectionImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterID3ID3_Superclass
    cast = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterID3ID3_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterID3ID3_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass_swigregister(itkBinaryProjectionImageFilterID3ID3_Superclass)
itkBinaryProjectionImageFilterID3ID3_Superclass___New_orig__ = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass___New_orig__
itkBinaryProjectionImageFilterID3ID3_Superclass_cast = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass_cast


def itkBinaryProjectionImageFilterIF2IF2_Superclass_New():
    return itkBinaryProjectionImageFilterIF2IF2_Superclass.New()

class itkBinaryProjectionImageFilterIF2IF2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIF2IF2_Superclass
    cast = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIF2IF2_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIF2IF2_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass_swigregister(itkBinaryProjectionImageFilterIF2IF2_Superclass)
itkBinaryProjectionImageFilterIF2IF2_Superclass___New_orig__ = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass___New_orig__
itkBinaryProjectionImageFilterIF2IF2_Superclass_cast = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass_cast


def itkBinaryProjectionImageFilterIF3IF3_Superclass_New():
    return itkBinaryProjectionImageFilterIF3IF3_Superclass.New()

class itkBinaryProjectionImageFilterIF3IF3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIF3IF3_Superclass
    cast = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIF3IF3_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIF3IF3_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass_swigregister(itkBinaryProjectionImageFilterIF3IF3_Superclass)
itkBinaryProjectionImageFilterIF3IF3_Superclass___New_orig__ = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass___New_orig__
itkBinaryProjectionImageFilterIF3IF3_Superclass_cast = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass_cast


def itkBinaryProjectionImageFilterISS2ISS2_Superclass_New():
    return itkBinaryProjectionImageFilterISS2ISS2_Superclass.New()

class itkBinaryProjectionImageFilterISS2ISS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkBinaryProjectionImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterISS2ISS2_Superclass
    cast = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterISS2ISS2_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterISS2ISS2_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass_swigregister(itkBinaryProjectionImageFilterISS2ISS2_Superclass)
itkBinaryProjectionImageFilterISS2ISS2_Superclass___New_orig__ = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass___New_orig__
itkBinaryProjectionImageFilterISS2ISS2_Superclass_cast = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass_cast


def itkBinaryProjectionImageFilterISS3ISS2_Superclass_New():
    return itkBinaryProjectionImageFilterISS3ISS2_Superclass.New()

class itkBinaryProjectionImageFilterISS3ISS2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS3ISS2):
    r"""Proxy of C++ itkBinaryProjectionImageFilterISS3ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterISS3ISS2_Superclass
    cast = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterISS3ISS2_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterISS3ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterISS3ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterISS3ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterISS3ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterISS3ISS2_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass_swigregister(itkBinaryProjectionImageFilterISS3ISS2_Superclass)
itkBinaryProjectionImageFilterISS3ISS2_Superclass___New_orig__ = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass___New_orig__
itkBinaryProjectionImageFilterISS3ISS2_Superclass_cast = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass_cast


def itkBinaryProjectionImageFilterISS3ISS3_Superclass_New():
    return itkBinaryProjectionImageFilterISS3ISS3_Superclass.New()

class itkBinaryProjectionImageFilterISS3ISS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkBinaryProjectionImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterISS3ISS3_Superclass
    cast = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterISS3ISS3_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterISS3ISS3_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass_swigregister(itkBinaryProjectionImageFilterISS3ISS3_Superclass)
itkBinaryProjectionImageFilterISS3ISS3_Superclass___New_orig__ = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass___New_orig__
itkBinaryProjectionImageFilterISS3ISS3_Superclass_cast = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass_cast


def itkBinaryProjectionImageFilterIUC2IUC2_Superclass_New():
    return itkBinaryProjectionImageFilterIUC2IUC2_Superclass.New()

class itkBinaryProjectionImageFilterIUC2IUC2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUC2IUC2_Superclass
    cast = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUC2IUC2_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass_swigregister(itkBinaryProjectionImageFilterIUC2IUC2_Superclass)
itkBinaryProjectionImageFilterIUC2IUC2_Superclass___New_orig__ = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass___New_orig__
itkBinaryProjectionImageFilterIUC2IUC2_Superclass_cast = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass_cast


def itkBinaryProjectionImageFilterIUC3IUC2_Superclass_New():
    return itkBinaryProjectionImageFilterIUC3IUC2_Superclass.New()

class itkBinaryProjectionImageFilterIUC3IUC2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIUC3IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUC3IUC2_Superclass
    cast = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUC3IUC2_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIUC3IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUC3IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUC3IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUC3IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUC3IUC2_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass_swigregister(itkBinaryProjectionImageFilterIUC3IUC2_Superclass)
itkBinaryProjectionImageFilterIUC3IUC2_Superclass___New_orig__ = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass___New_orig__
itkBinaryProjectionImageFilterIUC3IUC2_Superclass_cast = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass_cast


def itkBinaryProjectionImageFilterIUC3IUC3_Superclass_New():
    return itkBinaryProjectionImageFilterIUC3IUC3_Superclass.New()

class itkBinaryProjectionImageFilterIUC3IUC3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUC3IUC3_Superclass
    cast = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUC3IUC3_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass_swigregister(itkBinaryProjectionImageFilterIUC3IUC3_Superclass)
itkBinaryProjectionImageFilterIUC3IUC3_Superclass___New_orig__ = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass___New_orig__
itkBinaryProjectionImageFilterIUC3IUC3_Superclass_cast = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass_cast


def itkBinaryProjectionImageFilterIUS2IUS2_Superclass_New():
    return itkBinaryProjectionImageFilterIUS2IUS2_Superclass.New()

class itkBinaryProjectionImageFilterIUS2IUS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUS2IUS2_Superclass
    cast = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUS2IUS2_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass_swigregister(itkBinaryProjectionImageFilterIUS2IUS2_Superclass)
itkBinaryProjectionImageFilterIUS2IUS2_Superclass___New_orig__ = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass___New_orig__
itkBinaryProjectionImageFilterIUS2IUS2_Superclass_cast = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass_cast


def itkBinaryProjectionImageFilterIUS3IUS2_Superclass_New():
    return itkBinaryProjectionImageFilterIUS3IUS2_Superclass.New()

class itkBinaryProjectionImageFilterIUS3IUS2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIUS3IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUS3IUS2_Superclass
    cast = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUS3IUS2_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIUS3IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUS3IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUS3IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUS3IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUS3IUS2_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass_swigregister(itkBinaryProjectionImageFilterIUS3IUS2_Superclass)
itkBinaryProjectionImageFilterIUS3IUS2_Superclass___New_orig__ = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass___New_orig__
itkBinaryProjectionImageFilterIUS3IUS2_Superclass_cast = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass_cast


def itkBinaryProjectionImageFilterIUS3IUS3_Superclass_New():
    return itkBinaryProjectionImageFilterIUS3IUS3_Superclass.New()

class itkBinaryProjectionImageFilterIUS3IUS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass_ImageDimensionCheck
    
    SetProjectionDimension = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass_SetProjectionDimension)
    GetProjectionDimension = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass_GetProjectionDimension)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUS3IUS3_Superclass
    cast = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUS3IUS3_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass_swigregister(itkBinaryProjectionImageFilterIUS3IUS3_Superclass)
itkBinaryProjectionImageFilterIUS3IUS3_Superclass___New_orig__ = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass___New_orig__
itkBinaryProjectionImageFilterIUS3IUS3_Superclass_cast = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass_cast


def itkBinaryProjectionImageFilterID2ID2_New():
    return itkBinaryProjectionImageFilterID2ID2.New()

class itkBinaryProjectionImageFilterID2ID2(itkBinaryProjectionImageFilterID2ID2_Superclass):
    r"""


    Binary projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_GetBackgroundValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterID2ID2
    cast = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterID2ID2

        Create a new object of the class itkBinaryProjectionImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterID2ID2 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_swigregister(itkBinaryProjectionImageFilterID2ID2)
itkBinaryProjectionImageFilterID2ID2___New_orig__ = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2___New_orig__
itkBinaryProjectionImageFilterID2ID2_cast = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_cast


def itkBinaryProjectionImageFilterID3ID3_New():
    return itkBinaryProjectionImageFilterID3ID3.New()

class itkBinaryProjectionImageFilterID3ID3(itkBinaryProjectionImageFilterID3ID3_Superclass):
    r"""


    Binary projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_GetBackgroundValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterID3ID3
    cast = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterID3ID3

        Create a new object of the class itkBinaryProjectionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterID3ID3 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_swigregister(itkBinaryProjectionImageFilterID3ID3)
itkBinaryProjectionImageFilterID3ID3___New_orig__ = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3___New_orig__
itkBinaryProjectionImageFilterID3ID3_cast = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_cast


def itkBinaryProjectionImageFilterIF2IF2_New():
    return itkBinaryProjectionImageFilterIF2IF2.New()

class itkBinaryProjectionImageFilterIF2IF2(itkBinaryProjectionImageFilterIF2IF2_Superclass):
    r"""


    Binary projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_GetBackgroundValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIF2IF2
    cast = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIF2IF2

        Create a new object of the class itkBinaryProjectionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIF2IF2 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_swigregister(itkBinaryProjectionImageFilterIF2IF2)
itkBinaryProjectionImageFilterIF2IF2___New_orig__ = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2___New_orig__
itkBinaryProjectionImageFilterIF2IF2_cast = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_cast


def itkBinaryProjectionImageFilterIF3IF3_New():
    return itkBinaryProjectionImageFilterIF3IF3.New()

class itkBinaryProjectionImageFilterIF3IF3(itkBinaryProjectionImageFilterIF3IF3_Superclass):
    r"""


    Binary projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_GetBackgroundValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIF3IF3
    cast = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIF3IF3

        Create a new object of the class itkBinaryProjectionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIF3IF3 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_swigregister(itkBinaryProjectionImageFilterIF3IF3)
itkBinaryProjectionImageFilterIF3IF3___New_orig__ = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3___New_orig__
itkBinaryProjectionImageFilterIF3IF3_cast = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_cast


def itkBinaryProjectionImageFilterISS2ISS2_New():
    return itkBinaryProjectionImageFilterISS2ISS2.New()

class itkBinaryProjectionImageFilterISS2ISS2(itkBinaryProjectionImageFilterISS2ISS2_Superclass):
    r"""


    Binary projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_GetBackgroundValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterISS2ISS2

        Create a new object of the class itkBinaryProjectionImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterISS2ISS2 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_swigregister(itkBinaryProjectionImageFilterISS2ISS2)
itkBinaryProjectionImageFilterISS2ISS2___New_orig__ = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2___New_orig__
itkBinaryProjectionImageFilterISS2ISS2_cast = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_cast


def itkBinaryProjectionImageFilterISS3ISS2_New():
    return itkBinaryProjectionImageFilterISS3ISS2.New()

class itkBinaryProjectionImageFilterISS3ISS2(itkBinaryProjectionImageFilterISS3ISS2_Superclass):
    r"""


    Binary projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_GetBackgroundValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterISS3ISS2
    cast = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterISS3ISS2

        Create a new object of the class itkBinaryProjectionImageFilterISS3ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterISS3ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterISS3ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterISS3ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterISS3ISS2 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_swigregister(itkBinaryProjectionImageFilterISS3ISS2)
itkBinaryProjectionImageFilterISS3ISS2___New_orig__ = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2___New_orig__
itkBinaryProjectionImageFilterISS3ISS2_cast = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_cast


def itkBinaryProjectionImageFilterISS3ISS3_New():
    return itkBinaryProjectionImageFilterISS3ISS3.New()

class itkBinaryProjectionImageFilterISS3ISS3(itkBinaryProjectionImageFilterISS3ISS3_Superclass):
    r"""


    Binary projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_GetBackgroundValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterISS3ISS3

        Create a new object of the class itkBinaryProjectionImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterISS3ISS3 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_swigregister(itkBinaryProjectionImageFilterISS3ISS3)
itkBinaryProjectionImageFilterISS3ISS3___New_orig__ = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3___New_orig__
itkBinaryProjectionImageFilterISS3ISS3_cast = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_cast


def itkBinaryProjectionImageFilterIUC2IUC2_New():
    return itkBinaryProjectionImageFilterIUC2IUC2.New()

class itkBinaryProjectionImageFilterIUC2IUC2(itkBinaryProjectionImageFilterIUC2IUC2_Superclass):
    r"""


    Binary projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_GetBackgroundValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUC2IUC2

        Create a new object of the class itkBinaryProjectionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUC2IUC2 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_swigregister(itkBinaryProjectionImageFilterIUC2IUC2)
itkBinaryProjectionImageFilterIUC2IUC2___New_orig__ = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2___New_orig__
itkBinaryProjectionImageFilterIUC2IUC2_cast = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_cast


def itkBinaryProjectionImageFilterIUC3IUC2_New():
    return itkBinaryProjectionImageFilterIUC3IUC2.New()

class itkBinaryProjectionImageFilterIUC3IUC2(itkBinaryProjectionImageFilterIUC3IUC2_Superclass):
    r"""


    Binary projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_GetBackgroundValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUC3IUC2
    cast = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUC3IUC2

        Create a new object of the class itkBinaryProjectionImageFilterIUC3IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUC3IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUC3IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUC3IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUC3IUC2 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_swigregister(itkBinaryProjectionImageFilterIUC3IUC2)
itkBinaryProjectionImageFilterIUC3IUC2___New_orig__ = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2___New_orig__
itkBinaryProjectionImageFilterIUC3IUC2_cast = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_cast


def itkBinaryProjectionImageFilterIUC3IUC3_New():
    return itkBinaryProjectionImageFilterIUC3IUC3.New()

class itkBinaryProjectionImageFilterIUC3IUC3(itkBinaryProjectionImageFilterIUC3IUC3_Superclass):
    r"""


    Binary projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_GetBackgroundValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUC3IUC3

        Create a new object of the class itkBinaryProjectionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUC3IUC3 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_swigregister(itkBinaryProjectionImageFilterIUC3IUC3)
itkBinaryProjectionImageFilterIUC3IUC3___New_orig__ = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3___New_orig__
itkBinaryProjectionImageFilterIUC3IUC3_cast = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_cast


def itkBinaryProjectionImageFilterIUS2IUS2_New():
    return itkBinaryProjectionImageFilterIUS2IUS2.New()

class itkBinaryProjectionImageFilterIUS2IUS2(itkBinaryProjectionImageFilterIUS2IUS2_Superclass):
    r"""


    Binary projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_GetBackgroundValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUS2IUS2

        Create a new object of the class itkBinaryProjectionImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUS2IUS2 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_swigregister(itkBinaryProjectionImageFilterIUS2IUS2)
itkBinaryProjectionImageFilterIUS2IUS2___New_orig__ = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2___New_orig__
itkBinaryProjectionImageFilterIUS2IUS2_cast = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_cast


def itkBinaryProjectionImageFilterIUS3IUS2_New():
    return itkBinaryProjectionImageFilterIUS3IUS2.New()

class itkBinaryProjectionImageFilterIUS3IUS2(itkBinaryProjectionImageFilterIUS3IUS2_Superclass):
    r"""


    Binary projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_GetBackgroundValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUS3IUS2
    cast = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUS3IUS2

        Create a new object of the class itkBinaryProjectionImageFilterIUS3IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUS3IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUS3IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUS3IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUS3IUS2 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_swigregister(itkBinaryProjectionImageFilterIUS3IUS2)
itkBinaryProjectionImageFilterIUS3IUS2___New_orig__ = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2___New_orig__
itkBinaryProjectionImageFilterIUS3IUS2_cast = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_cast


def itkBinaryProjectionImageFilterIUS3IUS3_New():
    return itkBinaryProjectionImageFilterIUS3IUS3.New()

class itkBinaryProjectionImageFilterIUS3IUS3(itkBinaryProjectionImageFilterIUS3IUS3_Superclass):
    r"""


    Binary projection.

    This class was contributed to the Insight Journal by Gaetan Lehmann.
    The original paper can be found athttps://hdl.handle.net/1926/164

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  ProjectionImageFilter

    See:   MedianProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MeanProjectionImageFilter

    See:   MaximumProjectionImageFilter

    See:   MinimumProjectionImageFilter

    See:   StandardDeviationProjectionImageFilter

    See:   SumProjectionImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_GetBackgroundValue)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUS3IUS3

        Create a new object of the class itkBinaryProjectionImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUS3IUS3 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_swigregister(itkBinaryProjectionImageFilterIUS3IUS3)
itkBinaryProjectionImageFilterIUS3IUS3___New_orig__ = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3___New_orig__
itkBinaryProjectionImageFilterIUS3IUS3_cast = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def binary_projection_image_filter(*args, **kwargs):
    """Procedural interface for BinaryProjectionImageFilter"""
    import itk
    instance = itk.BinaryProjectionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def binary_projection_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.BinaryProjectionImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.BinaryProjectionImageFilter.values()[0]
    else:
        filter_object = itk.BinaryProjectionImageFilter

    binary_projection_image_filter.__doc__ = filter_object.__doc__
    binary_projection_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    binary_projection_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.BinaryProjectionImageFilter, itkTemplate.itkTemplate):
        binary_projection_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        binary_projection_image_filter.__doc__ += "\n"
        binary_projection_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        binary_projection_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def projection_image_filter(*args, **kwargs):
    """Procedural interface for ProjectionImageFilter"""
    import itk
    instance = itk.ProjectionImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def projection_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ProjectionImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ProjectionImageFilter.values()[0]
    else:
        filter_object = itk.ProjectionImageFilter

    projection_image_filter.__doc__ = filter_object.__doc__
    projection_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    projection_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ProjectionImageFilter, itkTemplate.itkTemplate):
        projection_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        projection_image_filter.__doc__ += "\n"
        projection_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        projection_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



