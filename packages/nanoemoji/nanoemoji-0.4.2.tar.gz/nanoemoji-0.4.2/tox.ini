[tox]
; Examples:
;   $ tox
;     # Runs static checks, then pytest for all the pythons listed in 'envlist'
;   $ tox -e lint
;     # Only runs the linter checks
;   $ tox -e py38
;     # Runs all tests against python3.8 only
;   $ export TOXENV=py39
;   $ tox
;     # If present use $TOXENV environment variable
envlist = lint, py3{6,7,8,9}

; if any of the requested python interpreters is unavailable (e.g. on the local dev
; workstation), the tests are skipped and tox won't return an error
skip_missing_interpreters = true

[testenv]
description = Run pytest against the specified python version
; if the tox environment name contains `dev` (e.g. `py39-dev`), pip install the
; current package in editable mode (-e .)
usedevelop =
    dev: true
    !dev: false
; install pinned dependencies specific for each python version: e.g. if tox env
; is named `py39`, it will install from `python3.9-requirements.txt` file, etc.
deps =
    -r requirements/{basepython}-requirements.txt
; downloads the latest pip, setuptools and wheel when creating the venv
download = true
; any arguments passed to tox command line after the '--' separator are passed through
; to pytest: e.g. `tox -e py39 -- -vv --lf -x`
commands =
    pytest {posargs}

[testenv:lint]
description = Check python style and typing annotation
; no need to install current package for static analysis tool
skip_install = true
; use the latest python that pytype supports
basepython = python3.8
commands =
    black --check --diff src tests
    pytype
