# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKSpatialObjectsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSurfaceSpatialObjectPython
else:
    import _itkSurfaceSpatialObjectPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkSurfaceSpatialObjectPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkSurfaceSpatialObjectPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkSpatialObjectBasePython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.itkVectorContainerPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkVariableLengthVectorPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkDiffusionTensor3DPython
import itk.itkArray2DPython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkTransformBasePython
import itk.itkSpatialObjectPropertyPython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkSurfaceSpatialObjectPointPython
import itk.itkSpatialObjectPointPython
class listitkPointBasedSpatialObjectSurface2_Pointer(object):
    r"""Proxy of C++ std::list< itkPointBasedSpatialObjectSurface2_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer___nonzero__)
    __bool__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer___bool__)
    __len__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer___len__)
    __getslice__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer___getslice__)
    __setslice__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer___setslice__)
    __delslice__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer___delslice__)
    __delitem__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer___delitem__)
    __getitem__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer___getitem__)
    __setitem__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer___setitem__)
    pop = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer_pop)
    append = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer_append)
    empty = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer_empty)
    size = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer_size)
    swap = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer_swap)
    begin = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer_begin)
    end = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer_end)
    rbegin = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer_rbegin)
    rend = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer_rend)
    clear = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer_clear)
    get_allocator = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer_get_allocator)
    pop_back = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer_pop_back)
    erase = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer_erase)

    def __init__(self, *args):
        r"""
        __init__(listitkPointBasedSpatialObjectSurface2_Pointer self) -> listitkPointBasedSpatialObjectSurface2_Pointer
        __init__(listitkPointBasedSpatialObjectSurface2_Pointer self, listitkPointBasedSpatialObjectSurface2_Pointer other) -> listitkPointBasedSpatialObjectSurface2_Pointer
        __init__(listitkPointBasedSpatialObjectSurface2_Pointer self, std::list< itkPointBasedSpatialObjectSurface2_Pointer >::size_type size) -> listitkPointBasedSpatialObjectSurface2_Pointer
        __init__(listitkPointBasedSpatialObjectSurface2_Pointer self, std::list< itkPointBasedSpatialObjectSurface2_Pointer >::size_type size, std::list< itkPointBasedSpatialObjectSurface2_Pointer >::value_type const & value) -> listitkPointBasedSpatialObjectSurface2_Pointer
        """
        _itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer_swiginit(self, _itkSurfaceSpatialObjectPython.new_listitkPointBasedSpatialObjectSurface2_Pointer(*args))
    push_back = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer_push_back)
    front = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer_front)
    back = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer_back)
    assign = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer_assign)
    resize = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer_resize)
    insert = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer_insert)
    pop_front = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer_pop_front)
    push_front = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer_push_front)
    reverse = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer_reverse)
    __swig_destroy__ = _itkSurfaceSpatialObjectPython.delete_listitkPointBasedSpatialObjectSurface2_Pointer

# Register listitkPointBasedSpatialObjectSurface2_Pointer in _itkSurfaceSpatialObjectPython:
_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface2_Pointer_swigregister(listitkPointBasedSpatialObjectSurface2_Pointer)

class listitkPointBasedSpatialObjectSurface3_Pointer(object):
    r"""Proxy of C++ std::list< itkPointBasedSpatialObjectSurface3_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer___nonzero__)
    __bool__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer___bool__)
    __len__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer___len__)
    __getslice__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer___getslice__)
    __setslice__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer___setslice__)
    __delslice__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer___delslice__)
    __delitem__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer___delitem__)
    __getitem__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer___getitem__)
    __setitem__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer___setitem__)
    pop = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer_pop)
    append = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer_append)
    empty = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer_empty)
    size = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer_size)
    swap = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer_swap)
    begin = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer_begin)
    end = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer_end)
    rbegin = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer_rbegin)
    rend = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer_rend)
    clear = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer_clear)
    get_allocator = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer_get_allocator)
    pop_back = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer_pop_back)
    erase = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer_erase)

    def __init__(self, *args):
        r"""
        __init__(listitkPointBasedSpatialObjectSurface3_Pointer self) -> listitkPointBasedSpatialObjectSurface3_Pointer
        __init__(listitkPointBasedSpatialObjectSurface3_Pointer self, listitkPointBasedSpatialObjectSurface3_Pointer other) -> listitkPointBasedSpatialObjectSurface3_Pointer
        __init__(listitkPointBasedSpatialObjectSurface3_Pointer self, std::list< itkPointBasedSpatialObjectSurface3_Pointer >::size_type size) -> listitkPointBasedSpatialObjectSurface3_Pointer
        __init__(listitkPointBasedSpatialObjectSurface3_Pointer self, std::list< itkPointBasedSpatialObjectSurface3_Pointer >::size_type size, std::list< itkPointBasedSpatialObjectSurface3_Pointer >::value_type const & value) -> listitkPointBasedSpatialObjectSurface3_Pointer
        """
        _itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer_swiginit(self, _itkSurfaceSpatialObjectPython.new_listitkPointBasedSpatialObjectSurface3_Pointer(*args))
    push_back = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer_push_back)
    front = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer_front)
    back = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer_back)
    assign = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer_assign)
    resize = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer_resize)
    insert = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer_insert)
    pop_front = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer_pop_front)
    push_front = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer_push_front)
    reverse = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer_reverse)
    __swig_destroy__ = _itkSurfaceSpatialObjectPython.delete_listitkPointBasedSpatialObjectSurface3_Pointer

# Register listitkPointBasedSpatialObjectSurface3_Pointer in _itkSurfaceSpatialObjectPython:
_itkSurfaceSpatialObjectPython.listitkPointBasedSpatialObjectSurface3_Pointer_swigregister(listitkPointBasedSpatialObjectSurface3_Pointer)

class listitkSurfaceSpatialObject2_Pointer(object):
    r"""Proxy of C++ std::list< itkSurfaceSpatialObject2_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer___nonzero__)
    __bool__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer___bool__)
    __len__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer___len__)
    __getslice__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer___getslice__)
    __setslice__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer___setslice__)
    __delslice__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer___delslice__)
    __delitem__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer___delitem__)
    __getitem__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer___getitem__)
    __setitem__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer___setitem__)
    pop = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer_pop)
    append = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer_append)
    empty = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer_empty)
    size = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer_size)
    swap = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer_swap)
    begin = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer_begin)
    end = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer_end)
    rbegin = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer_rbegin)
    rend = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer_rend)
    clear = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer_clear)
    get_allocator = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer_get_allocator)
    pop_back = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer_pop_back)
    erase = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer_erase)

    def __init__(self, *args):
        r"""
        __init__(listitkSurfaceSpatialObject2_Pointer self) -> listitkSurfaceSpatialObject2_Pointer
        __init__(listitkSurfaceSpatialObject2_Pointer self, listitkSurfaceSpatialObject2_Pointer other) -> listitkSurfaceSpatialObject2_Pointer
        __init__(listitkSurfaceSpatialObject2_Pointer self, std::list< itkSurfaceSpatialObject2_Pointer >::size_type size) -> listitkSurfaceSpatialObject2_Pointer
        __init__(listitkSurfaceSpatialObject2_Pointer self, std::list< itkSurfaceSpatialObject2_Pointer >::size_type size, std::list< itkSurfaceSpatialObject2_Pointer >::value_type const & value) -> listitkSurfaceSpatialObject2_Pointer
        """
        _itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer_swiginit(self, _itkSurfaceSpatialObjectPython.new_listitkSurfaceSpatialObject2_Pointer(*args))
    push_back = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer_push_back)
    front = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer_front)
    back = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer_back)
    assign = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer_assign)
    resize = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer_resize)
    insert = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer_insert)
    pop_front = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer_pop_front)
    push_front = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer_push_front)
    reverse = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer_reverse)
    __swig_destroy__ = _itkSurfaceSpatialObjectPython.delete_listitkSurfaceSpatialObject2_Pointer

# Register listitkSurfaceSpatialObject2_Pointer in _itkSurfaceSpatialObjectPython:
_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject2_Pointer_swigregister(listitkSurfaceSpatialObject2_Pointer)

class listitkSurfaceSpatialObject3_Pointer(object):
    r"""Proxy of C++ std::list< itkSurfaceSpatialObject3_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer___nonzero__)
    __bool__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer___bool__)
    __len__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer___len__)
    __getslice__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer___getslice__)
    __setslice__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer___setslice__)
    __delslice__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer___delslice__)
    __delitem__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer___delitem__)
    __getitem__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer___getitem__)
    __setitem__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer___setitem__)
    pop = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer_pop)
    append = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer_append)
    empty = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer_empty)
    size = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer_size)
    swap = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer_swap)
    begin = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer_begin)
    end = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer_end)
    rbegin = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer_rbegin)
    rend = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer_rend)
    clear = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer_clear)
    get_allocator = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer_get_allocator)
    pop_back = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer_pop_back)
    erase = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer_erase)

    def __init__(self, *args):
        r"""
        __init__(listitkSurfaceSpatialObject3_Pointer self) -> listitkSurfaceSpatialObject3_Pointer
        __init__(listitkSurfaceSpatialObject3_Pointer self, listitkSurfaceSpatialObject3_Pointer other) -> listitkSurfaceSpatialObject3_Pointer
        __init__(listitkSurfaceSpatialObject3_Pointer self, std::list< itkSurfaceSpatialObject3_Pointer >::size_type size) -> listitkSurfaceSpatialObject3_Pointer
        __init__(listitkSurfaceSpatialObject3_Pointer self, std::list< itkSurfaceSpatialObject3_Pointer >::size_type size, std::list< itkSurfaceSpatialObject3_Pointer >::value_type const & value) -> listitkSurfaceSpatialObject3_Pointer
        """
        _itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer_swiginit(self, _itkSurfaceSpatialObjectPython.new_listitkSurfaceSpatialObject3_Pointer(*args))
    push_back = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer_push_back)
    front = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer_front)
    back = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer_back)
    assign = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer_assign)
    resize = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer_resize)
    insert = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer_insert)
    pop_front = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer_pop_front)
    push_front = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer_push_front)
    reverse = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer_reverse)
    __swig_destroy__ = _itkSurfaceSpatialObjectPython.delete_listitkSurfaceSpatialObject3_Pointer

# Register listitkSurfaceSpatialObject3_Pointer in _itkSurfaceSpatialObjectPython:
_itkSurfaceSpatialObjectPython.listitkSurfaceSpatialObject3_Pointer_swigregister(listitkSurfaceSpatialObject3_Pointer)


def itkPointBasedSpatialObjectSurface2_New():
    return itkPointBasedSpatialObjectSurface2.New()

class itkPointBasedSpatialObjectSurface2(itk.itkSpatialObjectBasePython.itkSpatialObject2):
    r"""


    This class serves as the base class for point-based spatial objects.

    A PointBasedSpatialObject is an abstract class to support
    PointBasedSpatialObject filters and algorithms. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2___New_orig__)
    Clone = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_Clone)
    AddPoint = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_AddPoint)
    RemovePoint = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_RemovePoint)
    SetPoints = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_SetPoints)
    GetPoints = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_GetPoints)
    GetPoint = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_GetPoint)
    GetNumberOfPoints = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_GetNumberOfPoints)
    ClosestPointInWorldSpace = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_ClosestPointInWorldSpace)
    ClosestPointInObjectSpace = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_ClosestPointInObjectSpace)
    __swig_destroy__ = _itkSurfaceSpatialObjectPython.delete_itkPointBasedSpatialObjectSurface2
    cast = _swig_new_static_method(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_cast)

    def New(*args, **kargs):
        """New() -> itkPointBasedSpatialObjectSurface2

        Create a new object of the class itkPointBasedSpatialObjectSurface2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPointBasedSpatialObjectSurface2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPointBasedSpatialObjectSurface2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPointBasedSpatialObjectSurface2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPointBasedSpatialObjectSurface2 in _itkSurfaceSpatialObjectPython:
_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_swigregister(itkPointBasedSpatialObjectSurface2)
itkPointBasedSpatialObjectSurface2___New_orig__ = _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2___New_orig__
itkPointBasedSpatialObjectSurface2_cast = _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface2_cast


def itkPointBasedSpatialObjectSurface3_New():
    return itkPointBasedSpatialObjectSurface3.New()

class itkPointBasedSpatialObjectSurface3(itk.itkSpatialObjectBasePython.itkSpatialObject3):
    r"""


    This class serves as the base class for point-based spatial objects.

    A PointBasedSpatialObject is an abstract class to support
    PointBasedSpatialObject filters and algorithms. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3___New_orig__)
    Clone = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_Clone)
    AddPoint = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_AddPoint)
    RemovePoint = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_RemovePoint)
    SetPoints = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_SetPoints)
    GetPoints = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_GetPoints)
    GetPoint = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_GetPoint)
    GetNumberOfPoints = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_GetNumberOfPoints)
    ClosestPointInWorldSpace = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_ClosestPointInWorldSpace)
    ClosestPointInObjectSpace = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_ClosestPointInObjectSpace)
    __swig_destroy__ = _itkSurfaceSpatialObjectPython.delete_itkPointBasedSpatialObjectSurface3
    cast = _swig_new_static_method(_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_cast)

    def New(*args, **kargs):
        """New() -> itkPointBasedSpatialObjectSurface3

        Create a new object of the class itkPointBasedSpatialObjectSurface3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPointBasedSpatialObjectSurface3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPointBasedSpatialObjectSurface3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPointBasedSpatialObjectSurface3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPointBasedSpatialObjectSurface3 in _itkSurfaceSpatialObjectPython:
_itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_swigregister(itkPointBasedSpatialObjectSurface3)
itkPointBasedSpatialObjectSurface3___New_orig__ = _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3___New_orig__
itkPointBasedSpatialObjectSurface3_cast = _itkSurfaceSpatialObjectPython.itkPointBasedSpatialObjectSurface3_cast


def itkSurfaceSpatialObject2_New():
    return itkSurfaceSpatialObject2.New()

class itkSurfaceSpatialObject2(itkPointBasedSpatialObjectSurface2):
    r"""


    Representation of a Surface based on the spatial object classes.

    The Surface is basically defined by a set of points.

    See:   SurfaceSpatialObjectPoint 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject2___New_orig__)
    Clone = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject2_Clone)
    Approximate3DNormals = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject2_Approximate3DNormals)
    __swig_destroy__ = _itkSurfaceSpatialObjectPython.delete_itkSurfaceSpatialObject2
    cast = _swig_new_static_method(_itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject2_cast)

    def New(*args, **kargs):
        """New() -> itkSurfaceSpatialObject2

        Create a new object of the class itkSurfaceSpatialObject2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSurfaceSpatialObject2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSurfaceSpatialObject2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSurfaceSpatialObject2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSurfaceSpatialObject2 in _itkSurfaceSpatialObjectPython:
_itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject2_swigregister(itkSurfaceSpatialObject2)
itkSurfaceSpatialObject2___New_orig__ = _itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject2___New_orig__
itkSurfaceSpatialObject2_cast = _itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject2_cast


def itkSurfaceSpatialObject3_New():
    return itkSurfaceSpatialObject3.New()

class itkSurfaceSpatialObject3(itkPointBasedSpatialObjectSurface3):
    r"""


    Representation of a Surface based on the spatial object classes.

    The Surface is basically defined by a set of points.

    See:   SurfaceSpatialObjectPoint 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject3___New_orig__)
    Clone = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject3_Clone)
    Approximate3DNormals = _swig_new_instance_method(_itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject3_Approximate3DNormals)
    __swig_destroy__ = _itkSurfaceSpatialObjectPython.delete_itkSurfaceSpatialObject3
    cast = _swig_new_static_method(_itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject3_cast)

    def New(*args, **kargs):
        """New() -> itkSurfaceSpatialObject3

        Create a new object of the class itkSurfaceSpatialObject3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSurfaceSpatialObject3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSurfaceSpatialObject3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSurfaceSpatialObject3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSurfaceSpatialObject3 in _itkSurfaceSpatialObjectPython:
_itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject3_swigregister(itkSurfaceSpatialObject3)
itkSurfaceSpatialObject3___New_orig__ = _itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject3___New_orig__
itkSurfaceSpatialObject3_cast = _itkSurfaceSpatialObjectPython.itkSurfaceSpatialObject3_cast



