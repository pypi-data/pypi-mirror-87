Prefix(:=<http://www.w3.org/2002/03owlt/description-logic/consistent631#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(oiled:=<http://oiled.man.example.net/test#>)


Ontology(<http://www.w3.org/2002/03owlt/description-logic/consistent631>

Declaration(Class(oiled:Satisfiable))
Declaration(Class(oiled:p1))
Declaration(Class(oiled:p1.comp))
Declaration(Class(:A.4))
Declaration(Class(:C.2))
Declaration(Class(:C.2.comp))
Declaration(Class(:C.3))
Declaration(Class(:C.3.comp))
Declaration(Class(:V.5))
Declaration(ObjectProperty(oiled:f))
Declaration(ObjectProperty(oiled:invF))
Declaration(ObjectProperty(oiled:invR))
Declaration(ObjectProperty(oiled:r))
Declaration(ObjectProperty(:P.2))
Declaration(DataProperty(:P.1))
Declaration(DataProperty(:P.3))
############################
#   Object Properties
############################

# Object Property: oiled:f (oiled:f)

InverseObjectProperties(oiled:f oiled:invF)
FunctionalObjectProperty(oiled:f)

# Object Property: oiled:invR (oiled:invR)

InverseObjectProperties(oiled:invR oiled:r)

# Object Property: oiled:r (oiled:r)

TransitiveObjectProperty(oiled:r)




############################
#   Classes
############################

# Class: oiled:Satisfiable (oiled:Satisfiable)

EquivalentClasses(oiled:Satisfiable ObjectIntersectionOf(oiled:p1 ObjectSomeValuesFrom(oiled:r :V.5)))

# Class: oiled:p1 (oiled:p1)

EquivalentClasses(oiled:p1 DataMaxCardinality(0 :P.1))

# Class: oiled:p1.comp (oiled:p1.comp)

EquivalentClasses(oiled:p1.comp DataMinCardinality(1 :P.1))

# Class: :A.4 (:A.4)

EquivalentClasses(:A.4 ObjectIntersectionOf(oiled:p1 ObjectAllValuesFrom(oiled:invR :C.2)))

# Class: :C.2 (:C.2)

EquivalentClasses(:C.2 ObjectExactCardinality(0 :P.2))

# Class: :C.2.comp (:C.2.comp)

EquivalentClasses(:C.2.comp ObjectIntersectionOf(oiled:p1 :C.3))
EquivalentClasses(:C.2.comp ObjectMinCardinality(1 :P.2))

# Class: :C.3 (:C.3)

EquivalentClasses(:C.3 DataExactCardinality(0 :P.3))

# Class: :C.3.comp (:C.3.comp)

EquivalentClasses(:C.3.comp ObjectAllValuesFrom(oiled:r oiled:p1))
EquivalentClasses(:C.3.comp DataMinCardinality(1 :P.3))

# Class: :V.5 (:V.5)

EquivalentClasses(:V.5 ObjectSomeValuesFrom(oiled:r :A.4))


ClassAssertion(oiled:Satisfiable _:genid74093)
)