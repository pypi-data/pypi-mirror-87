# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKMathematicalMorphologyPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkWhiteTopHatImageFilterPython
else:
    import _itkWhiteTopHatImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkWhiteTopHatImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkWhiteTopHatImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkFlatStructuringElementPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkFixedArrayPython
import itk.itkPointPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkSymmetricSecondRankTensorPython
import itk.ITKCommonBasePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkRGBPixelPython
import itk.itkNeighborhoodPython
import itk.itkBoxImageFilterPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython

def itkWhiteTopHatImageFilterID2ID2SE2_New():
    return itkWhiteTopHatImageFilterID2ID2SE2.New()

class itkWhiteTopHatImageFilterID2ID2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterID2ID2SE2):
    r"""


    White top hat extracts local maxima that are larger than the
    structuring element.

    Top-hats are described in Chapter 4.5 of Pierre Soille's book
    "Morphological Image Analysis: Principles and Applications", Second
    Edition, Springer, 2003.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_Clone)
    SetSafeBorder = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_SafeBorderOff)
    AlgorithmType_BASIC = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_AlgorithmType_VHGW
    
    SetAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_GetAlgorithm)
    SetForceAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_SetForceAlgorithm)
    GetForceAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_GetForceAlgorithm)
    ForceAlgorithmOn = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_ForceAlgorithmOn)
    ForceAlgorithmOff = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_ForceAlgorithmOff)
    __swig_destroy__ = _itkWhiteTopHatImageFilterPython.delete_itkWhiteTopHatImageFilterID2ID2SE2
    cast = _swig_new_static_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkWhiteTopHatImageFilterID2ID2SE2

        Create a new object of the class itkWhiteTopHatImageFilterID2ID2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWhiteTopHatImageFilterID2ID2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWhiteTopHatImageFilterID2ID2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWhiteTopHatImageFilterID2ID2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWhiteTopHatImageFilterID2ID2SE2 in _itkWhiteTopHatImageFilterPython:
_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_swigregister(itkWhiteTopHatImageFilterID2ID2SE2)
itkWhiteTopHatImageFilterID2ID2SE2___New_orig__ = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2___New_orig__
itkWhiteTopHatImageFilterID2ID2SE2_cast = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_cast


def itkWhiteTopHatImageFilterID3ID3SE3_New():
    return itkWhiteTopHatImageFilterID3ID3SE3.New()

class itkWhiteTopHatImageFilterID3ID3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterID3ID3SE3):
    r"""


    White top hat extracts local maxima that are larger than the
    structuring element.

    Top-hats are described in Chapter 4.5 of Pierre Soille's book
    "Morphological Image Analysis: Principles and Applications", Second
    Edition, Springer, 2003.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_Clone)
    SetSafeBorder = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_SafeBorderOff)
    AlgorithmType_BASIC = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_AlgorithmType_VHGW
    
    SetAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_GetAlgorithm)
    SetForceAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_SetForceAlgorithm)
    GetForceAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_GetForceAlgorithm)
    ForceAlgorithmOn = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_ForceAlgorithmOn)
    ForceAlgorithmOff = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_ForceAlgorithmOff)
    __swig_destroy__ = _itkWhiteTopHatImageFilterPython.delete_itkWhiteTopHatImageFilterID3ID3SE3
    cast = _swig_new_static_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkWhiteTopHatImageFilterID3ID3SE3

        Create a new object of the class itkWhiteTopHatImageFilterID3ID3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWhiteTopHatImageFilterID3ID3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWhiteTopHatImageFilterID3ID3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWhiteTopHatImageFilterID3ID3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWhiteTopHatImageFilterID3ID3SE3 in _itkWhiteTopHatImageFilterPython:
_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_swigregister(itkWhiteTopHatImageFilterID3ID3SE3)
itkWhiteTopHatImageFilterID3ID3SE3___New_orig__ = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3___New_orig__
itkWhiteTopHatImageFilterID3ID3SE3_cast = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_cast


def itkWhiteTopHatImageFilterIF2IF2SE2_New():
    return itkWhiteTopHatImageFilterIF2IF2SE2.New()

class itkWhiteTopHatImageFilterIF2IF2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF2IF2SE2):
    r"""


    White top hat extracts local maxima that are larger than the
    structuring element.

    Top-hats are described in Chapter 4.5 of Pierre Soille's book
    "Morphological Image Analysis: Principles and Applications", Second
    Edition, Springer, 2003.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_Clone)
    SetSafeBorder = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_SafeBorderOff)
    AlgorithmType_BASIC = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_AlgorithmType_VHGW
    
    SetAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_GetAlgorithm)
    SetForceAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_SetForceAlgorithm)
    GetForceAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_GetForceAlgorithm)
    ForceAlgorithmOn = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_ForceAlgorithmOn)
    ForceAlgorithmOff = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_ForceAlgorithmOff)
    __swig_destroy__ = _itkWhiteTopHatImageFilterPython.delete_itkWhiteTopHatImageFilterIF2IF2SE2
    cast = _swig_new_static_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkWhiteTopHatImageFilterIF2IF2SE2

        Create a new object of the class itkWhiteTopHatImageFilterIF2IF2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWhiteTopHatImageFilterIF2IF2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWhiteTopHatImageFilterIF2IF2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWhiteTopHatImageFilterIF2IF2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWhiteTopHatImageFilterIF2IF2SE2 in _itkWhiteTopHatImageFilterPython:
_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_swigregister(itkWhiteTopHatImageFilterIF2IF2SE2)
itkWhiteTopHatImageFilterIF2IF2SE2___New_orig__ = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2___New_orig__
itkWhiteTopHatImageFilterIF2IF2SE2_cast = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_cast


def itkWhiteTopHatImageFilterIF3IF3SE3_New():
    return itkWhiteTopHatImageFilterIF3IF3SE3.New()

class itkWhiteTopHatImageFilterIF3IF3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF3IF3SE3):
    r"""


    White top hat extracts local maxima that are larger than the
    structuring element.

    Top-hats are described in Chapter 4.5 of Pierre Soille's book
    "Morphological Image Analysis: Principles and Applications", Second
    Edition, Springer, 2003.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_Clone)
    SetSafeBorder = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_SafeBorderOff)
    AlgorithmType_BASIC = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_AlgorithmType_VHGW
    
    SetAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_GetAlgorithm)
    SetForceAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_SetForceAlgorithm)
    GetForceAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_GetForceAlgorithm)
    ForceAlgorithmOn = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_ForceAlgorithmOn)
    ForceAlgorithmOff = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_ForceAlgorithmOff)
    __swig_destroy__ = _itkWhiteTopHatImageFilterPython.delete_itkWhiteTopHatImageFilterIF3IF3SE3
    cast = _swig_new_static_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkWhiteTopHatImageFilterIF3IF3SE3

        Create a new object of the class itkWhiteTopHatImageFilterIF3IF3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWhiteTopHatImageFilterIF3IF3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWhiteTopHatImageFilterIF3IF3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWhiteTopHatImageFilterIF3IF3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWhiteTopHatImageFilterIF3IF3SE3 in _itkWhiteTopHatImageFilterPython:
_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_swigregister(itkWhiteTopHatImageFilterIF3IF3SE3)
itkWhiteTopHatImageFilterIF3IF3SE3___New_orig__ = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3___New_orig__
itkWhiteTopHatImageFilterIF3IF3SE3_cast = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_cast


def itkWhiteTopHatImageFilterISS2ISS2SE2_New():
    return itkWhiteTopHatImageFilterISS2ISS2SE2.New()

class itkWhiteTopHatImageFilterISS2ISS2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS2ISS2SE2):
    r"""


    White top hat extracts local maxima that are larger than the
    structuring element.

    Top-hats are described in Chapter 4.5 of Pierre Soille's book
    "Morphological Image Analysis: Principles and Applications", Second
    Edition, Springer, 2003.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_Clone)
    SetSafeBorder = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_SafeBorderOff)
    AlgorithmType_BASIC = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_AlgorithmType_VHGW
    
    SetAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_GetAlgorithm)
    SetForceAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_SetForceAlgorithm)
    GetForceAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_GetForceAlgorithm)
    ForceAlgorithmOn = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_ForceAlgorithmOn)
    ForceAlgorithmOff = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_ForceAlgorithmOff)
    __swig_destroy__ = _itkWhiteTopHatImageFilterPython.delete_itkWhiteTopHatImageFilterISS2ISS2SE2
    cast = _swig_new_static_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkWhiteTopHatImageFilterISS2ISS2SE2

        Create a new object of the class itkWhiteTopHatImageFilterISS2ISS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWhiteTopHatImageFilterISS2ISS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWhiteTopHatImageFilterISS2ISS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWhiteTopHatImageFilterISS2ISS2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWhiteTopHatImageFilterISS2ISS2SE2 in _itkWhiteTopHatImageFilterPython:
_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_swigregister(itkWhiteTopHatImageFilterISS2ISS2SE2)
itkWhiteTopHatImageFilterISS2ISS2SE2___New_orig__ = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2___New_orig__
itkWhiteTopHatImageFilterISS2ISS2SE2_cast = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_cast


def itkWhiteTopHatImageFilterISS3ISS3SE3_New():
    return itkWhiteTopHatImageFilterISS3ISS3SE3.New()

class itkWhiteTopHatImageFilterISS3ISS3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS3ISS3SE3):
    r"""


    White top hat extracts local maxima that are larger than the
    structuring element.

    Top-hats are described in Chapter 4.5 of Pierre Soille's book
    "Morphological Image Analysis: Principles and Applications", Second
    Edition, Springer, 2003.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_Clone)
    SetSafeBorder = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_SafeBorderOff)
    AlgorithmType_BASIC = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_AlgorithmType_VHGW
    
    SetAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_GetAlgorithm)
    SetForceAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_SetForceAlgorithm)
    GetForceAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_GetForceAlgorithm)
    ForceAlgorithmOn = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_ForceAlgorithmOn)
    ForceAlgorithmOff = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_ForceAlgorithmOff)
    __swig_destroy__ = _itkWhiteTopHatImageFilterPython.delete_itkWhiteTopHatImageFilterISS3ISS3SE3
    cast = _swig_new_static_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkWhiteTopHatImageFilterISS3ISS3SE3

        Create a new object of the class itkWhiteTopHatImageFilterISS3ISS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWhiteTopHatImageFilterISS3ISS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWhiteTopHatImageFilterISS3ISS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWhiteTopHatImageFilterISS3ISS3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWhiteTopHatImageFilterISS3ISS3SE3 in _itkWhiteTopHatImageFilterPython:
_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_swigregister(itkWhiteTopHatImageFilterISS3ISS3SE3)
itkWhiteTopHatImageFilterISS3ISS3SE3___New_orig__ = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3___New_orig__
itkWhiteTopHatImageFilterISS3ISS3SE3_cast = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_cast


def itkWhiteTopHatImageFilterIUC2IUC2SE2_New():
    return itkWhiteTopHatImageFilterIUC2IUC2SE2.New()

class itkWhiteTopHatImageFilterIUC2IUC2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC2IUC2SE2):
    r"""


    White top hat extracts local maxima that are larger than the
    structuring element.

    Top-hats are described in Chapter 4.5 of Pierre Soille's book
    "Morphological Image Analysis: Principles and Applications", Second
    Edition, Springer, 2003.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_Clone)
    SetSafeBorder = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_SafeBorderOff)
    AlgorithmType_BASIC = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_AlgorithmType_VHGW
    
    SetAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_GetAlgorithm)
    SetForceAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_SetForceAlgorithm)
    GetForceAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_GetForceAlgorithm)
    ForceAlgorithmOn = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_ForceAlgorithmOn)
    ForceAlgorithmOff = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_ForceAlgorithmOff)
    __swig_destroy__ = _itkWhiteTopHatImageFilterPython.delete_itkWhiteTopHatImageFilterIUC2IUC2SE2
    cast = _swig_new_static_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkWhiteTopHatImageFilterIUC2IUC2SE2

        Create a new object of the class itkWhiteTopHatImageFilterIUC2IUC2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWhiteTopHatImageFilterIUC2IUC2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWhiteTopHatImageFilterIUC2IUC2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWhiteTopHatImageFilterIUC2IUC2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWhiteTopHatImageFilterIUC2IUC2SE2 in _itkWhiteTopHatImageFilterPython:
_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_swigregister(itkWhiteTopHatImageFilterIUC2IUC2SE2)
itkWhiteTopHatImageFilterIUC2IUC2SE2___New_orig__ = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2___New_orig__
itkWhiteTopHatImageFilterIUC2IUC2SE2_cast = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_cast


def itkWhiteTopHatImageFilterIUC3IUC3SE3_New():
    return itkWhiteTopHatImageFilterIUC3IUC3SE3.New()

class itkWhiteTopHatImageFilterIUC3IUC3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC3IUC3SE3):
    r"""


    White top hat extracts local maxima that are larger than the
    structuring element.

    Top-hats are described in Chapter 4.5 of Pierre Soille's book
    "Morphological Image Analysis: Principles and Applications", Second
    Edition, Springer, 2003.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_Clone)
    SetSafeBorder = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_SafeBorderOff)
    AlgorithmType_BASIC = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_AlgorithmType_VHGW
    
    SetAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_GetAlgorithm)
    SetForceAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_SetForceAlgorithm)
    GetForceAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_GetForceAlgorithm)
    ForceAlgorithmOn = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_ForceAlgorithmOn)
    ForceAlgorithmOff = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_ForceAlgorithmOff)
    __swig_destroy__ = _itkWhiteTopHatImageFilterPython.delete_itkWhiteTopHatImageFilterIUC3IUC3SE3
    cast = _swig_new_static_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkWhiteTopHatImageFilterIUC3IUC3SE3

        Create a new object of the class itkWhiteTopHatImageFilterIUC3IUC3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWhiteTopHatImageFilterIUC3IUC3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWhiteTopHatImageFilterIUC3IUC3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWhiteTopHatImageFilterIUC3IUC3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWhiteTopHatImageFilterIUC3IUC3SE3 in _itkWhiteTopHatImageFilterPython:
_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_swigregister(itkWhiteTopHatImageFilterIUC3IUC3SE3)
itkWhiteTopHatImageFilterIUC3IUC3SE3___New_orig__ = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3___New_orig__
itkWhiteTopHatImageFilterIUC3IUC3SE3_cast = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_cast


def itkWhiteTopHatImageFilterIUS2IUS2SE2_New():
    return itkWhiteTopHatImageFilterIUS2IUS2SE2.New()

class itkWhiteTopHatImageFilterIUS2IUS2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS2IUS2SE2):
    r"""


    White top hat extracts local maxima that are larger than the
    structuring element.

    Top-hats are described in Chapter 4.5 of Pierre Soille's book
    "Morphological Image Analysis: Principles and Applications", Second
    Edition, Springer, 2003.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_Clone)
    SetSafeBorder = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_SafeBorderOff)
    AlgorithmType_BASIC = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_AlgorithmType_VHGW
    
    SetAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_GetAlgorithm)
    SetForceAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_SetForceAlgorithm)
    GetForceAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_GetForceAlgorithm)
    ForceAlgorithmOn = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_ForceAlgorithmOn)
    ForceAlgorithmOff = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_ForceAlgorithmOff)
    __swig_destroy__ = _itkWhiteTopHatImageFilterPython.delete_itkWhiteTopHatImageFilterIUS2IUS2SE2
    cast = _swig_new_static_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkWhiteTopHatImageFilterIUS2IUS2SE2

        Create a new object of the class itkWhiteTopHatImageFilterIUS2IUS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWhiteTopHatImageFilterIUS2IUS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWhiteTopHatImageFilterIUS2IUS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWhiteTopHatImageFilterIUS2IUS2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWhiteTopHatImageFilterIUS2IUS2SE2 in _itkWhiteTopHatImageFilterPython:
_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_swigregister(itkWhiteTopHatImageFilterIUS2IUS2SE2)
itkWhiteTopHatImageFilterIUS2IUS2SE2___New_orig__ = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2___New_orig__
itkWhiteTopHatImageFilterIUS2IUS2SE2_cast = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_cast


def itkWhiteTopHatImageFilterIUS3IUS3SE3_New():
    return itkWhiteTopHatImageFilterIUS3IUS3SE3.New()

class itkWhiteTopHatImageFilterIUS3IUS3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS3IUS3SE3):
    r"""


    White top hat extracts local maxima that are larger than the
    structuring element.

    Top-hats are described in Chapter 4.5 of Pierre Soille's book
    "Morphological Image Analysis: Principles and Applications", Second
    Edition, Springer, 2003.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_Clone)
    SetSafeBorder = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_SafeBorderOff)
    AlgorithmType_BASIC = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_AlgorithmType_VHGW
    
    SetAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_GetAlgorithm)
    SetForceAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_SetForceAlgorithm)
    GetForceAlgorithm = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_GetForceAlgorithm)
    ForceAlgorithmOn = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_ForceAlgorithmOn)
    ForceAlgorithmOff = _swig_new_instance_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_ForceAlgorithmOff)
    __swig_destroy__ = _itkWhiteTopHatImageFilterPython.delete_itkWhiteTopHatImageFilterIUS3IUS3SE3
    cast = _swig_new_static_method(_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkWhiteTopHatImageFilterIUS3IUS3SE3

        Create a new object of the class itkWhiteTopHatImageFilterIUS3IUS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWhiteTopHatImageFilterIUS3IUS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWhiteTopHatImageFilterIUS3IUS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWhiteTopHatImageFilterIUS3IUS3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWhiteTopHatImageFilterIUS3IUS3SE3 in _itkWhiteTopHatImageFilterPython:
_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_swigregister(itkWhiteTopHatImageFilterIUS3IUS3SE3)
itkWhiteTopHatImageFilterIUS3IUS3SE3___New_orig__ = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3___New_orig__
itkWhiteTopHatImageFilterIUS3IUS3SE3_cast = _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def white_top_hat_image_filter(*args, **kwargs):
    """Procedural interface for WhiteTopHatImageFilter"""
    import itk
    instance = itk.WhiteTopHatImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def white_top_hat_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.WhiteTopHatImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.WhiteTopHatImageFilter.values()[0]
    else:
        filter_object = itk.WhiteTopHatImageFilter

    white_top_hat_image_filter.__doc__ = filter_object.__doc__
    white_top_hat_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    white_top_hat_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.WhiteTopHatImageFilter, itkTemplate.itkTemplate):
        white_top_hat_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        white_top_hat_image_filter.__doc__ += "\n"
        white_top_hat_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        white_top_hat_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



