# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKSpatialObjectsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkImageSpatialObjectPython
else:
    import _itkImageSpatialObjectPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkImageSpatialObjectPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkImageSpatialObjectPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkInterpolateImageFunctionPython
import itk.itkImageFunctionBasePython
import itk.itkRGBAPixelPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkPointPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.ITKCommonBasePython
import itk.itkFunctionBasePython
import itk.itkArrayPython
import itk.itkContinuousIndexPython
import itk.itkCovariantVectorPython
import itk.itkImagePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkSpatialObjectBasePython
import itk.itkSpatialObjectPropertyPython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkOptimizerParametersPython
import itk.itkVariableLengthVectorPython
import itk.itkDiffusionTensor3DPython
import itk.itkTransformBasePython
import itk.itkArray2DPython
class listitkImageSpatialObject2UC_Pointer(object):
    r"""Proxy of C++ std::list< itkImageSpatialObject2UC_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer___nonzero__)
    __bool__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer___bool__)
    __len__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer___len__)
    __getslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer___getslice__)
    __setslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer___setslice__)
    __delslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer___delslice__)
    __delitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer___delitem__)
    __getitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer___getitem__)
    __setitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer___setitem__)
    pop = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer_pop)
    append = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer_append)
    empty = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer_empty)
    size = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer_size)
    swap = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer_swap)
    begin = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer_begin)
    end = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer_end)
    rbegin = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer_rbegin)
    rend = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer_rend)
    clear = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer_clear)
    get_allocator = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer_get_allocator)
    pop_back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer_pop_back)
    erase = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer_erase)

    def __init__(self, *args):
        r"""
        __init__(listitkImageSpatialObject2UC_Pointer self) -> listitkImageSpatialObject2UC_Pointer
        __init__(listitkImageSpatialObject2UC_Pointer self, listitkImageSpatialObject2UC_Pointer other) -> listitkImageSpatialObject2UC_Pointer
        __init__(listitkImageSpatialObject2UC_Pointer self, std::list< itkImageSpatialObject2UC_Pointer >::size_type size) -> listitkImageSpatialObject2UC_Pointer
        __init__(listitkImageSpatialObject2UC_Pointer self, std::list< itkImageSpatialObject2UC_Pointer >::size_type size, std::list< itkImageSpatialObject2UC_Pointer >::value_type const & value) -> listitkImageSpatialObject2UC_Pointer
        """
        _itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer_swiginit(self, _itkImageSpatialObjectPython.new_listitkImageSpatialObject2UC_Pointer(*args))
    push_back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer_push_back)
    front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer_front)
    back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer_back)
    assign = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer_assign)
    resize = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer_resize)
    insert = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer_insert)
    pop_front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer_pop_front)
    push_front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer_push_front)
    reverse = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer_reverse)
    __swig_destroy__ = _itkImageSpatialObjectPython.delete_listitkImageSpatialObject2UC_Pointer

# Register listitkImageSpatialObject2UC_Pointer in _itkImageSpatialObjectPython:
_itkImageSpatialObjectPython.listitkImageSpatialObject2UC_Pointer_swigregister(listitkImageSpatialObject2UC_Pointer)

class listitkImageSpatialObject2SS_Pointer(object):
    r"""Proxy of C++ std::list< itkImageSpatialObject2SS_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer___nonzero__)
    __bool__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer___bool__)
    __len__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer___len__)
    __getslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer___getslice__)
    __setslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer___setslice__)
    __delslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer___delslice__)
    __delitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer___delitem__)
    __getitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer___getitem__)
    __setitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer___setitem__)
    pop = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer_pop)
    append = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer_append)
    empty = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer_empty)
    size = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer_size)
    swap = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer_swap)
    begin = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer_begin)
    end = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer_end)
    rbegin = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer_rbegin)
    rend = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer_rend)
    clear = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer_clear)
    get_allocator = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer_get_allocator)
    pop_back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer_pop_back)
    erase = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer_erase)

    def __init__(self, *args):
        r"""
        __init__(listitkImageSpatialObject2SS_Pointer self) -> listitkImageSpatialObject2SS_Pointer
        __init__(listitkImageSpatialObject2SS_Pointer self, listitkImageSpatialObject2SS_Pointer other) -> listitkImageSpatialObject2SS_Pointer
        __init__(listitkImageSpatialObject2SS_Pointer self, std::list< itkImageSpatialObject2SS_Pointer >::size_type size) -> listitkImageSpatialObject2SS_Pointer
        __init__(listitkImageSpatialObject2SS_Pointer self, std::list< itkImageSpatialObject2SS_Pointer >::size_type size, std::list< itkImageSpatialObject2SS_Pointer >::value_type const & value) -> listitkImageSpatialObject2SS_Pointer
        """
        _itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer_swiginit(self, _itkImageSpatialObjectPython.new_listitkImageSpatialObject2SS_Pointer(*args))
    push_back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer_push_back)
    front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer_front)
    back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer_back)
    assign = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer_assign)
    resize = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer_resize)
    insert = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer_insert)
    pop_front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer_pop_front)
    push_front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer_push_front)
    reverse = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer_reverse)
    __swig_destroy__ = _itkImageSpatialObjectPython.delete_listitkImageSpatialObject2SS_Pointer

# Register listitkImageSpatialObject2SS_Pointer in _itkImageSpatialObjectPython:
_itkImageSpatialObjectPython.listitkImageSpatialObject2SS_Pointer_swigregister(listitkImageSpatialObject2SS_Pointer)

class listitkImageSpatialObject2US_Pointer(object):
    r"""Proxy of C++ std::list< itkImageSpatialObject2US_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer___nonzero__)
    __bool__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer___bool__)
    __len__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer___len__)
    __getslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer___getslice__)
    __setslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer___setslice__)
    __delslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer___delslice__)
    __delitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer___delitem__)
    __getitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer___getitem__)
    __setitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer___setitem__)
    pop = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer_pop)
    append = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer_append)
    empty = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer_empty)
    size = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer_size)
    swap = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer_swap)
    begin = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer_begin)
    end = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer_end)
    rbegin = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer_rbegin)
    rend = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer_rend)
    clear = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer_clear)
    get_allocator = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer_get_allocator)
    pop_back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer_pop_back)
    erase = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer_erase)

    def __init__(self, *args):
        r"""
        __init__(listitkImageSpatialObject2US_Pointer self) -> listitkImageSpatialObject2US_Pointer
        __init__(listitkImageSpatialObject2US_Pointer self, listitkImageSpatialObject2US_Pointer other) -> listitkImageSpatialObject2US_Pointer
        __init__(listitkImageSpatialObject2US_Pointer self, std::list< itkImageSpatialObject2US_Pointer >::size_type size) -> listitkImageSpatialObject2US_Pointer
        __init__(listitkImageSpatialObject2US_Pointer self, std::list< itkImageSpatialObject2US_Pointer >::size_type size, std::list< itkImageSpatialObject2US_Pointer >::value_type const & value) -> listitkImageSpatialObject2US_Pointer
        """
        _itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer_swiginit(self, _itkImageSpatialObjectPython.new_listitkImageSpatialObject2US_Pointer(*args))
    push_back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer_push_back)
    front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer_front)
    back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer_back)
    assign = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer_assign)
    resize = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer_resize)
    insert = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer_insert)
    pop_front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer_pop_front)
    push_front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer_push_front)
    reverse = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer_reverse)
    __swig_destroy__ = _itkImageSpatialObjectPython.delete_listitkImageSpatialObject2US_Pointer

# Register listitkImageSpatialObject2US_Pointer in _itkImageSpatialObjectPython:
_itkImageSpatialObjectPython.listitkImageSpatialObject2US_Pointer_swigregister(listitkImageSpatialObject2US_Pointer)

class listitkImageSpatialObject2F_Pointer(object):
    r"""Proxy of C++ std::list< itkImageSpatialObject2F_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer___nonzero__)
    __bool__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer___bool__)
    __len__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer___len__)
    __getslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer___getslice__)
    __setslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer___setslice__)
    __delslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer___delslice__)
    __delitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer___delitem__)
    __getitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer___getitem__)
    __setitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer___setitem__)
    pop = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer_pop)
    append = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer_append)
    empty = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer_empty)
    size = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer_size)
    swap = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer_swap)
    begin = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer_begin)
    end = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer_end)
    rbegin = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer_rbegin)
    rend = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer_rend)
    clear = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer_clear)
    get_allocator = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer_get_allocator)
    pop_back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer_pop_back)
    erase = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer_erase)

    def __init__(self, *args):
        r"""
        __init__(listitkImageSpatialObject2F_Pointer self) -> listitkImageSpatialObject2F_Pointer
        __init__(listitkImageSpatialObject2F_Pointer self, listitkImageSpatialObject2F_Pointer other) -> listitkImageSpatialObject2F_Pointer
        __init__(listitkImageSpatialObject2F_Pointer self, std::list< itkImageSpatialObject2F_Pointer >::size_type size) -> listitkImageSpatialObject2F_Pointer
        __init__(listitkImageSpatialObject2F_Pointer self, std::list< itkImageSpatialObject2F_Pointer >::size_type size, std::list< itkImageSpatialObject2F_Pointer >::value_type const & value) -> listitkImageSpatialObject2F_Pointer
        """
        _itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer_swiginit(self, _itkImageSpatialObjectPython.new_listitkImageSpatialObject2F_Pointer(*args))
    push_back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer_push_back)
    front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer_front)
    back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer_back)
    assign = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer_assign)
    resize = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer_resize)
    insert = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer_insert)
    pop_front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer_pop_front)
    push_front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer_push_front)
    reverse = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer_reverse)
    __swig_destroy__ = _itkImageSpatialObjectPython.delete_listitkImageSpatialObject2F_Pointer

# Register listitkImageSpatialObject2F_Pointer in _itkImageSpatialObjectPython:
_itkImageSpatialObjectPython.listitkImageSpatialObject2F_Pointer_swigregister(listitkImageSpatialObject2F_Pointer)

class listitkImageSpatialObject2D_Pointer(object):
    r"""Proxy of C++ std::list< itkImageSpatialObject2D_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer___nonzero__)
    __bool__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer___bool__)
    __len__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer___len__)
    __getslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer___getslice__)
    __setslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer___setslice__)
    __delslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer___delslice__)
    __delitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer___delitem__)
    __getitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer___getitem__)
    __setitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer___setitem__)
    pop = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer_pop)
    append = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer_append)
    empty = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer_empty)
    size = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer_size)
    swap = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer_swap)
    begin = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer_begin)
    end = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer_end)
    rbegin = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer_rbegin)
    rend = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer_rend)
    clear = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer_clear)
    get_allocator = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer_get_allocator)
    pop_back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer_pop_back)
    erase = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer_erase)

    def __init__(self, *args):
        r"""
        __init__(listitkImageSpatialObject2D_Pointer self) -> listitkImageSpatialObject2D_Pointer
        __init__(listitkImageSpatialObject2D_Pointer self, listitkImageSpatialObject2D_Pointer other) -> listitkImageSpatialObject2D_Pointer
        __init__(listitkImageSpatialObject2D_Pointer self, std::list< itkImageSpatialObject2D_Pointer >::size_type size) -> listitkImageSpatialObject2D_Pointer
        __init__(listitkImageSpatialObject2D_Pointer self, std::list< itkImageSpatialObject2D_Pointer >::size_type size, std::list< itkImageSpatialObject2D_Pointer >::value_type const & value) -> listitkImageSpatialObject2D_Pointer
        """
        _itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer_swiginit(self, _itkImageSpatialObjectPython.new_listitkImageSpatialObject2D_Pointer(*args))
    push_back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer_push_back)
    front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer_front)
    back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer_back)
    assign = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer_assign)
    resize = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer_resize)
    insert = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer_insert)
    pop_front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer_pop_front)
    push_front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer_push_front)
    reverse = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer_reverse)
    __swig_destroy__ = _itkImageSpatialObjectPython.delete_listitkImageSpatialObject2D_Pointer

# Register listitkImageSpatialObject2D_Pointer in _itkImageSpatialObjectPython:
_itkImageSpatialObjectPython.listitkImageSpatialObject2D_Pointer_swigregister(listitkImageSpatialObject2D_Pointer)

class listitkImageSpatialObject3UC_Pointer(object):
    r"""Proxy of C++ std::list< itkImageSpatialObject3UC_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer___nonzero__)
    __bool__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer___bool__)
    __len__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer___len__)
    __getslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer___getslice__)
    __setslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer___setslice__)
    __delslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer___delslice__)
    __delitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer___delitem__)
    __getitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer___getitem__)
    __setitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer___setitem__)
    pop = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer_pop)
    append = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer_append)
    empty = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer_empty)
    size = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer_size)
    swap = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer_swap)
    begin = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer_begin)
    end = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer_end)
    rbegin = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer_rbegin)
    rend = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer_rend)
    clear = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer_clear)
    get_allocator = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer_get_allocator)
    pop_back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer_pop_back)
    erase = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer_erase)

    def __init__(self, *args):
        r"""
        __init__(listitkImageSpatialObject3UC_Pointer self) -> listitkImageSpatialObject3UC_Pointer
        __init__(listitkImageSpatialObject3UC_Pointer self, listitkImageSpatialObject3UC_Pointer other) -> listitkImageSpatialObject3UC_Pointer
        __init__(listitkImageSpatialObject3UC_Pointer self, std::list< itkImageSpatialObject3UC_Pointer >::size_type size) -> listitkImageSpatialObject3UC_Pointer
        __init__(listitkImageSpatialObject3UC_Pointer self, std::list< itkImageSpatialObject3UC_Pointer >::size_type size, std::list< itkImageSpatialObject3UC_Pointer >::value_type const & value) -> listitkImageSpatialObject3UC_Pointer
        """
        _itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer_swiginit(self, _itkImageSpatialObjectPython.new_listitkImageSpatialObject3UC_Pointer(*args))
    push_back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer_push_back)
    front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer_front)
    back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer_back)
    assign = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer_assign)
    resize = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer_resize)
    insert = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer_insert)
    pop_front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer_pop_front)
    push_front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer_push_front)
    reverse = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer_reverse)
    __swig_destroy__ = _itkImageSpatialObjectPython.delete_listitkImageSpatialObject3UC_Pointer

# Register listitkImageSpatialObject3UC_Pointer in _itkImageSpatialObjectPython:
_itkImageSpatialObjectPython.listitkImageSpatialObject3UC_Pointer_swigregister(listitkImageSpatialObject3UC_Pointer)

class listitkImageSpatialObject3SS_Pointer(object):
    r"""Proxy of C++ std::list< itkImageSpatialObject3SS_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer___nonzero__)
    __bool__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer___bool__)
    __len__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer___len__)
    __getslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer___getslice__)
    __setslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer___setslice__)
    __delslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer___delslice__)
    __delitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer___delitem__)
    __getitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer___getitem__)
    __setitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer___setitem__)
    pop = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer_pop)
    append = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer_append)
    empty = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer_empty)
    size = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer_size)
    swap = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer_swap)
    begin = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer_begin)
    end = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer_end)
    rbegin = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer_rbegin)
    rend = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer_rend)
    clear = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer_clear)
    get_allocator = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer_get_allocator)
    pop_back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer_pop_back)
    erase = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer_erase)

    def __init__(self, *args):
        r"""
        __init__(listitkImageSpatialObject3SS_Pointer self) -> listitkImageSpatialObject3SS_Pointer
        __init__(listitkImageSpatialObject3SS_Pointer self, listitkImageSpatialObject3SS_Pointer other) -> listitkImageSpatialObject3SS_Pointer
        __init__(listitkImageSpatialObject3SS_Pointer self, std::list< itkImageSpatialObject3SS_Pointer >::size_type size) -> listitkImageSpatialObject3SS_Pointer
        __init__(listitkImageSpatialObject3SS_Pointer self, std::list< itkImageSpatialObject3SS_Pointer >::size_type size, std::list< itkImageSpatialObject3SS_Pointer >::value_type const & value) -> listitkImageSpatialObject3SS_Pointer
        """
        _itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer_swiginit(self, _itkImageSpatialObjectPython.new_listitkImageSpatialObject3SS_Pointer(*args))
    push_back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer_push_back)
    front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer_front)
    back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer_back)
    assign = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer_assign)
    resize = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer_resize)
    insert = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer_insert)
    pop_front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer_pop_front)
    push_front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer_push_front)
    reverse = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer_reverse)
    __swig_destroy__ = _itkImageSpatialObjectPython.delete_listitkImageSpatialObject3SS_Pointer

# Register listitkImageSpatialObject3SS_Pointer in _itkImageSpatialObjectPython:
_itkImageSpatialObjectPython.listitkImageSpatialObject3SS_Pointer_swigregister(listitkImageSpatialObject3SS_Pointer)

class listitkImageSpatialObject3US_Pointer(object):
    r"""Proxy of C++ std::list< itkImageSpatialObject3US_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer___nonzero__)
    __bool__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer___bool__)
    __len__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer___len__)
    __getslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer___getslice__)
    __setslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer___setslice__)
    __delslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer___delslice__)
    __delitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer___delitem__)
    __getitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer___getitem__)
    __setitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer___setitem__)
    pop = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer_pop)
    append = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer_append)
    empty = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer_empty)
    size = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer_size)
    swap = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer_swap)
    begin = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer_begin)
    end = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer_end)
    rbegin = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer_rbegin)
    rend = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer_rend)
    clear = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer_clear)
    get_allocator = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer_get_allocator)
    pop_back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer_pop_back)
    erase = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer_erase)

    def __init__(self, *args):
        r"""
        __init__(listitkImageSpatialObject3US_Pointer self) -> listitkImageSpatialObject3US_Pointer
        __init__(listitkImageSpatialObject3US_Pointer self, listitkImageSpatialObject3US_Pointer other) -> listitkImageSpatialObject3US_Pointer
        __init__(listitkImageSpatialObject3US_Pointer self, std::list< itkImageSpatialObject3US_Pointer >::size_type size) -> listitkImageSpatialObject3US_Pointer
        __init__(listitkImageSpatialObject3US_Pointer self, std::list< itkImageSpatialObject3US_Pointer >::size_type size, std::list< itkImageSpatialObject3US_Pointer >::value_type const & value) -> listitkImageSpatialObject3US_Pointer
        """
        _itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer_swiginit(self, _itkImageSpatialObjectPython.new_listitkImageSpatialObject3US_Pointer(*args))
    push_back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer_push_back)
    front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer_front)
    back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer_back)
    assign = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer_assign)
    resize = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer_resize)
    insert = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer_insert)
    pop_front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer_pop_front)
    push_front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer_push_front)
    reverse = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer_reverse)
    __swig_destroy__ = _itkImageSpatialObjectPython.delete_listitkImageSpatialObject3US_Pointer

# Register listitkImageSpatialObject3US_Pointer in _itkImageSpatialObjectPython:
_itkImageSpatialObjectPython.listitkImageSpatialObject3US_Pointer_swigregister(listitkImageSpatialObject3US_Pointer)

class listitkImageSpatialObject3F_Pointer(object):
    r"""Proxy of C++ std::list< itkImageSpatialObject3F_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer___nonzero__)
    __bool__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer___bool__)
    __len__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer___len__)
    __getslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer___getslice__)
    __setslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer___setslice__)
    __delslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer___delslice__)
    __delitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer___delitem__)
    __getitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer___getitem__)
    __setitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer___setitem__)
    pop = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer_pop)
    append = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer_append)
    empty = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer_empty)
    size = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer_size)
    swap = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer_swap)
    begin = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer_begin)
    end = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer_end)
    rbegin = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer_rbegin)
    rend = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer_rend)
    clear = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer_clear)
    get_allocator = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer_get_allocator)
    pop_back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer_pop_back)
    erase = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer_erase)

    def __init__(self, *args):
        r"""
        __init__(listitkImageSpatialObject3F_Pointer self) -> listitkImageSpatialObject3F_Pointer
        __init__(listitkImageSpatialObject3F_Pointer self, listitkImageSpatialObject3F_Pointer other) -> listitkImageSpatialObject3F_Pointer
        __init__(listitkImageSpatialObject3F_Pointer self, std::list< itkImageSpatialObject3F_Pointer >::size_type size) -> listitkImageSpatialObject3F_Pointer
        __init__(listitkImageSpatialObject3F_Pointer self, std::list< itkImageSpatialObject3F_Pointer >::size_type size, std::list< itkImageSpatialObject3F_Pointer >::value_type const & value) -> listitkImageSpatialObject3F_Pointer
        """
        _itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer_swiginit(self, _itkImageSpatialObjectPython.new_listitkImageSpatialObject3F_Pointer(*args))
    push_back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer_push_back)
    front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer_front)
    back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer_back)
    assign = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer_assign)
    resize = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer_resize)
    insert = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer_insert)
    pop_front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer_pop_front)
    push_front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer_push_front)
    reverse = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer_reverse)
    __swig_destroy__ = _itkImageSpatialObjectPython.delete_listitkImageSpatialObject3F_Pointer

# Register listitkImageSpatialObject3F_Pointer in _itkImageSpatialObjectPython:
_itkImageSpatialObjectPython.listitkImageSpatialObject3F_Pointer_swigregister(listitkImageSpatialObject3F_Pointer)

class listitkImageSpatialObject3D_Pointer(object):
    r"""Proxy of C++ std::list< itkImageSpatialObject3D_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer___nonzero__)
    __bool__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer___bool__)
    __len__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer___len__)
    __getslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer___getslice__)
    __setslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer___setslice__)
    __delslice__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer___delslice__)
    __delitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer___delitem__)
    __getitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer___getitem__)
    __setitem__ = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer___setitem__)
    pop = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer_pop)
    append = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer_append)
    empty = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer_empty)
    size = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer_size)
    swap = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer_swap)
    begin = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer_begin)
    end = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer_end)
    rbegin = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer_rbegin)
    rend = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer_rend)
    clear = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer_clear)
    get_allocator = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer_get_allocator)
    pop_back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer_pop_back)
    erase = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer_erase)

    def __init__(self, *args):
        r"""
        __init__(listitkImageSpatialObject3D_Pointer self) -> listitkImageSpatialObject3D_Pointer
        __init__(listitkImageSpatialObject3D_Pointer self, listitkImageSpatialObject3D_Pointer other) -> listitkImageSpatialObject3D_Pointer
        __init__(listitkImageSpatialObject3D_Pointer self, std::list< itkImageSpatialObject3D_Pointer >::size_type size) -> listitkImageSpatialObject3D_Pointer
        __init__(listitkImageSpatialObject3D_Pointer self, std::list< itkImageSpatialObject3D_Pointer >::size_type size, std::list< itkImageSpatialObject3D_Pointer >::value_type const & value) -> listitkImageSpatialObject3D_Pointer
        """
        _itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer_swiginit(self, _itkImageSpatialObjectPython.new_listitkImageSpatialObject3D_Pointer(*args))
    push_back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer_push_back)
    front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer_front)
    back = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer_back)
    assign = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer_assign)
    resize = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer_resize)
    insert = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer_insert)
    pop_front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer_pop_front)
    push_front = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer_push_front)
    reverse = _swig_new_instance_method(_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer_reverse)
    __swig_destroy__ = _itkImageSpatialObjectPython.delete_listitkImageSpatialObject3D_Pointer

# Register listitkImageSpatialObject3D_Pointer in _itkImageSpatialObjectPython:
_itkImageSpatialObjectPython.listitkImageSpatialObject3D_Pointer_swigregister(listitkImageSpatialObject3D_Pointer)


def itkImageSpatialObject2D_New():
    return itkImageSpatialObject2D.New()

class itkImageSpatialObject2D(itk.itkSpatialObjectBasePython.itkSpatialObject2):
    r"""


    Implementation of an image as spatial object.

    This class combines functionalities from a spatial object, and an
    image.

    See:   SpatialObject CompositeSpatialObject 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSpatialObjectPython.itkImageSpatialObject2D___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2D_Clone)
    SetImage = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2D_SetImage)
    GetImage = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2D_GetImage)
    ValueAtInObjectSpace = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2D_ValueAtInObjectSpace)
    SetSliceNumber = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2D_SetSliceNumber)
    GetSliceNumber = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2D_GetSliceNumber)
    SetInterpolator = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2D_SetInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2D_GetInterpolator)
    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject2D
    cast = _swig_new_static_method(_itkImageSpatialObjectPython.itkImageSpatialObject2D_cast)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject2D

        Create a new object of the class itkImageSpatialObject2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSpatialObject2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSpatialObject2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSpatialObject2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSpatialObject2D in _itkImageSpatialObjectPython:
_itkImageSpatialObjectPython.itkImageSpatialObject2D_swigregister(itkImageSpatialObject2D)
itkImageSpatialObject2D___New_orig__ = _itkImageSpatialObjectPython.itkImageSpatialObject2D___New_orig__
itkImageSpatialObject2D_cast = _itkImageSpatialObjectPython.itkImageSpatialObject2D_cast


def itkImageSpatialObject2F_New():
    return itkImageSpatialObject2F.New()

class itkImageSpatialObject2F(itk.itkSpatialObjectBasePython.itkSpatialObject2):
    r"""


    Implementation of an image as spatial object.

    This class combines functionalities from a spatial object, and an
    image.

    See:   SpatialObject CompositeSpatialObject 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSpatialObjectPython.itkImageSpatialObject2F___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2F_Clone)
    SetImage = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2F_SetImage)
    GetImage = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2F_GetImage)
    ValueAtInObjectSpace = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2F_ValueAtInObjectSpace)
    SetSliceNumber = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2F_SetSliceNumber)
    GetSliceNumber = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2F_GetSliceNumber)
    SetInterpolator = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2F_SetInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2F_GetInterpolator)
    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject2F
    cast = _swig_new_static_method(_itkImageSpatialObjectPython.itkImageSpatialObject2F_cast)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject2F

        Create a new object of the class itkImageSpatialObject2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSpatialObject2F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSpatialObject2F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSpatialObject2F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSpatialObject2F in _itkImageSpatialObjectPython:
_itkImageSpatialObjectPython.itkImageSpatialObject2F_swigregister(itkImageSpatialObject2F)
itkImageSpatialObject2F___New_orig__ = _itkImageSpatialObjectPython.itkImageSpatialObject2F___New_orig__
itkImageSpatialObject2F_cast = _itkImageSpatialObjectPython.itkImageSpatialObject2F_cast


def itkImageSpatialObject2SS_New():
    return itkImageSpatialObject2SS.New()

class itkImageSpatialObject2SS(itk.itkSpatialObjectBasePython.itkSpatialObject2):
    r"""


    Implementation of an image as spatial object.

    This class combines functionalities from a spatial object, and an
    image.

    See:   SpatialObject CompositeSpatialObject 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSpatialObjectPython.itkImageSpatialObject2SS___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2SS_Clone)
    SetImage = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2SS_SetImage)
    GetImage = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2SS_GetImage)
    ValueAtInObjectSpace = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2SS_ValueAtInObjectSpace)
    SetSliceNumber = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2SS_SetSliceNumber)
    GetSliceNumber = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2SS_GetSliceNumber)
    SetInterpolator = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2SS_SetInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2SS_GetInterpolator)
    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject2SS
    cast = _swig_new_static_method(_itkImageSpatialObjectPython.itkImageSpatialObject2SS_cast)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject2SS

        Create a new object of the class itkImageSpatialObject2SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSpatialObject2SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSpatialObject2SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSpatialObject2SS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSpatialObject2SS in _itkImageSpatialObjectPython:
_itkImageSpatialObjectPython.itkImageSpatialObject2SS_swigregister(itkImageSpatialObject2SS)
itkImageSpatialObject2SS___New_orig__ = _itkImageSpatialObjectPython.itkImageSpatialObject2SS___New_orig__
itkImageSpatialObject2SS_cast = _itkImageSpatialObjectPython.itkImageSpatialObject2SS_cast


def itkImageSpatialObject2UC_New():
    return itkImageSpatialObject2UC.New()

class itkImageSpatialObject2UC(itk.itkSpatialObjectBasePython.itkSpatialObject2):
    r"""


    Implementation of an image as spatial object.

    This class combines functionalities from a spatial object, and an
    image.

    See:   SpatialObject CompositeSpatialObject 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSpatialObjectPython.itkImageSpatialObject2UC___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_Clone)
    SetImage = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_SetImage)
    GetImage = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_GetImage)
    ValueAtInObjectSpace = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_ValueAtInObjectSpace)
    SetSliceNumber = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_SetSliceNumber)
    GetSliceNumber = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_GetSliceNumber)
    SetInterpolator = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_SetInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_GetInterpolator)
    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject2UC
    cast = _swig_new_static_method(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_cast)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject2UC

        Create a new object of the class itkImageSpatialObject2UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSpatialObject2UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSpatialObject2UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSpatialObject2UC.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSpatialObject2UC in _itkImageSpatialObjectPython:
_itkImageSpatialObjectPython.itkImageSpatialObject2UC_swigregister(itkImageSpatialObject2UC)
itkImageSpatialObject2UC___New_orig__ = _itkImageSpatialObjectPython.itkImageSpatialObject2UC___New_orig__
itkImageSpatialObject2UC_cast = _itkImageSpatialObjectPython.itkImageSpatialObject2UC_cast


def itkImageSpatialObject2US_New():
    return itkImageSpatialObject2US.New()

class itkImageSpatialObject2US(itk.itkSpatialObjectBasePython.itkSpatialObject2):
    r"""


    Implementation of an image as spatial object.

    This class combines functionalities from a spatial object, and an
    image.

    See:   SpatialObject CompositeSpatialObject 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSpatialObjectPython.itkImageSpatialObject2US___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2US_Clone)
    SetImage = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2US_SetImage)
    GetImage = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2US_GetImage)
    ValueAtInObjectSpace = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2US_ValueAtInObjectSpace)
    SetSliceNumber = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2US_SetSliceNumber)
    GetSliceNumber = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2US_GetSliceNumber)
    SetInterpolator = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2US_SetInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject2US_GetInterpolator)
    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject2US
    cast = _swig_new_static_method(_itkImageSpatialObjectPython.itkImageSpatialObject2US_cast)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject2US

        Create a new object of the class itkImageSpatialObject2US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSpatialObject2US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSpatialObject2US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSpatialObject2US.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSpatialObject2US in _itkImageSpatialObjectPython:
_itkImageSpatialObjectPython.itkImageSpatialObject2US_swigregister(itkImageSpatialObject2US)
itkImageSpatialObject2US___New_orig__ = _itkImageSpatialObjectPython.itkImageSpatialObject2US___New_orig__
itkImageSpatialObject2US_cast = _itkImageSpatialObjectPython.itkImageSpatialObject2US_cast


def itkImageSpatialObject3D_New():
    return itkImageSpatialObject3D.New()

class itkImageSpatialObject3D(itk.itkSpatialObjectBasePython.itkSpatialObject3):
    r"""


    Implementation of an image as spatial object.

    This class combines functionalities from a spatial object, and an
    image.

    See:   SpatialObject CompositeSpatialObject 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSpatialObjectPython.itkImageSpatialObject3D___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3D_Clone)
    SetImage = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3D_SetImage)
    GetImage = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3D_GetImage)
    ValueAtInObjectSpace = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3D_ValueAtInObjectSpace)
    SetSliceNumber = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3D_SetSliceNumber)
    GetSliceNumber = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3D_GetSliceNumber)
    SetInterpolator = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3D_SetInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3D_GetInterpolator)
    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject3D
    cast = _swig_new_static_method(_itkImageSpatialObjectPython.itkImageSpatialObject3D_cast)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject3D

        Create a new object of the class itkImageSpatialObject3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSpatialObject3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSpatialObject3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSpatialObject3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSpatialObject3D in _itkImageSpatialObjectPython:
_itkImageSpatialObjectPython.itkImageSpatialObject3D_swigregister(itkImageSpatialObject3D)
itkImageSpatialObject3D___New_orig__ = _itkImageSpatialObjectPython.itkImageSpatialObject3D___New_orig__
itkImageSpatialObject3D_cast = _itkImageSpatialObjectPython.itkImageSpatialObject3D_cast


def itkImageSpatialObject3F_New():
    return itkImageSpatialObject3F.New()

class itkImageSpatialObject3F(itk.itkSpatialObjectBasePython.itkSpatialObject3):
    r"""


    Implementation of an image as spatial object.

    This class combines functionalities from a spatial object, and an
    image.

    See:   SpatialObject CompositeSpatialObject 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSpatialObjectPython.itkImageSpatialObject3F___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3F_Clone)
    SetImage = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3F_SetImage)
    GetImage = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3F_GetImage)
    ValueAtInObjectSpace = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3F_ValueAtInObjectSpace)
    SetSliceNumber = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3F_SetSliceNumber)
    GetSliceNumber = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3F_GetSliceNumber)
    SetInterpolator = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3F_SetInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3F_GetInterpolator)
    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject3F
    cast = _swig_new_static_method(_itkImageSpatialObjectPython.itkImageSpatialObject3F_cast)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject3F

        Create a new object of the class itkImageSpatialObject3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSpatialObject3F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSpatialObject3F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSpatialObject3F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSpatialObject3F in _itkImageSpatialObjectPython:
_itkImageSpatialObjectPython.itkImageSpatialObject3F_swigregister(itkImageSpatialObject3F)
itkImageSpatialObject3F___New_orig__ = _itkImageSpatialObjectPython.itkImageSpatialObject3F___New_orig__
itkImageSpatialObject3F_cast = _itkImageSpatialObjectPython.itkImageSpatialObject3F_cast


def itkImageSpatialObject3SS_New():
    return itkImageSpatialObject3SS.New()

class itkImageSpatialObject3SS(itk.itkSpatialObjectBasePython.itkSpatialObject3):
    r"""


    Implementation of an image as spatial object.

    This class combines functionalities from a spatial object, and an
    image.

    See:   SpatialObject CompositeSpatialObject 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSpatialObjectPython.itkImageSpatialObject3SS___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3SS_Clone)
    SetImage = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3SS_SetImage)
    GetImage = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3SS_GetImage)
    ValueAtInObjectSpace = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3SS_ValueAtInObjectSpace)
    SetSliceNumber = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3SS_SetSliceNumber)
    GetSliceNumber = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3SS_GetSliceNumber)
    SetInterpolator = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3SS_SetInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3SS_GetInterpolator)
    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject3SS
    cast = _swig_new_static_method(_itkImageSpatialObjectPython.itkImageSpatialObject3SS_cast)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject3SS

        Create a new object of the class itkImageSpatialObject3SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSpatialObject3SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSpatialObject3SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSpatialObject3SS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSpatialObject3SS in _itkImageSpatialObjectPython:
_itkImageSpatialObjectPython.itkImageSpatialObject3SS_swigregister(itkImageSpatialObject3SS)
itkImageSpatialObject3SS___New_orig__ = _itkImageSpatialObjectPython.itkImageSpatialObject3SS___New_orig__
itkImageSpatialObject3SS_cast = _itkImageSpatialObjectPython.itkImageSpatialObject3SS_cast


def itkImageSpatialObject3UC_New():
    return itkImageSpatialObject3UC.New()

class itkImageSpatialObject3UC(itk.itkSpatialObjectBasePython.itkSpatialObject3):
    r"""


    Implementation of an image as spatial object.

    This class combines functionalities from a spatial object, and an
    image.

    See:   SpatialObject CompositeSpatialObject 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSpatialObjectPython.itkImageSpatialObject3UC___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_Clone)
    SetImage = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_SetImage)
    GetImage = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_GetImage)
    ValueAtInObjectSpace = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_ValueAtInObjectSpace)
    SetSliceNumber = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_SetSliceNumber)
    GetSliceNumber = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_GetSliceNumber)
    SetInterpolator = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_SetInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_GetInterpolator)
    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject3UC
    cast = _swig_new_static_method(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_cast)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject3UC

        Create a new object of the class itkImageSpatialObject3UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSpatialObject3UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSpatialObject3UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSpatialObject3UC.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSpatialObject3UC in _itkImageSpatialObjectPython:
_itkImageSpatialObjectPython.itkImageSpatialObject3UC_swigregister(itkImageSpatialObject3UC)
itkImageSpatialObject3UC___New_orig__ = _itkImageSpatialObjectPython.itkImageSpatialObject3UC___New_orig__
itkImageSpatialObject3UC_cast = _itkImageSpatialObjectPython.itkImageSpatialObject3UC_cast


def itkImageSpatialObject3US_New():
    return itkImageSpatialObject3US.New()

class itkImageSpatialObject3US(itk.itkSpatialObjectBasePython.itkSpatialObject3):
    r"""


    Implementation of an image as spatial object.

    This class combines functionalities from a spatial object, and an
    image.

    See:   SpatialObject CompositeSpatialObject 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageSpatialObjectPython.itkImageSpatialObject3US___New_orig__)
    Clone = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3US_Clone)
    SetImage = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3US_SetImage)
    GetImage = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3US_GetImage)
    ValueAtInObjectSpace = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3US_ValueAtInObjectSpace)
    SetSliceNumber = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3US_SetSliceNumber)
    GetSliceNumber = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3US_GetSliceNumber)
    SetInterpolator = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3US_SetInterpolator)
    GetInterpolator = _swig_new_instance_method(_itkImageSpatialObjectPython.itkImageSpatialObject3US_GetInterpolator)
    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject3US
    cast = _swig_new_static_method(_itkImageSpatialObjectPython.itkImageSpatialObject3US_cast)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject3US

        Create a new object of the class itkImageSpatialObject3US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageSpatialObject3US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageSpatialObject3US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageSpatialObject3US.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageSpatialObject3US in _itkImageSpatialObjectPython:
_itkImageSpatialObjectPython.itkImageSpatialObject3US_swigregister(itkImageSpatialObject3US)
itkImageSpatialObject3US___New_orig__ = _itkImageSpatialObjectPython.itkImageSpatialObject3US___New_orig__
itkImageSpatialObject3US_cast = _itkImageSpatialObjectPython.itkImageSpatialObject3US_cast



