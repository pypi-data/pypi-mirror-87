# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageFunctionPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBSplineResampleImageFunctionPython
else:
    import _itkBSplineResampleImageFunctionPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkBSplineResampleImageFunctionPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkBSplineResampleImageFunctionPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkBSplineInterpolateImageFunctionPython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkContinuousIndexPython
import itk.itkInterpolateImageFunctionPython
import itk.itkImageFunctionBasePython
import itk.itkFunctionBasePython
import itk.itkArrayPython

def itkBSplineResampleImageFunctionID2D_New():
    return itkBSplineResampleImageFunctionID2D.New()

class itkBSplineResampleImageFunctionID2D(itk.itkBSplineInterpolateImageFunctionPython.itkBSplineInterpolateImageFunctionID2DD):
    r"""


    Resample image intensity from a BSpline coefficient image.

    This class resample the image intensity at a non-integer position from
    the input BSpline coefficient image.

    Spline order may be from 0 to 5.

    In ITK, BSpline coefficient can be generated using a
    BSplineDecompositionImageFilter. Using this image function in
    conjunction with ResampleImageFunction allows the reconstruction of
    the original image at different resolution and size.

    See:   BSplineInterpolateImageFunction

    See:   BSplineDecompositionImageFilter

    See:  ResampleImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionID2D___New_orig__)
    Clone = _swig_new_instance_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionID2D_Clone)
    __swig_destroy__ = _itkBSplineResampleImageFunctionPython.delete_itkBSplineResampleImageFunctionID2D
    cast = _swig_new_static_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionID2D_cast)

    def New(*args, **kargs):
        """New() -> itkBSplineResampleImageFunctionID2D

        Create a new object of the class itkBSplineResampleImageFunctionID2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineResampleImageFunctionID2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineResampleImageFunctionID2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineResampleImageFunctionID2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineResampleImageFunctionID2D in _itkBSplineResampleImageFunctionPython:
_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionID2D_swigregister(itkBSplineResampleImageFunctionID2D)
itkBSplineResampleImageFunctionID2D___New_orig__ = _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionID2D___New_orig__
itkBSplineResampleImageFunctionID2D_cast = _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionID2D_cast


def itkBSplineResampleImageFunctionID3D_New():
    return itkBSplineResampleImageFunctionID3D.New()

class itkBSplineResampleImageFunctionID3D(itk.itkBSplineInterpolateImageFunctionPython.itkBSplineInterpolateImageFunctionID3DD):
    r"""


    Resample image intensity from a BSpline coefficient image.

    This class resample the image intensity at a non-integer position from
    the input BSpline coefficient image.

    Spline order may be from 0 to 5.

    In ITK, BSpline coefficient can be generated using a
    BSplineDecompositionImageFilter. Using this image function in
    conjunction with ResampleImageFunction allows the reconstruction of
    the original image at different resolution and size.

    See:   BSplineInterpolateImageFunction

    See:   BSplineDecompositionImageFilter

    See:  ResampleImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionID3D___New_orig__)
    Clone = _swig_new_instance_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionID3D_Clone)
    __swig_destroy__ = _itkBSplineResampleImageFunctionPython.delete_itkBSplineResampleImageFunctionID3D
    cast = _swig_new_static_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionID3D_cast)

    def New(*args, **kargs):
        """New() -> itkBSplineResampleImageFunctionID3D

        Create a new object of the class itkBSplineResampleImageFunctionID3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineResampleImageFunctionID3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineResampleImageFunctionID3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineResampleImageFunctionID3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineResampleImageFunctionID3D in _itkBSplineResampleImageFunctionPython:
_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionID3D_swigregister(itkBSplineResampleImageFunctionID3D)
itkBSplineResampleImageFunctionID3D___New_orig__ = _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionID3D___New_orig__
itkBSplineResampleImageFunctionID3D_cast = _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionID3D_cast


def itkBSplineResampleImageFunctionIF2D_New():
    return itkBSplineResampleImageFunctionIF2D.New()

class itkBSplineResampleImageFunctionIF2D(itk.itkBSplineInterpolateImageFunctionPython.itkBSplineInterpolateImageFunctionIF2DF):
    r"""


    Resample image intensity from a BSpline coefficient image.

    This class resample the image intensity at a non-integer position from
    the input BSpline coefficient image.

    Spline order may be from 0 to 5.

    In ITK, BSpline coefficient can be generated using a
    BSplineDecompositionImageFilter. Using this image function in
    conjunction with ResampleImageFunction allows the reconstruction of
    the original image at different resolution and size.

    See:   BSplineInterpolateImageFunction

    See:   BSplineDecompositionImageFilter

    See:  ResampleImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIF2D___New_orig__)
    Clone = _swig_new_instance_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIF2D_Clone)
    __swig_destroy__ = _itkBSplineResampleImageFunctionPython.delete_itkBSplineResampleImageFunctionIF2D
    cast = _swig_new_static_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIF2D_cast)

    def New(*args, **kargs):
        """New() -> itkBSplineResampleImageFunctionIF2D

        Create a new object of the class itkBSplineResampleImageFunctionIF2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineResampleImageFunctionIF2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineResampleImageFunctionIF2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineResampleImageFunctionIF2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineResampleImageFunctionIF2D in _itkBSplineResampleImageFunctionPython:
_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIF2D_swigregister(itkBSplineResampleImageFunctionIF2D)
itkBSplineResampleImageFunctionIF2D___New_orig__ = _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIF2D___New_orig__
itkBSplineResampleImageFunctionIF2D_cast = _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIF2D_cast


def itkBSplineResampleImageFunctionIF3D_New():
    return itkBSplineResampleImageFunctionIF3D.New()

class itkBSplineResampleImageFunctionIF3D(itk.itkBSplineInterpolateImageFunctionPython.itkBSplineInterpolateImageFunctionIF3DF):
    r"""


    Resample image intensity from a BSpline coefficient image.

    This class resample the image intensity at a non-integer position from
    the input BSpline coefficient image.

    Spline order may be from 0 to 5.

    In ITK, BSpline coefficient can be generated using a
    BSplineDecompositionImageFilter. Using this image function in
    conjunction with ResampleImageFunction allows the reconstruction of
    the original image at different resolution and size.

    See:   BSplineInterpolateImageFunction

    See:   BSplineDecompositionImageFilter

    See:  ResampleImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIF3D___New_orig__)
    Clone = _swig_new_instance_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIF3D_Clone)
    __swig_destroy__ = _itkBSplineResampleImageFunctionPython.delete_itkBSplineResampleImageFunctionIF3D
    cast = _swig_new_static_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIF3D_cast)

    def New(*args, **kargs):
        """New() -> itkBSplineResampleImageFunctionIF3D

        Create a new object of the class itkBSplineResampleImageFunctionIF3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineResampleImageFunctionIF3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineResampleImageFunctionIF3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineResampleImageFunctionIF3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineResampleImageFunctionIF3D in _itkBSplineResampleImageFunctionPython:
_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIF3D_swigregister(itkBSplineResampleImageFunctionIF3D)
itkBSplineResampleImageFunctionIF3D___New_orig__ = _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIF3D___New_orig__
itkBSplineResampleImageFunctionIF3D_cast = _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIF3D_cast


def itkBSplineResampleImageFunctionISS2D_New():
    return itkBSplineResampleImageFunctionISS2D.New()

class itkBSplineResampleImageFunctionISS2D(itk.itkBSplineInterpolateImageFunctionPython.itkBSplineInterpolateImageFunctionISS2DSS):
    r"""


    Resample image intensity from a BSpline coefficient image.

    This class resample the image intensity at a non-integer position from
    the input BSpline coefficient image.

    Spline order may be from 0 to 5.

    In ITK, BSpline coefficient can be generated using a
    BSplineDecompositionImageFilter. Using this image function in
    conjunction with ResampleImageFunction allows the reconstruction of
    the original image at different resolution and size.

    See:   BSplineInterpolateImageFunction

    See:   BSplineDecompositionImageFilter

    See:  ResampleImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionISS2D___New_orig__)
    Clone = _swig_new_instance_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionISS2D_Clone)
    __swig_destroy__ = _itkBSplineResampleImageFunctionPython.delete_itkBSplineResampleImageFunctionISS2D
    cast = _swig_new_static_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionISS2D_cast)

    def New(*args, **kargs):
        """New() -> itkBSplineResampleImageFunctionISS2D

        Create a new object of the class itkBSplineResampleImageFunctionISS2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineResampleImageFunctionISS2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineResampleImageFunctionISS2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineResampleImageFunctionISS2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineResampleImageFunctionISS2D in _itkBSplineResampleImageFunctionPython:
_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionISS2D_swigregister(itkBSplineResampleImageFunctionISS2D)
itkBSplineResampleImageFunctionISS2D___New_orig__ = _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionISS2D___New_orig__
itkBSplineResampleImageFunctionISS2D_cast = _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionISS2D_cast


def itkBSplineResampleImageFunctionISS3D_New():
    return itkBSplineResampleImageFunctionISS3D.New()

class itkBSplineResampleImageFunctionISS3D(itk.itkBSplineInterpolateImageFunctionPython.itkBSplineInterpolateImageFunctionISS3DSS):
    r"""


    Resample image intensity from a BSpline coefficient image.

    This class resample the image intensity at a non-integer position from
    the input BSpline coefficient image.

    Spline order may be from 0 to 5.

    In ITK, BSpline coefficient can be generated using a
    BSplineDecompositionImageFilter. Using this image function in
    conjunction with ResampleImageFunction allows the reconstruction of
    the original image at different resolution and size.

    See:   BSplineInterpolateImageFunction

    See:   BSplineDecompositionImageFilter

    See:  ResampleImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionISS3D___New_orig__)
    Clone = _swig_new_instance_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionISS3D_Clone)
    __swig_destroy__ = _itkBSplineResampleImageFunctionPython.delete_itkBSplineResampleImageFunctionISS3D
    cast = _swig_new_static_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionISS3D_cast)

    def New(*args, **kargs):
        """New() -> itkBSplineResampleImageFunctionISS3D

        Create a new object of the class itkBSplineResampleImageFunctionISS3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineResampleImageFunctionISS3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineResampleImageFunctionISS3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineResampleImageFunctionISS3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineResampleImageFunctionISS3D in _itkBSplineResampleImageFunctionPython:
_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionISS3D_swigregister(itkBSplineResampleImageFunctionISS3D)
itkBSplineResampleImageFunctionISS3D___New_orig__ = _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionISS3D___New_orig__
itkBSplineResampleImageFunctionISS3D_cast = _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionISS3D_cast


def itkBSplineResampleImageFunctionIUC2D_New():
    return itkBSplineResampleImageFunctionIUC2D.New()

class itkBSplineResampleImageFunctionIUC2D(itk.itkBSplineInterpolateImageFunctionPython.itkBSplineInterpolateImageFunctionIUC2DUC):
    r"""


    Resample image intensity from a BSpline coefficient image.

    This class resample the image intensity at a non-integer position from
    the input BSpline coefficient image.

    Spline order may be from 0 to 5.

    In ITK, BSpline coefficient can be generated using a
    BSplineDecompositionImageFilter. Using this image function in
    conjunction with ResampleImageFunction allows the reconstruction of
    the original image at different resolution and size.

    See:   BSplineInterpolateImageFunction

    See:   BSplineDecompositionImageFilter

    See:  ResampleImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUC2D___New_orig__)
    Clone = _swig_new_instance_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUC2D_Clone)
    __swig_destroy__ = _itkBSplineResampleImageFunctionPython.delete_itkBSplineResampleImageFunctionIUC2D
    cast = _swig_new_static_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUC2D_cast)

    def New(*args, **kargs):
        """New() -> itkBSplineResampleImageFunctionIUC2D

        Create a new object of the class itkBSplineResampleImageFunctionIUC2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineResampleImageFunctionIUC2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineResampleImageFunctionIUC2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineResampleImageFunctionIUC2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineResampleImageFunctionIUC2D in _itkBSplineResampleImageFunctionPython:
_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUC2D_swigregister(itkBSplineResampleImageFunctionIUC2D)
itkBSplineResampleImageFunctionIUC2D___New_orig__ = _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUC2D___New_orig__
itkBSplineResampleImageFunctionIUC2D_cast = _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUC2D_cast


def itkBSplineResampleImageFunctionIUC3D_New():
    return itkBSplineResampleImageFunctionIUC3D.New()

class itkBSplineResampleImageFunctionIUC3D(itk.itkBSplineInterpolateImageFunctionPython.itkBSplineInterpolateImageFunctionIUC3DUC):
    r"""


    Resample image intensity from a BSpline coefficient image.

    This class resample the image intensity at a non-integer position from
    the input BSpline coefficient image.

    Spline order may be from 0 to 5.

    In ITK, BSpline coefficient can be generated using a
    BSplineDecompositionImageFilter. Using this image function in
    conjunction with ResampleImageFunction allows the reconstruction of
    the original image at different resolution and size.

    See:   BSplineInterpolateImageFunction

    See:   BSplineDecompositionImageFilter

    See:  ResampleImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUC3D___New_orig__)
    Clone = _swig_new_instance_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUC3D_Clone)
    __swig_destroy__ = _itkBSplineResampleImageFunctionPython.delete_itkBSplineResampleImageFunctionIUC3D
    cast = _swig_new_static_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUC3D_cast)

    def New(*args, **kargs):
        """New() -> itkBSplineResampleImageFunctionIUC3D

        Create a new object of the class itkBSplineResampleImageFunctionIUC3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineResampleImageFunctionIUC3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineResampleImageFunctionIUC3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineResampleImageFunctionIUC3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineResampleImageFunctionIUC3D in _itkBSplineResampleImageFunctionPython:
_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUC3D_swigregister(itkBSplineResampleImageFunctionIUC3D)
itkBSplineResampleImageFunctionIUC3D___New_orig__ = _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUC3D___New_orig__
itkBSplineResampleImageFunctionIUC3D_cast = _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUC3D_cast


def itkBSplineResampleImageFunctionIUS2D_New():
    return itkBSplineResampleImageFunctionIUS2D.New()

class itkBSplineResampleImageFunctionIUS2D(itk.itkBSplineInterpolateImageFunctionPython.itkBSplineInterpolateImageFunctionIUS2DUS):
    r"""


    Resample image intensity from a BSpline coefficient image.

    This class resample the image intensity at a non-integer position from
    the input BSpline coefficient image.

    Spline order may be from 0 to 5.

    In ITK, BSpline coefficient can be generated using a
    BSplineDecompositionImageFilter. Using this image function in
    conjunction with ResampleImageFunction allows the reconstruction of
    the original image at different resolution and size.

    See:   BSplineInterpolateImageFunction

    See:   BSplineDecompositionImageFilter

    See:  ResampleImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUS2D___New_orig__)
    Clone = _swig_new_instance_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUS2D_Clone)
    __swig_destroy__ = _itkBSplineResampleImageFunctionPython.delete_itkBSplineResampleImageFunctionIUS2D
    cast = _swig_new_static_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUS2D_cast)

    def New(*args, **kargs):
        """New() -> itkBSplineResampleImageFunctionIUS2D

        Create a new object of the class itkBSplineResampleImageFunctionIUS2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineResampleImageFunctionIUS2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineResampleImageFunctionIUS2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineResampleImageFunctionIUS2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineResampleImageFunctionIUS2D in _itkBSplineResampleImageFunctionPython:
_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUS2D_swigregister(itkBSplineResampleImageFunctionIUS2D)
itkBSplineResampleImageFunctionIUS2D___New_orig__ = _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUS2D___New_orig__
itkBSplineResampleImageFunctionIUS2D_cast = _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUS2D_cast


def itkBSplineResampleImageFunctionIUS3D_New():
    return itkBSplineResampleImageFunctionIUS3D.New()

class itkBSplineResampleImageFunctionIUS3D(itk.itkBSplineInterpolateImageFunctionPython.itkBSplineInterpolateImageFunctionIUS3DUS):
    r"""


    Resample image intensity from a BSpline coefficient image.

    This class resample the image intensity at a non-integer position from
    the input BSpline coefficient image.

    Spline order may be from 0 to 5.

    In ITK, BSpline coefficient can be generated using a
    BSplineDecompositionImageFilter. Using this image function in
    conjunction with ResampleImageFunction allows the reconstruction of
    the original image at different resolution and size.

    See:   BSplineInterpolateImageFunction

    See:   BSplineDecompositionImageFilter

    See:  ResampleImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUS3D___New_orig__)
    Clone = _swig_new_instance_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUS3D_Clone)
    __swig_destroy__ = _itkBSplineResampleImageFunctionPython.delete_itkBSplineResampleImageFunctionIUS3D
    cast = _swig_new_static_method(_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUS3D_cast)

    def New(*args, **kargs):
        """New() -> itkBSplineResampleImageFunctionIUS3D

        Create a new object of the class itkBSplineResampleImageFunctionIUS3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineResampleImageFunctionIUS3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineResampleImageFunctionIUS3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineResampleImageFunctionIUS3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineResampleImageFunctionIUS3D in _itkBSplineResampleImageFunctionPython:
_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUS3D_swigregister(itkBSplineResampleImageFunctionIUS3D)
itkBSplineResampleImageFunctionIUS3D___New_orig__ = _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUS3D___New_orig__
itkBSplineResampleImageFunctionIUS3D_cast = _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUS3D_cast



