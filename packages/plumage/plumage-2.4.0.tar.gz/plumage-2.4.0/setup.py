# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['plumage']

package_data = \
{'': ['*'],
 'plumage': ['static/css/*',
             'static/css/pygments/*',
             'static/favicon/*',
             'static/img/*',
             'static/js/*',
             'templates/*']}

install_requires = \
['Markdown>=3.3.3,<4.0.0',
 'closure>=20191111,<20191112',
 'cssmin>=0.2.0,<0.3.0',
 'libsass>=0.20.1,<0.21.0',
 'pelican-webassets>=1.0.0,<2.0.0',
 'pelican>=4.2.0,<5.0.0',
 'pygments>=2.7.0,<3.0.0',
 'pymdown-extensions>=8.0.1,<9.0.0',
 'pyquery>=1.4.3,<2.0.0']

setup_kwargs = {
    'name': 'plumage',
    'version': '2.4.0',
    'description': 'Clean and tidy theme for Pelican.',
    'long_description': '<p align="center">\n  <a href="https://github.com/kdeldycke/plumage/">\n    <img src="https://github.com/kdeldycke/plumage/raw/develop/screenshots/plumage-header-logo.jpeg" alt="Plumage, a Pelican theme">\n  </a>\n</p>\n\nPlumage is a clean and tidy theme for [Pelican](https://getpelican.com), a\nstatic site generator.\n\nI initially created this theme for [my blog](https://kevin.deldycke.com), but\nit is now generic enough to be used by anyone.\n\n## Features\n\n* Standard Pelican views:\n\n  ![Plumage article view](https://raw.githubusercontent.com/kdeldycke/plumage/develop/screenshots/article.jpeg) | ![Plumage categories view](https://raw.githubusercontent.com/kdeldycke/plumage/develop/screenshots/categories.jpeg) | ![Plumage tiered tag list view](https://raw.githubusercontent.com/kdeldycke/plumage/develop/screenshots/tiered-tags.jpeg)\n  :-:|:-:|:-:\n  Article | Categories | Tiered tag list\n  ![Plumage archive view](https://raw.githubusercontent.com/kdeldycke/plumage/develop/screenshots/archives.jpeg) | ![Plumage tag view](https://raw.githubusercontent.com/kdeldycke/plumage/develop/screenshots/tag.jpeg) | ![Plumage authors view](https://raw.githubusercontent.com/kdeldycke/plumage/develop/screenshots/authors.jpeg)\n  Collapsable yearly archives | Tagged articles | Authors\n  ![Plumage archive view](https://raw.githubusercontent.com/kdeldycke/plumage/develop/screenshots/browse-content-by.jpeg) | |\n  Faceted article browsing | |\n\n* Projects template:\n\n  ![Plumage projects: code showcase](https://raw.githubusercontent.com/kdeldycke/plumage/develop/screenshots/projects-code.jpeg) | ![Plumage projects: videos showcase](https://raw.githubusercontent.com/kdeldycke/plumage/develop/screenshots/projects-videos.jpeg) | ![Plumage projects: themes showcase](https://raw.githubusercontent.com/kdeldycke/plumage/develop/screenshots/projects-themes.jpeg)\n  :-:|:-:|:-:\n  Code showcase ([source](https://github.com/kdeldycke/kevin-deldycke-blog/blob/ebe0d17a59730457c3016dff77fdfa799a80d756/content/templates/code.html)) | Videos showcase ([source](https://github.com/kdeldycke/kevin-deldycke-blog/blob/f778998376fa5c68f1a02129884b89592b641777/content/templates/videos.html)) | Themes showcase ([source](https://github.com/kdeldycke/kevin-deldycke-blog/blob/f778998376fa5c68f1a02129884b89592b641777/content/templates/themes.html))\n\n* Based on [Bootstrap v4](https://getbootstrap.com).\n\n* [Code syntax highlighting](#code-syntax-highlighting) with [30+ styles](https://github.com/pygments/pygments/tree/master/pygments/styles).\n\n* Site-wide static search via [Tipue-search](https://web.archive.org/web/20200703134724/https://tipue.com/search/).\n\n* Bare YouTube links in articles gets rendered as embedded videos:\n\n  ![Plumage YouTube link](https://raw.githubusercontent.com/kdeldycke/plumage/develop/screenshots/youtube-link.jpeg)\n\n* Direct link to edit articles on GitHub:\n\n  ![Plumage GitHub edit link](https://raw.githubusercontent.com/kdeldycke/plumage/develop/screenshots/github-edit-link.jpeg)\n\n* Magnifying glass overlays on images and zoom:\n\n  ![Plumage image magnifying glass](https://raw.githubusercontent.com/kdeldycke/plumage/develop/screenshots/magnifying-glass.jpeg)\n  ![Plumage image zoom](https://raw.githubusercontent.com/kdeldycke/plumage/develop/screenshots/zoom.jpeg)\n\n* External assets (Bootstrap, Jquery, etc...) uses [CDNjs\n](https://cdnjs.com/about).\n\n* Disqus integration:\n\n  ![Plumage disqus comments](https://raw.githubusercontent.com/kdeldycke/plumage/develop/screenshots/disqus.jpeg)\n\n## Plugins\n\nPlumage has built-in support for the following plugins and extensions:\n\nPlugin name | Type | Status | Notes\n:--- |:--- |:--- |:---\n[`pelican-image-process`](https://github.com/pelican-plugins/image-process) | Pelican plugin | Optional | Embed a hack to [fix parsing of external images](https://github.com/pelican-plugins/image-process/issues/33).\n[`pelican-neighbors`](https://github.com/pelican-plugins/neighbors) | Pelican plugin | Optional |\n[`pelican-related-posts`](https://github.com/pelican-plugins/related-posts) | Pelican plugin | Optional |\n[`pelican-similar-posts`](https://github.com/pelican-plugins/similar-posts) | Pelican plugin | Optional |\n[`pelican-tipue-search`](https://github.com/pelican-plugins/tipue-search) | Pelican plugin | Optional |\n[`pelican-webassets`](https://pypi.org/project/pelican-webassets) | Pelican plugin | Required |\n[`markdown.extensions.admonition`](https://python-markdown.github.io/extensions/admonition/) | Markdown extension | Optional | Re-style admonitions into [alerts](https://getbootstrap.com/docs/4.5/components/alerts/).\n[`markdown.extensions.codehilite`](https://python-markdown.github.io/extensions/code_hilite/) | Markdown extension | Optional | Style highlighted code with Pygment style.\n[`markdown.extensions.toc`](https://python-markdown.github.io/extensions/toc/#usage) | Markdown extension | Optional | Adds permalink anchors to article\'s subtitles.\n[`pymdownx.emoji`](https://facelessuser.github.io/pymdown-extensions/extensions/emoji/#default-emoji-generators) | Markdown extension | Optional | Style `emojione` set for proper integration into text.\n[`pymdownx.highlight`](https://facelessuser.github.io/pymdown-extensions/extensions/highlight/) | Markdown extension | Optional | Style highlighted code with Pygment style.\n[`typogrify`](https://pypi.python.org/pypi/typogrify) | Pelican builtin | Optional | Style ampersands.\n\n## Installation\n\nThis package is [available on PyPi](https://pypi.python.org/pypi/plumage), so\nyou can install the latest stable release and its dependencies with a simple\n``pip`` call:\n\n```shell-session\n$ pip install plumage\n```\n\nThen, update your `pelicanconf.py` file, to reference the module and extra plugins:\n\n```python\nimport plumage\n\nTHEME = plumage.get_path()\n\nPLUGINS = [\n    (…)\n    "pelican_webassets",\n]\n```\n\n## Settings\n\nPlumage can be customized by adding these optionnal parameters to your\n`pelicanconf.py` file:\n\nSetting name | Default value | Description\n:--- |:--- |:---\n`ARTICLE_EDIT_LINK` | | Generate an edit link besides each article. Can use `%(slug)s` to include dynamic article\'s slug in the link.\n`CODE_STYLE` | `"monokai"` | Pygments\' style ID. Choose one from `poetry run pygmentize -L styles`.\n`COPYRIGHT` | | Additional copyright statement to add in the third column of the footer.\n`DISCLAIMER` | | Overide the disclaimer notice that gets displayed at the fourth column of the footer.\n[`DISQUS_SITENAME`](http://docs.getpelican.com/en/stable/settings.html#DISQUS_SITENAME) | | Pelican can handle Disqus comments. Specify the Disqus sitename identifier here.\n`FAVICON_LINKS` | `True` | Fetch link\'s icons from [Google\'s favicons webservice](https://www.google.com/s2/favicons).\n[`GOOGLE_ANALYTICS`](http://docs.getpelican.com/en/stable/settings.html#GOOGLE_ANALYTICS) | | Set to `UA-XXXXXX-Y` Property\'s tracking ID to activate Google Analytics.\n`LEFT_SIDEBAR` | | HTML content to put as-is in the left sidebar.\n[`LINKS_WIDGET_NAME`](http://docs.getpelican.com/en/stable/settings.html#LINKS_WIDGET_NAME) | `"Links"` | Allows override of the name of the links widget.\n[`LINKS`](http://docs.getpelican.com/en/stable/settings.html#LINKS) | | A list of tuples (Title, URL) for links to appear in the second column of the footer.\n[`MANUAL_LINKS`](http://docs.getpelican.com/en/stable/settings.html#MANUAL_LINKS) | | When enabling this, you must pass the links (in LINKS & SOCIAL settins) not as tuples anymore, but as list, where every entry is formatted as you like\n[`MENUITEMS`](http://docs.getpelican.com/en/stable/settings.html#MENUITEMS) | | A list of tuples (Title, URL) for additional menu items to appear at the beginning of the main menu.\n`RIGHT_SIDEBAR` | | HTML content to put as-is in the right sidebar.\n[`SITESUBTITLE`](http://docs.getpelican.com/en/stable/settings.html#SITESUBTITLE) | | A subtitle to appear in the header.\n`SITE_THUMBNAIL_TEXT` | | Text displayed behind site\'s thumbnail.\n`SITE_THUMBNAIL` | | Site\'s thumbnail URL as displayed in the header. Should be a square image of at least 80x80 pixels.\n[`SOCIAL_WIDGET_NAME`](http://docs.getpelican.com/en/stable/settings.html#SOCIAL_WIDGET_NAME) | `"Social"` | Allows override of the name of the “social” widget.\n[`SOCIAL`](http://docs.getpelican.com/en/stable/settings.html#SOCIAL) | | A list of tuples (Title, URL) to appear in the first columns of the footer.\n`TIPUE_SEARCH` | `False` | Activate [Tipue Search](https://web.archive.org/web/20200703134724/https://tipue.com/search/) (javascript static search engine) into the site. Requires the [`tipue_search`](https://github.com/pelican-plugins/tipue-search) plugin.\n\nMost of these [parameters are similar to `notmyidea`\'s\n](https://docs.getpelican.com/en/latest/settings.html#themes) (Pelican\'s default\ntheme). For usage example, please have a look into [my own `pelicanconf.py`\n](https://github.com/kdeldycke/kevin-deldycke-blog/blob/main/pelicanconf.py).\n\nThe theme is also sensible to this list of [standard Pelican parameters\n](https://docs.getpelican.com/en/latest/settings.html):\n\n* `ARCHIVES_SAVE_AS`\n* `AUTHOR`\n* `AUTHOR_SAVE_AS`\n* `AUTHORS_SAVE_AS`\n* `CATEGORIES_SAVE_AS`\n* `CATEGORY_FEED_ATOM`\n* `CATEGORY_FEED_RSS`\n* `DEFAULT_LANG`\n* `DEFAULT_PAGINATION`\n* `DISPLAY_PAGES_ON_MENU`\n* `DISPLAY_CATEGORIES_ON_MENU`\n* `FEED_ALL_ATOM`\n* `FEED_ALL_RSS`\n* `FEED_ATOM`\n* `FEED_DOMAIN`\n* `FEED_RSS`\n* `PAGINATION_PATTERNS`\n* `SITENAME`\n* `SITEURL`\n* `TAG_FEED_ATOM`\n* `TAG_FEED_RSS`\n* `TAGS_SAVE_AS`\n\n## Code Syntax Highlighting\n\nThere is two alternatives, all relying on [Pygments syntax\nhighlighter](https://pygments.org), sharing most features, with some\ndifferences:\n\nFeature | [CodeHilite](https://python-markdown.github.io/extensions/code_hilite/) | [Highlight](https://facelessuser.github.io/pymdown-extensions/extensions/highlight/)\n:--- |:---: |:---:\nClean copy and paste | ✅ | ✅\nLine numbering | ✅ | ✅\nRight justified numbers | ✅ | ✅\nLine start offset | ✅ | ✅\nMultiple line highlight | ✅ | ✅\nNth line highlight | ✅ | ✅\nFilename | ✅ | ❌\nLong line wraps | ✅ | ❌\nLong line overflow (scrollbar) | ❌ | ✅\nSticky left gutter | ❌ | ✅\nLine anchors | [WIP @ Pygments](https://github.com/pygments/pygments/pull/1591) | ❌\n\n### [Python Markdown CodeHilite](https://python-markdown.github.io/extensions/code_hilite/)\n\nJust add this configuration to `pelicanconf.py`, which allows us to pass\nextra options to [Pygments\' HTML formatter](https://pygments.org/docs/formatters/#HtmlFormatter):\n\n  ```python\n  MARKDOWN = {\n      "extension_configs": {\n          (…)\n          "markdown.extensions.codehilite": {\n              "css_class": "codehilite",  # Default\n              "linenums": True,\n              "linenos": "inline",\n              "linespans": "coderow",\n              "lineanchors": "L",\n              "anchorlinenos": True,\n              "wrapcode": True,\n          },\n          "markdown.extensions.fenced_code": {},\n          (…)\n      },\n  }\n  ```\n\nThis will render this:\n\n  ````markdown\n  ```{.shell-session hl_lines="8 11" linenostart="5" linenospecial="3" filename="~/code/foo.log"}\n  $ cat ./example.markdown\n  This is the content of the file:\n  → java\n  → rust\n  → haskell\n  → javascript\n\n  $ cat ./addendum.txt\n  This is extra content.\n\n  $ find ./ -iname "*.markdown" -print -exec bash -c \'cat ./addendum.txt >> "{}"\' \\;\n  ./example.markdown\n  $ cat ./example.markdown\n  This is the content of the file:\n  → java\n  → rust\n  → haskell\n  → javascript\n\n  This is extra content.\n\n  ```\n  ````\n\nInto this:\n\n![Plumage Python Markdown CodeHilite rendering](https://raw.githubusercontent.com/kdeldycke/plumage/develop/screenshots/codehilite-rendering.jpeg)\n\n### [PyMdown Extensions\' Highlight](https://facelessuser.github.io/pymdown-extensions/extensions/highlight/)\n\nJust add this configuration to your `pelicanconf.py`:\n\n  ```python\n  MARKDOWN = {\n      "extension_configs": {\n          (…)\n          "pymdownx.highlight": {\n              "linenums": True,\n              "linenums_style": "pymdownx-inline",\n          },\n          "pymdownx.superfences": {},\n          (…)\n      },\n  }\n  ```\n\nThis will render this:\n\n  ````markdown\n  ```{.shell-session hl_lines="8 11" linenums="5 1 3" filename="~/code/foo.log"}\n  $ cat ./example.markdown\n  This is the content of the file:\n  → java\n  → rust\n  → haskell\n  → javascript\n\n  $ cat ./addendum.txt\n  This is extra content.\n\n  $ find ./ -iname "*.markdown" -print -exec bash -c \'cat ./addendum.txt >> "{}"\' \\;\n  ./example.markdown\n  $ cat ./example.markdown\n  This is the content of the file:\n  → java\n  → rust\n  → haskell\n  → javascript\n\n  This is extra content.\n\n  ```\n  ````\n\nInto this:\n\n![Plumage PyMdown Extensions\' Highlight rendering](https://raw.githubusercontent.com/kdeldycke/plumage/develop/screenshots/highlight-rendering.jpeg)\n\n## FAQ\n\n### How can I disable the zoom on images?\n\nAll images of an article are zoomable by default. You can deactivate the\nmagnifying glass per-image by adding a `noZoom` CSS class. So instead of the\nfollowing Markdown code:\n\n```markdown\n![Image title](/folder/image.png)\n```\n\nYou have to use the following template to deactivate the zoom of an image:\n\n```markdown\n![Image title](/folder/image.png){: .noZoom}\n```\n\n### Why is the search not working?\n\nThe [`tipue-search`](https://github.com/pelican-plugins/tipue-search) needs to\nbe installed then have an additional template file registered in your\n`pelicanconf.py`.\n\nThere are two alternatives:\n\n* update the `TEMPLATE_PAGES` variable:\n\n    ```python\n    TEMPLATE_PAGES = {\n        (…)\n        "search.html": "search.html",\n     }\n    ```\n\n* or `DIRECT_TEMPLATES`:\n  ([example](https://github.com/kdeldycke/kevin-deldycke-blog/commit/cd4bf8d1f4c55d835d7bfe1d7233cffe48e67a8a)):\n\n    ```python\n    DIRECT_TEMPLATES = [(…), "search"]\n    ```\n\n## License\n\nThis software is licensed under the [GNU General Public License v2 or later\n(GPLv2+)](https://github.com/kdeldycke/plumage/blob/main/LICENSE).\n\nCopyright (C) 2012-2020 [Kevin Deldycke](https://kevin.deldycke.com) and\n[contributors](https://github.com/kdeldycke/plumage/graphs/contributors). All\nRights Reserved.\n\n## Third-party assets\n\nThe theme embed copies of some external softwares, scripts, libraries and\nartworks:\n\n```text\nTipue Search v7.1\nCopyright (c) 2019 Tipue\nDistributed under a MIT license\nSource: https://web.archive.org/web/20200703134724/https://www.tipue.com/search/tipuesearch.zip\n```\n\n```text\njQuery MGlass v1.1\nCopyright (c) 2012 Younès El Biache\nDistributed under a MIT license\nSource: https://github.com/younes0/jQuery-MGlass\n```\n\n```text\nFabric (Plaid)\nCopyright (c) 2012 James Basoo\nDistributed under a Creative Commons Attribution-ShareAlike 3.0 Unported license\nSource: https://subtlepatterns.com/fabric-plaid/\n```\n\n```text\nCream paper\nCopyright (c) 2012 Devin Holmes\nDistributed under a Creative Commons Attribution-ShareAlike 3.0 Unported license\nSource: https://subtlepatterns.com/cream-paper/\n```\n\n```text\nFeather-alt icon v5.1.0\nCopyright (c) 2020 Font Awesome project\nDistributed under a Creative Commons Attribution 4.0 International license\nSource: https://fontawesome.com/icons/feather-alt?style=solid\n```\n\n```text\nMacro shot of White Feather\nSource: https://unsplash.com/photos/Sw7f58YJbc0\n```\n',
    'author': 'Kevin Deldycke',
    'author_email': 'kevin@deldycke.com',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://github.com/kdeldycke/plumage',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.6,<4.0',
}


setup(**setup_kwargs)
