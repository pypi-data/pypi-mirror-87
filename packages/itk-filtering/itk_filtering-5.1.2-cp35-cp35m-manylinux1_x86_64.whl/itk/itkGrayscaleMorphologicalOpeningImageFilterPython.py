# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKMathematicalMorphologyPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkGrayscaleMorphologicalOpeningImageFilterPython
else:
    import _itkGrayscaleMorphologicalOpeningImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkGrayscaleMorphologicalOpeningImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkGrayscaleMorphologicalOpeningImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkFlatStructuringElementPython
import itk.itkBoxImageFilterPython
import itk.itkSizePython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkVectorImagePython
import itk.stdcomplexPython
import itk.itkVariableLengthVectorPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkFixedArrayPython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkNeighborhoodPython

def itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2_New():
    return itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2.New()

class itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterID2ID2SE2):
    r"""


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2_Clone)
    SetAlgorithm = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2_GetAlgorithm)
    AlgorithmType_BASIC = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2_AlgorithmType_VHGW
    
    SetSafeBorder = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2_SafeBorderOff)
    __swig_destroy__ = _itkGrayscaleMorphologicalOpeningImageFilterPython.delete_itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2
    cast = _swig_new_static_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2

        Create a new object of the class itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2 in _itkGrayscaleMorphologicalOpeningImageFilterPython:
_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2_swigregister(itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2)
itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2___New_orig__ = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2___New_orig__
itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2_cast = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID2ID2SE2_cast


def itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3_New():
    return itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3.New()

class itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterID3ID3SE3):
    r"""


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3_Clone)
    SetAlgorithm = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3_GetAlgorithm)
    AlgorithmType_BASIC = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3_AlgorithmType_VHGW
    
    SetSafeBorder = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3_SafeBorderOff)
    __swig_destroy__ = _itkGrayscaleMorphologicalOpeningImageFilterPython.delete_itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3
    cast = _swig_new_static_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3

        Create a new object of the class itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3 in _itkGrayscaleMorphologicalOpeningImageFilterPython:
_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3_swigregister(itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3)
itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3___New_orig__ = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3___New_orig__
itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3_cast = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterID3ID3SE3_cast


def itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2_New():
    return itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2.New()

class itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF2IF2SE2):
    r"""


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2_Clone)
    SetAlgorithm = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2_GetAlgorithm)
    AlgorithmType_BASIC = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2_AlgorithmType_VHGW
    
    SetSafeBorder = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2_SafeBorderOff)
    __swig_destroy__ = _itkGrayscaleMorphologicalOpeningImageFilterPython.delete_itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2
    cast = _swig_new_static_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2

        Create a new object of the class itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2 in _itkGrayscaleMorphologicalOpeningImageFilterPython:
_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2_swigregister(itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2)
itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2___New_orig__ = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2___New_orig__
itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2_cast = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF2IF2SE2_cast


def itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3_New():
    return itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3.New()

class itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF3IF3SE3):
    r"""


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3_Clone)
    SetAlgorithm = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3_GetAlgorithm)
    AlgorithmType_BASIC = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3_AlgorithmType_VHGW
    
    SetSafeBorder = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3_SafeBorderOff)
    __swig_destroy__ = _itkGrayscaleMorphologicalOpeningImageFilterPython.delete_itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3
    cast = _swig_new_static_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3

        Create a new object of the class itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3 in _itkGrayscaleMorphologicalOpeningImageFilterPython:
_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3_swigregister(itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3)
itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3___New_orig__ = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3___New_orig__
itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3_cast = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIF3IF3SE3_cast


def itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2_New():
    return itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2.New()

class itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS2ISS2SE2):
    r"""


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2_Clone)
    SetAlgorithm = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2_GetAlgorithm)
    AlgorithmType_BASIC = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2_AlgorithmType_VHGW
    
    SetSafeBorder = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2_SafeBorderOff)
    __swig_destroy__ = _itkGrayscaleMorphologicalOpeningImageFilterPython.delete_itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2
    cast = _swig_new_static_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2

        Create a new object of the class itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2 in _itkGrayscaleMorphologicalOpeningImageFilterPython:
_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2_swigregister(itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2)
itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2___New_orig__ = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2___New_orig__
itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2_cast = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS2ISS2SE2_cast


def itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3_New():
    return itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3.New()

class itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS3ISS3SE3):
    r"""


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3_Clone)
    SetAlgorithm = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3_GetAlgorithm)
    AlgorithmType_BASIC = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3_AlgorithmType_VHGW
    
    SetSafeBorder = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3_SafeBorderOff)
    __swig_destroy__ = _itkGrayscaleMorphologicalOpeningImageFilterPython.delete_itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3
    cast = _swig_new_static_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3

        Create a new object of the class itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3 in _itkGrayscaleMorphologicalOpeningImageFilterPython:
_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3_swigregister(itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3)
itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3___New_orig__ = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3___New_orig__
itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3_cast = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterISS3ISS3SE3_cast


def itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2_New():
    return itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2.New()

class itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC2IUC2SE2):
    r"""


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2_Clone)
    SetAlgorithm = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2_GetAlgorithm)
    AlgorithmType_BASIC = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2_AlgorithmType_VHGW
    
    SetSafeBorder = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2_SafeBorderOff)
    __swig_destroy__ = _itkGrayscaleMorphologicalOpeningImageFilterPython.delete_itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2
    cast = _swig_new_static_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2

        Create a new object of the class itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2 in _itkGrayscaleMorphologicalOpeningImageFilterPython:
_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2_swigregister(itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2)
itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2___New_orig__ = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2___New_orig__
itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2_cast = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC2IUC2SE2_cast


def itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3_New():
    return itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3.New()

class itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC3IUC3SE3):
    r"""


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3_Clone)
    SetAlgorithm = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3_GetAlgorithm)
    AlgorithmType_BASIC = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3_AlgorithmType_VHGW
    
    SetSafeBorder = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3_SafeBorderOff)
    __swig_destroy__ = _itkGrayscaleMorphologicalOpeningImageFilterPython.delete_itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3
    cast = _swig_new_static_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3

        Create a new object of the class itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3 in _itkGrayscaleMorphologicalOpeningImageFilterPython:
_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3_swigregister(itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3)
itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3___New_orig__ = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3___New_orig__
itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3_cast = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUC3IUC3SE3_cast


def itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2_New():
    return itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2.New()

class itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS2IUS2SE2):
    r"""


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2_Clone)
    SetAlgorithm = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2_GetAlgorithm)
    AlgorithmType_BASIC = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2_AlgorithmType_VHGW
    
    SetSafeBorder = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2_SafeBorderOff)
    __swig_destroy__ = _itkGrayscaleMorphologicalOpeningImageFilterPython.delete_itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2
    cast = _swig_new_static_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2

        Create a new object of the class itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2 in _itkGrayscaleMorphologicalOpeningImageFilterPython:
_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2_swigregister(itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2)
itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2___New_orig__ = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2___New_orig__
itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2_cast = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS2IUS2SE2_cast


def itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3_New():
    return itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3.New()

class itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS3IUS3SE3):
    r"""


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3_Clone)
    SetAlgorithm = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3_GetAlgorithm)
    AlgorithmType_BASIC = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3_AlgorithmType_VHGW
    
    SetSafeBorder = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3_SafeBorderOff)
    __swig_destroy__ = _itkGrayscaleMorphologicalOpeningImageFilterPython.delete_itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3
    cast = _swig_new_static_method(_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3

        Create a new object of the class itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3 in _itkGrayscaleMorphologicalOpeningImageFilterPython:
_itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3_swigregister(itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3)
itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3___New_orig__ = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3___New_orig__
itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3_cast = _itkGrayscaleMorphologicalOpeningImageFilterPython.itkGrayscaleMorphologicalOpeningImageFilterIUS3IUS3SE3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def grayscale_morphological_opening_image_filter(*args, **kwargs):
    """Procedural interface for GrayscaleMorphologicalOpeningImageFilter"""
    import itk
    instance = itk.GrayscaleMorphologicalOpeningImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def grayscale_morphological_opening_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.GrayscaleMorphologicalOpeningImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.GrayscaleMorphologicalOpeningImageFilter.values()[0]
    else:
        filter_object = itk.GrayscaleMorphologicalOpeningImageFilter

    grayscale_morphological_opening_image_filter.__doc__ = filter_object.__doc__
    grayscale_morphological_opening_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    grayscale_morphological_opening_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.GrayscaleMorphologicalOpeningImageFilter, itkTemplate.itkTemplate):
        grayscale_morphological_opening_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        grayscale_morphological_opening_image_filter.__doc__ += "\n"
        grayscale_morphological_opening_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        grayscale_morphological_opening_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



