# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKRegionGrowingPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkNeighborhoodConnectedImageFilterPython
else:
    import _itkNeighborhoodConnectedImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkNeighborhoodConnectedImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkNeighborhoodConnectedImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkPointPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkRGBAPixelPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython

def itkNeighborhoodConnectedImageFilterID2ID2_New():
    return itkNeighborhoodConnectedImageFilterID2ID2.New()

class itkNeighborhoodConnectedImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""


    Label pixels that are connected to a seed and lie within a
    neighborhood.

    NeighborhoodConnectedImageFilter labels pixels with ReplaceValue that
    are connected to an initial Seed AND whose neighbors all lie within a
    Lower and Upper threshold range. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID2ID2_Clone)
    PrintSelf = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID2ID2_PrintSelf)
    ClearSeeds = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID2ID2_ClearSeeds)
    SetSeed = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID2ID2_SetSeed)
    AddSeed = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID2ID2_AddSeed)
    SetLower = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID2ID2_SetLower)
    GetLower = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID2ID2_GetLower)
    SetUpper = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID2ID2_SetUpper)
    GetUpper = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID2ID2_GetUpper)
    SetReplaceValue = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID2ID2_SetReplaceValue)
    GetReplaceValue = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID2ID2_GetReplaceValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID2ID2_SetRadius)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID2ID2_GetRadius)
    InputEqualityComparableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID2ID2_InputEqualityComparableCheck
    
    OutputEqualityComparableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID2ID2_OutputEqualityComparableCheck
    
    SameDimensionCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID2ID2_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID2ID2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID2ID2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkNeighborhoodConnectedImageFilterPython.delete_itkNeighborhoodConnectedImageFilterID2ID2
    cast = _swig_new_static_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkNeighborhoodConnectedImageFilterID2ID2

        Create a new object of the class itkNeighborhoodConnectedImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNeighborhoodConnectedImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNeighborhoodConnectedImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNeighborhoodConnectedImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNeighborhoodConnectedImageFilterID2ID2 in _itkNeighborhoodConnectedImageFilterPython:
_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID2ID2_swigregister(itkNeighborhoodConnectedImageFilterID2ID2)
itkNeighborhoodConnectedImageFilterID2ID2___New_orig__ = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID2ID2___New_orig__
itkNeighborhoodConnectedImageFilterID2ID2_cast = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID2ID2_cast


def itkNeighborhoodConnectedImageFilterID3ID3_New():
    return itkNeighborhoodConnectedImageFilterID3ID3.New()

class itkNeighborhoodConnectedImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""


    Label pixels that are connected to a seed and lie within a
    neighborhood.

    NeighborhoodConnectedImageFilter labels pixels with ReplaceValue that
    are connected to an initial Seed AND whose neighbors all lie within a
    Lower and Upper threshold range. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID3ID3_Clone)
    PrintSelf = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID3ID3_PrintSelf)
    ClearSeeds = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID3ID3_ClearSeeds)
    SetSeed = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID3ID3_SetSeed)
    AddSeed = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID3ID3_AddSeed)
    SetLower = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID3ID3_SetLower)
    GetLower = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID3ID3_GetLower)
    SetUpper = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID3ID3_SetUpper)
    GetUpper = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID3ID3_GetUpper)
    SetReplaceValue = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID3ID3_SetReplaceValue)
    GetReplaceValue = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID3ID3_GetReplaceValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID3ID3_SetRadius)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID3ID3_GetRadius)
    InputEqualityComparableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID3ID3_InputEqualityComparableCheck
    
    OutputEqualityComparableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID3ID3_OutputEqualityComparableCheck
    
    SameDimensionCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID3ID3_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID3ID3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID3ID3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkNeighborhoodConnectedImageFilterPython.delete_itkNeighborhoodConnectedImageFilterID3ID3
    cast = _swig_new_static_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkNeighborhoodConnectedImageFilterID3ID3

        Create a new object of the class itkNeighborhoodConnectedImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNeighborhoodConnectedImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNeighborhoodConnectedImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNeighborhoodConnectedImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNeighborhoodConnectedImageFilterID3ID3 in _itkNeighborhoodConnectedImageFilterPython:
_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID3ID3_swigregister(itkNeighborhoodConnectedImageFilterID3ID3)
itkNeighborhoodConnectedImageFilterID3ID3___New_orig__ = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID3ID3___New_orig__
itkNeighborhoodConnectedImageFilterID3ID3_cast = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterID3ID3_cast


def itkNeighborhoodConnectedImageFilterIF2IF2_New():
    return itkNeighborhoodConnectedImageFilterIF2IF2.New()

class itkNeighborhoodConnectedImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""


    Label pixels that are connected to a seed and lie within a
    neighborhood.

    NeighborhoodConnectedImageFilter labels pixels with ReplaceValue that
    are connected to an initial Seed AND whose neighbors all lie within a
    Lower and Upper threshold range. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF2IF2_Clone)
    PrintSelf = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF2IF2_PrintSelf)
    ClearSeeds = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF2IF2_ClearSeeds)
    SetSeed = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF2IF2_SetSeed)
    AddSeed = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF2IF2_AddSeed)
    SetLower = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF2IF2_SetLower)
    GetLower = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF2IF2_GetLower)
    SetUpper = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF2IF2_SetUpper)
    GetUpper = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF2IF2_GetUpper)
    SetReplaceValue = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF2IF2_SetReplaceValue)
    GetReplaceValue = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF2IF2_GetReplaceValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF2IF2_SetRadius)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF2IF2_GetRadius)
    InputEqualityComparableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF2IF2_InputEqualityComparableCheck
    
    OutputEqualityComparableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF2IF2_OutputEqualityComparableCheck
    
    SameDimensionCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF2IF2_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF2IF2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF2IF2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkNeighborhoodConnectedImageFilterPython.delete_itkNeighborhoodConnectedImageFilterIF2IF2
    cast = _swig_new_static_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkNeighborhoodConnectedImageFilterIF2IF2

        Create a new object of the class itkNeighborhoodConnectedImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNeighborhoodConnectedImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNeighborhoodConnectedImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNeighborhoodConnectedImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNeighborhoodConnectedImageFilterIF2IF2 in _itkNeighborhoodConnectedImageFilterPython:
_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF2IF2_swigregister(itkNeighborhoodConnectedImageFilterIF2IF2)
itkNeighborhoodConnectedImageFilterIF2IF2___New_orig__ = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF2IF2___New_orig__
itkNeighborhoodConnectedImageFilterIF2IF2_cast = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF2IF2_cast


def itkNeighborhoodConnectedImageFilterIF3IF3_New():
    return itkNeighborhoodConnectedImageFilterIF3IF3.New()

class itkNeighborhoodConnectedImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""


    Label pixels that are connected to a seed and lie within a
    neighborhood.

    NeighborhoodConnectedImageFilter labels pixels with ReplaceValue that
    are connected to an initial Seed AND whose neighbors all lie within a
    Lower and Upper threshold range. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF3IF3_Clone)
    PrintSelf = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF3IF3_PrintSelf)
    ClearSeeds = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF3IF3_ClearSeeds)
    SetSeed = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF3IF3_SetSeed)
    AddSeed = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF3IF3_AddSeed)
    SetLower = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF3IF3_SetLower)
    GetLower = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF3IF3_GetLower)
    SetUpper = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF3IF3_SetUpper)
    GetUpper = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF3IF3_GetUpper)
    SetReplaceValue = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF3IF3_SetReplaceValue)
    GetReplaceValue = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF3IF3_GetReplaceValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF3IF3_SetRadius)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF3IF3_GetRadius)
    InputEqualityComparableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF3IF3_InputEqualityComparableCheck
    
    OutputEqualityComparableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF3IF3_OutputEqualityComparableCheck
    
    SameDimensionCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF3IF3_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF3IF3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF3IF3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkNeighborhoodConnectedImageFilterPython.delete_itkNeighborhoodConnectedImageFilterIF3IF3
    cast = _swig_new_static_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkNeighborhoodConnectedImageFilterIF3IF3

        Create a new object of the class itkNeighborhoodConnectedImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNeighborhoodConnectedImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNeighborhoodConnectedImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNeighborhoodConnectedImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNeighborhoodConnectedImageFilterIF3IF3 in _itkNeighborhoodConnectedImageFilterPython:
_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF3IF3_swigregister(itkNeighborhoodConnectedImageFilterIF3IF3)
itkNeighborhoodConnectedImageFilterIF3IF3___New_orig__ = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF3IF3___New_orig__
itkNeighborhoodConnectedImageFilterIF3IF3_cast = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIF3IF3_cast


def itkNeighborhoodConnectedImageFilterISS2ISS2_New():
    return itkNeighborhoodConnectedImageFilterISS2ISS2.New()

class itkNeighborhoodConnectedImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""


    Label pixels that are connected to a seed and lie within a
    neighborhood.

    NeighborhoodConnectedImageFilter labels pixels with ReplaceValue that
    are connected to an initial Seed AND whose neighbors all lie within a
    Lower and Upper threshold range. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS2ISS2_Clone)
    PrintSelf = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS2ISS2_PrintSelf)
    ClearSeeds = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS2ISS2_ClearSeeds)
    SetSeed = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS2ISS2_SetSeed)
    AddSeed = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS2ISS2_AddSeed)
    SetLower = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS2ISS2_SetLower)
    GetLower = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS2ISS2_GetLower)
    SetUpper = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS2ISS2_SetUpper)
    GetUpper = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS2ISS2_GetUpper)
    SetReplaceValue = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS2ISS2_SetReplaceValue)
    GetReplaceValue = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS2ISS2_GetReplaceValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS2ISS2_SetRadius)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS2ISS2_GetRadius)
    InputEqualityComparableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS2ISS2_InputEqualityComparableCheck
    
    OutputEqualityComparableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS2ISS2_OutputEqualityComparableCheck
    
    SameDimensionCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS2ISS2_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS2ISS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS2ISS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkNeighborhoodConnectedImageFilterPython.delete_itkNeighborhoodConnectedImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkNeighborhoodConnectedImageFilterISS2ISS2

        Create a new object of the class itkNeighborhoodConnectedImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNeighborhoodConnectedImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNeighborhoodConnectedImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNeighborhoodConnectedImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNeighborhoodConnectedImageFilterISS2ISS2 in _itkNeighborhoodConnectedImageFilterPython:
_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS2ISS2_swigregister(itkNeighborhoodConnectedImageFilterISS2ISS2)
itkNeighborhoodConnectedImageFilterISS2ISS2___New_orig__ = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS2ISS2___New_orig__
itkNeighborhoodConnectedImageFilterISS2ISS2_cast = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS2ISS2_cast


def itkNeighborhoodConnectedImageFilterISS3ISS3_New():
    return itkNeighborhoodConnectedImageFilterISS3ISS3.New()

class itkNeighborhoodConnectedImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""


    Label pixels that are connected to a seed and lie within a
    neighborhood.

    NeighborhoodConnectedImageFilter labels pixels with ReplaceValue that
    are connected to an initial Seed AND whose neighbors all lie within a
    Lower and Upper threshold range. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS3ISS3_Clone)
    PrintSelf = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS3ISS3_PrintSelf)
    ClearSeeds = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS3ISS3_ClearSeeds)
    SetSeed = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS3ISS3_SetSeed)
    AddSeed = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS3ISS3_AddSeed)
    SetLower = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS3ISS3_SetLower)
    GetLower = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS3ISS3_GetLower)
    SetUpper = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS3ISS3_SetUpper)
    GetUpper = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS3ISS3_GetUpper)
    SetReplaceValue = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS3ISS3_SetReplaceValue)
    GetReplaceValue = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS3ISS3_GetReplaceValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS3ISS3_SetRadius)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS3ISS3_GetRadius)
    InputEqualityComparableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS3ISS3_InputEqualityComparableCheck
    
    OutputEqualityComparableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS3ISS3_OutputEqualityComparableCheck
    
    SameDimensionCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS3ISS3_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS3ISS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS3ISS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkNeighborhoodConnectedImageFilterPython.delete_itkNeighborhoodConnectedImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkNeighborhoodConnectedImageFilterISS3ISS3

        Create a new object of the class itkNeighborhoodConnectedImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNeighborhoodConnectedImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNeighborhoodConnectedImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNeighborhoodConnectedImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNeighborhoodConnectedImageFilterISS3ISS3 in _itkNeighborhoodConnectedImageFilterPython:
_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS3ISS3_swigregister(itkNeighborhoodConnectedImageFilterISS3ISS3)
itkNeighborhoodConnectedImageFilterISS3ISS3___New_orig__ = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS3ISS3___New_orig__
itkNeighborhoodConnectedImageFilterISS3ISS3_cast = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterISS3ISS3_cast


def itkNeighborhoodConnectedImageFilterIUC2IUC2_New():
    return itkNeighborhoodConnectedImageFilterIUC2IUC2.New()

class itkNeighborhoodConnectedImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""


    Label pixels that are connected to a seed and lie within a
    neighborhood.

    NeighborhoodConnectedImageFilter labels pixels with ReplaceValue that
    are connected to an initial Seed AND whose neighbors all lie within a
    Lower and Upper threshold range. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC2IUC2_Clone)
    PrintSelf = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC2IUC2_PrintSelf)
    ClearSeeds = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC2IUC2_ClearSeeds)
    SetSeed = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC2IUC2_SetSeed)
    AddSeed = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC2IUC2_AddSeed)
    SetLower = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC2IUC2_SetLower)
    GetLower = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC2IUC2_GetLower)
    SetUpper = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC2IUC2_SetUpper)
    GetUpper = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC2IUC2_GetUpper)
    SetReplaceValue = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC2IUC2_SetReplaceValue)
    GetReplaceValue = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC2IUC2_GetReplaceValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC2IUC2_SetRadius)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC2IUC2_GetRadius)
    InputEqualityComparableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC2IUC2_InputEqualityComparableCheck
    
    OutputEqualityComparableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC2IUC2_OutputEqualityComparableCheck
    
    SameDimensionCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC2IUC2_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC2IUC2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC2IUC2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkNeighborhoodConnectedImageFilterPython.delete_itkNeighborhoodConnectedImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkNeighborhoodConnectedImageFilterIUC2IUC2

        Create a new object of the class itkNeighborhoodConnectedImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNeighborhoodConnectedImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNeighborhoodConnectedImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNeighborhoodConnectedImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNeighborhoodConnectedImageFilterIUC2IUC2 in _itkNeighborhoodConnectedImageFilterPython:
_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC2IUC2_swigregister(itkNeighborhoodConnectedImageFilterIUC2IUC2)
itkNeighborhoodConnectedImageFilterIUC2IUC2___New_orig__ = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC2IUC2___New_orig__
itkNeighborhoodConnectedImageFilterIUC2IUC2_cast = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC2IUC2_cast


def itkNeighborhoodConnectedImageFilterIUC3IUC3_New():
    return itkNeighborhoodConnectedImageFilterIUC3IUC3.New()

class itkNeighborhoodConnectedImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""


    Label pixels that are connected to a seed and lie within a
    neighborhood.

    NeighborhoodConnectedImageFilter labels pixels with ReplaceValue that
    are connected to an initial Seed AND whose neighbors all lie within a
    Lower and Upper threshold range. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC3IUC3_Clone)
    PrintSelf = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC3IUC3_PrintSelf)
    ClearSeeds = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC3IUC3_ClearSeeds)
    SetSeed = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC3IUC3_SetSeed)
    AddSeed = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC3IUC3_AddSeed)
    SetLower = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC3IUC3_SetLower)
    GetLower = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC3IUC3_GetLower)
    SetUpper = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC3IUC3_SetUpper)
    GetUpper = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC3IUC3_GetUpper)
    SetReplaceValue = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC3IUC3_SetReplaceValue)
    GetReplaceValue = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC3IUC3_GetReplaceValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC3IUC3_SetRadius)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC3IUC3_GetRadius)
    InputEqualityComparableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC3IUC3_InputEqualityComparableCheck
    
    OutputEqualityComparableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC3IUC3_OutputEqualityComparableCheck
    
    SameDimensionCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC3IUC3_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC3IUC3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC3IUC3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkNeighborhoodConnectedImageFilterPython.delete_itkNeighborhoodConnectedImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkNeighborhoodConnectedImageFilterIUC3IUC3

        Create a new object of the class itkNeighborhoodConnectedImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNeighborhoodConnectedImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNeighborhoodConnectedImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNeighborhoodConnectedImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNeighborhoodConnectedImageFilterIUC3IUC3 in _itkNeighborhoodConnectedImageFilterPython:
_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC3IUC3_swigregister(itkNeighborhoodConnectedImageFilterIUC3IUC3)
itkNeighborhoodConnectedImageFilterIUC3IUC3___New_orig__ = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC3IUC3___New_orig__
itkNeighborhoodConnectedImageFilterIUC3IUC3_cast = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUC3IUC3_cast


def itkNeighborhoodConnectedImageFilterIUS2IUS2_New():
    return itkNeighborhoodConnectedImageFilterIUS2IUS2.New()

class itkNeighborhoodConnectedImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""


    Label pixels that are connected to a seed and lie within a
    neighborhood.

    NeighborhoodConnectedImageFilter labels pixels with ReplaceValue that
    are connected to an initial Seed AND whose neighbors all lie within a
    Lower and Upper threshold range. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS2IUS2_Clone)
    PrintSelf = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS2IUS2_PrintSelf)
    ClearSeeds = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS2IUS2_ClearSeeds)
    SetSeed = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS2IUS2_SetSeed)
    AddSeed = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS2IUS2_AddSeed)
    SetLower = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS2IUS2_SetLower)
    GetLower = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS2IUS2_GetLower)
    SetUpper = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS2IUS2_SetUpper)
    GetUpper = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS2IUS2_GetUpper)
    SetReplaceValue = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS2IUS2_SetReplaceValue)
    GetReplaceValue = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS2IUS2_GetReplaceValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS2IUS2_SetRadius)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS2IUS2_GetRadius)
    InputEqualityComparableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS2IUS2_InputEqualityComparableCheck
    
    OutputEqualityComparableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS2IUS2_OutputEqualityComparableCheck
    
    SameDimensionCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS2IUS2_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS2IUS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS2IUS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkNeighborhoodConnectedImageFilterPython.delete_itkNeighborhoodConnectedImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkNeighborhoodConnectedImageFilterIUS2IUS2

        Create a new object of the class itkNeighborhoodConnectedImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNeighborhoodConnectedImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNeighborhoodConnectedImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNeighborhoodConnectedImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNeighborhoodConnectedImageFilterIUS2IUS2 in _itkNeighborhoodConnectedImageFilterPython:
_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS2IUS2_swigregister(itkNeighborhoodConnectedImageFilterIUS2IUS2)
itkNeighborhoodConnectedImageFilterIUS2IUS2___New_orig__ = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS2IUS2___New_orig__
itkNeighborhoodConnectedImageFilterIUS2IUS2_cast = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS2IUS2_cast


def itkNeighborhoodConnectedImageFilterIUS3IUS3_New():
    return itkNeighborhoodConnectedImageFilterIUS3IUS3.New()

class itkNeighborhoodConnectedImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""


    Label pixels that are connected to a seed and lie within a
    neighborhood.

    NeighborhoodConnectedImageFilter labels pixels with ReplaceValue that
    are connected to an initial Seed AND whose neighbors all lie within a
    Lower and Upper threshold range. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS3IUS3_Clone)
    PrintSelf = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS3IUS3_PrintSelf)
    ClearSeeds = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS3IUS3_ClearSeeds)
    SetSeed = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS3IUS3_SetSeed)
    AddSeed = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS3IUS3_AddSeed)
    SetLower = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS3IUS3_SetLower)
    GetLower = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS3IUS3_GetLower)
    SetUpper = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS3IUS3_SetUpper)
    GetUpper = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS3IUS3_GetUpper)
    SetReplaceValue = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS3IUS3_SetReplaceValue)
    GetReplaceValue = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS3IUS3_GetReplaceValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS3IUS3_SetRadius)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS3IUS3_GetRadius)
    InputEqualityComparableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS3IUS3_InputEqualityComparableCheck
    
    OutputEqualityComparableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS3IUS3_OutputEqualityComparableCheck
    
    SameDimensionCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS3IUS3_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS3IUS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS3IUS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkNeighborhoodConnectedImageFilterPython.delete_itkNeighborhoodConnectedImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkNeighborhoodConnectedImageFilterIUS3IUS3

        Create a new object of the class itkNeighborhoodConnectedImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNeighborhoodConnectedImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNeighborhoodConnectedImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNeighborhoodConnectedImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNeighborhoodConnectedImageFilterIUS3IUS3 in _itkNeighborhoodConnectedImageFilterPython:
_itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS3IUS3_swigregister(itkNeighborhoodConnectedImageFilterIUS3IUS3)
itkNeighborhoodConnectedImageFilterIUS3IUS3___New_orig__ = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS3IUS3___New_orig__
itkNeighborhoodConnectedImageFilterIUS3IUS3_cast = _itkNeighborhoodConnectedImageFilterPython.itkNeighborhoodConnectedImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def neighborhood_connected_image_filter(*args, **kwargs):
    """Procedural interface for NeighborhoodConnectedImageFilter"""
    import itk
    instance = itk.NeighborhoodConnectedImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def neighborhood_connected_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.NeighborhoodConnectedImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.NeighborhoodConnectedImageFilter.values()[0]
    else:
        filter_object = itk.NeighborhoodConnectedImageFilter

    neighborhood_connected_image_filter.__doc__ = filter_object.__doc__
    neighborhood_connected_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    neighborhood_connected_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.NeighborhoodConnectedImageFilter, itkTemplate.itkTemplate):
        neighborhood_connected_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        neighborhood_connected_image_filter.__doc__ += "\n"
        neighborhood_connected_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        neighborhood_connected_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



