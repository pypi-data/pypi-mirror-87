# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageIntensityPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkRescaleIntensityImageFilterPython
else:
    import _itkRescaleIntensityImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkRescaleIntensityImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkRescaleIntensityImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterBPython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterAPython

def itkRescaleIntensityImageFilterID2ID2_Superclass_New():
    return itkRescaleIntensityImageFilterID2ID2_Superclass.New()

class itkRescaleIntensityImageFilterID2ID2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID2ID2_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID2ID2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID2ID2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_Superclass_swigregister(itkRescaleIntensityImageFilterID2ID2_Superclass)
itkRescaleIntensityImageFilterID2ID2_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_Superclass___New_orig__
itkRescaleIntensityImageFilterID2ID2_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_Superclass_cast


def itkRescaleIntensityImageFilterID2IF2_Superclass_New():
    return itkRescaleIntensityImageFilterID2IF2_Superclass.New()

class itkRescaleIntensityImageFilterID2IF2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID2IF2_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID2IF2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID2IF2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_Superclass_swigregister(itkRescaleIntensityImageFilterID2IF2_Superclass)
itkRescaleIntensityImageFilterID2IF2_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_Superclass___New_orig__
itkRescaleIntensityImageFilterID2IF2_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_Superclass_cast


def itkRescaleIntensityImageFilterID2ISS2_Superclass_New():
    return itkRescaleIntensityImageFilterID2ISS2_Superclass.New()

class itkRescaleIntensityImageFilterID2ISS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ISS2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID2ISS2_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID2ISS2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID2ISS2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_Superclass_swigregister(itkRescaleIntensityImageFilterID2ISS2_Superclass)
itkRescaleIntensityImageFilterID2ISS2_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_Superclass___New_orig__
itkRescaleIntensityImageFilterID2ISS2_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_Superclass_cast


def itkRescaleIntensityImageFilterID2IUC2_Superclass_New():
    return itkRescaleIntensityImageFilterID2IUC2_Superclass.New()

class itkRescaleIntensityImageFilterID2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID2IUC2_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID2IUC2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID2IUC2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_Superclass_swigregister(itkRescaleIntensityImageFilterID2IUC2_Superclass)
itkRescaleIntensityImageFilterID2IUC2_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_Superclass___New_orig__
itkRescaleIntensityImageFilterID2IUC2_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_Superclass_cast


def itkRescaleIntensityImageFilterID2IUS2_Superclass_New():
    return itkRescaleIntensityImageFilterID2IUS2_Superclass.New()

class itkRescaleIntensityImageFilterID2IUS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID2IUS2_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID2IUS2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID2IUS2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_Superclass_swigregister(itkRescaleIntensityImageFilterID2IUS2_Superclass)
itkRescaleIntensityImageFilterID2IUS2_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_Superclass___New_orig__
itkRescaleIntensityImageFilterID2IUS2_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_Superclass_cast


def itkRescaleIntensityImageFilterID3ID3_Superclass_New():
    return itkRescaleIntensityImageFilterID3ID3_Superclass.New()

class itkRescaleIntensityImageFilterID3ID3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID3ID3_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID3ID3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID3ID3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_Superclass_swigregister(itkRescaleIntensityImageFilterID3ID3_Superclass)
itkRescaleIntensityImageFilterID3ID3_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_Superclass___New_orig__
itkRescaleIntensityImageFilterID3ID3_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_Superclass_cast


def itkRescaleIntensityImageFilterID3IF3_Superclass_New():
    return itkRescaleIntensityImageFilterID3IF3_Superclass.New()

class itkRescaleIntensityImageFilterID3IF3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID3IF3_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID3IF3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID3IF3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_Superclass_swigregister(itkRescaleIntensityImageFilterID3IF3_Superclass)
itkRescaleIntensityImageFilterID3IF3_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_Superclass___New_orig__
itkRescaleIntensityImageFilterID3IF3_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_Superclass_cast


def itkRescaleIntensityImageFilterID3ISS3_Superclass_New():
    return itkRescaleIntensityImageFilterID3ISS3_Superclass.New()

class itkRescaleIntensityImageFilterID3ISS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ISS3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID3ISS3_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID3ISS3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID3ISS3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_Superclass_swigregister(itkRescaleIntensityImageFilterID3ISS3_Superclass)
itkRescaleIntensityImageFilterID3ISS3_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_Superclass___New_orig__
itkRescaleIntensityImageFilterID3ISS3_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_Superclass_cast


def itkRescaleIntensityImageFilterID3IUC3_Superclass_New():
    return itkRescaleIntensityImageFilterID3IUC3_Superclass.New()

class itkRescaleIntensityImageFilterID3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID3IUC3_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID3IUC3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID3IUC3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_Superclass_swigregister(itkRescaleIntensityImageFilterID3IUC3_Superclass)
itkRescaleIntensityImageFilterID3IUC3_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_Superclass___New_orig__
itkRescaleIntensityImageFilterID3IUC3_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_Superclass_cast


def itkRescaleIntensityImageFilterID3IUS3_Superclass_New():
    return itkRescaleIntensityImageFilterID3IUS3_Superclass.New()

class itkRescaleIntensityImageFilterID3IUS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID3IUS3_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID3IUS3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID3IUS3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_Superclass_swigregister(itkRescaleIntensityImageFilterID3IUS3_Superclass)
itkRescaleIntensityImageFilterID3IUS3_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_Superclass___New_orig__
itkRescaleIntensityImageFilterID3IUS3_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_Superclass_cast


def itkRescaleIntensityImageFilterIF2ID2_Superclass_New():
    return itkRescaleIntensityImageFilterIF2ID2_Superclass.New()

class itkRescaleIntensityImageFilterIF2ID2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF2ID2_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF2ID2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF2ID2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_Superclass_swigregister(itkRescaleIntensityImageFilterIF2ID2_Superclass)
itkRescaleIntensityImageFilterIF2ID2_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_Superclass___New_orig__
itkRescaleIntensityImageFilterIF2ID2_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_Superclass_cast


def itkRescaleIntensityImageFilterIF2IF2_Superclass_New():
    return itkRescaleIntensityImageFilterIF2IF2_Superclass.New()

class itkRescaleIntensityImageFilterIF2IF2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF2IF2_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF2IF2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF2IF2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_Superclass_swigregister(itkRescaleIntensityImageFilterIF2IF2_Superclass)
itkRescaleIntensityImageFilterIF2IF2_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_Superclass___New_orig__
itkRescaleIntensityImageFilterIF2IF2_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_Superclass_cast


def itkRescaleIntensityImageFilterIF2ISS2_Superclass_New():
    return itkRescaleIntensityImageFilterIF2ISS2_Superclass.New()

class itkRescaleIntensityImageFilterIF2ISS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ISS2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF2ISS2_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF2ISS2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF2ISS2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_Superclass_swigregister(itkRescaleIntensityImageFilterIF2ISS2_Superclass)
itkRescaleIntensityImageFilterIF2ISS2_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_Superclass___New_orig__
itkRescaleIntensityImageFilterIF2ISS2_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_Superclass_cast


def itkRescaleIntensityImageFilterIF2IUC2_Superclass_New():
    return itkRescaleIntensityImageFilterIF2IUC2_Superclass.New()

class itkRescaleIntensityImageFilterIF2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF2IUC2_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF2IUC2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF2IUC2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_Superclass_swigregister(itkRescaleIntensityImageFilterIF2IUC2_Superclass)
itkRescaleIntensityImageFilterIF2IUC2_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_Superclass___New_orig__
itkRescaleIntensityImageFilterIF2IUC2_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_Superclass_cast


def itkRescaleIntensityImageFilterIF2IUS2_Superclass_New():
    return itkRescaleIntensityImageFilterIF2IUS2_Superclass.New()

class itkRescaleIntensityImageFilterIF2IUS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF2IUS2_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF2IUS2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF2IUS2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_Superclass_swigregister(itkRescaleIntensityImageFilterIF2IUS2_Superclass)
itkRescaleIntensityImageFilterIF2IUS2_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_Superclass___New_orig__
itkRescaleIntensityImageFilterIF2IUS2_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_Superclass_cast


def itkRescaleIntensityImageFilterIF3ID3_Superclass_New():
    return itkRescaleIntensityImageFilterIF3ID3_Superclass.New()

class itkRescaleIntensityImageFilterIF3ID3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF3ID3_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF3ID3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF3ID3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_Superclass_swigregister(itkRescaleIntensityImageFilterIF3ID3_Superclass)
itkRescaleIntensityImageFilterIF3ID3_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_Superclass___New_orig__
itkRescaleIntensityImageFilterIF3ID3_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_Superclass_cast


def itkRescaleIntensityImageFilterIF3IF3_Superclass_New():
    return itkRescaleIntensityImageFilterIF3IF3_Superclass.New()

class itkRescaleIntensityImageFilterIF3IF3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF3IF3_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF3IF3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF3IF3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_Superclass_swigregister(itkRescaleIntensityImageFilterIF3IF3_Superclass)
itkRescaleIntensityImageFilterIF3IF3_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_Superclass___New_orig__
itkRescaleIntensityImageFilterIF3IF3_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_Superclass_cast


def itkRescaleIntensityImageFilterIF3ISS3_Superclass_New():
    return itkRescaleIntensityImageFilterIF3ISS3_Superclass.New()

class itkRescaleIntensityImageFilterIF3ISS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ISS3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF3ISS3_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF3ISS3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF3ISS3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_Superclass_swigregister(itkRescaleIntensityImageFilterIF3ISS3_Superclass)
itkRescaleIntensityImageFilterIF3ISS3_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_Superclass___New_orig__
itkRescaleIntensityImageFilterIF3ISS3_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_Superclass_cast


def itkRescaleIntensityImageFilterIF3IUC3_Superclass_New():
    return itkRescaleIntensityImageFilterIF3IUC3_Superclass.New()

class itkRescaleIntensityImageFilterIF3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF3IUC3_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF3IUC3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF3IUC3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_Superclass_swigregister(itkRescaleIntensityImageFilterIF3IUC3_Superclass)
itkRescaleIntensityImageFilterIF3IUC3_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_Superclass___New_orig__
itkRescaleIntensityImageFilterIF3IUC3_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_Superclass_cast


def itkRescaleIntensityImageFilterIF3IUS3_Superclass_New():
    return itkRescaleIntensityImageFilterIF3IUS3_Superclass.New()

class itkRescaleIntensityImageFilterIF3IUS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF3IUS3_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF3IUS3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF3IUS3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_Superclass_swigregister(itkRescaleIntensityImageFilterIF3IUS3_Superclass)
itkRescaleIntensityImageFilterIF3IUS3_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_Superclass___New_orig__
itkRescaleIntensityImageFilterIF3IUS3_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_Superclass_cast


def itkRescaleIntensityImageFilterISS2ID2_Superclass_New():
    return itkRescaleIntensityImageFilterISS2ID2_Superclass.New()

class itkRescaleIntensityImageFilterISS2ID2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ID2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS2ID2_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS2ID2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS2ID2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_Superclass_swigregister(itkRescaleIntensityImageFilterISS2ID2_Superclass)
itkRescaleIntensityImageFilterISS2ID2_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_Superclass___New_orig__
itkRescaleIntensityImageFilterISS2ID2_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_Superclass_cast


def itkRescaleIntensityImageFilterISS2IF2_Superclass_New():
    return itkRescaleIntensityImageFilterISS2IF2_Superclass.New()

class itkRescaleIntensityImageFilterISS2IF2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IF2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS2IF2_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS2IF2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS2IF2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_Superclass_swigregister(itkRescaleIntensityImageFilterISS2IF2_Superclass)
itkRescaleIntensityImageFilterISS2IF2_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_Superclass___New_orig__
itkRescaleIntensityImageFilterISS2IF2_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_Superclass_cast


def itkRescaleIntensityImageFilterISS2ISS2_Superclass_New():
    return itkRescaleIntensityImageFilterISS2ISS2_Superclass.New()

class itkRescaleIntensityImageFilterISS2ISS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS2ISS2_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS2ISS2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS2ISS2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_Superclass_swigregister(itkRescaleIntensityImageFilterISS2ISS2_Superclass)
itkRescaleIntensityImageFilterISS2ISS2_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_Superclass___New_orig__
itkRescaleIntensityImageFilterISS2ISS2_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_Superclass_cast


def itkRescaleIntensityImageFilterISS2IUC2_Superclass_New():
    return itkRescaleIntensityImageFilterISS2IUC2_Superclass.New()

class itkRescaleIntensityImageFilterISS2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IUC2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS2IUC2_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS2IUC2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS2IUC2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_Superclass_swigregister(itkRescaleIntensityImageFilterISS2IUC2_Superclass)
itkRescaleIntensityImageFilterISS2IUC2_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_Superclass___New_orig__
itkRescaleIntensityImageFilterISS2IUC2_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_Superclass_cast


def itkRescaleIntensityImageFilterISS2IUS2_Superclass_New():
    return itkRescaleIntensityImageFilterISS2IUS2_Superclass.New()

class itkRescaleIntensityImageFilterISS2IUS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IUS2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS2IUS2_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS2IUS2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS2IUS2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_Superclass_swigregister(itkRescaleIntensityImageFilterISS2IUS2_Superclass)
itkRescaleIntensityImageFilterISS2IUS2_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_Superclass___New_orig__
itkRescaleIntensityImageFilterISS2IUS2_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_Superclass_cast


def itkRescaleIntensityImageFilterISS3ID3_Superclass_New():
    return itkRescaleIntensityImageFilterISS3ID3_Superclass.New()

class itkRescaleIntensityImageFilterISS3ID3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ID3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS3ID3_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS3ID3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS3ID3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_Superclass_swigregister(itkRescaleIntensityImageFilterISS3ID3_Superclass)
itkRescaleIntensityImageFilterISS3ID3_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_Superclass___New_orig__
itkRescaleIntensityImageFilterISS3ID3_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_Superclass_cast


def itkRescaleIntensityImageFilterISS3IF3_Superclass_New():
    return itkRescaleIntensityImageFilterISS3IF3_Superclass.New()

class itkRescaleIntensityImageFilterISS3IF3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IF3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS3IF3_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS3IF3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS3IF3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_Superclass_swigregister(itkRescaleIntensityImageFilterISS3IF3_Superclass)
itkRescaleIntensityImageFilterISS3IF3_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_Superclass___New_orig__
itkRescaleIntensityImageFilterISS3IF3_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_Superclass_cast


def itkRescaleIntensityImageFilterISS3ISS3_Superclass_New():
    return itkRescaleIntensityImageFilterISS3ISS3_Superclass.New()

class itkRescaleIntensityImageFilterISS3ISS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS3ISS3_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS3ISS3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS3ISS3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_Superclass_swigregister(itkRescaleIntensityImageFilterISS3ISS3_Superclass)
itkRescaleIntensityImageFilterISS3ISS3_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_Superclass___New_orig__
itkRescaleIntensityImageFilterISS3ISS3_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_Superclass_cast


def itkRescaleIntensityImageFilterISS3IUC3_Superclass_New():
    return itkRescaleIntensityImageFilterISS3IUC3_Superclass.New()

class itkRescaleIntensityImageFilterISS3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IUC3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS3IUC3_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS3IUC3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS3IUC3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_Superclass_swigregister(itkRescaleIntensityImageFilterISS3IUC3_Superclass)
itkRescaleIntensityImageFilterISS3IUC3_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_Superclass___New_orig__
itkRescaleIntensityImageFilterISS3IUC3_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_Superclass_cast


def itkRescaleIntensityImageFilterISS3IUS3_Superclass_New():
    return itkRescaleIntensityImageFilterISS3IUS3_Superclass.New()

class itkRescaleIntensityImageFilterISS3IUS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IUS3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS3IUS3_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS3IUS3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS3IUS3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_Superclass_swigregister(itkRescaleIntensityImageFilterISS3IUS3_Superclass)
itkRescaleIntensityImageFilterISS3IUS3_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_Superclass___New_orig__
itkRescaleIntensityImageFilterISS3IUS3_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_Superclass_cast


def itkRescaleIntensityImageFilterIUC2ID2_Superclass_New():
    return itkRescaleIntensityImageFilterIUC2ID2_Superclass.New()

class itkRescaleIntensityImageFilterIUC2ID2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC2ID2_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC2ID2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC2ID2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_Superclass_swigregister(itkRescaleIntensityImageFilterIUC2ID2_Superclass)
itkRescaleIntensityImageFilterIUC2ID2_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_Superclass___New_orig__
itkRescaleIntensityImageFilterIUC2ID2_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_Superclass_cast


def itkRescaleIntensityImageFilterIUC2IF2_Superclass_New():
    return itkRescaleIntensityImageFilterIUC2IF2_Superclass.New()

class itkRescaleIntensityImageFilterIUC2IF2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC2IF2_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC2IF2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC2IF2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_Superclass_swigregister(itkRescaleIntensityImageFilterIUC2IF2_Superclass)
itkRescaleIntensityImageFilterIUC2IF2_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_Superclass___New_orig__
itkRescaleIntensityImageFilterIUC2IF2_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_Superclass_cast


def itkRescaleIntensityImageFilterIUC2ISS2_Superclass_New():
    return itkRescaleIntensityImageFilterIUC2ISS2_Superclass.New()

class itkRescaleIntensityImageFilterIUC2ISS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ISS2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC2ISS2_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC2ISS2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC2ISS2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_Superclass_swigregister(itkRescaleIntensityImageFilterIUC2ISS2_Superclass)
itkRescaleIntensityImageFilterIUC2ISS2_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_Superclass___New_orig__
itkRescaleIntensityImageFilterIUC2ISS2_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_Superclass_cast


def itkRescaleIntensityImageFilterIUC2IUC2_Superclass_New():
    return itkRescaleIntensityImageFilterIUC2IUC2_Superclass.New()

class itkRescaleIntensityImageFilterIUC2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC2IUC2_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC2IUC2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_Superclass_swigregister(itkRescaleIntensityImageFilterIUC2IUC2_Superclass)
itkRescaleIntensityImageFilterIUC2IUC2_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_Superclass___New_orig__
itkRescaleIntensityImageFilterIUC2IUC2_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_Superclass_cast


def itkRescaleIntensityImageFilterIUC2IUS2_Superclass_New():
    return itkRescaleIntensityImageFilterIUC2IUS2_Superclass.New()

class itkRescaleIntensityImageFilterIUC2IUS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC2IUS2_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC2IUS2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC2IUS2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_Superclass_swigregister(itkRescaleIntensityImageFilterIUC2IUS2_Superclass)
itkRescaleIntensityImageFilterIUC2IUS2_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_Superclass___New_orig__
itkRescaleIntensityImageFilterIUC2IUS2_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_Superclass_cast


def itkRescaleIntensityImageFilterIUC3ID3_Superclass_New():
    return itkRescaleIntensityImageFilterIUC3ID3_Superclass.New()

class itkRescaleIntensityImageFilterIUC3ID3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC3ID3_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC3ID3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC3ID3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_Superclass_swigregister(itkRescaleIntensityImageFilterIUC3ID3_Superclass)
itkRescaleIntensityImageFilterIUC3ID3_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_Superclass___New_orig__
itkRescaleIntensityImageFilterIUC3ID3_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_Superclass_cast


def itkRescaleIntensityImageFilterIUC3IF3_Superclass_New():
    return itkRescaleIntensityImageFilterIUC3IF3_Superclass.New()

class itkRescaleIntensityImageFilterIUC3IF3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC3IF3_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC3IF3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC3IF3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_Superclass_swigregister(itkRescaleIntensityImageFilterIUC3IF3_Superclass)
itkRescaleIntensityImageFilterIUC3IF3_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_Superclass___New_orig__
itkRescaleIntensityImageFilterIUC3IF3_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_Superclass_cast


def itkRescaleIntensityImageFilterIUC3ISS3_Superclass_New():
    return itkRescaleIntensityImageFilterIUC3ISS3_Superclass.New()

class itkRescaleIntensityImageFilterIUC3ISS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ISS3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC3ISS3_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC3ISS3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC3ISS3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_Superclass_swigregister(itkRescaleIntensityImageFilterIUC3ISS3_Superclass)
itkRescaleIntensityImageFilterIUC3ISS3_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_Superclass___New_orig__
itkRescaleIntensityImageFilterIUC3ISS3_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_Superclass_cast


def itkRescaleIntensityImageFilterIUC3IUC3_Superclass_New():
    return itkRescaleIntensityImageFilterIUC3IUC3_Superclass.New()

class itkRescaleIntensityImageFilterIUC3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC3IUC3_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC3IUC3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_Superclass_swigregister(itkRescaleIntensityImageFilterIUC3IUC3_Superclass)
itkRescaleIntensityImageFilterIUC3IUC3_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_Superclass___New_orig__
itkRescaleIntensityImageFilterIUC3IUC3_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_Superclass_cast


def itkRescaleIntensityImageFilterIUC3IUS3_Superclass_New():
    return itkRescaleIntensityImageFilterIUC3IUS3_Superclass.New()

class itkRescaleIntensityImageFilterIUC3IUS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC3IUS3_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC3IUS3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC3IUS3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_Superclass_swigregister(itkRescaleIntensityImageFilterIUC3IUS3_Superclass)
itkRescaleIntensityImageFilterIUC3IUS3_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_Superclass___New_orig__
itkRescaleIntensityImageFilterIUC3IUS3_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_Superclass_cast


def itkRescaleIntensityImageFilterIUS2ID2_Superclass_New():
    return itkRescaleIntensityImageFilterIUS2ID2_Superclass.New()

class itkRescaleIntensityImageFilterIUS2ID2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS2ID2_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS2ID2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS2ID2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_Superclass_swigregister(itkRescaleIntensityImageFilterIUS2ID2_Superclass)
itkRescaleIntensityImageFilterIUS2ID2_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_Superclass___New_orig__
itkRescaleIntensityImageFilterIUS2ID2_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_Superclass_cast


def itkRescaleIntensityImageFilterIUS2IF2_Superclass_New():
    return itkRescaleIntensityImageFilterIUS2IF2_Superclass.New()

class itkRescaleIntensityImageFilterIUS2IF2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS2IF2_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS2IF2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS2IF2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_Superclass_swigregister(itkRescaleIntensityImageFilterIUS2IF2_Superclass)
itkRescaleIntensityImageFilterIUS2IF2_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_Superclass___New_orig__
itkRescaleIntensityImageFilterIUS2IF2_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_Superclass_cast


def itkRescaleIntensityImageFilterIUS2ISS2_Superclass_New():
    return itkRescaleIntensityImageFilterIUS2ISS2_Superclass.New()

class itkRescaleIntensityImageFilterIUS2ISS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ISS2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS2ISS2_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS2ISS2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS2ISS2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_Superclass_swigregister(itkRescaleIntensityImageFilterIUS2ISS2_Superclass)
itkRescaleIntensityImageFilterIUS2ISS2_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_Superclass___New_orig__
itkRescaleIntensityImageFilterIUS2ISS2_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_Superclass_cast


def itkRescaleIntensityImageFilterIUS2IUC2_Superclass_New():
    return itkRescaleIntensityImageFilterIUS2IUC2_Superclass.New()

class itkRescaleIntensityImageFilterIUS2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS2IUC2_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS2IUC2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS2IUC2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_Superclass_swigregister(itkRescaleIntensityImageFilterIUS2IUC2_Superclass)
itkRescaleIntensityImageFilterIUS2IUC2_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_Superclass___New_orig__
itkRescaleIntensityImageFilterIUS2IUC2_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_Superclass_cast


def itkRescaleIntensityImageFilterIUS2IUS2_Superclass_New():
    return itkRescaleIntensityImageFilterIUS2IUS2_Superclass.New()

class itkRescaleIntensityImageFilterIUS2IUS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS2IUS2_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS2IUS2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_Superclass_swigregister(itkRescaleIntensityImageFilterIUS2IUS2_Superclass)
itkRescaleIntensityImageFilterIUS2IUS2_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_Superclass___New_orig__
itkRescaleIntensityImageFilterIUS2IUS2_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_Superclass_cast


def itkRescaleIntensityImageFilterIUS3ID3_Superclass_New():
    return itkRescaleIntensityImageFilterIUS3ID3_Superclass.New()

class itkRescaleIntensityImageFilterIUS3ID3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS3ID3_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS3ID3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS3ID3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_Superclass_swigregister(itkRescaleIntensityImageFilterIUS3ID3_Superclass)
itkRescaleIntensityImageFilterIUS3ID3_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_Superclass___New_orig__
itkRescaleIntensityImageFilterIUS3ID3_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_Superclass_cast


def itkRescaleIntensityImageFilterIUS3IF3_Superclass_New():
    return itkRescaleIntensityImageFilterIUS3IF3_Superclass.New()

class itkRescaleIntensityImageFilterIUS3IF3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS3IF3_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS3IF3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS3IF3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_Superclass_swigregister(itkRescaleIntensityImageFilterIUS3IF3_Superclass)
itkRescaleIntensityImageFilterIUS3IF3_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_Superclass___New_orig__
itkRescaleIntensityImageFilterIUS3IF3_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_Superclass_cast


def itkRescaleIntensityImageFilterIUS3ISS3_Superclass_New():
    return itkRescaleIntensityImageFilterIUS3ISS3_Superclass.New()

class itkRescaleIntensityImageFilterIUS3ISS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ISS3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS3ISS3_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS3ISS3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS3ISS3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_Superclass_swigregister(itkRescaleIntensityImageFilterIUS3ISS3_Superclass)
itkRescaleIntensityImageFilterIUS3ISS3_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_Superclass___New_orig__
itkRescaleIntensityImageFilterIUS3ISS3_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_Superclass_cast


def itkRescaleIntensityImageFilterIUS3IUC3_Superclass_New():
    return itkRescaleIntensityImageFilterIUS3IUC3_Superclass.New()

class itkRescaleIntensityImageFilterIUS3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS3IUC3_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS3IUC3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS3IUC3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_Superclass_swigregister(itkRescaleIntensityImageFilterIUS3IUC3_Superclass)
itkRescaleIntensityImageFilterIUS3IUC3_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_Superclass___New_orig__
itkRescaleIntensityImageFilterIUS3IUC3_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_Superclass_cast


def itkRescaleIntensityImageFilterIUS3IUS3_Superclass_New():
    return itkRescaleIntensityImageFilterIUS3IUS3_Superclass.New()

class itkRescaleIntensityImageFilterIUS3IUS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_Superclass_SetFunctor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS3IUS3_Superclass
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS3IUS3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_Superclass_swigregister(itkRescaleIntensityImageFilterIUS3IUS3_Superclass)
itkRescaleIntensityImageFilterIUS3IUS3_Superclass___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_Superclass___New_orig__
itkRescaleIntensityImageFilterIUS3IUS3_Superclass_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_Superclass_cast


def itkRescaleIntensityImageFilterID2ID2_New():
    return itkRescaleIntensityImageFilterID2ID2.New()

class itkRescaleIntensityImageFilterID2ID2(itkRescaleIntensityImageFilterID2ID2_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID2ID2
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID2ID2

        Create a new object of the class itkRescaleIntensityImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID2ID2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_swigregister(itkRescaleIntensityImageFilterID2ID2)
itkRescaleIntensityImageFilterID2ID2___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2___New_orig__
itkRescaleIntensityImageFilterID2ID2_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_cast


def itkRescaleIntensityImageFilterID2IF2_New():
    return itkRescaleIntensityImageFilterID2IF2.New()

class itkRescaleIntensityImageFilterID2IF2(itkRescaleIntensityImageFilterID2IF2_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID2IF2
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID2IF2

        Create a new object of the class itkRescaleIntensityImageFilterID2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID2IF2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_swigregister(itkRescaleIntensityImageFilterID2IF2)
itkRescaleIntensityImageFilterID2IF2___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2___New_orig__
itkRescaleIntensityImageFilterID2IF2_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_cast


def itkRescaleIntensityImageFilterID2ISS2_New():
    return itkRescaleIntensityImageFilterID2ISS2.New()

class itkRescaleIntensityImageFilterID2ISS2(itkRescaleIntensityImageFilterID2ISS2_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID2ISS2
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID2ISS2

        Create a new object of the class itkRescaleIntensityImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID2ISS2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_swigregister(itkRescaleIntensityImageFilterID2ISS2)
itkRescaleIntensityImageFilterID2ISS2___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2___New_orig__
itkRescaleIntensityImageFilterID2ISS2_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_cast


def itkRescaleIntensityImageFilterID2IUC2_New():
    return itkRescaleIntensityImageFilterID2IUC2.New()

class itkRescaleIntensityImageFilterID2IUC2(itkRescaleIntensityImageFilterID2IUC2_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID2IUC2
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID2IUC2

        Create a new object of the class itkRescaleIntensityImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID2IUC2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_swigregister(itkRescaleIntensityImageFilterID2IUC2)
itkRescaleIntensityImageFilterID2IUC2___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2___New_orig__
itkRescaleIntensityImageFilterID2IUC2_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_cast


def itkRescaleIntensityImageFilterID2IUS2_New():
    return itkRescaleIntensityImageFilterID2IUS2.New()

class itkRescaleIntensityImageFilterID2IUS2(itkRescaleIntensityImageFilterID2IUS2_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID2IUS2
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID2IUS2

        Create a new object of the class itkRescaleIntensityImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID2IUS2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_swigregister(itkRescaleIntensityImageFilterID2IUS2)
itkRescaleIntensityImageFilterID2IUS2___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2___New_orig__
itkRescaleIntensityImageFilterID2IUS2_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_cast


def itkRescaleIntensityImageFilterID3ID3_New():
    return itkRescaleIntensityImageFilterID3ID3.New()

class itkRescaleIntensityImageFilterID3ID3(itkRescaleIntensityImageFilterID3ID3_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID3ID3
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID3ID3

        Create a new object of the class itkRescaleIntensityImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID3ID3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_swigregister(itkRescaleIntensityImageFilterID3ID3)
itkRescaleIntensityImageFilterID3ID3___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3___New_orig__
itkRescaleIntensityImageFilterID3ID3_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_cast


def itkRescaleIntensityImageFilterID3IF3_New():
    return itkRescaleIntensityImageFilterID3IF3.New()

class itkRescaleIntensityImageFilterID3IF3(itkRescaleIntensityImageFilterID3IF3_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID3IF3
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID3IF3

        Create a new object of the class itkRescaleIntensityImageFilterID3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID3IF3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_swigregister(itkRescaleIntensityImageFilterID3IF3)
itkRescaleIntensityImageFilterID3IF3___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3___New_orig__
itkRescaleIntensityImageFilterID3IF3_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_cast


def itkRescaleIntensityImageFilterID3ISS3_New():
    return itkRescaleIntensityImageFilterID3ISS3.New()

class itkRescaleIntensityImageFilterID3ISS3(itkRescaleIntensityImageFilterID3ISS3_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID3ISS3
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID3ISS3

        Create a new object of the class itkRescaleIntensityImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID3ISS3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_swigregister(itkRescaleIntensityImageFilterID3ISS3)
itkRescaleIntensityImageFilterID3ISS3___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3___New_orig__
itkRescaleIntensityImageFilterID3ISS3_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_cast


def itkRescaleIntensityImageFilterID3IUC3_New():
    return itkRescaleIntensityImageFilterID3IUC3.New()

class itkRescaleIntensityImageFilterID3IUC3(itkRescaleIntensityImageFilterID3IUC3_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID3IUC3
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID3IUC3

        Create a new object of the class itkRescaleIntensityImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID3IUC3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_swigregister(itkRescaleIntensityImageFilterID3IUC3)
itkRescaleIntensityImageFilterID3IUC3___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3___New_orig__
itkRescaleIntensityImageFilterID3IUC3_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_cast


def itkRescaleIntensityImageFilterID3IUS3_New():
    return itkRescaleIntensityImageFilterID3IUS3.New()

class itkRescaleIntensityImageFilterID3IUS3(itkRescaleIntensityImageFilterID3IUS3_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID3IUS3
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID3IUS3

        Create a new object of the class itkRescaleIntensityImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID3IUS3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_swigregister(itkRescaleIntensityImageFilterID3IUS3)
itkRescaleIntensityImageFilterID3IUS3___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3___New_orig__
itkRescaleIntensityImageFilterID3IUS3_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_cast


def itkRescaleIntensityImageFilterIF2ID2_New():
    return itkRescaleIntensityImageFilterIF2ID2.New()

class itkRescaleIntensityImageFilterIF2ID2(itkRescaleIntensityImageFilterIF2ID2_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF2ID2
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF2ID2

        Create a new object of the class itkRescaleIntensityImageFilterIF2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF2ID2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_swigregister(itkRescaleIntensityImageFilterIF2ID2)
itkRescaleIntensityImageFilterIF2ID2___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2___New_orig__
itkRescaleIntensityImageFilterIF2ID2_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_cast


def itkRescaleIntensityImageFilterIF2IF2_New():
    return itkRescaleIntensityImageFilterIF2IF2.New()

class itkRescaleIntensityImageFilterIF2IF2(itkRescaleIntensityImageFilterIF2IF2_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF2IF2
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF2IF2

        Create a new object of the class itkRescaleIntensityImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF2IF2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_swigregister(itkRescaleIntensityImageFilterIF2IF2)
itkRescaleIntensityImageFilterIF2IF2___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2___New_orig__
itkRescaleIntensityImageFilterIF2IF2_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_cast


def itkRescaleIntensityImageFilterIF2ISS2_New():
    return itkRescaleIntensityImageFilterIF2ISS2.New()

class itkRescaleIntensityImageFilterIF2ISS2(itkRescaleIntensityImageFilterIF2ISS2_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF2ISS2
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF2ISS2

        Create a new object of the class itkRescaleIntensityImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF2ISS2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_swigregister(itkRescaleIntensityImageFilterIF2ISS2)
itkRescaleIntensityImageFilterIF2ISS2___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2___New_orig__
itkRescaleIntensityImageFilterIF2ISS2_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_cast


def itkRescaleIntensityImageFilterIF2IUC2_New():
    return itkRescaleIntensityImageFilterIF2IUC2.New()

class itkRescaleIntensityImageFilterIF2IUC2(itkRescaleIntensityImageFilterIF2IUC2_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF2IUC2
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF2IUC2

        Create a new object of the class itkRescaleIntensityImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF2IUC2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_swigregister(itkRescaleIntensityImageFilterIF2IUC2)
itkRescaleIntensityImageFilterIF2IUC2___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2___New_orig__
itkRescaleIntensityImageFilterIF2IUC2_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_cast


def itkRescaleIntensityImageFilterIF2IUS2_New():
    return itkRescaleIntensityImageFilterIF2IUS2.New()

class itkRescaleIntensityImageFilterIF2IUS2(itkRescaleIntensityImageFilterIF2IUS2_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF2IUS2
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF2IUS2

        Create a new object of the class itkRescaleIntensityImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF2IUS2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_swigregister(itkRescaleIntensityImageFilterIF2IUS2)
itkRescaleIntensityImageFilterIF2IUS2___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2___New_orig__
itkRescaleIntensityImageFilterIF2IUS2_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_cast


def itkRescaleIntensityImageFilterIF3ID3_New():
    return itkRescaleIntensityImageFilterIF3ID3.New()

class itkRescaleIntensityImageFilterIF3ID3(itkRescaleIntensityImageFilterIF3ID3_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF3ID3
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF3ID3

        Create a new object of the class itkRescaleIntensityImageFilterIF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF3ID3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_swigregister(itkRescaleIntensityImageFilterIF3ID3)
itkRescaleIntensityImageFilterIF3ID3___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3___New_orig__
itkRescaleIntensityImageFilterIF3ID3_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_cast


def itkRescaleIntensityImageFilterIF3IF3_New():
    return itkRescaleIntensityImageFilterIF3IF3.New()

class itkRescaleIntensityImageFilterIF3IF3(itkRescaleIntensityImageFilterIF3IF3_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF3IF3
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF3IF3

        Create a new object of the class itkRescaleIntensityImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF3IF3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_swigregister(itkRescaleIntensityImageFilterIF3IF3)
itkRescaleIntensityImageFilterIF3IF3___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3___New_orig__
itkRescaleIntensityImageFilterIF3IF3_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_cast


def itkRescaleIntensityImageFilterIF3ISS3_New():
    return itkRescaleIntensityImageFilterIF3ISS3.New()

class itkRescaleIntensityImageFilterIF3ISS3(itkRescaleIntensityImageFilterIF3ISS3_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF3ISS3
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF3ISS3

        Create a new object of the class itkRescaleIntensityImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF3ISS3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_swigregister(itkRescaleIntensityImageFilterIF3ISS3)
itkRescaleIntensityImageFilterIF3ISS3___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3___New_orig__
itkRescaleIntensityImageFilterIF3ISS3_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_cast


def itkRescaleIntensityImageFilterIF3IUC3_New():
    return itkRescaleIntensityImageFilterIF3IUC3.New()

class itkRescaleIntensityImageFilterIF3IUC3(itkRescaleIntensityImageFilterIF3IUC3_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF3IUC3
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF3IUC3

        Create a new object of the class itkRescaleIntensityImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF3IUC3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_swigregister(itkRescaleIntensityImageFilterIF3IUC3)
itkRescaleIntensityImageFilterIF3IUC3___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3___New_orig__
itkRescaleIntensityImageFilterIF3IUC3_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_cast


def itkRescaleIntensityImageFilterIF3IUS3_New():
    return itkRescaleIntensityImageFilterIF3IUS3.New()

class itkRescaleIntensityImageFilterIF3IUS3(itkRescaleIntensityImageFilterIF3IUS3_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF3IUS3
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF3IUS3

        Create a new object of the class itkRescaleIntensityImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF3IUS3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_swigregister(itkRescaleIntensityImageFilterIF3IUS3)
itkRescaleIntensityImageFilterIF3IUS3___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3___New_orig__
itkRescaleIntensityImageFilterIF3IUS3_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_cast


def itkRescaleIntensityImageFilterISS2ID2_New():
    return itkRescaleIntensityImageFilterISS2ID2.New()

class itkRescaleIntensityImageFilterISS2ID2(itkRescaleIntensityImageFilterISS2ID2_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS2ID2
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS2ID2

        Create a new object of the class itkRescaleIntensityImageFilterISS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS2ID2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_swigregister(itkRescaleIntensityImageFilterISS2ID2)
itkRescaleIntensityImageFilterISS2ID2___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2___New_orig__
itkRescaleIntensityImageFilterISS2ID2_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_cast


def itkRescaleIntensityImageFilterISS2IF2_New():
    return itkRescaleIntensityImageFilterISS2IF2.New()

class itkRescaleIntensityImageFilterISS2IF2(itkRescaleIntensityImageFilterISS2IF2_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS2IF2
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS2IF2

        Create a new object of the class itkRescaleIntensityImageFilterISS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS2IF2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_swigregister(itkRescaleIntensityImageFilterISS2IF2)
itkRescaleIntensityImageFilterISS2IF2___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2___New_orig__
itkRescaleIntensityImageFilterISS2IF2_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_cast


def itkRescaleIntensityImageFilterISS2ISS2_New():
    return itkRescaleIntensityImageFilterISS2ISS2.New()

class itkRescaleIntensityImageFilterISS2ISS2(itkRescaleIntensityImageFilterISS2ISS2_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS2ISS2

        Create a new object of the class itkRescaleIntensityImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS2ISS2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_swigregister(itkRescaleIntensityImageFilterISS2ISS2)
itkRescaleIntensityImageFilterISS2ISS2___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2___New_orig__
itkRescaleIntensityImageFilterISS2ISS2_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_cast


def itkRescaleIntensityImageFilterISS2IUC2_New():
    return itkRescaleIntensityImageFilterISS2IUC2.New()

class itkRescaleIntensityImageFilterISS2IUC2(itkRescaleIntensityImageFilterISS2IUC2_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS2IUC2
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS2IUC2

        Create a new object of the class itkRescaleIntensityImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS2IUC2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_swigregister(itkRescaleIntensityImageFilterISS2IUC2)
itkRescaleIntensityImageFilterISS2IUC2___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2___New_orig__
itkRescaleIntensityImageFilterISS2IUC2_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_cast


def itkRescaleIntensityImageFilterISS2IUS2_New():
    return itkRescaleIntensityImageFilterISS2IUS2.New()

class itkRescaleIntensityImageFilterISS2IUS2(itkRescaleIntensityImageFilterISS2IUS2_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS2IUS2
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS2IUS2

        Create a new object of the class itkRescaleIntensityImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS2IUS2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_swigregister(itkRescaleIntensityImageFilterISS2IUS2)
itkRescaleIntensityImageFilterISS2IUS2___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2___New_orig__
itkRescaleIntensityImageFilterISS2IUS2_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_cast


def itkRescaleIntensityImageFilterISS3ID3_New():
    return itkRescaleIntensityImageFilterISS3ID3.New()

class itkRescaleIntensityImageFilterISS3ID3(itkRescaleIntensityImageFilterISS3ID3_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS3ID3
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS3ID3

        Create a new object of the class itkRescaleIntensityImageFilterISS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS3ID3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_swigregister(itkRescaleIntensityImageFilterISS3ID3)
itkRescaleIntensityImageFilterISS3ID3___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3___New_orig__
itkRescaleIntensityImageFilterISS3ID3_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_cast


def itkRescaleIntensityImageFilterISS3IF3_New():
    return itkRescaleIntensityImageFilterISS3IF3.New()

class itkRescaleIntensityImageFilterISS3IF3(itkRescaleIntensityImageFilterISS3IF3_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS3IF3
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS3IF3

        Create a new object of the class itkRescaleIntensityImageFilterISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS3IF3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_swigregister(itkRescaleIntensityImageFilterISS3IF3)
itkRescaleIntensityImageFilterISS3IF3___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3___New_orig__
itkRescaleIntensityImageFilterISS3IF3_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_cast


def itkRescaleIntensityImageFilterISS3ISS3_New():
    return itkRescaleIntensityImageFilterISS3ISS3.New()

class itkRescaleIntensityImageFilterISS3ISS3(itkRescaleIntensityImageFilterISS3ISS3_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS3ISS3

        Create a new object of the class itkRescaleIntensityImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS3ISS3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_swigregister(itkRescaleIntensityImageFilterISS3ISS3)
itkRescaleIntensityImageFilterISS3ISS3___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3___New_orig__
itkRescaleIntensityImageFilterISS3ISS3_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_cast


def itkRescaleIntensityImageFilterISS3IUC3_New():
    return itkRescaleIntensityImageFilterISS3IUC3.New()

class itkRescaleIntensityImageFilterISS3IUC3(itkRescaleIntensityImageFilterISS3IUC3_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS3IUC3
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS3IUC3

        Create a new object of the class itkRescaleIntensityImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS3IUC3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_swigregister(itkRescaleIntensityImageFilterISS3IUC3)
itkRescaleIntensityImageFilterISS3IUC3___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3___New_orig__
itkRescaleIntensityImageFilterISS3IUC3_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_cast


def itkRescaleIntensityImageFilterISS3IUS3_New():
    return itkRescaleIntensityImageFilterISS3IUS3.New()

class itkRescaleIntensityImageFilterISS3IUS3(itkRescaleIntensityImageFilterISS3IUS3_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS3IUS3
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS3IUS3

        Create a new object of the class itkRescaleIntensityImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS3IUS3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_swigregister(itkRescaleIntensityImageFilterISS3IUS3)
itkRescaleIntensityImageFilterISS3IUS3___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3___New_orig__
itkRescaleIntensityImageFilterISS3IUS3_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_cast


def itkRescaleIntensityImageFilterIUC2ID2_New():
    return itkRescaleIntensityImageFilterIUC2ID2.New()

class itkRescaleIntensityImageFilterIUC2ID2(itkRescaleIntensityImageFilterIUC2ID2_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC2ID2
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC2ID2

        Create a new object of the class itkRescaleIntensityImageFilterIUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC2ID2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_swigregister(itkRescaleIntensityImageFilterIUC2ID2)
itkRescaleIntensityImageFilterIUC2ID2___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2___New_orig__
itkRescaleIntensityImageFilterIUC2ID2_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_cast


def itkRescaleIntensityImageFilterIUC2IF2_New():
    return itkRescaleIntensityImageFilterIUC2IF2.New()

class itkRescaleIntensityImageFilterIUC2IF2(itkRescaleIntensityImageFilterIUC2IF2_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC2IF2
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC2IF2

        Create a new object of the class itkRescaleIntensityImageFilterIUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC2IF2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_swigregister(itkRescaleIntensityImageFilterIUC2IF2)
itkRescaleIntensityImageFilterIUC2IF2___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2___New_orig__
itkRescaleIntensityImageFilterIUC2IF2_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_cast


def itkRescaleIntensityImageFilterIUC2ISS2_New():
    return itkRescaleIntensityImageFilterIUC2ISS2.New()

class itkRescaleIntensityImageFilterIUC2ISS2(itkRescaleIntensityImageFilterIUC2ISS2_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC2ISS2
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC2ISS2

        Create a new object of the class itkRescaleIntensityImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC2ISS2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_swigregister(itkRescaleIntensityImageFilterIUC2ISS2)
itkRescaleIntensityImageFilterIUC2ISS2___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2___New_orig__
itkRescaleIntensityImageFilterIUC2ISS2_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_cast


def itkRescaleIntensityImageFilterIUC2IUC2_New():
    return itkRescaleIntensityImageFilterIUC2IUC2.New()

class itkRescaleIntensityImageFilterIUC2IUC2(itkRescaleIntensityImageFilterIUC2IUC2_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC2IUC2

        Create a new object of the class itkRescaleIntensityImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC2IUC2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_swigregister(itkRescaleIntensityImageFilterIUC2IUC2)
itkRescaleIntensityImageFilterIUC2IUC2___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2___New_orig__
itkRescaleIntensityImageFilterIUC2IUC2_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_cast


def itkRescaleIntensityImageFilterIUC2IUS2_New():
    return itkRescaleIntensityImageFilterIUC2IUS2.New()

class itkRescaleIntensityImageFilterIUC2IUS2(itkRescaleIntensityImageFilterIUC2IUS2_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC2IUS2
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC2IUS2

        Create a new object of the class itkRescaleIntensityImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC2IUS2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_swigregister(itkRescaleIntensityImageFilterIUC2IUS2)
itkRescaleIntensityImageFilterIUC2IUS2___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2___New_orig__
itkRescaleIntensityImageFilterIUC2IUS2_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_cast


def itkRescaleIntensityImageFilterIUC3ID3_New():
    return itkRescaleIntensityImageFilterIUC3ID3.New()

class itkRescaleIntensityImageFilterIUC3ID3(itkRescaleIntensityImageFilterIUC3ID3_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC3ID3
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC3ID3

        Create a new object of the class itkRescaleIntensityImageFilterIUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC3ID3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_swigregister(itkRescaleIntensityImageFilterIUC3ID3)
itkRescaleIntensityImageFilterIUC3ID3___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3___New_orig__
itkRescaleIntensityImageFilterIUC3ID3_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_cast


def itkRescaleIntensityImageFilterIUC3IF3_New():
    return itkRescaleIntensityImageFilterIUC3IF3.New()

class itkRescaleIntensityImageFilterIUC3IF3(itkRescaleIntensityImageFilterIUC3IF3_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC3IF3
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC3IF3

        Create a new object of the class itkRescaleIntensityImageFilterIUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC3IF3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_swigregister(itkRescaleIntensityImageFilterIUC3IF3)
itkRescaleIntensityImageFilterIUC3IF3___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3___New_orig__
itkRescaleIntensityImageFilterIUC3IF3_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_cast


def itkRescaleIntensityImageFilterIUC3ISS3_New():
    return itkRescaleIntensityImageFilterIUC3ISS3.New()

class itkRescaleIntensityImageFilterIUC3ISS3(itkRescaleIntensityImageFilterIUC3ISS3_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC3ISS3
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC3ISS3

        Create a new object of the class itkRescaleIntensityImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC3ISS3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_swigregister(itkRescaleIntensityImageFilterIUC3ISS3)
itkRescaleIntensityImageFilterIUC3ISS3___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3___New_orig__
itkRescaleIntensityImageFilterIUC3ISS3_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_cast


def itkRescaleIntensityImageFilterIUC3IUC3_New():
    return itkRescaleIntensityImageFilterIUC3IUC3.New()

class itkRescaleIntensityImageFilterIUC3IUC3(itkRescaleIntensityImageFilterIUC3IUC3_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC3IUC3

        Create a new object of the class itkRescaleIntensityImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC3IUC3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_swigregister(itkRescaleIntensityImageFilterIUC3IUC3)
itkRescaleIntensityImageFilterIUC3IUC3___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3___New_orig__
itkRescaleIntensityImageFilterIUC3IUC3_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_cast


def itkRescaleIntensityImageFilterIUC3IUS3_New():
    return itkRescaleIntensityImageFilterIUC3IUS3.New()

class itkRescaleIntensityImageFilterIUC3IUS3(itkRescaleIntensityImageFilterIUC3IUS3_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC3IUS3
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC3IUS3

        Create a new object of the class itkRescaleIntensityImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC3IUS3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_swigregister(itkRescaleIntensityImageFilterIUC3IUS3)
itkRescaleIntensityImageFilterIUC3IUS3___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3___New_orig__
itkRescaleIntensityImageFilterIUC3IUS3_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_cast


def itkRescaleIntensityImageFilterIUS2ID2_New():
    return itkRescaleIntensityImageFilterIUS2ID2.New()

class itkRescaleIntensityImageFilterIUS2ID2(itkRescaleIntensityImageFilterIUS2ID2_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS2ID2
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS2ID2

        Create a new object of the class itkRescaleIntensityImageFilterIUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS2ID2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_swigregister(itkRescaleIntensityImageFilterIUS2ID2)
itkRescaleIntensityImageFilterIUS2ID2___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2___New_orig__
itkRescaleIntensityImageFilterIUS2ID2_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_cast


def itkRescaleIntensityImageFilterIUS2IF2_New():
    return itkRescaleIntensityImageFilterIUS2IF2.New()

class itkRescaleIntensityImageFilterIUS2IF2(itkRescaleIntensityImageFilterIUS2IF2_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS2IF2
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS2IF2

        Create a new object of the class itkRescaleIntensityImageFilterIUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS2IF2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_swigregister(itkRescaleIntensityImageFilterIUS2IF2)
itkRescaleIntensityImageFilterIUS2IF2___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2___New_orig__
itkRescaleIntensityImageFilterIUS2IF2_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_cast


def itkRescaleIntensityImageFilterIUS2ISS2_New():
    return itkRescaleIntensityImageFilterIUS2ISS2.New()

class itkRescaleIntensityImageFilterIUS2ISS2(itkRescaleIntensityImageFilterIUS2ISS2_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS2ISS2
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS2ISS2

        Create a new object of the class itkRescaleIntensityImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS2ISS2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_swigregister(itkRescaleIntensityImageFilterIUS2ISS2)
itkRescaleIntensityImageFilterIUS2ISS2___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2___New_orig__
itkRescaleIntensityImageFilterIUS2ISS2_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_cast


def itkRescaleIntensityImageFilterIUS2IUC2_New():
    return itkRescaleIntensityImageFilterIUS2IUC2.New()

class itkRescaleIntensityImageFilterIUS2IUC2(itkRescaleIntensityImageFilterIUS2IUC2_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS2IUC2
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS2IUC2

        Create a new object of the class itkRescaleIntensityImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS2IUC2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_swigregister(itkRescaleIntensityImageFilterIUS2IUC2)
itkRescaleIntensityImageFilterIUS2IUC2___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2___New_orig__
itkRescaleIntensityImageFilterIUS2IUC2_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_cast


def itkRescaleIntensityImageFilterIUS2IUS2_New():
    return itkRescaleIntensityImageFilterIUS2IUS2.New()

class itkRescaleIntensityImageFilterIUS2IUS2(itkRescaleIntensityImageFilterIUS2IUS2_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS2IUS2

        Create a new object of the class itkRescaleIntensityImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS2IUS2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_swigregister(itkRescaleIntensityImageFilterIUS2IUS2)
itkRescaleIntensityImageFilterIUS2IUS2___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2___New_orig__
itkRescaleIntensityImageFilterIUS2IUS2_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_cast


def itkRescaleIntensityImageFilterIUS3ID3_New():
    return itkRescaleIntensityImageFilterIUS3ID3.New()

class itkRescaleIntensityImageFilterIUS3ID3(itkRescaleIntensityImageFilterIUS3ID3_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS3ID3
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS3ID3

        Create a new object of the class itkRescaleIntensityImageFilterIUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS3ID3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_swigregister(itkRescaleIntensityImageFilterIUS3ID3)
itkRescaleIntensityImageFilterIUS3ID3___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3___New_orig__
itkRescaleIntensityImageFilterIUS3ID3_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_cast


def itkRescaleIntensityImageFilterIUS3IF3_New():
    return itkRescaleIntensityImageFilterIUS3IF3.New()

class itkRescaleIntensityImageFilterIUS3IF3(itkRescaleIntensityImageFilterIUS3IF3_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS3IF3
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS3IF3

        Create a new object of the class itkRescaleIntensityImageFilterIUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS3IF3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_swigregister(itkRescaleIntensityImageFilterIUS3IF3)
itkRescaleIntensityImageFilterIUS3IF3___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3___New_orig__
itkRescaleIntensityImageFilterIUS3IF3_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_cast


def itkRescaleIntensityImageFilterIUS3ISS3_New():
    return itkRescaleIntensityImageFilterIUS3ISS3.New()

class itkRescaleIntensityImageFilterIUS3ISS3(itkRescaleIntensityImageFilterIUS3ISS3_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS3ISS3
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS3ISS3

        Create a new object of the class itkRescaleIntensityImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS3ISS3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_swigregister(itkRescaleIntensityImageFilterIUS3ISS3)
itkRescaleIntensityImageFilterIUS3ISS3___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3___New_orig__
itkRescaleIntensityImageFilterIUS3ISS3_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_cast


def itkRescaleIntensityImageFilterIUS3IUC3_New():
    return itkRescaleIntensityImageFilterIUS3IUC3.New()

class itkRescaleIntensityImageFilterIUS3IUC3(itkRescaleIntensityImageFilterIUS3IUC3_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS3IUC3
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS3IUC3

        Create a new object of the class itkRescaleIntensityImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS3IUC3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_swigregister(itkRescaleIntensityImageFilterIUS3IUC3)
itkRescaleIntensityImageFilterIUS3IUC3___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3___New_orig__
itkRescaleIntensityImageFilterIUS3IUC3_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_cast


def itkRescaleIntensityImageFilterIUS3IUS3_New():
    return itkRescaleIntensityImageFilterIUS3IUS3.New()

class itkRescaleIntensityImageFilterIUS3IUS3(itkRescaleIntensityImageFilterIUS3IUS3_Superclass):
    r"""


    Applies a linear transformation to the intensity levels of the input
    Image.

    RescaleIntensityImageFilter applies pixel-wise a linear transformation
    to the intensity values of input image pixels. The linear
    transformation is defined by the user in terms of the minimum and
    maximum values that the output image should have.

    The following equation gives the mapping of the intensity values

    \\[ outputPixel = ( inputPixel - inputMin) \\cdot
    \\frac{(outputMax - outputMin )}{(inputMax - inputMin)} + outputMin
    \\]  All computations are performed in the precision of the input
    pixel's RealType. Before assigning the computed value to the output
    pixel.

    NOTE: In this filter the minimum and maximum values of the input image
    are computed internally using the MinimumMaximumImageCalculator. Users
    are not supposed to set those values in this filter. If you need a
    filter where you can set the minimum and maximum values of the input,
    please use the IntensityWindowingImageFilter. If you want a filter
    that can use a user-defined linear transformation for the intensity,
    then please use the ShiftScaleImageFilter.

    See:   IntensityWindowingImageFilter
    example{Filtering/ImageIntensity/RescaleAnImage,Rescale An Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_Clone)
    SetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_SetOutputMinimum)
    SetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_SetOutputMaximum)
    GetOutputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_GetOutputMinimum)
    GetOutputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_GetOutputMaximum)
    GetScale = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_GetScale)
    GetShift = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_GetShift)
    GetInputMinimum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_GetInputMinimum)
    GetInputMaximum = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_GetInputMaximum)
    BeforeThreadedGenerateData = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_BeforeThreadedGenerateData)
    PrintSelf = _swig_new_instance_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_PrintSelf)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS3IUS3

        Create a new object of the class itkRescaleIntensityImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS3IUS3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_swigregister(itkRescaleIntensityImageFilterIUS3IUS3)
itkRescaleIntensityImageFilterIUS3IUS3___New_orig__ = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3___New_orig__
itkRescaleIntensityImageFilterIUS3IUS3_cast = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def rescale_intensity_image_filter(*args, **kwargs):
    """Procedural interface for RescaleIntensityImageFilter"""
    import itk
    instance = itk.RescaleIntensityImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def rescale_intensity_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.RescaleIntensityImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.RescaleIntensityImageFilter.values()[0]
    else:
        filter_object = itk.RescaleIntensityImageFilter

    rescale_intensity_image_filter.__doc__ = filter_object.__doc__
    rescale_intensity_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    rescale_intensity_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.RescaleIntensityImageFilter, itkTemplate.itkTemplate):
        rescale_intensity_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        rescale_intensity_image_filter.__doc__ += "\n"
        rescale_intensity_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        rescale_intensity_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def unary_functor_image_filter(*args, **kwargs):
    """Procedural interface for UnaryFunctorImageFilter"""
    import itk
    instance = itk.UnaryFunctorImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def unary_functor_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.UnaryFunctorImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.UnaryFunctorImageFilter.values()[0]
    else:
        filter_object = itk.UnaryFunctorImageFilter

    unary_functor_image_filter.__doc__ = filter_object.__doc__
    unary_functor_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    unary_functor_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.UnaryFunctorImageFilter, itkTemplate.itkTemplate):
        unary_functor_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        unary_functor_image_filter.__doc__ += "\n"
        unary_functor_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        unary_functor_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



