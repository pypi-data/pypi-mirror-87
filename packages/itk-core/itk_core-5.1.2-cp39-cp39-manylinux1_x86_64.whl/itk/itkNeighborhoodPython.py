# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKCommonPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkNeighborhoodPython
else:
    import _itkNeighborhoodPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkNeighborhoodPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkNeighborhoodPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkSizePython
import itk.pyBasePython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkRGBPixelPython
import itk.ITKCommonBasePython
import itk.itkOffsetPython
class itkNeighborhoodB2(object):
    r"""


    A light-weight container object for storing an N-dimensional
    neighborhood of values.

    This class serves as the base class for several other Itk objects such
    as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
    purpose is to store values and their relative spatial locations.

    A Neighborhood has an N-dimensional radius. The radius is defined
    separately for each dimension as the number of pixels that the
    neighborhood object with a radius of 2x3 has sides of length 5x7.
    Neighborhood objects always have an unambiguous center because their
    side lengths are always odd.

    See:   Neighborhood

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB2_GetNameOfClass)
    __swig_destroy__ = _itkNeighborhoodPython.delete_itkNeighborhoodB2

    def __init__(self, *args):
        r"""
        __init__(itkNeighborhoodB2 self) -> itkNeighborhoodB2
        __init__(itkNeighborhoodB2 self, itkNeighborhoodB2 other) -> itkNeighborhoodB2


        A light-weight container object for storing an N-dimensional
        neighborhood of values.

        This class serves as the base class for several other Itk objects such
        as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
        purpose is to store values and their relative spatial locations.

        A Neighborhood has an N-dimensional radius. The radius is defined
        separately for each dimension as the number of pixels that the
        neighborhood object with a radius of 2x3 has sides of length 5x7.
        Neighborhood objects always have an unambiguous center because their
        side lengths are always odd.

        See:   Neighborhood

        See:  NeighborhoodIterator 
        """
        _itkNeighborhoodPython.itkNeighborhoodB2_swiginit(self, _itkNeighborhoodPython.new_itkNeighborhoodB2(*args))
    __eq__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB2___eq__)
    __ne__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB2___ne__)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB2_GetRadius)
    GetSize = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB2_GetSize)
    GetStride = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB2_GetStride)
    Size = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB2_Size)
    GetElement = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB2_GetElement)
    GetCenterValue = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB2_GetCenterValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB2_SetRadius)
    Print = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB2_Print)
    GetBufferReference = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB2_GetBufferReference)
    GetOffset = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB2_GetOffset)
    GetNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB2_GetNeighborhoodIndex)
    GetCenterNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB2_GetCenterNeighborhoodIndex)
    GetSlice = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB2_GetSlice)

# Register itkNeighborhoodB2 in _itkNeighborhoodPython:
_itkNeighborhoodPython.itkNeighborhoodB2_swigregister(itkNeighborhoodB2)

class itkNeighborhoodB3(object):
    r"""


    A light-weight container object for storing an N-dimensional
    neighborhood of values.

    This class serves as the base class for several other Itk objects such
    as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
    purpose is to store values and their relative spatial locations.

    A Neighborhood has an N-dimensional radius. The radius is defined
    separately for each dimension as the number of pixels that the
    neighborhood object with a radius of 2x3 has sides of length 5x7.
    Neighborhood objects always have an unambiguous center because their
    side lengths are always odd.

    See:   Neighborhood

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB3_GetNameOfClass)
    __swig_destroy__ = _itkNeighborhoodPython.delete_itkNeighborhoodB3

    def __init__(self, *args):
        r"""
        __init__(itkNeighborhoodB3 self) -> itkNeighborhoodB3
        __init__(itkNeighborhoodB3 self, itkNeighborhoodB3 other) -> itkNeighborhoodB3


        A light-weight container object for storing an N-dimensional
        neighborhood of values.

        This class serves as the base class for several other Itk objects such
        as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
        purpose is to store values and their relative spatial locations.

        A Neighborhood has an N-dimensional radius. The radius is defined
        separately for each dimension as the number of pixels that the
        neighborhood object with a radius of 2x3 has sides of length 5x7.
        Neighborhood objects always have an unambiguous center because their
        side lengths are always odd.

        See:   Neighborhood

        See:  NeighborhoodIterator 
        """
        _itkNeighborhoodPython.itkNeighborhoodB3_swiginit(self, _itkNeighborhoodPython.new_itkNeighborhoodB3(*args))
    __eq__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB3___eq__)
    __ne__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB3___ne__)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB3_GetRadius)
    GetSize = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB3_GetSize)
    GetStride = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB3_GetStride)
    Size = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB3_Size)
    GetElement = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB3_GetElement)
    GetCenterValue = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB3_GetCenterValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB3_SetRadius)
    Print = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB3_Print)
    GetBufferReference = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB3_GetBufferReference)
    GetOffset = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB3_GetOffset)
    GetNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB3_GetNeighborhoodIndex)
    GetCenterNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB3_GetCenterNeighborhoodIndex)
    GetSlice = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodB3_GetSlice)

# Register itkNeighborhoodB3 in _itkNeighborhoodPython:
_itkNeighborhoodPython.itkNeighborhoodB3_swigregister(itkNeighborhoodB3)

class itkNeighborhoodCVF22(object):
    r"""


    A light-weight container object for storing an N-dimensional
    neighborhood of values.

    This class serves as the base class for several other Itk objects such
    as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
    purpose is to store values and their relative spatial locations.

    A Neighborhood has an N-dimensional radius. The radius is defined
    separately for each dimension as the number of pixels that the
    neighborhood object with a radius of 2x3 has sides of length 5x7.
    Neighborhood objects always have an unambiguous center because their
    side lengths are always odd.

    See:   Neighborhood

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF22_GetNameOfClass)
    __swig_destroy__ = _itkNeighborhoodPython.delete_itkNeighborhoodCVF22

    def __init__(self, *args):
        r"""
        __init__(itkNeighborhoodCVF22 self) -> itkNeighborhoodCVF22
        __init__(itkNeighborhoodCVF22 self, itkNeighborhoodCVF22 other) -> itkNeighborhoodCVF22


        A light-weight container object for storing an N-dimensional
        neighborhood of values.

        This class serves as the base class for several other Itk objects such
        as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
        purpose is to store values and their relative spatial locations.

        A Neighborhood has an N-dimensional radius. The radius is defined
        separately for each dimension as the number of pixels that the
        neighborhood object with a radius of 2x3 has sides of length 5x7.
        Neighborhood objects always have an unambiguous center because their
        side lengths are always odd.

        See:   Neighborhood

        See:  NeighborhoodIterator 
        """
        _itkNeighborhoodPython.itkNeighborhoodCVF22_swiginit(self, _itkNeighborhoodPython.new_itkNeighborhoodCVF22(*args))
    __eq__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF22___eq__)
    __ne__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF22___ne__)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF22_GetRadius)
    GetSize = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF22_GetSize)
    GetStride = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF22_GetStride)
    Size = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF22_Size)
    GetElement = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF22_GetElement)
    GetCenterValue = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF22_GetCenterValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF22_SetRadius)
    Print = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF22_Print)
    GetBufferReference = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF22_GetBufferReference)
    GetOffset = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF22_GetOffset)
    GetNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF22_GetNeighborhoodIndex)
    GetCenterNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF22_GetCenterNeighborhoodIndex)
    GetSlice = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF22_GetSlice)

# Register itkNeighborhoodCVF22 in _itkNeighborhoodPython:
_itkNeighborhoodPython.itkNeighborhoodCVF22_swigregister(itkNeighborhoodCVF22)

class itkNeighborhoodCVF33(object):
    r"""


    A light-weight container object for storing an N-dimensional
    neighborhood of values.

    This class serves as the base class for several other Itk objects such
    as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
    purpose is to store values and their relative spatial locations.

    A Neighborhood has an N-dimensional radius. The radius is defined
    separately for each dimension as the number of pixels that the
    neighborhood object with a radius of 2x3 has sides of length 5x7.
    Neighborhood objects always have an unambiguous center because their
    side lengths are always odd.

    See:   Neighborhood

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF33_GetNameOfClass)
    __swig_destroy__ = _itkNeighborhoodPython.delete_itkNeighborhoodCVF33

    def __init__(self, *args):
        r"""
        __init__(itkNeighborhoodCVF33 self) -> itkNeighborhoodCVF33
        __init__(itkNeighborhoodCVF33 self, itkNeighborhoodCVF33 other) -> itkNeighborhoodCVF33


        A light-weight container object for storing an N-dimensional
        neighborhood of values.

        This class serves as the base class for several other Itk objects such
        as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
        purpose is to store values and their relative spatial locations.

        A Neighborhood has an N-dimensional radius. The radius is defined
        separately for each dimension as the number of pixels that the
        neighborhood object with a radius of 2x3 has sides of length 5x7.
        Neighborhood objects always have an unambiguous center because their
        side lengths are always odd.

        See:   Neighborhood

        See:  NeighborhoodIterator 
        """
        _itkNeighborhoodPython.itkNeighborhoodCVF33_swiginit(self, _itkNeighborhoodPython.new_itkNeighborhoodCVF33(*args))
    __eq__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF33___eq__)
    __ne__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF33___ne__)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF33_GetRadius)
    GetSize = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF33_GetSize)
    GetStride = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF33_GetStride)
    Size = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF33_Size)
    GetElement = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF33_GetElement)
    GetCenterValue = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF33_GetCenterValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF33_SetRadius)
    Print = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF33_Print)
    GetBufferReference = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF33_GetBufferReference)
    GetOffset = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF33_GetOffset)
    GetNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF33_GetNeighborhoodIndex)
    GetCenterNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF33_GetCenterNeighborhoodIndex)
    GetSlice = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodCVF33_GetSlice)

# Register itkNeighborhoodCVF33 in _itkNeighborhoodPython:
_itkNeighborhoodPython.itkNeighborhoodCVF33_swigregister(itkNeighborhoodCVF33)

class itkNeighborhoodD2(object):
    r"""


    A light-weight container object for storing an N-dimensional
    neighborhood of values.

    This class serves as the base class for several other Itk objects such
    as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
    purpose is to store values and their relative spatial locations.

    A Neighborhood has an N-dimensional radius. The radius is defined
    separately for each dimension as the number of pixels that the
    neighborhood object with a radius of 2x3 has sides of length 5x7.
    Neighborhood objects always have an unambiguous center because their
    side lengths are always odd.

    See:   Neighborhood

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD2_GetNameOfClass)
    __swig_destroy__ = _itkNeighborhoodPython.delete_itkNeighborhoodD2

    def __init__(self, *args):
        r"""
        __init__(itkNeighborhoodD2 self) -> itkNeighborhoodD2
        __init__(itkNeighborhoodD2 self, itkNeighborhoodD2 other) -> itkNeighborhoodD2


        A light-weight container object for storing an N-dimensional
        neighborhood of values.

        This class serves as the base class for several other Itk objects such
        as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
        purpose is to store values and their relative spatial locations.

        A Neighborhood has an N-dimensional radius. The radius is defined
        separately for each dimension as the number of pixels that the
        neighborhood object with a radius of 2x3 has sides of length 5x7.
        Neighborhood objects always have an unambiguous center because their
        side lengths are always odd.

        See:   Neighborhood

        See:  NeighborhoodIterator 
        """
        _itkNeighborhoodPython.itkNeighborhoodD2_swiginit(self, _itkNeighborhoodPython.new_itkNeighborhoodD2(*args))
    __eq__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD2___eq__)
    __ne__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD2___ne__)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD2_GetRadius)
    GetSize = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD2_GetSize)
    GetStride = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD2_GetStride)
    Size = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD2_Size)
    GetElement = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD2_GetElement)
    GetCenterValue = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD2_GetCenterValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD2_SetRadius)
    Print = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD2_Print)
    GetBufferReference = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD2_GetBufferReference)
    GetOffset = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD2_GetOffset)
    GetNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD2_GetNeighborhoodIndex)
    GetCenterNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD2_GetCenterNeighborhoodIndex)
    GetSlice = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD2_GetSlice)

# Register itkNeighborhoodD2 in _itkNeighborhoodPython:
_itkNeighborhoodPython.itkNeighborhoodD2_swigregister(itkNeighborhoodD2)

class itkNeighborhoodD3(object):
    r"""


    A light-weight container object for storing an N-dimensional
    neighborhood of values.

    This class serves as the base class for several other Itk objects such
    as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
    purpose is to store values and their relative spatial locations.

    A Neighborhood has an N-dimensional radius. The radius is defined
    separately for each dimension as the number of pixels that the
    neighborhood object with a radius of 2x3 has sides of length 5x7.
    Neighborhood objects always have an unambiguous center because their
    side lengths are always odd.

    See:   Neighborhood

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD3_GetNameOfClass)
    __swig_destroy__ = _itkNeighborhoodPython.delete_itkNeighborhoodD3

    def __init__(self, *args):
        r"""
        __init__(itkNeighborhoodD3 self) -> itkNeighborhoodD3
        __init__(itkNeighborhoodD3 self, itkNeighborhoodD3 other) -> itkNeighborhoodD3


        A light-weight container object for storing an N-dimensional
        neighborhood of values.

        This class serves as the base class for several other Itk objects such
        as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
        purpose is to store values and their relative spatial locations.

        A Neighborhood has an N-dimensional radius. The radius is defined
        separately for each dimension as the number of pixels that the
        neighborhood object with a radius of 2x3 has sides of length 5x7.
        Neighborhood objects always have an unambiguous center because their
        side lengths are always odd.

        See:   Neighborhood

        See:  NeighborhoodIterator 
        """
        _itkNeighborhoodPython.itkNeighborhoodD3_swiginit(self, _itkNeighborhoodPython.new_itkNeighborhoodD3(*args))
    __eq__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD3___eq__)
    __ne__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD3___ne__)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD3_GetRadius)
    GetSize = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD3_GetSize)
    GetStride = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD3_GetStride)
    Size = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD3_Size)
    GetElement = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD3_GetElement)
    GetCenterValue = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD3_GetCenterValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD3_SetRadius)
    Print = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD3_Print)
    GetBufferReference = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD3_GetBufferReference)
    GetOffset = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD3_GetOffset)
    GetNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD3_GetNeighborhoodIndex)
    GetCenterNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD3_GetCenterNeighborhoodIndex)
    GetSlice = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodD3_GetSlice)

# Register itkNeighborhoodD3 in _itkNeighborhoodPython:
_itkNeighborhoodPython.itkNeighborhoodD3_swigregister(itkNeighborhoodD3)

class itkNeighborhoodF2(object):
    r"""


    A light-weight container object for storing an N-dimensional
    neighborhood of values.

    This class serves as the base class for several other Itk objects such
    as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
    purpose is to store values and their relative spatial locations.

    A Neighborhood has an N-dimensional radius. The radius is defined
    separately for each dimension as the number of pixels that the
    neighborhood object with a radius of 2x3 has sides of length 5x7.
    Neighborhood objects always have an unambiguous center because their
    side lengths are always odd.

    See:   Neighborhood

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF2_GetNameOfClass)
    __swig_destroy__ = _itkNeighborhoodPython.delete_itkNeighborhoodF2

    def __init__(self, *args):
        r"""
        __init__(itkNeighborhoodF2 self) -> itkNeighborhoodF2
        __init__(itkNeighborhoodF2 self, itkNeighborhoodF2 other) -> itkNeighborhoodF2


        A light-weight container object for storing an N-dimensional
        neighborhood of values.

        This class serves as the base class for several other Itk objects such
        as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
        purpose is to store values and their relative spatial locations.

        A Neighborhood has an N-dimensional radius. The radius is defined
        separately for each dimension as the number of pixels that the
        neighborhood object with a radius of 2x3 has sides of length 5x7.
        Neighborhood objects always have an unambiguous center because their
        side lengths are always odd.

        See:   Neighborhood

        See:  NeighborhoodIterator 
        """
        _itkNeighborhoodPython.itkNeighborhoodF2_swiginit(self, _itkNeighborhoodPython.new_itkNeighborhoodF2(*args))
    __eq__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF2___eq__)
    __ne__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF2___ne__)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF2_GetRadius)
    GetSize = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF2_GetSize)
    GetStride = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF2_GetStride)
    Size = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF2_Size)
    GetElement = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF2_GetElement)
    GetCenterValue = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF2_GetCenterValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF2_SetRadius)
    Print = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF2_Print)
    GetBufferReference = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF2_GetBufferReference)
    GetOffset = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF2_GetOffset)
    GetNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF2_GetNeighborhoodIndex)
    GetCenterNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF2_GetCenterNeighborhoodIndex)
    GetSlice = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF2_GetSlice)

# Register itkNeighborhoodF2 in _itkNeighborhoodPython:
_itkNeighborhoodPython.itkNeighborhoodF2_swigregister(itkNeighborhoodF2)

class itkNeighborhoodF3(object):
    r"""


    A light-weight container object for storing an N-dimensional
    neighborhood of values.

    This class serves as the base class for several other Itk objects such
    as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
    purpose is to store values and their relative spatial locations.

    A Neighborhood has an N-dimensional radius. The radius is defined
    separately for each dimension as the number of pixels that the
    neighborhood object with a radius of 2x3 has sides of length 5x7.
    Neighborhood objects always have an unambiguous center because their
    side lengths are always odd.

    See:   Neighborhood

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF3_GetNameOfClass)
    __swig_destroy__ = _itkNeighborhoodPython.delete_itkNeighborhoodF3

    def __init__(self, *args):
        r"""
        __init__(itkNeighborhoodF3 self) -> itkNeighborhoodF3
        __init__(itkNeighborhoodF3 self, itkNeighborhoodF3 other) -> itkNeighborhoodF3


        A light-weight container object for storing an N-dimensional
        neighborhood of values.

        This class serves as the base class for several other Itk objects such
        as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
        purpose is to store values and their relative spatial locations.

        A Neighborhood has an N-dimensional radius. The radius is defined
        separately for each dimension as the number of pixels that the
        neighborhood object with a radius of 2x3 has sides of length 5x7.
        Neighborhood objects always have an unambiguous center because their
        side lengths are always odd.

        See:   Neighborhood

        See:  NeighborhoodIterator 
        """
        _itkNeighborhoodPython.itkNeighborhoodF3_swiginit(self, _itkNeighborhoodPython.new_itkNeighborhoodF3(*args))
    __eq__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF3___eq__)
    __ne__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF3___ne__)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF3_GetRadius)
    GetSize = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF3_GetSize)
    GetStride = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF3_GetStride)
    Size = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF3_Size)
    GetElement = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF3_GetElement)
    GetCenterValue = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF3_GetCenterValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF3_SetRadius)
    Print = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF3_Print)
    GetBufferReference = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF3_GetBufferReference)
    GetOffset = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF3_GetOffset)
    GetNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF3_GetNeighborhoodIndex)
    GetCenterNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF3_GetCenterNeighborhoodIndex)
    GetSlice = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodF3_GetSlice)

# Register itkNeighborhoodF3 in _itkNeighborhoodPython:
_itkNeighborhoodPython.itkNeighborhoodF3_swigregister(itkNeighborhoodF3)

class itkNeighborhoodRGBUC2(object):
    r"""


    A light-weight container object for storing an N-dimensional
    neighborhood of values.

    This class serves as the base class for several other Itk objects such
    as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
    purpose is to store values and their relative spatial locations.

    A Neighborhood has an N-dimensional radius. The radius is defined
    separately for each dimension as the number of pixels that the
    neighborhood object with a radius of 2x3 has sides of length 5x7.
    Neighborhood objects always have an unambiguous center because their
    side lengths are always odd.

    See:   Neighborhood

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC2_GetNameOfClass)
    __swig_destroy__ = _itkNeighborhoodPython.delete_itkNeighborhoodRGBUC2

    def __init__(self, *args):
        r"""
        __init__(itkNeighborhoodRGBUC2 self) -> itkNeighborhoodRGBUC2
        __init__(itkNeighborhoodRGBUC2 self, itkNeighborhoodRGBUC2 other) -> itkNeighborhoodRGBUC2


        A light-weight container object for storing an N-dimensional
        neighborhood of values.

        This class serves as the base class for several other Itk objects such
        as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
        purpose is to store values and their relative spatial locations.

        A Neighborhood has an N-dimensional radius. The radius is defined
        separately for each dimension as the number of pixels that the
        neighborhood object with a radius of 2x3 has sides of length 5x7.
        Neighborhood objects always have an unambiguous center because their
        side lengths are always odd.

        See:   Neighborhood

        See:  NeighborhoodIterator 
        """
        _itkNeighborhoodPython.itkNeighborhoodRGBUC2_swiginit(self, _itkNeighborhoodPython.new_itkNeighborhoodRGBUC2(*args))
    __eq__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC2___eq__)
    __ne__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC2___ne__)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC2_GetRadius)
    GetSize = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC2_GetSize)
    GetStride = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC2_GetStride)
    Size = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC2_Size)
    GetElement = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC2_GetElement)
    GetCenterValue = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC2_GetCenterValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC2_SetRadius)
    Print = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC2_Print)
    GetBufferReference = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC2_GetBufferReference)
    GetOffset = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC2_GetOffset)
    GetNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC2_GetNeighborhoodIndex)
    GetCenterNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC2_GetCenterNeighborhoodIndex)
    GetSlice = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC2_GetSlice)

# Register itkNeighborhoodRGBUC2 in _itkNeighborhoodPython:
_itkNeighborhoodPython.itkNeighborhoodRGBUC2_swigregister(itkNeighborhoodRGBUC2)

class itkNeighborhoodRGBUC3(object):
    r"""


    A light-weight container object for storing an N-dimensional
    neighborhood of values.

    This class serves as the base class for several other Itk objects such
    as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
    purpose is to store values and their relative spatial locations.

    A Neighborhood has an N-dimensional radius. The radius is defined
    separately for each dimension as the number of pixels that the
    neighborhood object with a radius of 2x3 has sides of length 5x7.
    Neighborhood objects always have an unambiguous center because their
    side lengths are always odd.

    See:   Neighborhood

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC3_GetNameOfClass)
    __swig_destroy__ = _itkNeighborhoodPython.delete_itkNeighborhoodRGBUC3

    def __init__(self, *args):
        r"""
        __init__(itkNeighborhoodRGBUC3 self) -> itkNeighborhoodRGBUC3
        __init__(itkNeighborhoodRGBUC3 self, itkNeighborhoodRGBUC3 other) -> itkNeighborhoodRGBUC3


        A light-weight container object for storing an N-dimensional
        neighborhood of values.

        This class serves as the base class for several other Itk objects such
        as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
        purpose is to store values and their relative spatial locations.

        A Neighborhood has an N-dimensional radius. The radius is defined
        separately for each dimension as the number of pixels that the
        neighborhood object with a radius of 2x3 has sides of length 5x7.
        Neighborhood objects always have an unambiguous center because their
        side lengths are always odd.

        See:   Neighborhood

        See:  NeighborhoodIterator 
        """
        _itkNeighborhoodPython.itkNeighborhoodRGBUC3_swiginit(self, _itkNeighborhoodPython.new_itkNeighborhoodRGBUC3(*args))
    __eq__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC3___eq__)
    __ne__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC3___ne__)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC3_GetRadius)
    GetSize = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC3_GetSize)
    GetStride = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC3_GetStride)
    Size = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC3_Size)
    GetElement = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC3_GetElement)
    GetCenterValue = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC3_GetCenterValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC3_SetRadius)
    Print = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC3_Print)
    GetBufferReference = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC3_GetBufferReference)
    GetOffset = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC3_GetOffset)
    GetNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC3_GetNeighborhoodIndex)
    GetCenterNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC3_GetCenterNeighborhoodIndex)
    GetSlice = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodRGBUC3_GetSlice)

# Register itkNeighborhoodRGBUC3 in _itkNeighborhoodPython:
_itkNeighborhoodPython.itkNeighborhoodRGBUC3_swigregister(itkNeighborhoodRGBUC3)

class itkNeighborhoodSS2(object):
    r"""


    A light-weight container object for storing an N-dimensional
    neighborhood of values.

    This class serves as the base class for several other Itk objects such
    as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
    purpose is to store values and their relative spatial locations.

    A Neighborhood has an N-dimensional radius. The radius is defined
    separately for each dimension as the number of pixels that the
    neighborhood object with a radius of 2x3 has sides of length 5x7.
    Neighborhood objects always have an unambiguous center because their
    side lengths are always odd.

    See:   Neighborhood

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS2_GetNameOfClass)
    __swig_destroy__ = _itkNeighborhoodPython.delete_itkNeighborhoodSS2

    def __init__(self, *args):
        r"""
        __init__(itkNeighborhoodSS2 self) -> itkNeighborhoodSS2
        __init__(itkNeighborhoodSS2 self, itkNeighborhoodSS2 other) -> itkNeighborhoodSS2


        A light-weight container object for storing an N-dimensional
        neighborhood of values.

        This class serves as the base class for several other Itk objects such
        as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
        purpose is to store values and their relative spatial locations.

        A Neighborhood has an N-dimensional radius. The radius is defined
        separately for each dimension as the number of pixels that the
        neighborhood object with a radius of 2x3 has sides of length 5x7.
        Neighborhood objects always have an unambiguous center because their
        side lengths are always odd.

        See:   Neighborhood

        See:  NeighborhoodIterator 
        """
        _itkNeighborhoodPython.itkNeighborhoodSS2_swiginit(self, _itkNeighborhoodPython.new_itkNeighborhoodSS2(*args))
    __eq__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS2___eq__)
    __ne__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS2___ne__)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS2_GetRadius)
    GetSize = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS2_GetSize)
    GetStride = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS2_GetStride)
    Size = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS2_Size)
    GetElement = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS2_GetElement)
    GetCenterValue = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS2_GetCenterValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS2_SetRadius)
    Print = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS2_Print)
    GetBufferReference = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS2_GetBufferReference)
    GetOffset = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS2_GetOffset)
    GetNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS2_GetNeighborhoodIndex)
    GetCenterNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS2_GetCenterNeighborhoodIndex)
    GetSlice = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS2_GetSlice)

# Register itkNeighborhoodSS2 in _itkNeighborhoodPython:
_itkNeighborhoodPython.itkNeighborhoodSS2_swigregister(itkNeighborhoodSS2)

class itkNeighborhoodSS3(object):
    r"""


    A light-weight container object for storing an N-dimensional
    neighborhood of values.

    This class serves as the base class for several other Itk objects such
    as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
    purpose is to store values and their relative spatial locations.

    A Neighborhood has an N-dimensional radius. The radius is defined
    separately for each dimension as the number of pixels that the
    neighborhood object with a radius of 2x3 has sides of length 5x7.
    Neighborhood objects always have an unambiguous center because their
    side lengths are always odd.

    See:   Neighborhood

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS3_GetNameOfClass)
    __swig_destroy__ = _itkNeighborhoodPython.delete_itkNeighborhoodSS3

    def __init__(self, *args):
        r"""
        __init__(itkNeighborhoodSS3 self) -> itkNeighborhoodSS3
        __init__(itkNeighborhoodSS3 self, itkNeighborhoodSS3 other) -> itkNeighborhoodSS3


        A light-weight container object for storing an N-dimensional
        neighborhood of values.

        This class serves as the base class for several other Itk objects such
        as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
        purpose is to store values and their relative spatial locations.

        A Neighborhood has an N-dimensional radius. The radius is defined
        separately for each dimension as the number of pixels that the
        neighborhood object with a radius of 2x3 has sides of length 5x7.
        Neighborhood objects always have an unambiguous center because their
        side lengths are always odd.

        See:   Neighborhood

        See:  NeighborhoodIterator 
        """
        _itkNeighborhoodPython.itkNeighborhoodSS3_swiginit(self, _itkNeighborhoodPython.new_itkNeighborhoodSS3(*args))
    __eq__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS3___eq__)
    __ne__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS3___ne__)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS3_GetRadius)
    GetSize = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS3_GetSize)
    GetStride = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS3_GetStride)
    Size = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS3_Size)
    GetElement = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS3_GetElement)
    GetCenterValue = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS3_GetCenterValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS3_SetRadius)
    Print = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS3_Print)
    GetBufferReference = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS3_GetBufferReference)
    GetOffset = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS3_GetOffset)
    GetNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS3_GetNeighborhoodIndex)
    GetCenterNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS3_GetCenterNeighborhoodIndex)
    GetSlice = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodSS3_GetSlice)

# Register itkNeighborhoodSS3 in _itkNeighborhoodPython:
_itkNeighborhoodPython.itkNeighborhoodSS3_swigregister(itkNeighborhoodSS3)

class itkNeighborhoodUC2(object):
    r"""


    A light-weight container object for storing an N-dimensional
    neighborhood of values.

    This class serves as the base class for several other Itk objects such
    as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
    purpose is to store values and their relative spatial locations.

    A Neighborhood has an N-dimensional radius. The radius is defined
    separately for each dimension as the number of pixels that the
    neighborhood object with a radius of 2x3 has sides of length 5x7.
    Neighborhood objects always have an unambiguous center because their
    side lengths are always odd.

    See:   Neighborhood

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC2_GetNameOfClass)
    __swig_destroy__ = _itkNeighborhoodPython.delete_itkNeighborhoodUC2

    def __init__(self, *args):
        r"""
        __init__(itkNeighborhoodUC2 self) -> itkNeighborhoodUC2
        __init__(itkNeighborhoodUC2 self, itkNeighborhoodUC2 other) -> itkNeighborhoodUC2


        A light-weight container object for storing an N-dimensional
        neighborhood of values.

        This class serves as the base class for several other Itk objects such
        as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
        purpose is to store values and their relative spatial locations.

        A Neighborhood has an N-dimensional radius. The radius is defined
        separately for each dimension as the number of pixels that the
        neighborhood object with a radius of 2x3 has sides of length 5x7.
        Neighborhood objects always have an unambiguous center because their
        side lengths are always odd.

        See:   Neighborhood

        See:  NeighborhoodIterator 
        """
        _itkNeighborhoodPython.itkNeighborhoodUC2_swiginit(self, _itkNeighborhoodPython.new_itkNeighborhoodUC2(*args))
    __eq__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC2___eq__)
    __ne__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC2___ne__)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC2_GetRadius)
    GetSize = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC2_GetSize)
    GetStride = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC2_GetStride)
    Size = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC2_Size)
    GetElement = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC2_GetElement)
    GetCenterValue = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC2_GetCenterValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC2_SetRadius)
    Print = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC2_Print)
    GetBufferReference = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC2_GetBufferReference)
    GetOffset = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC2_GetOffset)
    GetNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC2_GetNeighborhoodIndex)
    GetCenterNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC2_GetCenterNeighborhoodIndex)
    GetSlice = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC2_GetSlice)

# Register itkNeighborhoodUC2 in _itkNeighborhoodPython:
_itkNeighborhoodPython.itkNeighborhoodUC2_swigregister(itkNeighborhoodUC2)

class itkNeighborhoodUC3(object):
    r"""


    A light-weight container object for storing an N-dimensional
    neighborhood of values.

    This class serves as the base class for several other Itk objects such
    as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
    purpose is to store values and their relative spatial locations.

    A Neighborhood has an N-dimensional radius. The radius is defined
    separately for each dimension as the number of pixels that the
    neighborhood object with a radius of 2x3 has sides of length 5x7.
    Neighborhood objects always have an unambiguous center because their
    side lengths are always odd.

    See:   Neighborhood

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC3_GetNameOfClass)
    __swig_destroy__ = _itkNeighborhoodPython.delete_itkNeighborhoodUC3

    def __init__(self, *args):
        r"""
        __init__(itkNeighborhoodUC3 self) -> itkNeighborhoodUC3
        __init__(itkNeighborhoodUC3 self, itkNeighborhoodUC3 other) -> itkNeighborhoodUC3


        A light-weight container object for storing an N-dimensional
        neighborhood of values.

        This class serves as the base class for several other Itk objects such
        as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
        purpose is to store values and their relative spatial locations.

        A Neighborhood has an N-dimensional radius. The radius is defined
        separately for each dimension as the number of pixels that the
        neighborhood object with a radius of 2x3 has sides of length 5x7.
        Neighborhood objects always have an unambiguous center because their
        side lengths are always odd.

        See:   Neighborhood

        See:  NeighborhoodIterator 
        """
        _itkNeighborhoodPython.itkNeighborhoodUC3_swiginit(self, _itkNeighborhoodPython.new_itkNeighborhoodUC3(*args))
    __eq__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC3___eq__)
    __ne__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC3___ne__)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC3_GetRadius)
    GetSize = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC3_GetSize)
    GetStride = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC3_GetStride)
    Size = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC3_Size)
    GetElement = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC3_GetElement)
    GetCenterValue = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC3_GetCenterValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC3_SetRadius)
    Print = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC3_Print)
    GetBufferReference = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC3_GetBufferReference)
    GetOffset = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC3_GetOffset)
    GetNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC3_GetNeighborhoodIndex)
    GetCenterNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC3_GetCenterNeighborhoodIndex)
    GetSlice = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUC3_GetSlice)

# Register itkNeighborhoodUC3 in _itkNeighborhoodPython:
_itkNeighborhoodPython.itkNeighborhoodUC3_swigregister(itkNeighborhoodUC3)

class itkNeighborhoodUS2(object):
    r"""


    A light-weight container object for storing an N-dimensional
    neighborhood of values.

    This class serves as the base class for several other Itk objects such
    as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
    purpose is to store values and their relative spatial locations.

    A Neighborhood has an N-dimensional radius. The radius is defined
    separately for each dimension as the number of pixels that the
    neighborhood object with a radius of 2x3 has sides of length 5x7.
    Neighborhood objects always have an unambiguous center because their
    side lengths are always odd.

    See:   Neighborhood

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS2_GetNameOfClass)
    __swig_destroy__ = _itkNeighborhoodPython.delete_itkNeighborhoodUS2

    def __init__(self, *args):
        r"""
        __init__(itkNeighborhoodUS2 self) -> itkNeighborhoodUS2
        __init__(itkNeighborhoodUS2 self, itkNeighborhoodUS2 other) -> itkNeighborhoodUS2


        A light-weight container object for storing an N-dimensional
        neighborhood of values.

        This class serves as the base class for several other Itk objects such
        as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
        purpose is to store values and their relative spatial locations.

        A Neighborhood has an N-dimensional radius. The radius is defined
        separately for each dimension as the number of pixels that the
        neighborhood object with a radius of 2x3 has sides of length 5x7.
        Neighborhood objects always have an unambiguous center because their
        side lengths are always odd.

        See:   Neighborhood

        See:  NeighborhoodIterator 
        """
        _itkNeighborhoodPython.itkNeighborhoodUS2_swiginit(self, _itkNeighborhoodPython.new_itkNeighborhoodUS2(*args))
    __eq__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS2___eq__)
    __ne__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS2___ne__)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS2_GetRadius)
    GetSize = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS2_GetSize)
    GetStride = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS2_GetStride)
    Size = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS2_Size)
    GetElement = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS2_GetElement)
    GetCenterValue = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS2_GetCenterValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS2_SetRadius)
    Print = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS2_Print)
    GetBufferReference = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS2_GetBufferReference)
    GetOffset = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS2_GetOffset)
    GetNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS2_GetNeighborhoodIndex)
    GetCenterNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS2_GetCenterNeighborhoodIndex)
    GetSlice = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS2_GetSlice)

# Register itkNeighborhoodUS2 in _itkNeighborhoodPython:
_itkNeighborhoodPython.itkNeighborhoodUS2_swigregister(itkNeighborhoodUS2)

class itkNeighborhoodUS3(object):
    r"""


    A light-weight container object for storing an N-dimensional
    neighborhood of values.

    This class serves as the base class for several other Itk objects such
    as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
    purpose is to store values and their relative spatial locations.

    A Neighborhood has an N-dimensional radius. The radius is defined
    separately for each dimension as the number of pixels that the
    neighborhood object with a radius of 2x3 has sides of length 5x7.
    Neighborhood objects always have an unambiguous center because their
    side lengths are always odd.

    See:   Neighborhood

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS3_GetNameOfClass)
    __swig_destroy__ = _itkNeighborhoodPython.delete_itkNeighborhoodUS3

    def __init__(self, *args):
        r"""
        __init__(itkNeighborhoodUS3 self) -> itkNeighborhoodUS3
        __init__(itkNeighborhoodUS3 self, itkNeighborhoodUS3 other) -> itkNeighborhoodUS3


        A light-weight container object for storing an N-dimensional
        neighborhood of values.

        This class serves as the base class for several other Itk objects such
        as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
        purpose is to store values and their relative spatial locations.

        A Neighborhood has an N-dimensional radius. The radius is defined
        separately for each dimension as the number of pixels that the
        neighborhood object with a radius of 2x3 has sides of length 5x7.
        Neighborhood objects always have an unambiguous center because their
        side lengths are always odd.

        See:   Neighborhood

        See:  NeighborhoodIterator 
        """
        _itkNeighborhoodPython.itkNeighborhoodUS3_swiginit(self, _itkNeighborhoodPython.new_itkNeighborhoodUS3(*args))
    __eq__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS3___eq__)
    __ne__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS3___ne__)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS3_GetRadius)
    GetSize = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS3_GetSize)
    GetStride = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS3_GetStride)
    Size = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS3_Size)
    GetElement = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS3_GetElement)
    GetCenterValue = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS3_GetCenterValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS3_SetRadius)
    Print = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS3_Print)
    GetBufferReference = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS3_GetBufferReference)
    GetOffset = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS3_GetOffset)
    GetNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS3_GetNeighborhoodIndex)
    GetCenterNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS3_GetCenterNeighborhoodIndex)
    GetSlice = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodUS3_GetSlice)

# Register itkNeighborhoodUS3 in _itkNeighborhoodPython:
_itkNeighborhoodPython.itkNeighborhoodUS3_swigregister(itkNeighborhoodUS3)

class itkNeighborhoodVF22(object):
    r"""


    A light-weight container object for storing an N-dimensional
    neighborhood of values.

    This class serves as the base class for several other Itk objects such
    as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
    purpose is to store values and their relative spatial locations.

    A Neighborhood has an N-dimensional radius. The radius is defined
    separately for each dimension as the number of pixels that the
    neighborhood object with a radius of 2x3 has sides of length 5x7.
    Neighborhood objects always have an unambiguous center because their
    side lengths are always odd.

    See:   Neighborhood

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF22_GetNameOfClass)
    __swig_destroy__ = _itkNeighborhoodPython.delete_itkNeighborhoodVF22

    def __init__(self, *args):
        r"""
        __init__(itkNeighborhoodVF22 self) -> itkNeighborhoodVF22
        __init__(itkNeighborhoodVF22 self, itkNeighborhoodVF22 other) -> itkNeighborhoodVF22


        A light-weight container object for storing an N-dimensional
        neighborhood of values.

        This class serves as the base class for several other Itk objects such
        as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
        purpose is to store values and their relative spatial locations.

        A Neighborhood has an N-dimensional radius. The radius is defined
        separately for each dimension as the number of pixels that the
        neighborhood object with a radius of 2x3 has sides of length 5x7.
        Neighborhood objects always have an unambiguous center because their
        side lengths are always odd.

        See:   Neighborhood

        See:  NeighborhoodIterator 
        """
        _itkNeighborhoodPython.itkNeighborhoodVF22_swiginit(self, _itkNeighborhoodPython.new_itkNeighborhoodVF22(*args))
    __eq__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF22___eq__)
    __ne__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF22___ne__)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF22_GetRadius)
    GetSize = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF22_GetSize)
    GetStride = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF22_GetStride)
    Size = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF22_Size)
    GetElement = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF22_GetElement)
    GetCenterValue = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF22_GetCenterValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF22_SetRadius)
    Print = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF22_Print)
    GetBufferReference = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF22_GetBufferReference)
    GetOffset = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF22_GetOffset)
    GetNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF22_GetNeighborhoodIndex)
    GetCenterNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF22_GetCenterNeighborhoodIndex)
    GetSlice = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF22_GetSlice)

# Register itkNeighborhoodVF22 in _itkNeighborhoodPython:
_itkNeighborhoodPython.itkNeighborhoodVF22_swigregister(itkNeighborhoodVF22)

class itkNeighborhoodVF33(object):
    r"""


    A light-weight container object for storing an N-dimensional
    neighborhood of values.

    This class serves as the base class for several other Itk objects such
    as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
    purpose is to store values and their relative spatial locations.

    A Neighborhood has an N-dimensional radius. The radius is defined
    separately for each dimension as the number of pixels that the
    neighborhood object with a radius of 2x3 has sides of length 5x7.
    Neighborhood objects always have an unambiguous center because their
    side lengths are always odd.

    See:   Neighborhood

    See:  NeighborhoodIterator 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF33_GetNameOfClass)
    __swig_destroy__ = _itkNeighborhoodPython.delete_itkNeighborhoodVF33

    def __init__(self, *args):
        r"""
        __init__(itkNeighborhoodVF33 self) -> itkNeighborhoodVF33
        __init__(itkNeighborhoodVF33 self, itkNeighborhoodVF33 other) -> itkNeighborhoodVF33


        A light-weight container object for storing an N-dimensional
        neighborhood of values.

        This class serves as the base class for several other Itk objects such
        as itk::NeighborhoodOperator and itk::NeighborhoodIterator. Its
        purpose is to store values and their relative spatial locations.

        A Neighborhood has an N-dimensional radius. The radius is defined
        separately for each dimension as the number of pixels that the
        neighborhood object with a radius of 2x3 has sides of length 5x7.
        Neighborhood objects always have an unambiguous center because their
        side lengths are always odd.

        See:   Neighborhood

        See:  NeighborhoodIterator 
        """
        _itkNeighborhoodPython.itkNeighborhoodVF33_swiginit(self, _itkNeighborhoodPython.new_itkNeighborhoodVF33(*args))
    __eq__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF33___eq__)
    __ne__ = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF33___ne__)
    GetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF33_GetRadius)
    GetSize = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF33_GetSize)
    GetStride = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF33_GetStride)
    Size = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF33_Size)
    GetElement = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF33_GetElement)
    GetCenterValue = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF33_GetCenterValue)
    SetRadius = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF33_SetRadius)
    Print = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF33_Print)
    GetBufferReference = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF33_GetBufferReference)
    GetOffset = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF33_GetOffset)
    GetNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF33_GetNeighborhoodIndex)
    GetCenterNeighborhoodIndex = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF33_GetCenterNeighborhoodIndex)
    GetSlice = _swig_new_instance_method(_itkNeighborhoodPython.itkNeighborhoodVF33_GetSlice)

# Register itkNeighborhoodVF33 in _itkNeighborhoodPython:
_itkNeighborhoodPython.itkNeighborhoodVF33_swigregister(itkNeighborhoodVF33)



