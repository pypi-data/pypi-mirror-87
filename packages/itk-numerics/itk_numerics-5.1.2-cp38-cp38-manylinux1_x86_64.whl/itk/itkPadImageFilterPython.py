# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageGridPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkPadImageFilterPython
else:
    import _itkPadImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkPadImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkPadImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkPadImageFilterBasePython
import itk.itkImageToImageFilterBPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.itkPointPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageBoundaryConditionPython
import itk.itkImageToImageFilterAPython

def itkPadImageFilterICF2ICF2_New():
    return itkPadImageFilterICF2ICF2.New()

class itkPadImageFilterICF2ICF2(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseICF2ICF2):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterICF2ICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICF2ICF2_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICF2ICF2_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICF2ICF2_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICF2ICF2_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICF2ICF2_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICF2ICF2_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterICF2ICF2
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterICF2ICF2_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterICF2ICF2

        Create a new object of the class itkPadImageFilterICF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterICF2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterICF2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterICF2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterICF2ICF2 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterICF2ICF2_swigregister(itkPadImageFilterICF2ICF2)
itkPadImageFilterICF2ICF2___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterICF2ICF2___New_orig__
itkPadImageFilterICF2ICF2_cast = _itkPadImageFilterPython.itkPadImageFilterICF2ICF2_cast


def itkPadImageFilterICF3ICF3_New():
    return itkPadImageFilterICF3ICF3.New()

class itkPadImageFilterICF3ICF3(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseICF3ICF3):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterICF3ICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICF3ICF3_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICF3ICF3_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICF3ICF3_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICF3ICF3_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICF3ICF3_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICF3ICF3_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterICF3ICF3
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterICF3ICF3_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterICF3ICF3

        Create a new object of the class itkPadImageFilterICF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterICF3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterICF3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterICF3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterICF3ICF3 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterICF3ICF3_swigregister(itkPadImageFilterICF3ICF3)
itkPadImageFilterICF3ICF3___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterICF3ICF3___New_orig__
itkPadImageFilterICF3ICF3_cast = _itkPadImageFilterPython.itkPadImageFilterICF3ICF3_cast


def itkPadImageFilterICVF22ICVF22_New():
    return itkPadImageFilterICVF22ICVF22.New()

class itkPadImageFilterICVF22ICVF22(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseICVF22ICVF22):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterICVF22ICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF22ICVF22_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF22ICVF22_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF22ICVF22_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF22ICVF22_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF22ICVF22_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF22ICVF22_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterICVF22ICVF22
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterICVF22ICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterICVF22ICVF22

        Create a new object of the class itkPadImageFilterICVF22ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterICVF22ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterICVF22ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterICVF22ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterICVF22ICVF22 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterICVF22ICVF22_swigregister(itkPadImageFilterICVF22ICVF22)
itkPadImageFilterICVF22ICVF22___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterICVF22ICVF22___New_orig__
itkPadImageFilterICVF22ICVF22_cast = _itkPadImageFilterPython.itkPadImageFilterICVF22ICVF22_cast


def itkPadImageFilterICVF23ICVF23_New():
    return itkPadImageFilterICVF23ICVF23.New()

class itkPadImageFilterICVF23ICVF23(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseICVF23ICVF23):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterICVF23ICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF23ICVF23_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF23ICVF23_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF23ICVF23_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF23ICVF23_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF23ICVF23_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF23ICVF23_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterICVF23ICVF23
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterICVF23ICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterICVF23ICVF23

        Create a new object of the class itkPadImageFilterICVF23ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterICVF23ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterICVF23ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterICVF23ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterICVF23ICVF23 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterICVF23ICVF23_swigregister(itkPadImageFilterICVF23ICVF23)
itkPadImageFilterICVF23ICVF23___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterICVF23ICVF23___New_orig__
itkPadImageFilterICVF23ICVF23_cast = _itkPadImageFilterPython.itkPadImageFilterICVF23ICVF23_cast


def itkPadImageFilterICVF32ICVF32_New():
    return itkPadImageFilterICVF32ICVF32.New()

class itkPadImageFilterICVF32ICVF32(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseICVF32ICVF32):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterICVF32ICVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF32ICVF32_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF32ICVF32_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF32ICVF32_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF32ICVF32_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF32ICVF32_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF32ICVF32_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterICVF32ICVF32
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterICVF32ICVF32_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterICVF32ICVF32

        Create a new object of the class itkPadImageFilterICVF32ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterICVF32ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterICVF32ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterICVF32ICVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterICVF32ICVF32 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterICVF32ICVF32_swigregister(itkPadImageFilterICVF32ICVF32)
itkPadImageFilterICVF32ICVF32___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterICVF32ICVF32___New_orig__
itkPadImageFilterICVF32ICVF32_cast = _itkPadImageFilterPython.itkPadImageFilterICVF32ICVF32_cast


def itkPadImageFilterICVF33ICVF33_New():
    return itkPadImageFilterICVF33ICVF33.New()

class itkPadImageFilterICVF33ICVF33(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseICVF33ICVF33):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterICVF33ICVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF33ICVF33_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF33ICVF33_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF33ICVF33_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF33ICVF33_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF33ICVF33_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF33ICVF33_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterICVF33ICVF33
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterICVF33ICVF33_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterICVF33ICVF33

        Create a new object of the class itkPadImageFilterICVF33ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterICVF33ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterICVF33ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterICVF33ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterICVF33ICVF33 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterICVF33ICVF33_swigregister(itkPadImageFilterICVF33ICVF33)
itkPadImageFilterICVF33ICVF33___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterICVF33ICVF33___New_orig__
itkPadImageFilterICVF33ICVF33_cast = _itkPadImageFilterPython.itkPadImageFilterICVF33ICVF33_cast


def itkPadImageFilterICVF42ICVF42_New():
    return itkPadImageFilterICVF42ICVF42.New()

class itkPadImageFilterICVF42ICVF42(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseICVF42ICVF42):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterICVF42ICVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF42ICVF42_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF42ICVF42_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF42ICVF42_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF42ICVF42_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF42ICVF42_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF42ICVF42_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterICVF42ICVF42
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterICVF42ICVF42_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterICVF42ICVF42

        Create a new object of the class itkPadImageFilterICVF42ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterICVF42ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterICVF42ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterICVF42ICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterICVF42ICVF42 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterICVF42ICVF42_swigregister(itkPadImageFilterICVF42ICVF42)
itkPadImageFilterICVF42ICVF42___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterICVF42ICVF42___New_orig__
itkPadImageFilterICVF42ICVF42_cast = _itkPadImageFilterPython.itkPadImageFilterICVF42ICVF42_cast


def itkPadImageFilterICVF43ICVF43_New():
    return itkPadImageFilterICVF43ICVF43.New()

class itkPadImageFilterICVF43ICVF43(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseICVF43ICVF43):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterICVF43ICVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF43ICVF43_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF43ICVF43_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF43ICVF43_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF43ICVF43_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF43ICVF43_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterICVF43ICVF43_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterICVF43ICVF43
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterICVF43ICVF43_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterICVF43ICVF43

        Create a new object of the class itkPadImageFilterICVF43ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterICVF43ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterICVF43ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterICVF43ICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterICVF43ICVF43 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterICVF43ICVF43_swigregister(itkPadImageFilterICVF43ICVF43)
itkPadImageFilterICVF43ICVF43___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterICVF43ICVF43___New_orig__
itkPadImageFilterICVF43ICVF43_cast = _itkPadImageFilterPython.itkPadImageFilterICVF43ICVF43_cast


def itkPadImageFilterID2ID2_New():
    return itkPadImageFilterID2ID2.New()

class itkPadImageFilterID2ID2(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseID2ID2):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterID2ID2_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterID2ID2_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterID2ID2_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterID2ID2_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterID2ID2_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterID2ID2_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterID2ID2
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterID2ID2

        Create a new object of the class itkPadImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterID2ID2 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterID2ID2_swigregister(itkPadImageFilterID2ID2)
itkPadImageFilterID2ID2___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterID2ID2___New_orig__
itkPadImageFilterID2ID2_cast = _itkPadImageFilterPython.itkPadImageFilterID2ID2_cast


def itkPadImageFilterID3ID3_New():
    return itkPadImageFilterID3ID3.New()

class itkPadImageFilterID3ID3(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseID3ID3):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterID3ID3_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterID3ID3_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterID3ID3_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterID3ID3_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterID3ID3_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterID3ID3_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterID3ID3
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterID3ID3

        Create a new object of the class itkPadImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterID3ID3 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterID3ID3_swigregister(itkPadImageFilterID3ID3)
itkPadImageFilterID3ID3___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterID3ID3___New_orig__
itkPadImageFilterID3ID3_cast = _itkPadImageFilterPython.itkPadImageFilterID3ID3_cast


def itkPadImageFilterIF2IF2_New():
    return itkPadImageFilterIF2IF2.New()

class itkPadImageFilterIF2IF2(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIF2IF2):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIF2IF2_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIF2IF2_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIF2IF2_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIF2IF2_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIF2IF2_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIF2IF2_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterIF2IF2
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterIF2IF2

        Create a new object of the class itkPadImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterIF2IF2 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterIF2IF2_swigregister(itkPadImageFilterIF2IF2)
itkPadImageFilterIF2IF2___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterIF2IF2___New_orig__
itkPadImageFilterIF2IF2_cast = _itkPadImageFilterPython.itkPadImageFilterIF2IF2_cast


def itkPadImageFilterIF3IF3_New():
    return itkPadImageFilterIF3IF3.New()

class itkPadImageFilterIF3IF3(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIF3IF3):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIF3IF3_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIF3IF3_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIF3IF3_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIF3IF3_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIF3IF3_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIF3IF3_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterIF3IF3
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterIF3IF3

        Create a new object of the class itkPadImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterIF3IF3 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterIF3IF3_swigregister(itkPadImageFilterIF3IF3)
itkPadImageFilterIF3IF3___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterIF3IF3___New_orig__
itkPadImageFilterIF3IF3_cast = _itkPadImageFilterPython.itkPadImageFilterIF3IF3_cast


def itkPadImageFilterIRGBAUC2IRGBAUC2_New():
    return itkPadImageFilterIRGBAUC2IRGBAUC2.New()

class itkPadImageFilterIRGBAUC2IRGBAUC2(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBAUC2IRGBAUC2):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIRGBAUC2IRGBAUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIRGBAUC2IRGBAUC2_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIRGBAUC2IRGBAUC2_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIRGBAUC2IRGBAUC2_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIRGBAUC2IRGBAUC2_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIRGBAUC2IRGBAUC2_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIRGBAUC2IRGBAUC2_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterIRGBAUC2IRGBAUC2
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIRGBAUC2IRGBAUC2_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterIRGBAUC2IRGBAUC2

        Create a new object of the class itkPadImageFilterIRGBAUC2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterIRGBAUC2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterIRGBAUC2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterIRGBAUC2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterIRGBAUC2IRGBAUC2 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterIRGBAUC2IRGBAUC2_swigregister(itkPadImageFilterIRGBAUC2IRGBAUC2)
itkPadImageFilterIRGBAUC2IRGBAUC2___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterIRGBAUC2IRGBAUC2___New_orig__
itkPadImageFilterIRGBAUC2IRGBAUC2_cast = _itkPadImageFilterPython.itkPadImageFilterIRGBAUC2IRGBAUC2_cast


def itkPadImageFilterIRGBAUC3IRGBAUC3_New():
    return itkPadImageFilterIRGBAUC3IRGBAUC3.New()

class itkPadImageFilterIRGBAUC3IRGBAUC3(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBAUC3IRGBAUC3):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIRGBAUC3IRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIRGBAUC3IRGBAUC3_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIRGBAUC3IRGBAUC3_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIRGBAUC3IRGBAUC3_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIRGBAUC3IRGBAUC3_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIRGBAUC3IRGBAUC3_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIRGBAUC3IRGBAUC3_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterIRGBAUC3IRGBAUC3
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIRGBAUC3IRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterIRGBAUC3IRGBAUC3

        Create a new object of the class itkPadImageFilterIRGBAUC3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterIRGBAUC3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterIRGBAUC3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterIRGBAUC3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterIRGBAUC3IRGBAUC3 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterIRGBAUC3IRGBAUC3_swigregister(itkPadImageFilterIRGBAUC3IRGBAUC3)
itkPadImageFilterIRGBAUC3IRGBAUC3___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterIRGBAUC3IRGBAUC3___New_orig__
itkPadImageFilterIRGBAUC3IRGBAUC3_cast = _itkPadImageFilterPython.itkPadImageFilterIRGBAUC3IRGBAUC3_cast


def itkPadImageFilterIRGBUC2IRGBUC2_New():
    return itkPadImageFilterIRGBUC2IRGBUC2.New()

class itkPadImageFilterIRGBUC2IRGBUC2(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBUC2IRGBUC2):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIRGBUC2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIRGBUC2IRGBUC2_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIRGBUC2IRGBUC2_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIRGBUC2IRGBUC2_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIRGBUC2IRGBUC2_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIRGBUC2IRGBUC2_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIRGBUC2IRGBUC2_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterIRGBUC2IRGBUC2
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIRGBUC2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterIRGBUC2IRGBUC2

        Create a new object of the class itkPadImageFilterIRGBUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterIRGBUC2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterIRGBUC2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterIRGBUC2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterIRGBUC2IRGBUC2 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterIRGBUC2IRGBUC2_swigregister(itkPadImageFilterIRGBUC2IRGBUC2)
itkPadImageFilterIRGBUC2IRGBUC2___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterIRGBUC2IRGBUC2___New_orig__
itkPadImageFilterIRGBUC2IRGBUC2_cast = _itkPadImageFilterPython.itkPadImageFilterIRGBUC2IRGBUC2_cast


def itkPadImageFilterIRGBUC3IRGBUC3_New():
    return itkPadImageFilterIRGBUC3IRGBUC3.New()

class itkPadImageFilterIRGBUC3IRGBUC3(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBUC3IRGBUC3):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIRGBUC3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIRGBUC3IRGBUC3_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIRGBUC3IRGBUC3_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIRGBUC3IRGBUC3_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIRGBUC3IRGBUC3_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIRGBUC3IRGBUC3_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIRGBUC3IRGBUC3_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterIRGBUC3IRGBUC3
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIRGBUC3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterIRGBUC3IRGBUC3

        Create a new object of the class itkPadImageFilterIRGBUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterIRGBUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterIRGBUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterIRGBUC3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterIRGBUC3IRGBUC3 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterIRGBUC3IRGBUC3_swigregister(itkPadImageFilterIRGBUC3IRGBUC3)
itkPadImageFilterIRGBUC3IRGBUC3___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterIRGBUC3IRGBUC3___New_orig__
itkPadImageFilterIRGBUC3IRGBUC3_cast = _itkPadImageFilterPython.itkPadImageFilterIRGBUC3IRGBUC3_cast


def itkPadImageFilterISS2ISS2_New():
    return itkPadImageFilterISS2ISS2.New()

class itkPadImageFilterISS2ISS2(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseISS2ISS2):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterISS2ISS2_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterISS2ISS2_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterISS2ISS2_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterISS2ISS2_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterISS2ISS2_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterISS2ISS2_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterISS2ISS2

        Create a new object of the class itkPadImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterISS2ISS2 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterISS2ISS2_swigregister(itkPadImageFilterISS2ISS2)
itkPadImageFilterISS2ISS2___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterISS2ISS2___New_orig__
itkPadImageFilterISS2ISS2_cast = _itkPadImageFilterPython.itkPadImageFilterISS2ISS2_cast


def itkPadImageFilterISS3ISS3_New():
    return itkPadImageFilterISS3ISS3.New()

class itkPadImageFilterISS3ISS3(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseISS3ISS3):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterISS3ISS3_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterISS3ISS3_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterISS3ISS3_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterISS3ISS3_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterISS3ISS3_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterISS3ISS3_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterISS3ISS3

        Create a new object of the class itkPadImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterISS3ISS3 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterISS3ISS3_swigregister(itkPadImageFilterISS3ISS3)
itkPadImageFilterISS3ISS3___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterISS3ISS3___New_orig__
itkPadImageFilterISS3ISS3_cast = _itkPadImageFilterPython.itkPadImageFilterISS3ISS3_cast


def itkPadImageFilterIUC2IUC2_New():
    return itkPadImageFilterIUC2IUC2.New()

class itkPadImageFilterIUC2IUC2(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIUC2IUC2):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIUC2IUC2_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIUC2IUC2_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIUC2IUC2_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIUC2IUC2_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIUC2IUC2_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIUC2IUC2_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterIUC2IUC2

        Create a new object of the class itkPadImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterIUC2IUC2 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterIUC2IUC2_swigregister(itkPadImageFilterIUC2IUC2)
itkPadImageFilterIUC2IUC2___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterIUC2IUC2___New_orig__
itkPadImageFilterIUC2IUC2_cast = _itkPadImageFilterPython.itkPadImageFilterIUC2IUC2_cast


def itkPadImageFilterIUC3IUC3_New():
    return itkPadImageFilterIUC3IUC3.New()

class itkPadImageFilterIUC3IUC3(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIUC3IUC3):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIUC3IUC3_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIUC3IUC3_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIUC3IUC3_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIUC3IUC3_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIUC3IUC3_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIUC3IUC3_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterIUC3IUC3

        Create a new object of the class itkPadImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterIUC3IUC3 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterIUC3IUC3_swigregister(itkPadImageFilterIUC3IUC3)
itkPadImageFilterIUC3IUC3___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterIUC3IUC3___New_orig__
itkPadImageFilterIUC3IUC3_cast = _itkPadImageFilterPython.itkPadImageFilterIUC3IUC3_cast


def itkPadImageFilterIUS2IUS2_New():
    return itkPadImageFilterIUS2IUS2.New()

class itkPadImageFilterIUS2IUS2(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIUS2IUS2):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIUS2IUS2_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIUS2IUS2_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIUS2IUS2_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIUS2IUS2_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIUS2IUS2_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIUS2IUS2_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterIUS2IUS2

        Create a new object of the class itkPadImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterIUS2IUS2 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterIUS2IUS2_swigregister(itkPadImageFilterIUS2IUS2)
itkPadImageFilterIUS2IUS2___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterIUS2IUS2___New_orig__
itkPadImageFilterIUS2IUS2_cast = _itkPadImageFilterPython.itkPadImageFilterIUS2IUS2_cast


def itkPadImageFilterIUS3IUS3_New():
    return itkPadImageFilterIUS3IUS3.New()

class itkPadImageFilterIUS3IUS3(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIUS3IUS3):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIUS3IUS3_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIUS3IUS3_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIUS3IUS3_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIUS3IUS3_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIUS3IUS3_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIUS3IUS3_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterIUS3IUS3

        Create a new object of the class itkPadImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterIUS3IUS3 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterIUS3IUS3_swigregister(itkPadImageFilterIUS3IUS3)
itkPadImageFilterIUS3IUS3___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterIUS3IUS3___New_orig__
itkPadImageFilterIUS3IUS3_cast = _itkPadImageFilterPython.itkPadImageFilterIUS3IUS3_cast


def itkPadImageFilterIVF22IVF22_New():
    return itkPadImageFilterIVF22IVF22.New()

class itkPadImageFilterIVF22IVF22(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIVF22IVF22):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIVF22IVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF22IVF22_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF22IVF22_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF22IVF22_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF22IVF22_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF22IVF22_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF22IVF22_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterIVF22IVF22
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIVF22IVF22_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterIVF22IVF22

        Create a new object of the class itkPadImageFilterIVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterIVF22IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterIVF22IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterIVF22IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterIVF22IVF22 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterIVF22IVF22_swigregister(itkPadImageFilterIVF22IVF22)
itkPadImageFilterIVF22IVF22___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterIVF22IVF22___New_orig__
itkPadImageFilterIVF22IVF22_cast = _itkPadImageFilterPython.itkPadImageFilterIVF22IVF22_cast


def itkPadImageFilterIVF23IVF23_New():
    return itkPadImageFilterIVF23IVF23.New()

class itkPadImageFilterIVF23IVF23(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIVF23IVF23):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIVF23IVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF23IVF23_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF23IVF23_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF23IVF23_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF23IVF23_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF23IVF23_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF23IVF23_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterIVF23IVF23
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIVF23IVF23_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterIVF23IVF23

        Create a new object of the class itkPadImageFilterIVF23IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterIVF23IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterIVF23IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterIVF23IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterIVF23IVF23 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterIVF23IVF23_swigregister(itkPadImageFilterIVF23IVF23)
itkPadImageFilterIVF23IVF23___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterIVF23IVF23___New_orig__
itkPadImageFilterIVF23IVF23_cast = _itkPadImageFilterPython.itkPadImageFilterIVF23IVF23_cast


def itkPadImageFilterIVF32IVF32_New():
    return itkPadImageFilterIVF32IVF32.New()

class itkPadImageFilterIVF32IVF32(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIVF32IVF32):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIVF32IVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF32IVF32_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF32IVF32_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF32IVF32_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF32IVF32_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF32IVF32_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF32IVF32_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterIVF32IVF32
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIVF32IVF32_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterIVF32IVF32

        Create a new object of the class itkPadImageFilterIVF32IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterIVF32IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterIVF32IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterIVF32IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterIVF32IVF32 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterIVF32IVF32_swigregister(itkPadImageFilterIVF32IVF32)
itkPadImageFilterIVF32IVF32___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterIVF32IVF32___New_orig__
itkPadImageFilterIVF32IVF32_cast = _itkPadImageFilterPython.itkPadImageFilterIVF32IVF32_cast


def itkPadImageFilterIVF33IVF33_New():
    return itkPadImageFilterIVF33IVF33.New()

class itkPadImageFilterIVF33IVF33(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIVF33IVF33):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIVF33IVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF33IVF33_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF33IVF33_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF33IVF33_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF33IVF33_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF33IVF33_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF33IVF33_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterIVF33IVF33
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIVF33IVF33_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterIVF33IVF33

        Create a new object of the class itkPadImageFilterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterIVF33IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterIVF33IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterIVF33IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterIVF33IVF33 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterIVF33IVF33_swigregister(itkPadImageFilterIVF33IVF33)
itkPadImageFilterIVF33IVF33___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterIVF33IVF33___New_orig__
itkPadImageFilterIVF33IVF33_cast = _itkPadImageFilterPython.itkPadImageFilterIVF33IVF33_cast


def itkPadImageFilterIVF42IVF42_New():
    return itkPadImageFilterIVF42IVF42.New()

class itkPadImageFilterIVF42IVF42(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIVF42IVF42):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIVF42IVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF42IVF42_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF42IVF42_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF42IVF42_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF42IVF42_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF42IVF42_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF42IVF42_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterIVF42IVF42
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIVF42IVF42_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterIVF42IVF42

        Create a new object of the class itkPadImageFilterIVF42IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterIVF42IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterIVF42IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterIVF42IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterIVF42IVF42 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterIVF42IVF42_swigregister(itkPadImageFilterIVF42IVF42)
itkPadImageFilterIVF42IVF42___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterIVF42IVF42___New_orig__
itkPadImageFilterIVF42IVF42_cast = _itkPadImageFilterPython.itkPadImageFilterIVF42IVF42_cast


def itkPadImageFilterIVF43IVF43_New():
    return itkPadImageFilterIVF43IVF43.New()

class itkPadImageFilterIVF43IVF43(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIVF43IVF43):
    r"""


    Increase the image size by padding. Superclass for filters that fill
    in extra pixels.

    Visual explanation of padding regions. PadImageFilter changes the
    image boundary of an image by padding each dimension with subclass
    defined algorithms. The number of pixels to pad for the upper and
    lower bounds of each dimension must be specified.

    This filter is implemented as a multithreaded filter. It provides a
    ThreadedGenerateData() method for its implementation.

    See:   WrapPadImageFilter, MirrorPadImageFilter,
    ConstantPadImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIVF43IVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF43IVF43_Clone)
    GetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF43IVF43_GetPadLowerBound)
    GetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF43IVF43_GetPadUpperBound)
    SetPadLowerBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF43IVF43_SetPadLowerBound)
    SetPadUpperBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF43IVF43_SetPadUpperBound)
    SetPadBound = _swig_new_instance_method(_itkPadImageFilterPython.itkPadImageFilterIVF43IVF43_SetPadBound)
    __swig_destroy__ = _itkPadImageFilterPython.delete_itkPadImageFilterIVF43IVF43
    cast = _swig_new_static_method(_itkPadImageFilterPython.itkPadImageFilterIVF43IVF43_cast)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterIVF43IVF43

        Create a new object of the class itkPadImageFilterIVF43IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterIVF43IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterIVF43IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterIVF43IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterIVF43IVF43 in _itkPadImageFilterPython:
_itkPadImageFilterPython.itkPadImageFilterIVF43IVF43_swigregister(itkPadImageFilterIVF43IVF43)
itkPadImageFilterIVF43IVF43___New_orig__ = _itkPadImageFilterPython.itkPadImageFilterIVF43IVF43___New_orig__
itkPadImageFilterIVF43IVF43_cast = _itkPadImageFilterPython.itkPadImageFilterIVF43IVF43_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def pad_image_filter(*args, **kwargs):
    """Procedural interface for PadImageFilter"""
    import itk
    instance = itk.PadImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def pad_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.PadImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.PadImageFilter.values()[0]
    else:
        filter_object = itk.PadImageFilter

    pad_image_filter.__doc__ = filter_object.__doc__
    pad_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    pad_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.PadImageFilter, itkTemplate.itkTemplate):
        pad_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        pad_image_filter.__doc__ += "\n"
        pad_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        pad_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



