# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageIntensityPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkClampImageFilterPython
else:
    import _itkClampImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkClampImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkClampImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkRGBPixelPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterBPython

def itkClampImageFilterID2ID2_Superclass_New():
    return itkClampImageFilterID2ID2_Superclass.New()

class itkClampImageFilterID2ID2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""Proxy of C++ itkClampImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID2ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2ID2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2ID2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2ID2_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID2ID2_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID2ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID2ID2_Superclass

        Create a new object of the class itkClampImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterID2ID2_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterID2ID2_Superclass_swigregister(itkClampImageFilterID2ID2_Superclass)
itkClampImageFilterID2ID2_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterID2ID2_Superclass___New_orig__
itkClampImageFilterID2ID2_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterID2ID2_Superclass_cast


def itkClampImageFilterID2IF2_Superclass_New():
    return itkClampImageFilterID2IF2_Superclass.New()

class itkClampImageFilterID2IF2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2):
    r"""Proxy of C++ itkClampImageFilterID2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID2IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2IF2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2IF2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2IF2_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID2IF2_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID2IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID2IF2_Superclass

        Create a new object of the class itkClampImageFilterID2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterID2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterID2IF2_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterID2IF2_Superclass_swigregister(itkClampImageFilterID2IF2_Superclass)
itkClampImageFilterID2IF2_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterID2IF2_Superclass___New_orig__
itkClampImageFilterID2IF2_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterID2IF2_Superclass_cast


def itkClampImageFilterID2ISS2_Superclass_New():
    return itkClampImageFilterID2ISS2_Superclass.New()

class itkClampImageFilterID2ISS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ISS2):
    r"""Proxy of C++ itkClampImageFilterID2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID2ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2ISS2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2ISS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2ISS2_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID2ISS2_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID2ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID2ISS2_Superclass

        Create a new object of the class itkClampImageFilterID2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterID2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterID2ISS2_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterID2ISS2_Superclass_swigregister(itkClampImageFilterID2ISS2_Superclass)
itkClampImageFilterID2ISS2_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterID2ISS2_Superclass___New_orig__
itkClampImageFilterID2ISS2_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterID2ISS2_Superclass_cast


def itkClampImageFilterID2IUC2_Superclass_New():
    return itkClampImageFilterID2IUC2_Superclass.New()

class itkClampImageFilterID2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2):
    r"""Proxy of C++ itkClampImageFilterID2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID2IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2IUC2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2IUC2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2IUC2_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID2IUC2_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID2IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID2IUC2_Superclass

        Create a new object of the class itkClampImageFilterID2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterID2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterID2IUC2_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterID2IUC2_Superclass_swigregister(itkClampImageFilterID2IUC2_Superclass)
itkClampImageFilterID2IUC2_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterID2IUC2_Superclass___New_orig__
itkClampImageFilterID2IUC2_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterID2IUC2_Superclass_cast


def itkClampImageFilterID2IUS2_Superclass_New():
    return itkClampImageFilterID2IUS2_Superclass.New()

class itkClampImageFilterID2IUS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2):
    r"""Proxy of C++ itkClampImageFilterID2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID2IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2IUS2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2IUS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2IUS2_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID2IUS2_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID2IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID2IUS2_Superclass

        Create a new object of the class itkClampImageFilterID2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterID2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterID2IUS2_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterID2IUS2_Superclass_swigregister(itkClampImageFilterID2IUS2_Superclass)
itkClampImageFilterID2IUS2_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterID2IUS2_Superclass___New_orig__
itkClampImageFilterID2IUS2_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterID2IUS2_Superclass_cast


def itkClampImageFilterID3ID3_Superclass_New():
    return itkClampImageFilterID3ID3_Superclass.New()

class itkClampImageFilterID3ID3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""Proxy of C++ itkClampImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID3ID3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3ID3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3ID3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3ID3_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID3ID3_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID3ID3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID3ID3_Superclass

        Create a new object of the class itkClampImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterID3ID3_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterID3ID3_Superclass_swigregister(itkClampImageFilterID3ID3_Superclass)
itkClampImageFilterID3ID3_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterID3ID3_Superclass___New_orig__
itkClampImageFilterID3ID3_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterID3ID3_Superclass_cast


def itkClampImageFilterID3IF3_Superclass_New():
    return itkClampImageFilterID3IF3_Superclass.New()

class itkClampImageFilterID3IF3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3):
    r"""Proxy of C++ itkClampImageFilterID3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID3IF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3IF3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3IF3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3IF3_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID3IF3_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID3IF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID3IF3_Superclass

        Create a new object of the class itkClampImageFilterID3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterID3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterID3IF3_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterID3IF3_Superclass_swigregister(itkClampImageFilterID3IF3_Superclass)
itkClampImageFilterID3IF3_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterID3IF3_Superclass___New_orig__
itkClampImageFilterID3IF3_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterID3IF3_Superclass_cast


def itkClampImageFilterID3ISS3_Superclass_New():
    return itkClampImageFilterID3ISS3_Superclass.New()

class itkClampImageFilterID3ISS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ISS3):
    r"""Proxy of C++ itkClampImageFilterID3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID3ISS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3ISS3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3ISS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3ISS3_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID3ISS3_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID3ISS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID3ISS3_Superclass

        Create a new object of the class itkClampImageFilterID3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterID3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterID3ISS3_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterID3ISS3_Superclass_swigregister(itkClampImageFilterID3ISS3_Superclass)
itkClampImageFilterID3ISS3_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterID3ISS3_Superclass___New_orig__
itkClampImageFilterID3ISS3_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterID3ISS3_Superclass_cast


def itkClampImageFilterID3IUC3_Superclass_New():
    return itkClampImageFilterID3IUC3_Superclass.New()

class itkClampImageFilterID3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3):
    r"""Proxy of C++ itkClampImageFilterID3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID3IUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3IUC3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3IUC3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3IUC3_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID3IUC3_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID3IUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID3IUC3_Superclass

        Create a new object of the class itkClampImageFilterID3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterID3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterID3IUC3_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterID3IUC3_Superclass_swigregister(itkClampImageFilterID3IUC3_Superclass)
itkClampImageFilterID3IUC3_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterID3IUC3_Superclass___New_orig__
itkClampImageFilterID3IUC3_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterID3IUC3_Superclass_cast


def itkClampImageFilterID3IUS3_Superclass_New():
    return itkClampImageFilterID3IUS3_Superclass.New()

class itkClampImageFilterID3IUS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3):
    r"""Proxy of C++ itkClampImageFilterID3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID3IUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3IUS3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3IUS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3IUS3_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID3IUS3_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID3IUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID3IUS3_Superclass

        Create a new object of the class itkClampImageFilterID3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterID3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterID3IUS3_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterID3IUS3_Superclass_swigregister(itkClampImageFilterID3IUS3_Superclass)
itkClampImageFilterID3IUS3_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterID3IUS3_Superclass___New_orig__
itkClampImageFilterID3IUS3_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterID3IUS3_Superclass_cast


def itkClampImageFilterIF2ID2_Superclass_New():
    return itkClampImageFilterIF2ID2_Superclass.New()

class itkClampImageFilterIF2ID2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2):
    r"""Proxy of C++ itkClampImageFilterIF2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF2ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2ID2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2ID2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2ID2_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF2ID2_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF2ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF2ID2_Superclass

        Create a new object of the class itkClampImageFilterIF2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIF2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIF2ID2_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIF2ID2_Superclass_swigregister(itkClampImageFilterIF2ID2_Superclass)
itkClampImageFilterIF2ID2_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIF2ID2_Superclass___New_orig__
itkClampImageFilterIF2ID2_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIF2ID2_Superclass_cast


def itkClampImageFilterIF2IF2_Superclass_New():
    return itkClampImageFilterIF2IF2_Superclass.New()

class itkClampImageFilterIF2IF2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""Proxy of C++ itkClampImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF2IF2_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF2IF2_Superclass

        Create a new object of the class itkClampImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIF2IF2_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass_swigregister(itkClampImageFilterIF2IF2_Superclass)
itkClampImageFilterIF2IF2_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass___New_orig__
itkClampImageFilterIF2IF2_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass_cast


def itkClampImageFilterIF2ISS2_Superclass_New():
    return itkClampImageFilterIF2ISS2_Superclass.New()

class itkClampImageFilterIF2ISS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ISS2):
    r"""Proxy of C++ itkClampImageFilterIF2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF2ISS2_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF2ISS2_Superclass

        Create a new object of the class itkClampImageFilterIF2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIF2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIF2ISS2_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass_swigregister(itkClampImageFilterIF2ISS2_Superclass)
itkClampImageFilterIF2ISS2_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass___New_orig__
itkClampImageFilterIF2ISS2_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass_cast


def itkClampImageFilterIF2IUC2_Superclass_New():
    return itkClampImageFilterIF2IUC2_Superclass.New()

class itkClampImageFilterIF2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2):
    r"""Proxy of C++ itkClampImageFilterIF2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF2IUC2_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF2IUC2_Superclass

        Create a new object of the class itkClampImageFilterIF2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIF2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIF2IUC2_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass_swigregister(itkClampImageFilterIF2IUC2_Superclass)
itkClampImageFilterIF2IUC2_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass___New_orig__
itkClampImageFilterIF2IUC2_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass_cast


def itkClampImageFilterIF2IUS2_Superclass_New():
    return itkClampImageFilterIF2IUS2_Superclass.New()

class itkClampImageFilterIF2IUS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2):
    r"""Proxy of C++ itkClampImageFilterIF2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF2IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2IUS2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2IUS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2IUS2_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF2IUS2_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF2IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF2IUS2_Superclass

        Create a new object of the class itkClampImageFilterIF2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIF2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIF2IUS2_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIF2IUS2_Superclass_swigregister(itkClampImageFilterIF2IUS2_Superclass)
itkClampImageFilterIF2IUS2_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIF2IUS2_Superclass___New_orig__
itkClampImageFilterIF2IUS2_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIF2IUS2_Superclass_cast


def itkClampImageFilterIF3ID3_Superclass_New():
    return itkClampImageFilterIF3ID3_Superclass.New()

class itkClampImageFilterIF3ID3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3):
    r"""Proxy of C++ itkClampImageFilterIF3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF3ID3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3ID3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3ID3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3ID3_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF3ID3_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF3ID3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF3ID3_Superclass

        Create a new object of the class itkClampImageFilterIF3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIF3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIF3ID3_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIF3ID3_Superclass_swigregister(itkClampImageFilterIF3ID3_Superclass)
itkClampImageFilterIF3ID3_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIF3ID3_Superclass___New_orig__
itkClampImageFilterIF3ID3_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIF3ID3_Superclass_cast


def itkClampImageFilterIF3IF3_Superclass_New():
    return itkClampImageFilterIF3IF3_Superclass.New()

class itkClampImageFilterIF3IF3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""Proxy of C++ itkClampImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF3IF3_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF3IF3_Superclass

        Create a new object of the class itkClampImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIF3IF3_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass_swigregister(itkClampImageFilterIF3IF3_Superclass)
itkClampImageFilterIF3IF3_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass___New_orig__
itkClampImageFilterIF3IF3_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass_cast


def itkClampImageFilterIF3ISS3_Superclass_New():
    return itkClampImageFilterIF3ISS3_Superclass.New()

class itkClampImageFilterIF3ISS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ISS3):
    r"""Proxy of C++ itkClampImageFilterIF3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF3ISS3_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF3ISS3_Superclass

        Create a new object of the class itkClampImageFilterIF3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIF3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIF3ISS3_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass_swigregister(itkClampImageFilterIF3ISS3_Superclass)
itkClampImageFilterIF3ISS3_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass___New_orig__
itkClampImageFilterIF3ISS3_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass_cast


def itkClampImageFilterIF3IUC3_Superclass_New():
    return itkClampImageFilterIF3IUC3_Superclass.New()

class itkClampImageFilterIF3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3):
    r"""Proxy of C++ itkClampImageFilterIF3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF3IUC3_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF3IUC3_Superclass

        Create a new object of the class itkClampImageFilterIF3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIF3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIF3IUC3_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass_swigregister(itkClampImageFilterIF3IUC3_Superclass)
itkClampImageFilterIF3IUC3_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass___New_orig__
itkClampImageFilterIF3IUC3_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass_cast


def itkClampImageFilterIF3IUS3_Superclass_New():
    return itkClampImageFilterIF3IUS3_Superclass.New()

class itkClampImageFilterIF3IUS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3):
    r"""Proxy of C++ itkClampImageFilterIF3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF3IUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3IUS3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3IUS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3IUS3_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF3IUS3_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF3IUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF3IUS3_Superclass

        Create a new object of the class itkClampImageFilterIF3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIF3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIF3IUS3_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIF3IUS3_Superclass_swigregister(itkClampImageFilterIF3IUS3_Superclass)
itkClampImageFilterIF3IUS3_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIF3IUS3_Superclass___New_orig__
itkClampImageFilterIF3IUS3_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIF3IUS3_Superclass_cast


def itkClampImageFilterISS2ID2_Superclass_New():
    return itkClampImageFilterISS2ID2_Superclass.New()

class itkClampImageFilterISS2ID2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ID2):
    r"""Proxy of C++ itkClampImageFilterISS2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS2ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2ID2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2ID2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2ID2_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS2ID2_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS2ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS2ID2_Superclass

        Create a new object of the class itkClampImageFilterISS2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterISS2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterISS2ID2_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterISS2ID2_Superclass_swigregister(itkClampImageFilterISS2ID2_Superclass)
itkClampImageFilterISS2ID2_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterISS2ID2_Superclass___New_orig__
itkClampImageFilterISS2ID2_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterISS2ID2_Superclass_cast


def itkClampImageFilterISS2IF2_Superclass_New():
    return itkClampImageFilterISS2IF2_Superclass.New()

class itkClampImageFilterISS2IF2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IF2):
    r"""Proxy of C++ itkClampImageFilterISS2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS2IF2_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS2IF2_Superclass

        Create a new object of the class itkClampImageFilterISS2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterISS2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterISS2IF2_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass_swigregister(itkClampImageFilterISS2IF2_Superclass)
itkClampImageFilterISS2IF2_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass___New_orig__
itkClampImageFilterISS2IF2_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass_cast


def itkClampImageFilterISS2ISS2_Superclass_New():
    return itkClampImageFilterISS2ISS2_Superclass.New()

class itkClampImageFilterISS2ISS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    r"""Proxy of C++ itkClampImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS2ISS2_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS2ISS2_Superclass

        Create a new object of the class itkClampImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterISS2ISS2_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass_swigregister(itkClampImageFilterISS2ISS2_Superclass)
itkClampImageFilterISS2ISS2_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass___New_orig__
itkClampImageFilterISS2ISS2_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass_cast


def itkClampImageFilterISS2IUC2_Superclass_New():
    return itkClampImageFilterISS2IUC2_Superclass.New()

class itkClampImageFilterISS2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IUC2):
    r"""Proxy of C++ itkClampImageFilterISS2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS2IUC2_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS2IUC2_Superclass

        Create a new object of the class itkClampImageFilterISS2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterISS2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterISS2IUC2_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass_swigregister(itkClampImageFilterISS2IUC2_Superclass)
itkClampImageFilterISS2IUC2_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass___New_orig__
itkClampImageFilterISS2IUC2_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass_cast


def itkClampImageFilterISS2IUS2_Superclass_New():
    return itkClampImageFilterISS2IUS2_Superclass.New()

class itkClampImageFilterISS2IUS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IUS2):
    r"""Proxy of C++ itkClampImageFilterISS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS2IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2IUS2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2IUS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2IUS2_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS2IUS2_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS2IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS2IUS2_Superclass

        Create a new object of the class itkClampImageFilterISS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterISS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterISS2IUS2_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterISS2IUS2_Superclass_swigregister(itkClampImageFilterISS2IUS2_Superclass)
itkClampImageFilterISS2IUS2_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterISS2IUS2_Superclass___New_orig__
itkClampImageFilterISS2IUS2_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterISS2IUS2_Superclass_cast


def itkClampImageFilterISS3ID3_Superclass_New():
    return itkClampImageFilterISS3ID3_Superclass.New()

class itkClampImageFilterISS3ID3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ID3):
    r"""Proxy of C++ itkClampImageFilterISS3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS3ID3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3ID3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3ID3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3ID3_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS3ID3_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS3ID3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS3ID3_Superclass

        Create a new object of the class itkClampImageFilterISS3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterISS3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterISS3ID3_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterISS3ID3_Superclass_swigregister(itkClampImageFilterISS3ID3_Superclass)
itkClampImageFilterISS3ID3_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterISS3ID3_Superclass___New_orig__
itkClampImageFilterISS3ID3_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterISS3ID3_Superclass_cast


def itkClampImageFilterISS3IF3_Superclass_New():
    return itkClampImageFilterISS3IF3_Superclass.New()

class itkClampImageFilterISS3IF3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IF3):
    r"""Proxy of C++ itkClampImageFilterISS3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS3IF3_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS3IF3_Superclass

        Create a new object of the class itkClampImageFilterISS3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterISS3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterISS3IF3_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass_swigregister(itkClampImageFilterISS3IF3_Superclass)
itkClampImageFilterISS3IF3_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass___New_orig__
itkClampImageFilterISS3IF3_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass_cast


def itkClampImageFilterISS3ISS3_Superclass_New():
    return itkClampImageFilterISS3ISS3_Superclass.New()

class itkClampImageFilterISS3ISS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    r"""Proxy of C++ itkClampImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS3ISS3_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS3ISS3_Superclass

        Create a new object of the class itkClampImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterISS3ISS3_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass_swigregister(itkClampImageFilterISS3ISS3_Superclass)
itkClampImageFilterISS3ISS3_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass___New_orig__
itkClampImageFilterISS3ISS3_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass_cast


def itkClampImageFilterISS3IUC3_Superclass_New():
    return itkClampImageFilterISS3IUC3_Superclass.New()

class itkClampImageFilterISS3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IUC3):
    r"""Proxy of C++ itkClampImageFilterISS3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS3IUC3_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS3IUC3_Superclass

        Create a new object of the class itkClampImageFilterISS3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterISS3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterISS3IUC3_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass_swigregister(itkClampImageFilterISS3IUC3_Superclass)
itkClampImageFilterISS3IUC3_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass___New_orig__
itkClampImageFilterISS3IUC3_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass_cast


def itkClampImageFilterISS3IUS3_Superclass_New():
    return itkClampImageFilterISS3IUS3_Superclass.New()

class itkClampImageFilterISS3IUS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IUS3):
    r"""Proxy of C++ itkClampImageFilterISS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS3IUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3IUS3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3IUS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3IUS3_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS3IUS3_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS3IUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS3IUS3_Superclass

        Create a new object of the class itkClampImageFilterISS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterISS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterISS3IUS3_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterISS3IUS3_Superclass_swigregister(itkClampImageFilterISS3IUS3_Superclass)
itkClampImageFilterISS3IUS3_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterISS3IUS3_Superclass___New_orig__
itkClampImageFilterISS3IUS3_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterISS3IUS3_Superclass_cast


def itkClampImageFilterIUC2ID2_Superclass_New():
    return itkClampImageFilterIUC2ID2_Superclass.New()

class itkClampImageFilterIUC2ID2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2):
    r"""Proxy of C++ itkClampImageFilterIUC2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC2ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2ID2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2ID2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2ID2_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC2ID2_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC2ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC2ID2_Superclass

        Create a new object of the class itkClampImageFilterIUC2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUC2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUC2ID2_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUC2ID2_Superclass_swigregister(itkClampImageFilterIUC2ID2_Superclass)
itkClampImageFilterIUC2ID2_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUC2ID2_Superclass___New_orig__
itkClampImageFilterIUC2ID2_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIUC2ID2_Superclass_cast


def itkClampImageFilterIUC2IF2_Superclass_New():
    return itkClampImageFilterIUC2IF2_Superclass.New()

class itkClampImageFilterIUC2IF2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2):
    r"""Proxy of C++ itkClampImageFilterIUC2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC2IF2_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC2IF2_Superclass

        Create a new object of the class itkClampImageFilterIUC2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUC2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUC2IF2_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass_swigregister(itkClampImageFilterIUC2IF2_Superclass)
itkClampImageFilterIUC2IF2_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass___New_orig__
itkClampImageFilterIUC2IF2_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass_cast


def itkClampImageFilterIUC2ISS2_Superclass_New():
    return itkClampImageFilterIUC2ISS2_Superclass.New()

class itkClampImageFilterIUC2ISS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ISS2):
    r"""Proxy of C++ itkClampImageFilterIUC2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC2ISS2_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC2ISS2_Superclass

        Create a new object of the class itkClampImageFilterIUC2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUC2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUC2ISS2_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass_swigregister(itkClampImageFilterIUC2ISS2_Superclass)
itkClampImageFilterIUC2ISS2_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass___New_orig__
itkClampImageFilterIUC2ISS2_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass_cast


def itkClampImageFilterIUC2IUC2_Superclass_New():
    return itkClampImageFilterIUC2IUC2_Superclass.New()

class itkClampImageFilterIUC2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    r"""Proxy of C++ itkClampImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC2IUC2_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkClampImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUC2IUC2_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass_swigregister(itkClampImageFilterIUC2IUC2_Superclass)
itkClampImageFilterIUC2IUC2_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass___New_orig__
itkClampImageFilterIUC2IUC2_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass_cast


def itkClampImageFilterIUC2IUS2_Superclass_New():
    return itkClampImageFilterIUC2IUS2_Superclass.New()

class itkClampImageFilterIUC2IUS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2):
    r"""Proxy of C++ itkClampImageFilterIUC2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC2IUS2_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC2IUS2_Superclass

        Create a new object of the class itkClampImageFilterIUC2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUC2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUC2IUS2_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_Superclass_swigregister(itkClampImageFilterIUC2IUS2_Superclass)
itkClampImageFilterIUC2IUS2_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_Superclass___New_orig__
itkClampImageFilterIUC2IUS2_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_Superclass_cast


def itkClampImageFilterIUC3ID3_Superclass_New():
    return itkClampImageFilterIUC3ID3_Superclass.New()

class itkClampImageFilterIUC3ID3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3):
    r"""Proxy of C++ itkClampImageFilterIUC3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC3ID3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3ID3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3ID3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3ID3_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC3ID3_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC3ID3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC3ID3_Superclass

        Create a new object of the class itkClampImageFilterIUC3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUC3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUC3ID3_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUC3ID3_Superclass_swigregister(itkClampImageFilterIUC3ID3_Superclass)
itkClampImageFilterIUC3ID3_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUC3ID3_Superclass___New_orig__
itkClampImageFilterIUC3ID3_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIUC3ID3_Superclass_cast


def itkClampImageFilterIUC3IF3_Superclass_New():
    return itkClampImageFilterIUC3IF3_Superclass.New()

class itkClampImageFilterIUC3IF3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3):
    r"""Proxy of C++ itkClampImageFilterIUC3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC3IF3_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC3IF3_Superclass

        Create a new object of the class itkClampImageFilterIUC3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUC3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUC3IF3_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass_swigregister(itkClampImageFilterIUC3IF3_Superclass)
itkClampImageFilterIUC3IF3_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass___New_orig__
itkClampImageFilterIUC3IF3_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass_cast


def itkClampImageFilterIUC3ISS3_Superclass_New():
    return itkClampImageFilterIUC3ISS3_Superclass.New()

class itkClampImageFilterIUC3ISS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ISS3):
    r"""Proxy of C++ itkClampImageFilterIUC3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC3ISS3_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC3ISS3_Superclass

        Create a new object of the class itkClampImageFilterIUC3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUC3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUC3ISS3_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass_swigregister(itkClampImageFilterIUC3ISS3_Superclass)
itkClampImageFilterIUC3ISS3_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass___New_orig__
itkClampImageFilterIUC3ISS3_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass_cast


def itkClampImageFilterIUC3IUC3_Superclass_New():
    return itkClampImageFilterIUC3IUC3_Superclass.New()

class itkClampImageFilterIUC3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    r"""Proxy of C++ itkClampImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC3IUC3_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkClampImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUC3IUC3_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass_swigregister(itkClampImageFilterIUC3IUC3_Superclass)
itkClampImageFilterIUC3IUC3_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass___New_orig__
itkClampImageFilterIUC3IUC3_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass_cast


def itkClampImageFilterIUC3IUS3_Superclass_New():
    return itkClampImageFilterIUC3IUS3_Superclass.New()

class itkClampImageFilterIUC3IUS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3):
    r"""Proxy of C++ itkClampImageFilterIUC3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC3IUS3_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC3IUS3_Superclass

        Create a new object of the class itkClampImageFilterIUC3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUC3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUC3IUS3_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_Superclass_swigregister(itkClampImageFilterIUC3IUS3_Superclass)
itkClampImageFilterIUC3IUS3_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_Superclass___New_orig__
itkClampImageFilterIUC3IUS3_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_Superclass_cast


def itkClampImageFilterIUS2ID2_Superclass_New():
    return itkClampImageFilterIUS2ID2_Superclass.New()

class itkClampImageFilterIUS2ID2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2):
    r"""Proxy of C++ itkClampImageFilterIUS2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS2ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2ID2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2ID2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2ID2_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS2ID2_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS2ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS2ID2_Superclass

        Create a new object of the class itkClampImageFilterIUS2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUS2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUS2ID2_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUS2ID2_Superclass_swigregister(itkClampImageFilterIUS2ID2_Superclass)
itkClampImageFilterIUS2ID2_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUS2ID2_Superclass___New_orig__
itkClampImageFilterIUS2ID2_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIUS2ID2_Superclass_cast


def itkClampImageFilterIUS2IF2_Superclass_New():
    return itkClampImageFilterIUS2IF2_Superclass.New()

class itkClampImageFilterIUS2IF2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2):
    r"""Proxy of C++ itkClampImageFilterIUS2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IF2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IF2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IF2_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS2IF2_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS2IF2_Superclass

        Create a new object of the class itkClampImageFilterIUS2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUS2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUS2IF2_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUS2IF2_Superclass_swigregister(itkClampImageFilterIUS2IF2_Superclass)
itkClampImageFilterIUS2IF2_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUS2IF2_Superclass___New_orig__
itkClampImageFilterIUS2IF2_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIUS2IF2_Superclass_cast


def itkClampImageFilterIUS2ISS2_Superclass_New():
    return itkClampImageFilterIUS2ISS2_Superclass.New()

class itkClampImageFilterIUS2ISS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ISS2):
    r"""Proxy of C++ itkClampImageFilterIUS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS2ISS2_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS2ISS2_Superclass

        Create a new object of the class itkClampImageFilterIUS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUS2ISS2_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_Superclass_swigregister(itkClampImageFilterIUS2ISS2_Superclass)
itkClampImageFilterIUS2ISS2_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_Superclass___New_orig__
itkClampImageFilterIUS2ISS2_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_Superclass_cast


def itkClampImageFilterIUS2IUC2_Superclass_New():
    return itkClampImageFilterIUS2IUC2_Superclass.New()

class itkClampImageFilterIUS2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2):
    r"""Proxy of C++ itkClampImageFilterIUS2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS2IUC2_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS2IUC2_Superclass

        Create a new object of the class itkClampImageFilterIUS2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUS2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUS2IUC2_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_Superclass_swigregister(itkClampImageFilterIUS2IUC2_Superclass)
itkClampImageFilterIUS2IUC2_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_Superclass___New_orig__
itkClampImageFilterIUS2IUC2_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_Superclass_cast


def itkClampImageFilterIUS2IUS2_Superclass_New():
    return itkClampImageFilterIUS2IUS2_Superclass.New()

class itkClampImageFilterIUS2IUS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""Proxy of C++ itkClampImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS2IUS2_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkClampImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUS2IUS2_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_Superclass_swigregister(itkClampImageFilterIUS2IUS2_Superclass)
itkClampImageFilterIUS2IUS2_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_Superclass___New_orig__
itkClampImageFilterIUS2IUS2_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_Superclass_cast


def itkClampImageFilterIUS3ID3_Superclass_New():
    return itkClampImageFilterIUS3ID3_Superclass.New()

class itkClampImageFilterIUS3ID3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3):
    r"""Proxy of C++ itkClampImageFilterIUS3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS3ID3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3ID3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3ID3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3ID3_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS3ID3_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS3ID3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS3ID3_Superclass

        Create a new object of the class itkClampImageFilterIUS3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUS3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUS3ID3_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUS3ID3_Superclass_swigregister(itkClampImageFilterIUS3ID3_Superclass)
itkClampImageFilterIUS3ID3_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUS3ID3_Superclass___New_orig__
itkClampImageFilterIUS3ID3_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIUS3ID3_Superclass_cast


def itkClampImageFilterIUS3IF3_Superclass_New():
    return itkClampImageFilterIUS3IF3_Superclass.New()

class itkClampImageFilterIUS3IF3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3):
    r"""Proxy of C++ itkClampImageFilterIUS3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IF3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IF3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IF3_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS3IF3_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS3IF3_Superclass

        Create a new object of the class itkClampImageFilterIUS3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUS3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUS3IF3_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUS3IF3_Superclass_swigregister(itkClampImageFilterIUS3IF3_Superclass)
itkClampImageFilterIUS3IF3_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUS3IF3_Superclass___New_orig__
itkClampImageFilterIUS3IF3_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIUS3IF3_Superclass_cast


def itkClampImageFilterIUS3ISS3_Superclass_New():
    return itkClampImageFilterIUS3ISS3_Superclass.New()

class itkClampImageFilterIUS3ISS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ISS3):
    r"""Proxy of C++ itkClampImageFilterIUS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS3ISS3_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS3ISS3_Superclass

        Create a new object of the class itkClampImageFilterIUS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUS3ISS3_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_Superclass_swigregister(itkClampImageFilterIUS3ISS3_Superclass)
itkClampImageFilterIUS3ISS3_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_Superclass___New_orig__
itkClampImageFilterIUS3ISS3_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_Superclass_cast


def itkClampImageFilterIUS3IUC3_Superclass_New():
    return itkClampImageFilterIUS3IUC3_Superclass.New()

class itkClampImageFilterIUS3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3):
    r"""Proxy of C++ itkClampImageFilterIUS3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS3IUC3_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS3IUC3_Superclass

        Create a new object of the class itkClampImageFilterIUS3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUS3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUS3IUC3_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_Superclass_swigregister(itkClampImageFilterIUS3IUC3_Superclass)
itkClampImageFilterIUS3IUC3_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_Superclass___New_orig__
itkClampImageFilterIUS3IUC3_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_Superclass_cast


def itkClampImageFilterIUS3IUS3_Superclass_New():
    return itkClampImageFilterIUS3IUS3_Superclass.New()

class itkClampImageFilterIUS3IUS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""Proxy of C++ itkClampImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_Superclass_SetFunctor)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS3IUS3_Superclass
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkClampImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUS3IUS3_Superclass in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_Superclass_swigregister(itkClampImageFilterIUS3IUS3_Superclass)
itkClampImageFilterIUS3IUS3_Superclass___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_Superclass___New_orig__
itkClampImageFilterIUS3IUS3_Superclass_cast = _itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_Superclass_cast


def itkClampImageFilterID2ID2_New():
    return itkClampImageFilterID2ID2.New()

class itkClampImageFilterID2ID2(itkClampImageFilterID2ID2_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2ID2_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2ID2_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2ID2_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2ID2_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID2ID2
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID2ID2

        Create a new object of the class itkClampImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterID2ID2 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterID2ID2_swigregister(itkClampImageFilterID2ID2)
itkClampImageFilterID2ID2___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterID2ID2___New_orig__
itkClampImageFilterID2ID2_cast = _itkClampImageFilterPython.itkClampImageFilterID2ID2_cast


def itkClampImageFilterID2IF2_New():
    return itkClampImageFilterID2IF2.New()

class itkClampImageFilterID2IF2(itkClampImageFilterID2IF2_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2IF2_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2IF2_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2IF2_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2IF2_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID2IF2
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID2IF2

        Create a new object of the class itkClampImageFilterID2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterID2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterID2IF2 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterID2IF2_swigregister(itkClampImageFilterID2IF2)
itkClampImageFilterID2IF2___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterID2IF2___New_orig__
itkClampImageFilterID2IF2_cast = _itkClampImageFilterPython.itkClampImageFilterID2IF2_cast


def itkClampImageFilterID2ISS2_New():
    return itkClampImageFilterID2ISS2.New()

class itkClampImageFilterID2ISS2(itkClampImageFilterID2ISS2_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2ISS2_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2ISS2_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2ISS2_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2ISS2_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID2ISS2
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID2ISS2

        Create a new object of the class itkClampImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterID2ISS2 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterID2ISS2_swigregister(itkClampImageFilterID2ISS2)
itkClampImageFilterID2ISS2___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterID2ISS2___New_orig__
itkClampImageFilterID2ISS2_cast = _itkClampImageFilterPython.itkClampImageFilterID2ISS2_cast


def itkClampImageFilterID2IUC2_New():
    return itkClampImageFilterID2IUC2.New()

class itkClampImageFilterID2IUC2(itkClampImageFilterID2IUC2_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2IUC2_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2IUC2_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2IUC2_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2IUC2_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID2IUC2
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID2IUC2

        Create a new object of the class itkClampImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterID2IUC2 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterID2IUC2_swigregister(itkClampImageFilterID2IUC2)
itkClampImageFilterID2IUC2___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterID2IUC2___New_orig__
itkClampImageFilterID2IUC2_cast = _itkClampImageFilterPython.itkClampImageFilterID2IUC2_cast


def itkClampImageFilterID2IUS2_New():
    return itkClampImageFilterID2IUS2.New()

class itkClampImageFilterID2IUS2(itkClampImageFilterID2IUS2_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2IUS2_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2IUS2_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2IUS2_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID2IUS2_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID2IUS2
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID2IUS2

        Create a new object of the class itkClampImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterID2IUS2 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterID2IUS2_swigregister(itkClampImageFilterID2IUS2)
itkClampImageFilterID2IUS2___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterID2IUS2___New_orig__
itkClampImageFilterID2IUS2_cast = _itkClampImageFilterPython.itkClampImageFilterID2IUS2_cast


def itkClampImageFilterID3ID3_New():
    return itkClampImageFilterID3ID3.New()

class itkClampImageFilterID3ID3(itkClampImageFilterID3ID3_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3ID3_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3ID3_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3ID3_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3ID3_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID3ID3
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID3ID3

        Create a new object of the class itkClampImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterID3ID3 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterID3ID3_swigregister(itkClampImageFilterID3ID3)
itkClampImageFilterID3ID3___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterID3ID3___New_orig__
itkClampImageFilterID3ID3_cast = _itkClampImageFilterPython.itkClampImageFilterID3ID3_cast


def itkClampImageFilterID3IF3_New():
    return itkClampImageFilterID3IF3.New()

class itkClampImageFilterID3IF3(itkClampImageFilterID3IF3_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3IF3_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3IF3_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3IF3_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3IF3_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID3IF3
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID3IF3

        Create a new object of the class itkClampImageFilterID3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterID3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterID3IF3 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterID3IF3_swigregister(itkClampImageFilterID3IF3)
itkClampImageFilterID3IF3___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterID3IF3___New_orig__
itkClampImageFilterID3IF3_cast = _itkClampImageFilterPython.itkClampImageFilterID3IF3_cast


def itkClampImageFilterID3ISS3_New():
    return itkClampImageFilterID3ISS3.New()

class itkClampImageFilterID3ISS3(itkClampImageFilterID3ISS3_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3ISS3_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3ISS3_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3ISS3_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3ISS3_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID3ISS3
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID3ISS3

        Create a new object of the class itkClampImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterID3ISS3 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterID3ISS3_swigregister(itkClampImageFilterID3ISS3)
itkClampImageFilterID3ISS3___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterID3ISS3___New_orig__
itkClampImageFilterID3ISS3_cast = _itkClampImageFilterPython.itkClampImageFilterID3ISS3_cast


def itkClampImageFilterID3IUC3_New():
    return itkClampImageFilterID3IUC3.New()

class itkClampImageFilterID3IUC3(itkClampImageFilterID3IUC3_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3IUC3_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3IUC3_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3IUC3_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3IUC3_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID3IUC3
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID3IUC3

        Create a new object of the class itkClampImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterID3IUC3 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterID3IUC3_swigregister(itkClampImageFilterID3IUC3)
itkClampImageFilterID3IUC3___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterID3IUC3___New_orig__
itkClampImageFilterID3IUC3_cast = _itkClampImageFilterPython.itkClampImageFilterID3IUC3_cast


def itkClampImageFilterID3IUS3_New():
    return itkClampImageFilterID3IUS3.New()

class itkClampImageFilterID3IUS3(itkClampImageFilterID3IUS3_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3IUS3_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3IUS3_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3IUS3_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterID3IUS3_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterID3IUS3
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterID3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterID3IUS3

        Create a new object of the class itkClampImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterID3IUS3 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterID3IUS3_swigregister(itkClampImageFilterID3IUS3)
itkClampImageFilterID3IUS3___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterID3IUS3___New_orig__
itkClampImageFilterID3IUS3_cast = _itkClampImageFilterPython.itkClampImageFilterID3IUS3_cast


def itkClampImageFilterIF2ID2_New():
    return itkClampImageFilterIF2ID2.New()

class itkClampImageFilterIF2ID2(itkClampImageFilterIF2ID2_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2ID2_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2ID2_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2ID2_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2ID2_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF2ID2
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF2ID2

        Create a new object of the class itkClampImageFilterIF2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIF2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIF2ID2 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIF2ID2_swigregister(itkClampImageFilterIF2ID2)
itkClampImageFilterIF2ID2___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIF2ID2___New_orig__
itkClampImageFilterIF2ID2_cast = _itkClampImageFilterPython.itkClampImageFilterIF2ID2_cast


def itkClampImageFilterIF2IF2_New():
    return itkClampImageFilterIF2IF2.New()

class itkClampImageFilterIF2IF2(itkClampImageFilterIF2IF2_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2IF2_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2IF2_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2IF2_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2IF2_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF2IF2
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF2IF2

        Create a new object of the class itkClampImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIF2IF2 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIF2IF2_swigregister(itkClampImageFilterIF2IF2)
itkClampImageFilterIF2IF2___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIF2IF2___New_orig__
itkClampImageFilterIF2IF2_cast = _itkClampImageFilterPython.itkClampImageFilterIF2IF2_cast


def itkClampImageFilterIF2ISS2_New():
    return itkClampImageFilterIF2ISS2.New()

class itkClampImageFilterIF2ISS2(itkClampImageFilterIF2ISS2_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF2ISS2
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF2ISS2

        Create a new object of the class itkClampImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIF2ISS2 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_swigregister(itkClampImageFilterIF2ISS2)
itkClampImageFilterIF2ISS2___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIF2ISS2___New_orig__
itkClampImageFilterIF2ISS2_cast = _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_cast


def itkClampImageFilterIF2IUC2_New():
    return itkClampImageFilterIF2IUC2.New()

class itkClampImageFilterIF2IUC2(itkClampImageFilterIF2IUC2_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF2IUC2
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF2IUC2

        Create a new object of the class itkClampImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIF2IUC2 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_swigregister(itkClampImageFilterIF2IUC2)
itkClampImageFilterIF2IUC2___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIF2IUC2___New_orig__
itkClampImageFilterIF2IUC2_cast = _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_cast


def itkClampImageFilterIF2IUS2_New():
    return itkClampImageFilterIF2IUS2.New()

class itkClampImageFilterIF2IUS2(itkClampImageFilterIF2IUS2_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2IUS2_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2IUS2_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2IUS2_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF2IUS2_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF2IUS2
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF2IUS2

        Create a new object of the class itkClampImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIF2IUS2 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIF2IUS2_swigregister(itkClampImageFilterIF2IUS2)
itkClampImageFilterIF2IUS2___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIF2IUS2___New_orig__
itkClampImageFilterIF2IUS2_cast = _itkClampImageFilterPython.itkClampImageFilterIF2IUS2_cast


def itkClampImageFilterIF3ID3_New():
    return itkClampImageFilterIF3ID3.New()

class itkClampImageFilterIF3ID3(itkClampImageFilterIF3ID3_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3ID3_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3ID3_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3ID3_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3ID3_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF3ID3
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF3ID3

        Create a new object of the class itkClampImageFilterIF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIF3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIF3ID3 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIF3ID3_swigregister(itkClampImageFilterIF3ID3)
itkClampImageFilterIF3ID3___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIF3ID3___New_orig__
itkClampImageFilterIF3ID3_cast = _itkClampImageFilterPython.itkClampImageFilterIF3ID3_cast


def itkClampImageFilterIF3IF3_New():
    return itkClampImageFilterIF3IF3.New()

class itkClampImageFilterIF3IF3(itkClampImageFilterIF3IF3_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3IF3_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3IF3_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3IF3_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3IF3_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF3IF3
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF3IF3

        Create a new object of the class itkClampImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIF3IF3 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIF3IF3_swigregister(itkClampImageFilterIF3IF3)
itkClampImageFilterIF3IF3___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIF3IF3___New_orig__
itkClampImageFilterIF3IF3_cast = _itkClampImageFilterPython.itkClampImageFilterIF3IF3_cast


def itkClampImageFilterIF3ISS3_New():
    return itkClampImageFilterIF3ISS3.New()

class itkClampImageFilterIF3ISS3(itkClampImageFilterIF3ISS3_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF3ISS3
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF3ISS3

        Create a new object of the class itkClampImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIF3ISS3 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_swigregister(itkClampImageFilterIF3ISS3)
itkClampImageFilterIF3ISS3___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIF3ISS3___New_orig__
itkClampImageFilterIF3ISS3_cast = _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_cast


def itkClampImageFilterIF3IUC3_New():
    return itkClampImageFilterIF3IUC3.New()

class itkClampImageFilterIF3IUC3(itkClampImageFilterIF3IUC3_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF3IUC3
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF3IUC3

        Create a new object of the class itkClampImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIF3IUC3 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_swigregister(itkClampImageFilterIF3IUC3)
itkClampImageFilterIF3IUC3___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIF3IUC3___New_orig__
itkClampImageFilterIF3IUC3_cast = _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_cast


def itkClampImageFilterIF3IUS3_New():
    return itkClampImageFilterIF3IUS3.New()

class itkClampImageFilterIF3IUS3(itkClampImageFilterIF3IUS3_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3IUS3_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3IUS3_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3IUS3_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIF3IUS3_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF3IUS3
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIF3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF3IUS3

        Create a new object of the class itkClampImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIF3IUS3 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIF3IUS3_swigregister(itkClampImageFilterIF3IUS3)
itkClampImageFilterIF3IUS3___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIF3IUS3___New_orig__
itkClampImageFilterIF3IUS3_cast = _itkClampImageFilterPython.itkClampImageFilterIF3IUS3_cast


def itkClampImageFilterISS2ID2_New():
    return itkClampImageFilterISS2ID2.New()

class itkClampImageFilterISS2ID2(itkClampImageFilterISS2ID2_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2ID2_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2ID2_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2ID2_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2ID2_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS2ID2
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS2ID2

        Create a new object of the class itkClampImageFilterISS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterISS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterISS2ID2 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterISS2ID2_swigregister(itkClampImageFilterISS2ID2)
itkClampImageFilterISS2ID2___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterISS2ID2___New_orig__
itkClampImageFilterISS2ID2_cast = _itkClampImageFilterPython.itkClampImageFilterISS2ID2_cast


def itkClampImageFilterISS2IF2_New():
    return itkClampImageFilterISS2IF2.New()

class itkClampImageFilterISS2IF2(itkClampImageFilterISS2IF2_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2IF2_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2IF2_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2IF2_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2IF2_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS2IF2
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS2IF2

        Create a new object of the class itkClampImageFilterISS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterISS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterISS2IF2 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterISS2IF2_swigregister(itkClampImageFilterISS2IF2)
itkClampImageFilterISS2IF2___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterISS2IF2___New_orig__
itkClampImageFilterISS2IF2_cast = _itkClampImageFilterPython.itkClampImageFilterISS2IF2_cast


def itkClampImageFilterISS2ISS2_New():
    return itkClampImageFilterISS2ISS2.New()

class itkClampImageFilterISS2ISS2(itkClampImageFilterISS2ISS2_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS2ISS2

        Create a new object of the class itkClampImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterISS2ISS2 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_swigregister(itkClampImageFilterISS2ISS2)
itkClampImageFilterISS2ISS2___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterISS2ISS2___New_orig__
itkClampImageFilterISS2ISS2_cast = _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_cast


def itkClampImageFilterISS2IUC2_New():
    return itkClampImageFilterISS2IUC2.New()

class itkClampImageFilterISS2IUC2(itkClampImageFilterISS2IUC2_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS2IUC2
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS2IUC2

        Create a new object of the class itkClampImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterISS2IUC2 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_swigregister(itkClampImageFilterISS2IUC2)
itkClampImageFilterISS2IUC2___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterISS2IUC2___New_orig__
itkClampImageFilterISS2IUC2_cast = _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_cast


def itkClampImageFilterISS2IUS2_New():
    return itkClampImageFilterISS2IUS2.New()

class itkClampImageFilterISS2IUS2(itkClampImageFilterISS2IUS2_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2IUS2_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2IUS2_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2IUS2_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS2IUS2_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS2IUS2
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS2IUS2

        Create a new object of the class itkClampImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterISS2IUS2 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterISS2IUS2_swigregister(itkClampImageFilterISS2IUS2)
itkClampImageFilterISS2IUS2___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterISS2IUS2___New_orig__
itkClampImageFilterISS2IUS2_cast = _itkClampImageFilterPython.itkClampImageFilterISS2IUS2_cast


def itkClampImageFilterISS3ID3_New():
    return itkClampImageFilterISS3ID3.New()

class itkClampImageFilterISS3ID3(itkClampImageFilterISS3ID3_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3ID3_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3ID3_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3ID3_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3ID3_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS3ID3
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS3ID3

        Create a new object of the class itkClampImageFilterISS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterISS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterISS3ID3 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterISS3ID3_swigregister(itkClampImageFilterISS3ID3)
itkClampImageFilterISS3ID3___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterISS3ID3___New_orig__
itkClampImageFilterISS3ID3_cast = _itkClampImageFilterPython.itkClampImageFilterISS3ID3_cast


def itkClampImageFilterISS3IF3_New():
    return itkClampImageFilterISS3IF3.New()

class itkClampImageFilterISS3IF3(itkClampImageFilterISS3IF3_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3IF3_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3IF3_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3IF3_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3IF3_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS3IF3
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS3IF3

        Create a new object of the class itkClampImageFilterISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterISS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterISS3IF3 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterISS3IF3_swigregister(itkClampImageFilterISS3IF3)
itkClampImageFilterISS3IF3___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterISS3IF3___New_orig__
itkClampImageFilterISS3IF3_cast = _itkClampImageFilterPython.itkClampImageFilterISS3IF3_cast


def itkClampImageFilterISS3ISS3_New():
    return itkClampImageFilterISS3ISS3.New()

class itkClampImageFilterISS3ISS3(itkClampImageFilterISS3ISS3_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS3ISS3

        Create a new object of the class itkClampImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterISS3ISS3 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_swigregister(itkClampImageFilterISS3ISS3)
itkClampImageFilterISS3ISS3___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterISS3ISS3___New_orig__
itkClampImageFilterISS3ISS3_cast = _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_cast


def itkClampImageFilterISS3IUC3_New():
    return itkClampImageFilterISS3IUC3.New()

class itkClampImageFilterISS3IUC3(itkClampImageFilterISS3IUC3_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS3IUC3
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS3IUC3

        Create a new object of the class itkClampImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterISS3IUC3 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_swigregister(itkClampImageFilterISS3IUC3)
itkClampImageFilterISS3IUC3___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterISS3IUC3___New_orig__
itkClampImageFilterISS3IUC3_cast = _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_cast


def itkClampImageFilterISS3IUS3_New():
    return itkClampImageFilterISS3IUS3.New()

class itkClampImageFilterISS3IUS3(itkClampImageFilterISS3IUS3_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3IUS3_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3IUS3_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3IUS3_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterISS3IUS3_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS3IUS3
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterISS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS3IUS3

        Create a new object of the class itkClampImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterISS3IUS3 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterISS3IUS3_swigregister(itkClampImageFilterISS3IUS3)
itkClampImageFilterISS3IUS3___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterISS3IUS3___New_orig__
itkClampImageFilterISS3IUS3_cast = _itkClampImageFilterPython.itkClampImageFilterISS3IUS3_cast


def itkClampImageFilterIUC2ID2_New():
    return itkClampImageFilterIUC2ID2.New()

class itkClampImageFilterIUC2ID2(itkClampImageFilterIUC2ID2_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2ID2_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2ID2_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2ID2_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2ID2_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC2ID2
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC2ID2

        Create a new object of the class itkClampImageFilterIUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUC2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUC2ID2 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUC2ID2_swigregister(itkClampImageFilterIUC2ID2)
itkClampImageFilterIUC2ID2___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUC2ID2___New_orig__
itkClampImageFilterIUC2ID2_cast = _itkClampImageFilterPython.itkClampImageFilterIUC2ID2_cast


def itkClampImageFilterIUC2IF2_New():
    return itkClampImageFilterIUC2IF2.New()

class itkClampImageFilterIUC2IF2(itkClampImageFilterIUC2IF2_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC2IF2
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC2IF2

        Create a new object of the class itkClampImageFilterIUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUC2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUC2IF2 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_swigregister(itkClampImageFilterIUC2IF2)
itkClampImageFilterIUC2IF2___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUC2IF2___New_orig__
itkClampImageFilterIUC2IF2_cast = _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_cast


def itkClampImageFilterIUC2ISS2_New():
    return itkClampImageFilterIUC2ISS2.New()

class itkClampImageFilterIUC2ISS2(itkClampImageFilterIUC2ISS2_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC2ISS2
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC2ISS2

        Create a new object of the class itkClampImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUC2ISS2 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_swigregister(itkClampImageFilterIUC2ISS2)
itkClampImageFilterIUC2ISS2___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2___New_orig__
itkClampImageFilterIUC2ISS2_cast = _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_cast


def itkClampImageFilterIUC2IUC2_New():
    return itkClampImageFilterIUC2IUC2.New()

class itkClampImageFilterIUC2IUC2(itkClampImageFilterIUC2IUC2_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC2IUC2

        Create a new object of the class itkClampImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUC2IUC2 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_swigregister(itkClampImageFilterIUC2IUC2)
itkClampImageFilterIUC2IUC2___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2___New_orig__
itkClampImageFilterIUC2IUC2_cast = _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_cast


def itkClampImageFilterIUC2IUS2_New():
    return itkClampImageFilterIUC2IUS2.New()

class itkClampImageFilterIUC2IUS2(itkClampImageFilterIUC2IUS2_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC2IUS2
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC2IUS2

        Create a new object of the class itkClampImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUC2IUS2 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_swigregister(itkClampImageFilterIUC2IUS2)
itkClampImageFilterIUC2IUS2___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUC2IUS2___New_orig__
itkClampImageFilterIUC2IUS2_cast = _itkClampImageFilterPython.itkClampImageFilterIUC2IUS2_cast


def itkClampImageFilterIUC3ID3_New():
    return itkClampImageFilterIUC3ID3.New()

class itkClampImageFilterIUC3ID3(itkClampImageFilterIUC3ID3_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3ID3_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3ID3_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3ID3_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3ID3_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC3ID3
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC3ID3

        Create a new object of the class itkClampImageFilterIUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUC3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUC3ID3 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUC3ID3_swigregister(itkClampImageFilterIUC3ID3)
itkClampImageFilterIUC3ID3___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUC3ID3___New_orig__
itkClampImageFilterIUC3ID3_cast = _itkClampImageFilterPython.itkClampImageFilterIUC3ID3_cast


def itkClampImageFilterIUC3IF3_New():
    return itkClampImageFilterIUC3IF3.New()

class itkClampImageFilterIUC3IF3(itkClampImageFilterIUC3IF3_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC3IF3
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC3IF3

        Create a new object of the class itkClampImageFilterIUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUC3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUC3IF3 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_swigregister(itkClampImageFilterIUC3IF3)
itkClampImageFilterIUC3IF3___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUC3IF3___New_orig__
itkClampImageFilterIUC3IF3_cast = _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_cast


def itkClampImageFilterIUC3ISS3_New():
    return itkClampImageFilterIUC3ISS3.New()

class itkClampImageFilterIUC3ISS3(itkClampImageFilterIUC3ISS3_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC3ISS3
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC3ISS3

        Create a new object of the class itkClampImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUC3ISS3 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_swigregister(itkClampImageFilterIUC3ISS3)
itkClampImageFilterIUC3ISS3___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3___New_orig__
itkClampImageFilterIUC3ISS3_cast = _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_cast


def itkClampImageFilterIUC3IUC3_New():
    return itkClampImageFilterIUC3IUC3.New()

class itkClampImageFilterIUC3IUC3(itkClampImageFilterIUC3IUC3_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC3IUC3

        Create a new object of the class itkClampImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUC3IUC3 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_swigregister(itkClampImageFilterIUC3IUC3)
itkClampImageFilterIUC3IUC3___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3___New_orig__
itkClampImageFilterIUC3IUC3_cast = _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_cast


def itkClampImageFilterIUC3IUS3_New():
    return itkClampImageFilterIUC3IUS3.New()

class itkClampImageFilterIUC3IUS3(itkClampImageFilterIUC3IUS3_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC3IUS3
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC3IUS3

        Create a new object of the class itkClampImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUC3IUS3 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_swigregister(itkClampImageFilterIUC3IUS3)
itkClampImageFilterIUC3IUS3___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUC3IUS3___New_orig__
itkClampImageFilterIUC3IUS3_cast = _itkClampImageFilterPython.itkClampImageFilterIUC3IUS3_cast


def itkClampImageFilterIUS2ID2_New():
    return itkClampImageFilterIUS2ID2.New()

class itkClampImageFilterIUS2ID2(itkClampImageFilterIUS2ID2_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2ID2_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2ID2_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2ID2_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2ID2_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS2ID2
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS2ID2

        Create a new object of the class itkClampImageFilterIUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUS2ID2 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUS2ID2_swigregister(itkClampImageFilterIUS2ID2)
itkClampImageFilterIUS2ID2___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUS2ID2___New_orig__
itkClampImageFilterIUS2ID2_cast = _itkClampImageFilterPython.itkClampImageFilterIUS2ID2_cast


def itkClampImageFilterIUS2IF2_New():
    return itkClampImageFilterIUS2IF2.New()

class itkClampImageFilterIUS2IF2(itkClampImageFilterIUS2IF2_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IF2_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IF2_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IF2_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IF2_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS2IF2
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS2IF2

        Create a new object of the class itkClampImageFilterIUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUS2IF2 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUS2IF2_swigregister(itkClampImageFilterIUS2IF2)
itkClampImageFilterIUS2IF2___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUS2IF2___New_orig__
itkClampImageFilterIUS2IF2_cast = _itkClampImageFilterPython.itkClampImageFilterIUS2IF2_cast


def itkClampImageFilterIUS2ISS2_New():
    return itkClampImageFilterIUS2ISS2.New()

class itkClampImageFilterIUS2ISS2(itkClampImageFilterIUS2ISS2_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS2ISS2
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS2ISS2

        Create a new object of the class itkClampImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUS2ISS2 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_swigregister(itkClampImageFilterIUS2ISS2)
itkClampImageFilterIUS2ISS2___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUS2ISS2___New_orig__
itkClampImageFilterIUS2ISS2_cast = _itkClampImageFilterPython.itkClampImageFilterIUS2ISS2_cast


def itkClampImageFilterIUS2IUC2_New():
    return itkClampImageFilterIUS2IUC2.New()

class itkClampImageFilterIUS2IUC2(itkClampImageFilterIUS2IUC2_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS2IUC2
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS2IUC2

        Create a new object of the class itkClampImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUS2IUC2 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_swigregister(itkClampImageFilterIUS2IUC2)
itkClampImageFilterIUS2IUC2___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUS2IUC2___New_orig__
itkClampImageFilterIUS2IUC2_cast = _itkClampImageFilterPython.itkClampImageFilterIUS2IUC2_cast


def itkClampImageFilterIUS2IUS2_New():
    return itkClampImageFilterIUS2IUS2.New()

class itkClampImageFilterIUS2IUS2(itkClampImageFilterIUS2IUS2_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS2IUS2

        Create a new object of the class itkClampImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUS2IUS2 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_swigregister(itkClampImageFilterIUS2IUS2)
itkClampImageFilterIUS2IUS2___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUS2IUS2___New_orig__
itkClampImageFilterIUS2IUS2_cast = _itkClampImageFilterPython.itkClampImageFilterIUS2IUS2_cast


def itkClampImageFilterIUS3ID3_New():
    return itkClampImageFilterIUS3ID3.New()

class itkClampImageFilterIUS3ID3(itkClampImageFilterIUS3ID3_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3ID3_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3ID3_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3ID3_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3ID3_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS3ID3
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS3ID3

        Create a new object of the class itkClampImageFilterIUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUS3ID3 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUS3ID3_swigregister(itkClampImageFilterIUS3ID3)
itkClampImageFilterIUS3ID3___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUS3ID3___New_orig__
itkClampImageFilterIUS3ID3_cast = _itkClampImageFilterPython.itkClampImageFilterIUS3ID3_cast


def itkClampImageFilterIUS3IF3_New():
    return itkClampImageFilterIUS3IF3.New()

class itkClampImageFilterIUS3IF3(itkClampImageFilterIUS3IF3_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IF3_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IF3_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IF3_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IF3_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS3IF3
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS3IF3

        Create a new object of the class itkClampImageFilterIUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUS3IF3 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUS3IF3_swigregister(itkClampImageFilterIUS3IF3)
itkClampImageFilterIUS3IF3___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUS3IF3___New_orig__
itkClampImageFilterIUS3IF3_cast = _itkClampImageFilterPython.itkClampImageFilterIUS3IF3_cast


def itkClampImageFilterIUS3ISS3_New():
    return itkClampImageFilterIUS3ISS3.New()

class itkClampImageFilterIUS3ISS3(itkClampImageFilterIUS3ISS3_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS3ISS3
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS3ISS3

        Create a new object of the class itkClampImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUS3ISS3 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_swigregister(itkClampImageFilterIUS3ISS3)
itkClampImageFilterIUS3ISS3___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUS3ISS3___New_orig__
itkClampImageFilterIUS3ISS3_cast = _itkClampImageFilterPython.itkClampImageFilterIUS3ISS3_cast


def itkClampImageFilterIUS3IUC3_New():
    return itkClampImageFilterIUS3IUC3.New()

class itkClampImageFilterIUS3IUC3(itkClampImageFilterIUS3IUC3_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS3IUC3
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS3IUC3

        Create a new object of the class itkClampImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUS3IUC3 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_swigregister(itkClampImageFilterIUS3IUC3)
itkClampImageFilterIUS3IUC3___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUS3IUC3___New_orig__
itkClampImageFilterIUS3IUC3_cast = _itkClampImageFilterPython.itkClampImageFilterIUS3IUC3_cast


def itkClampImageFilterIUS3IUS3_New():
    return itkClampImageFilterIUS3IUS3.New()

class itkClampImageFilterIUS3IUS3(itkClampImageFilterIUS3IUS3_Superclass):
    r"""


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter  To Output Range} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_Clone)
    GetLowerBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_GetLowerBound)
    GetUpperBound = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_GetUpperBound)
    SetBounds = _swig_new_instance_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_SetBounds)
    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUS3IUS3

        Create a new object of the class itkClampImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkClampImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkClampImageFilterIUS3IUS3 in _itkClampImageFilterPython:
_itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_swigregister(itkClampImageFilterIUS3IUS3)
itkClampImageFilterIUS3IUS3___New_orig__ = _itkClampImageFilterPython.itkClampImageFilterIUS3IUS3___New_orig__
itkClampImageFilterIUS3IUS3_cast = _itkClampImageFilterPython.itkClampImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def clamp_image_filter(*args, **kwargs):
    """Procedural interface for ClampImageFilter"""
    import itk
    instance = itk.ClampImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def clamp_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ClampImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ClampImageFilter.values()[0]
    else:
        filter_object = itk.ClampImageFilter

    clamp_image_filter.__doc__ = filter_object.__doc__
    clamp_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    clamp_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ClampImageFilter, itkTemplate.itkTemplate):
        clamp_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        clamp_image_filter.__doc__ += "\n"
        clamp_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        clamp_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def unary_functor_image_filter(*args, **kwargs):
    """Procedural interface for UnaryFunctorImageFilter"""
    import itk
    instance = itk.UnaryFunctorImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def unary_functor_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.UnaryFunctorImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.UnaryFunctorImageFilter.values()[0]
    else:
        filter_object = itk.UnaryFunctorImageFilter

    unary_functor_image_filter.__doc__ = filter_object.__doc__
    unary_functor_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    unary_functor_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.UnaryFunctorImageFilter, itkTemplate.itkTemplate):
        unary_functor_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        unary_functor_image_filter.__doc__ += "\n"
        unary_functor_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        unary_functor_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



