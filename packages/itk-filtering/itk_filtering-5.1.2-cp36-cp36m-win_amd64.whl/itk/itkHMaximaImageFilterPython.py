# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKMathematicalMorphologyPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkHMaximaImageFilterPython
else:
    import _itkHMaximaImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkHMaximaImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkHMaximaImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkPointPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkRGBAPixelPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython

def itkHMaximaImageFilterID2ID2_New():
    return itkHMaximaImageFilterID2ID2.New()

class itkHMaximaImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""


    Suppress local maxima whose height above the baseline is less than h.

    HMaximaImageFilter suppresses local maxima that are less than h
    intensity units above the (local) background. This has the effect of
    smoothing over the "high" parts of the noise in the image without
    smoothing over large changes in intensity (region boundaries). See the
    HMinimaImageFilter to suppress the local minima whose depth is less
    than h intensity units below the (local) background.

    If the output of HMaximaImageFilter is subtracted from the original
    image, the significant "peaks" in the image can be identified. This
    is what the HConvexImageFilter provides.

    This filter uses the ReconstructionByDilationImageFilter. It provides
    its own input as the "mask" input to the geodesic dilation. The
    "marker" image for the geodesic dilation is the input image minus
    the height parameter h.

    Geodesic morphology and the H-Maxima algorithm is described in Chapter
    6 of Pierre Soille's book "Morphological Image Analysis: Principles
    and Applications", Second Edition, Springer, 2003.

    The height parameter is set using SetHeight.

    See:   ReconstructionByDilationImageFilter, HMinimaImageFilter,
    HConvexImageFilter

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterID2ID2_Clone)
    SetHeight = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterID2ID2_SetHeight)
    GetHeight = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterID2ID2_GetHeight)
    SetFullyConnected = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterID2ID2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterID2ID2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterID2ID2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterID2ID2_FullyConnectedOff)
    InputEqualityComparableCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterID2ID2_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterID2ID2_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterID2ID2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHMaximaImageFilterPython.delete_itkHMaximaImageFilterID2ID2
    cast = _swig_new_static_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkHMaximaImageFilterID2ID2

        Create a new object of the class itkHMaximaImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHMaximaImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHMaximaImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHMaximaImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHMaximaImageFilterID2ID2 in _itkHMaximaImageFilterPython:
_itkHMaximaImageFilterPython.itkHMaximaImageFilterID2ID2_swigregister(itkHMaximaImageFilterID2ID2)
itkHMaximaImageFilterID2ID2___New_orig__ = _itkHMaximaImageFilterPython.itkHMaximaImageFilterID2ID2___New_orig__
itkHMaximaImageFilterID2ID2_cast = _itkHMaximaImageFilterPython.itkHMaximaImageFilterID2ID2_cast


def itkHMaximaImageFilterID3ID3_New():
    return itkHMaximaImageFilterID3ID3.New()

class itkHMaximaImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""


    Suppress local maxima whose height above the baseline is less than h.

    HMaximaImageFilter suppresses local maxima that are less than h
    intensity units above the (local) background. This has the effect of
    smoothing over the "high" parts of the noise in the image without
    smoothing over large changes in intensity (region boundaries). See the
    HMinimaImageFilter to suppress the local minima whose depth is less
    than h intensity units below the (local) background.

    If the output of HMaximaImageFilter is subtracted from the original
    image, the significant "peaks" in the image can be identified. This
    is what the HConvexImageFilter provides.

    This filter uses the ReconstructionByDilationImageFilter. It provides
    its own input as the "mask" input to the geodesic dilation. The
    "marker" image for the geodesic dilation is the input image minus
    the height parameter h.

    Geodesic morphology and the H-Maxima algorithm is described in Chapter
    6 of Pierre Soille's book "Morphological Image Analysis: Principles
    and Applications", Second Edition, Springer, 2003.

    The height parameter is set using SetHeight.

    See:   ReconstructionByDilationImageFilter, HMinimaImageFilter,
    HConvexImageFilter

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterID3ID3_Clone)
    SetHeight = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterID3ID3_SetHeight)
    GetHeight = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterID3ID3_GetHeight)
    SetFullyConnected = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterID3ID3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterID3ID3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterID3ID3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterID3ID3_FullyConnectedOff)
    InputEqualityComparableCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterID3ID3_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterID3ID3_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterID3ID3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHMaximaImageFilterPython.delete_itkHMaximaImageFilterID3ID3
    cast = _swig_new_static_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkHMaximaImageFilterID3ID3

        Create a new object of the class itkHMaximaImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHMaximaImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHMaximaImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHMaximaImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHMaximaImageFilterID3ID3 in _itkHMaximaImageFilterPython:
_itkHMaximaImageFilterPython.itkHMaximaImageFilterID3ID3_swigregister(itkHMaximaImageFilterID3ID3)
itkHMaximaImageFilterID3ID3___New_orig__ = _itkHMaximaImageFilterPython.itkHMaximaImageFilterID3ID3___New_orig__
itkHMaximaImageFilterID3ID3_cast = _itkHMaximaImageFilterPython.itkHMaximaImageFilterID3ID3_cast


def itkHMaximaImageFilterIF2IF2_New():
    return itkHMaximaImageFilterIF2IF2.New()

class itkHMaximaImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""


    Suppress local maxima whose height above the baseline is less than h.

    HMaximaImageFilter suppresses local maxima that are less than h
    intensity units above the (local) background. This has the effect of
    smoothing over the "high" parts of the noise in the image without
    smoothing over large changes in intensity (region boundaries). See the
    HMinimaImageFilter to suppress the local minima whose depth is less
    than h intensity units below the (local) background.

    If the output of HMaximaImageFilter is subtracted from the original
    image, the significant "peaks" in the image can be identified. This
    is what the HConvexImageFilter provides.

    This filter uses the ReconstructionByDilationImageFilter. It provides
    its own input as the "mask" input to the geodesic dilation. The
    "marker" image for the geodesic dilation is the input image minus
    the height parameter h.

    Geodesic morphology and the H-Maxima algorithm is described in Chapter
    6 of Pierre Soille's book "Morphological Image Analysis: Principles
    and Applications", Second Edition, Springer, 2003.

    The height parameter is set using SetHeight.

    See:   ReconstructionByDilationImageFilter, HMinimaImageFilter,
    HConvexImageFilter

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIF2IF2_Clone)
    SetHeight = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIF2IF2_SetHeight)
    GetHeight = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIF2IF2_GetHeight)
    SetFullyConnected = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIF2IF2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIF2IF2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIF2IF2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIF2IF2_FullyConnectedOff)
    InputEqualityComparableCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIF2IF2_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIF2IF2_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIF2IF2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHMaximaImageFilterPython.delete_itkHMaximaImageFilterIF2IF2
    cast = _swig_new_static_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkHMaximaImageFilterIF2IF2

        Create a new object of the class itkHMaximaImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHMaximaImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHMaximaImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHMaximaImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHMaximaImageFilterIF2IF2 in _itkHMaximaImageFilterPython:
_itkHMaximaImageFilterPython.itkHMaximaImageFilterIF2IF2_swigregister(itkHMaximaImageFilterIF2IF2)
itkHMaximaImageFilterIF2IF2___New_orig__ = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIF2IF2___New_orig__
itkHMaximaImageFilterIF2IF2_cast = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIF2IF2_cast


def itkHMaximaImageFilterIF3IF3_New():
    return itkHMaximaImageFilterIF3IF3.New()

class itkHMaximaImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""


    Suppress local maxima whose height above the baseline is less than h.

    HMaximaImageFilter suppresses local maxima that are less than h
    intensity units above the (local) background. This has the effect of
    smoothing over the "high" parts of the noise in the image without
    smoothing over large changes in intensity (region boundaries). See the
    HMinimaImageFilter to suppress the local minima whose depth is less
    than h intensity units below the (local) background.

    If the output of HMaximaImageFilter is subtracted from the original
    image, the significant "peaks" in the image can be identified. This
    is what the HConvexImageFilter provides.

    This filter uses the ReconstructionByDilationImageFilter. It provides
    its own input as the "mask" input to the geodesic dilation. The
    "marker" image for the geodesic dilation is the input image minus
    the height parameter h.

    Geodesic morphology and the H-Maxima algorithm is described in Chapter
    6 of Pierre Soille's book "Morphological Image Analysis: Principles
    and Applications", Second Edition, Springer, 2003.

    The height parameter is set using SetHeight.

    See:   ReconstructionByDilationImageFilter, HMinimaImageFilter,
    HConvexImageFilter

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIF3IF3_Clone)
    SetHeight = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIF3IF3_SetHeight)
    GetHeight = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIF3IF3_GetHeight)
    SetFullyConnected = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIF3IF3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIF3IF3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIF3IF3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIF3IF3_FullyConnectedOff)
    InputEqualityComparableCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIF3IF3_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIF3IF3_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIF3IF3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHMaximaImageFilterPython.delete_itkHMaximaImageFilterIF3IF3
    cast = _swig_new_static_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkHMaximaImageFilterIF3IF3

        Create a new object of the class itkHMaximaImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHMaximaImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHMaximaImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHMaximaImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHMaximaImageFilterIF3IF3 in _itkHMaximaImageFilterPython:
_itkHMaximaImageFilterPython.itkHMaximaImageFilterIF3IF3_swigregister(itkHMaximaImageFilterIF3IF3)
itkHMaximaImageFilterIF3IF3___New_orig__ = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIF3IF3___New_orig__
itkHMaximaImageFilterIF3IF3_cast = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIF3IF3_cast


def itkHMaximaImageFilterISS2ISS2_New():
    return itkHMaximaImageFilterISS2ISS2.New()

class itkHMaximaImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""


    Suppress local maxima whose height above the baseline is less than h.

    HMaximaImageFilter suppresses local maxima that are less than h
    intensity units above the (local) background. This has the effect of
    smoothing over the "high" parts of the noise in the image without
    smoothing over large changes in intensity (region boundaries). See the
    HMinimaImageFilter to suppress the local minima whose depth is less
    than h intensity units below the (local) background.

    If the output of HMaximaImageFilter is subtracted from the original
    image, the significant "peaks" in the image can be identified. This
    is what the HConvexImageFilter provides.

    This filter uses the ReconstructionByDilationImageFilter. It provides
    its own input as the "mask" input to the geodesic dilation. The
    "marker" image for the geodesic dilation is the input image minus
    the height parameter h.

    Geodesic morphology and the H-Maxima algorithm is described in Chapter
    6 of Pierre Soille's book "Morphological Image Analysis: Principles
    and Applications", Second Edition, Springer, 2003.

    The height parameter is set using SetHeight.

    See:   ReconstructionByDilationImageFilter, HMinimaImageFilter,
    HConvexImageFilter

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterISS2ISS2_Clone)
    SetHeight = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterISS2ISS2_SetHeight)
    GetHeight = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterISS2ISS2_GetHeight)
    SetFullyConnected = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterISS2ISS2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterISS2ISS2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterISS2ISS2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterISS2ISS2_FullyConnectedOff)
    InputEqualityComparableCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterISS2ISS2_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterISS2ISS2_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterISS2ISS2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHMaximaImageFilterPython.delete_itkHMaximaImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkHMaximaImageFilterISS2ISS2

        Create a new object of the class itkHMaximaImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHMaximaImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHMaximaImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHMaximaImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHMaximaImageFilterISS2ISS2 in _itkHMaximaImageFilterPython:
_itkHMaximaImageFilterPython.itkHMaximaImageFilterISS2ISS2_swigregister(itkHMaximaImageFilterISS2ISS2)
itkHMaximaImageFilterISS2ISS2___New_orig__ = _itkHMaximaImageFilterPython.itkHMaximaImageFilterISS2ISS2___New_orig__
itkHMaximaImageFilterISS2ISS2_cast = _itkHMaximaImageFilterPython.itkHMaximaImageFilterISS2ISS2_cast


def itkHMaximaImageFilterISS3ISS3_New():
    return itkHMaximaImageFilterISS3ISS3.New()

class itkHMaximaImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""


    Suppress local maxima whose height above the baseline is less than h.

    HMaximaImageFilter suppresses local maxima that are less than h
    intensity units above the (local) background. This has the effect of
    smoothing over the "high" parts of the noise in the image without
    smoothing over large changes in intensity (region boundaries). See the
    HMinimaImageFilter to suppress the local minima whose depth is less
    than h intensity units below the (local) background.

    If the output of HMaximaImageFilter is subtracted from the original
    image, the significant "peaks" in the image can be identified. This
    is what the HConvexImageFilter provides.

    This filter uses the ReconstructionByDilationImageFilter. It provides
    its own input as the "mask" input to the geodesic dilation. The
    "marker" image for the geodesic dilation is the input image minus
    the height parameter h.

    Geodesic morphology and the H-Maxima algorithm is described in Chapter
    6 of Pierre Soille's book "Morphological Image Analysis: Principles
    and Applications", Second Edition, Springer, 2003.

    The height parameter is set using SetHeight.

    See:   ReconstructionByDilationImageFilter, HMinimaImageFilter,
    HConvexImageFilter

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterISS3ISS3_Clone)
    SetHeight = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterISS3ISS3_SetHeight)
    GetHeight = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterISS3ISS3_GetHeight)
    SetFullyConnected = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterISS3ISS3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterISS3ISS3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterISS3ISS3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterISS3ISS3_FullyConnectedOff)
    InputEqualityComparableCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterISS3ISS3_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterISS3ISS3_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterISS3ISS3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHMaximaImageFilterPython.delete_itkHMaximaImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkHMaximaImageFilterISS3ISS3

        Create a new object of the class itkHMaximaImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHMaximaImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHMaximaImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHMaximaImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHMaximaImageFilterISS3ISS3 in _itkHMaximaImageFilterPython:
_itkHMaximaImageFilterPython.itkHMaximaImageFilterISS3ISS3_swigregister(itkHMaximaImageFilterISS3ISS3)
itkHMaximaImageFilterISS3ISS3___New_orig__ = _itkHMaximaImageFilterPython.itkHMaximaImageFilterISS3ISS3___New_orig__
itkHMaximaImageFilterISS3ISS3_cast = _itkHMaximaImageFilterPython.itkHMaximaImageFilterISS3ISS3_cast


def itkHMaximaImageFilterIUC2IUC2_New():
    return itkHMaximaImageFilterIUC2IUC2.New()

class itkHMaximaImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""


    Suppress local maxima whose height above the baseline is less than h.

    HMaximaImageFilter suppresses local maxima that are less than h
    intensity units above the (local) background. This has the effect of
    smoothing over the "high" parts of the noise in the image without
    smoothing over large changes in intensity (region boundaries). See the
    HMinimaImageFilter to suppress the local minima whose depth is less
    than h intensity units below the (local) background.

    If the output of HMaximaImageFilter is subtracted from the original
    image, the significant "peaks" in the image can be identified. This
    is what the HConvexImageFilter provides.

    This filter uses the ReconstructionByDilationImageFilter. It provides
    its own input as the "mask" input to the geodesic dilation. The
    "marker" image for the geodesic dilation is the input image minus
    the height parameter h.

    Geodesic morphology and the H-Maxima algorithm is described in Chapter
    6 of Pierre Soille's book "Morphological Image Analysis: Principles
    and Applications", Second Edition, Springer, 2003.

    The height parameter is set using SetHeight.

    See:   ReconstructionByDilationImageFilter, HMinimaImageFilter,
    HConvexImageFilter

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC2IUC2_Clone)
    SetHeight = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC2IUC2_SetHeight)
    GetHeight = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC2IUC2_GetHeight)
    SetFullyConnected = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC2IUC2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC2IUC2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC2IUC2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC2IUC2_FullyConnectedOff)
    InputEqualityComparableCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC2IUC2_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC2IUC2_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC2IUC2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHMaximaImageFilterPython.delete_itkHMaximaImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkHMaximaImageFilterIUC2IUC2

        Create a new object of the class itkHMaximaImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHMaximaImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHMaximaImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHMaximaImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHMaximaImageFilterIUC2IUC2 in _itkHMaximaImageFilterPython:
_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC2IUC2_swigregister(itkHMaximaImageFilterIUC2IUC2)
itkHMaximaImageFilterIUC2IUC2___New_orig__ = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC2IUC2___New_orig__
itkHMaximaImageFilterIUC2IUC2_cast = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC2IUC2_cast


def itkHMaximaImageFilterIUC3IUC3_New():
    return itkHMaximaImageFilterIUC3IUC3.New()

class itkHMaximaImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""


    Suppress local maxima whose height above the baseline is less than h.

    HMaximaImageFilter suppresses local maxima that are less than h
    intensity units above the (local) background. This has the effect of
    smoothing over the "high" parts of the noise in the image without
    smoothing over large changes in intensity (region boundaries). See the
    HMinimaImageFilter to suppress the local minima whose depth is less
    than h intensity units below the (local) background.

    If the output of HMaximaImageFilter is subtracted from the original
    image, the significant "peaks" in the image can be identified. This
    is what the HConvexImageFilter provides.

    This filter uses the ReconstructionByDilationImageFilter. It provides
    its own input as the "mask" input to the geodesic dilation. The
    "marker" image for the geodesic dilation is the input image minus
    the height parameter h.

    Geodesic morphology and the H-Maxima algorithm is described in Chapter
    6 of Pierre Soille's book "Morphological Image Analysis: Principles
    and Applications", Second Edition, Springer, 2003.

    The height parameter is set using SetHeight.

    See:   ReconstructionByDilationImageFilter, HMinimaImageFilter,
    HConvexImageFilter

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC3IUC3_Clone)
    SetHeight = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC3IUC3_SetHeight)
    GetHeight = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC3IUC3_GetHeight)
    SetFullyConnected = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC3IUC3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC3IUC3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC3IUC3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC3IUC3_FullyConnectedOff)
    InputEqualityComparableCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC3IUC3_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC3IUC3_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC3IUC3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHMaximaImageFilterPython.delete_itkHMaximaImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkHMaximaImageFilterIUC3IUC3

        Create a new object of the class itkHMaximaImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHMaximaImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHMaximaImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHMaximaImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHMaximaImageFilterIUC3IUC3 in _itkHMaximaImageFilterPython:
_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC3IUC3_swigregister(itkHMaximaImageFilterIUC3IUC3)
itkHMaximaImageFilterIUC3IUC3___New_orig__ = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC3IUC3___New_orig__
itkHMaximaImageFilterIUC3IUC3_cast = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIUC3IUC3_cast


def itkHMaximaImageFilterIUS2IUS2_New():
    return itkHMaximaImageFilterIUS2IUS2.New()

class itkHMaximaImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""


    Suppress local maxima whose height above the baseline is less than h.

    HMaximaImageFilter suppresses local maxima that are less than h
    intensity units above the (local) background. This has the effect of
    smoothing over the "high" parts of the noise in the image without
    smoothing over large changes in intensity (region boundaries). See the
    HMinimaImageFilter to suppress the local minima whose depth is less
    than h intensity units below the (local) background.

    If the output of HMaximaImageFilter is subtracted from the original
    image, the significant "peaks" in the image can be identified. This
    is what the HConvexImageFilter provides.

    This filter uses the ReconstructionByDilationImageFilter. It provides
    its own input as the "mask" input to the geodesic dilation. The
    "marker" image for the geodesic dilation is the input image minus
    the height parameter h.

    Geodesic morphology and the H-Maxima algorithm is described in Chapter
    6 of Pierre Soille's book "Morphological Image Analysis: Principles
    and Applications", Second Edition, Springer, 2003.

    The height parameter is set using SetHeight.

    See:   ReconstructionByDilationImageFilter, HMinimaImageFilter,
    HConvexImageFilter

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS2IUS2_Clone)
    SetHeight = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS2IUS2_SetHeight)
    GetHeight = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS2IUS2_GetHeight)
    SetFullyConnected = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS2IUS2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS2IUS2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS2IUS2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS2IUS2_FullyConnectedOff)
    InputEqualityComparableCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS2IUS2_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS2IUS2_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS2IUS2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHMaximaImageFilterPython.delete_itkHMaximaImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkHMaximaImageFilterIUS2IUS2

        Create a new object of the class itkHMaximaImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHMaximaImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHMaximaImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHMaximaImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHMaximaImageFilterIUS2IUS2 in _itkHMaximaImageFilterPython:
_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS2IUS2_swigregister(itkHMaximaImageFilterIUS2IUS2)
itkHMaximaImageFilterIUS2IUS2___New_orig__ = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS2IUS2___New_orig__
itkHMaximaImageFilterIUS2IUS2_cast = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS2IUS2_cast


def itkHMaximaImageFilterIUS3IUS3_New():
    return itkHMaximaImageFilterIUS3IUS3.New()

class itkHMaximaImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""


    Suppress local maxima whose height above the baseline is less than h.

    HMaximaImageFilter suppresses local maxima that are less than h
    intensity units above the (local) background. This has the effect of
    smoothing over the "high" parts of the noise in the image without
    smoothing over large changes in intensity (region boundaries). See the
    HMinimaImageFilter to suppress the local minima whose depth is less
    than h intensity units below the (local) background.

    If the output of HMaximaImageFilter is subtracted from the original
    image, the significant "peaks" in the image can be identified. This
    is what the HConvexImageFilter provides.

    This filter uses the ReconstructionByDilationImageFilter. It provides
    its own input as the "mask" input to the geodesic dilation. The
    "marker" image for the geodesic dilation is the input image minus
    the height parameter h.

    Geodesic morphology and the H-Maxima algorithm is described in Chapter
    6 of Pierre Soille's book "Morphological Image Analysis: Principles
    and Applications", Second Edition, Springer, 2003.

    The height parameter is set using SetHeight.

    See:   ReconstructionByDilationImageFilter, HMinimaImageFilter,
    HConvexImageFilter

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS3IUS3_Clone)
    SetHeight = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS3IUS3_SetHeight)
    GetHeight = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS3IUS3_GetHeight)
    SetFullyConnected = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS3IUS3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS3IUS3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS3IUS3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS3IUS3_FullyConnectedOff)
    InputEqualityComparableCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS3IUS3_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS3IUS3_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS3IUS3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHMaximaImageFilterPython.delete_itkHMaximaImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkHMaximaImageFilterIUS3IUS3

        Create a new object of the class itkHMaximaImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHMaximaImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHMaximaImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHMaximaImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHMaximaImageFilterIUS3IUS3 in _itkHMaximaImageFilterPython:
_itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS3IUS3_swigregister(itkHMaximaImageFilterIUS3IUS3)
itkHMaximaImageFilterIUS3IUS3___New_orig__ = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS3IUS3___New_orig__
itkHMaximaImageFilterIUS3IUS3_cast = _itkHMaximaImageFilterPython.itkHMaximaImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def h_maxima_image_filter(*args, **kwargs):
    """Procedural interface for HMaximaImageFilter"""
    import itk
    instance = itk.HMaximaImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def h_maxima_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.HMaximaImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.HMaximaImageFilter.values()[0]
    else:
        filter_object = itk.HMaximaImageFilter

    h_maxima_image_filter.__doc__ = filter_object.__doc__
    h_maxima_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    h_maxima_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.HMaximaImageFilter, itkTemplate.itkTemplate):
        h_maxima_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        h_maxima_image_filter.__doc__ += "\n"
        h_maxima_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        h_maxima_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



